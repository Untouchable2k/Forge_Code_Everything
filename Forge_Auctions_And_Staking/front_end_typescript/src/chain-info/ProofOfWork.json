{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "epochCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newChallengeNumber",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "NumberOfTokensMinted",
          "type": "uint256"
        }
      ],
      "name": "MegaMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "epochCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newChallengeNumber",
          "type": "bytes32"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "TransferOwnership",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "nonce",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "challenge_digest",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "mintTo",
          "type": "address"
        }
      ],
      "name": "AOpenMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "success",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ARewardSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AddressAuction",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AddressLPReward",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AddressZeroXBTC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Token2Per",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_BLOCKS_PER_READJUSTMENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_MAXIMUM_TARGET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_MINIMUM_TARGET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengeNumber",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_number",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "testTarget",
          "type": "uint256"
        }
      ],
      "name": "checkMintSolution",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        }
      ],
      "name": "empty_mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "owed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epochCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChallengeNumber",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningDifficulty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningTarget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_number",
          "type": "bytes32"
        }
      ],
      "name": "getMintDigest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "digesttest",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestDifficultyPeriodStarted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestDifficultyPeriodStarted2",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupplyForEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "miningTarget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "mintTo",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "owed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "ExtraFunds",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "MintTo",
          "type": "address[]"
        }
      ],
      "name": "mintTokensArrayTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "owed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "nonce",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "challenge_digest",
          "type": "bool"
        },
        {
          "internalType": "address[]",
          "name": "ExtraFunds",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "MintTo",
          "type": "address[]"
        }
      ],
      "name": "mintTokensArrayToOPENMUSTERASE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "owed",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "ExtraFunds",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "MintTo",
          "type": "address"
        }
      ],
      "name": "mintTokensSameAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previousBlockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "receiveApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reward_amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_testx",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_testthisblk",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_testlastblk",
          "type": "uint256"
        }
      ],
      "name": "test",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testden",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testnum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testxx",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testxy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLifetimes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "AuctionAddress2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "LPGuild2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ZeroXBTCAddress",
          "type": "address"
        }
      ],
      "name": "zinit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "AuctionAddress2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "LPGuild2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ZeroXBTCAddress",
          "type": "address"
        }
      ],
      "name": "zinit2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ProofOfWork.sol"
  },
  "ast": {
    "absolutePath": "contracts/ProofOfWork.sol",
    "exportedSymbols": {
      "ApproveAndCallFallBack": [
        322
      ],
      "ExtendedMath2": [
        243
      ],
      "ForgeMining": [
        2539
      ],
      "IERC20": [
        310
      ],
      "IsContract": [
        84
      ],
      "Ownable": [
        57
      ],
      "SafeMath2": [
        224
      ]
    },
    "id": 2540,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "2843:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 57,
        "linearizedBaseContracts": [
          57
        ],
        "name": "Ownable",
        "nameLocation": "2877:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "2906:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 57,
            "src": "2891:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2891:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 9,
            "name": "TransferOwnership",
            "nameLocation": "2924:17:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2950:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "2942:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2942:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2965:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "2957:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2957:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2941:28:0"
            },
            "src": "2918:52:0"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "2997:91:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "3007:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 13,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3015:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3015:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3007:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "3007:18:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 20,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3066:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3058:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3058:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3058:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 22,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3070:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3070:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3040:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3040:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25,
                  "nodeType": "EmitStatement",
                  "src": "3035:46:0"
                }
              ]
            },
            "id": 27,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2987:2:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2997:0:0"
            },
            "scope": 57,
            "src": "2976:112:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "3115:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 30,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3133:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 31,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3133:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 32,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "3147:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3133:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f776e6572",
                        "id": 34,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3154:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367",
                          "typeString": "literal_string \"only owner\""
                        },
                        "value": "only owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367",
                          "typeString": "literal_string \"only owner\""
                        }
                      ],
                      "id": 29,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3125:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3125:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "3125:42:0"
                },
                {
                  "id": 37,
                  "nodeType": "PlaceholderStatement",
                  "src": "3177:1:0"
                }
              ]
            },
            "id": 39,
            "name": "onlyOwner",
            "nameLocation": "3103:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3112:2:0"
            },
            "src": "3094:91:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "3244:78:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3,
                        "src": "3277:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "3284:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "3259:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3259:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "EmitStatement",
                  "src": "3254:37:0"
                },
                {
                  "expression": {
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "3301:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 52,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "3309:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3301:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "3301:14:0"
                }
              ]
            },
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 43,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "3234:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3234:9:0"
              }
            ],
            "name": "setOwner",
            "nameLocation": "3200:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3217:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "3209:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3209:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3208:16:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3244:0:0"
            },
            "scope": 57,
            "src": "3191:131:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2540,
        "src": "2868:456:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IsContract",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 84,
        "linearizedBaseContracts": [
          84
        ],
        "name": "IsContract",
        "nameLocation": "3337:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "3418:254:0",
              "statements": [
                {
                  "assignments": [
                    65
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 65,
                      "mutability": "mutable",
                      "name": "codehash",
                      "nameLocation": "3436:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "3428:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 64,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3428:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3428:16:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3502:34:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3504:30:0",
                        "value": {
                          "arguments": [
                            {
                              "name": "_addr",
                              "nodeType": "YulIdentifier",
                              "src": "3528:5:0"
                            }
                          ],
                          "functionName": {
                            "name": "extcodehash",
                            "nodeType": "YulIdentifier",
                            "src": "3516:11:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3516:18:0"
                        },
                        "variableNames": [
                          {
                            "name": "codehash",
                            "nodeType": "YulIdentifier",
                            "src": "3504:8:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 59,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3528:5:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 65,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3504:8:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 67,
                  "nodeType": "InlineAssembly",
                  "src": "3493:43:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 73,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 68,
                        "name": "codehash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "3552:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 71,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3572:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3564:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 69,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3564:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3564:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "3552:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 74,
                        "name": "codehash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "3578:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3598:66:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                              "typeString": "int_const 8947...(69 digits omitted)...1552"
                            },
                            "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                              "typeString": "int_const 8947...(69 digits omitted)...1552"
                            }
                          ],
                          "id": 76,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3590:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 75,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3590:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3590:75:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "3578:87:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3552:113:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 63,
                  "id": 81,
                  "nodeType": "Return",
                  "src": "3545:120:0"
                }
              ]
            },
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "3363:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "3382:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "3374:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3374:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3373:15:0"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 62,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "3412:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3412:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3411:6:0"
            },
            "scope": 84,
            "src": "3354:318:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2540,
        "src": "3329:345:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SafeMath2",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 224,
        "linearizedBaseContracts": [
          224
        ],
        "name": "SafeMath2",
        "nameLocation": "3723:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "3806:93:0",
              "statements": [
                {
                  "assignments": [
                    94
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 94,
                      "mutability": "mutable",
                      "name": "z",
                      "nameLocation": "3824:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 108,
                      "src": "3816:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3816:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 95,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86,
                      "src": "3828:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 96,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88,
                      "src": "3832:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3828:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3816:17:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100,
                          "name": "z",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 94,
                          "src": "3851:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 101,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "3856:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3851:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464206f766572666c6f77",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3859:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa4a09cb808b49d829bef87085c3bdc390724305970e1b52e94e95f1f37478fe",
                          "typeString": "literal_string \"Add overflow\""
                        },
                        "value": "Add overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa4a09cb808b49d829bef87085c3bdc390724305970e1b52e94e95f1f37478fe",
                          "typeString": "literal_string \"Add overflow\""
                        }
                      ],
                      "id": 99,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3843:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3843:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "3843:31:0"
                },
                {
                  "expression": {
                    "id": 106,
                    "name": "z",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 94,
                    "src": "3891:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 92,
                  "id": 107,
                  "nodeType": "Return",
                  "src": "3884:8:0"
                }
              ]
            },
            "id": 109,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "3748:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "3760:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "3752:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3752:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "3771:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "3763:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3763:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3751:22:0"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "3797:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3797:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3796:9:0"
            },
            "scope": 224,
            "src": "3739:160:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 129,
              "nodeType": "Block",
              "src": "3972:71:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 119,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 111,
                          "src": "3990:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 120,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 113,
                          "src": "3995:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3990:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53756220756e646572666c6f77",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3998:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38ce778462b9331943eef0c96f2f8f9c93c4fa53b734e13373f568799ccb49b6",
                          "typeString": "literal_string \"Sub underflow\""
                        },
                        "value": "Sub underflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38ce778462b9331943eef0c96f2f8f9c93c4fa53b734e13373f568799ccb49b6",
                          "typeString": "literal_string \"Sub underflow\""
                        }
                      ],
                      "id": 118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3982:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3982:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "3982:32:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 125,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "4031:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 126,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "4035:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4031:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 117,
                  "id": 128,
                  "nodeType": "Return",
                  "src": "4024:12:0"
                }
              ]
            },
            "id": 130,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nameLocation": "3914:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 111,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "3926:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3918:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3918:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 113,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "3937:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3929:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3929:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3917:22:0"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "3963:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3963:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3962:9:0"
            },
            "scope": 224,
            "src": "3905:138:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "4117:153:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 139,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "4131:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4136:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4131:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 145,
                  "nodeType": "IfStatement",
                  "src": "4127:45:0",
                  "trueBody": {
                    "id": 144,
                    "nodeType": "Block",
                    "src": "4139:33:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4160:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 138,
                        "id": 143,
                        "nodeType": "Return",
                        "src": "4153:8:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 147,
                      "mutability": "mutable",
                      "name": "z",
                      "nameLocation": "4190:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 163,
                      "src": "4182:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 146,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4182:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 148,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "4194:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 149,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "4198:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4194:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4182:17:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 153,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "4217:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 154,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 132,
                            "src": "4221:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4217:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 156,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "4226:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4217:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d756c74206f766572666c6f77",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4229:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b61ec05faf532e28d1c13e4d3a4852aac2e272b3ad86065ccd5cc169d88f0376",
                          "typeString": "literal_string \"Mult overflow\""
                        },
                        "value": "Mult overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b61ec05faf532e28d1c13e4d3a4852aac2e272b3ad86065ccd5cc169d88f0376",
                          "typeString": "literal_string \"Mult overflow\""
                        }
                      ],
                      "id": 152,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4209:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4209:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "4209:36:0"
                },
                {
                  "expression": {
                    "id": 161,
                    "name": "z",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 147,
                    "src": "4262:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 138,
                  "id": 162,
                  "nodeType": "Return",
                  "src": "4255:8:0"
                }
              ]
            },
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mult",
            "nameLocation": "4058:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4071:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "4063:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4063:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4082:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "4074:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4074:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4062:22:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "4108:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4108:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4107:9:0"
            },
            "scope": 224,
            "src": "4049:221:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "4343:69:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 174,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "4361:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4366:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4361:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446976206279207a65726f",
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4369:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        },
                        "value": "Div by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        }
                      ],
                      "id": 173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4353:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4353:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "4353:30:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 180,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "4400:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 181,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "4404:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4400:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 172,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "4393:12:0"
                }
              ]
            },
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nameLocation": "4285:3:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4297:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "4289:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4289:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4308:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "4300:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4300:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4288:22:0"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "4334:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4334:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4333:9:0"
            },
            "scope": 224,
            "src": "4276:136:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 222,
              "nodeType": "Block",
              "src": "4490:152:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 195,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 189,
                          "src": "4508:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4513:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4508:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446976206279207a65726f",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4516:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        },
                        "value": "Div by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4500:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4500:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "4500:30:0"
                },
                {
                  "assignments": [
                    202
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "4548:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 222,
                      "src": "4540:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4540:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 206,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 203,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 187,
                      "src": "4552:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 204,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 189,
                      "src": "4556:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4552:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4540:17:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 207,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "4571:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "id": 208,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 189,
                        "src": "4575:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4571:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4580:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4571:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 219,
                  "nodeType": "IfStatement",
                  "src": "4567:50:0",
                  "trueBody": {
                    "id": 218,
                    "nodeType": "Block",
                    "src": "4583:34:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 212,
                            "name": "r",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 202,
                            "src": "4597:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 213,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 202,
                              "src": "4601:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4605:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4601:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4597:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 217,
                        "nodeType": "ExpressionStatement",
                        "src": "4597:9:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 220,
                    "name": "r",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 202,
                    "src": "4634:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 193,
                  "id": 221,
                  "nodeType": "Return",
                  "src": "4627:8:0"
                }
              ]
            },
            "id": 223,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divRound",
            "nameLocation": "4427:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4444:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "4436:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4436:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4455:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "4447:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4447:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4435:22:0"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 223,
                  "src": "4481:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4481:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4480:9:0"
            },
            "scope": 224,
            "src": "4418:224:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2540,
        "src": "3715:929:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ExtendedMath2",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 243,
        "linearizedBaseContracts": [
          243
        ],
        "name": "ExtendedMath2",
        "nameLocation": "4689:13:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "4833:56:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 233,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "4847:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 234,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "4851:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4847:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 238,
                  "nodeType": "IfStatement",
                  "src": "4844:18:0",
                  "trueBody": {
                    "expression": {
                      "id": 236,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "4861:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 232,
                    "id": 237,
                    "nodeType": "Return",
                    "src": "4854:8:0"
                  }
                },
                {
                  "expression": {
                    "id": 239,
                    "name": "a",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 226,
                    "src": "4880:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 232,
                  "id": 240,
                  "nodeType": "Return",
                  "src": "4873:8:0"
                }
              ]
            },
            "id": 242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "limitLessThan",
            "nameLocation": "4772:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "4791:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "4786:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4786:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "4799:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "4794:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4794:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4785:16:0"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "c",
                  "nameLocation": "4830:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 242,
                  "src": "4825:6:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4825:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4824:8:0"
            },
            "scope": 243,
            "src": "4763:126:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2540,
        "src": "4681:210:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 310,
        "linearizedBaseContracts": [
          310
        ],
        "name": "IERC20",
        "nameLocation": "4945:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "18160ddd",
            "id": 248,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "4964:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4975:2:0"
            },
            "returnParameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "5001:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5001:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5000:9:0"
            },
            "scope": 310,
            "src": "4955:55:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 256,
            "name": "Transfer",
            "nameLocation": "5021:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5046:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "5030:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5030:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 252,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5069:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "5053:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 254,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5082:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "5074:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 253,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5074:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5029:60:0"
            },
            "src": "5015:75:0"
          },
          {
            "anonymous": false,
            "id": 264,
            "name": "Approval",
            "nameLocation": "5101:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5126:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "5110:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5110:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 260,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "5150:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "5134:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5134:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 262,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5168:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "5160:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5160:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5109:66:0"
            },
            "src": "5095:81:0"
          },
          {
            "functionSelector": "a9059cbb",
            "id": 273,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "5190:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5207:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "5199:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5199:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5217:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "5212:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5212:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5198:26:0"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5248:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "5243:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5243:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5242:14:0"
            },
            "scope": 310,
            "src": "5181:76:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 284,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5271:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5292:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "5284:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5284:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5307:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "5299:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5299:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5320:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "5312:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5312:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5283:44:0"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5351:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 284,
                  "src": "5346:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5346:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5345:14:0"
            },
            "scope": 310,
            "src": "5262:98:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "dd62ed3e",
            "id": 293,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "5374:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5392:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "5384:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5384:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 288,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "5408:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "5400:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5400:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5383:34:0"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 291,
                  "mutability": "mutable",
                  "name": "remaining",
                  "nameLocation": "5449:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 293,
                  "src": "5441:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5441:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5440:19:0"
            },
            "scope": 310,
            "src": "5365:95:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 302,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "5474:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 295,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "5490:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "5482:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 294,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5482:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 297,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5508:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "5500:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5500:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5481:34:0"
            },
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5539:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 302,
                  "src": "5534:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5534:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5533:14:0"
            },
            "scope": 310,
            "src": "5465:83:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "70a08231",
            "id": 309,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5562:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 304,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5580:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "5572:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 303,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5572:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5571:16:0"
            },
            "returnParameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "5619:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "5611:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5611:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5610:17:0"
            },
            "scope": 310,
            "src": "5553:75:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2540,
        "src": "4935:700:0",
        "usedErrors": []
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "ApproveAndCallFallBack",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 322,
        "linearizedBaseContracts": [
          322
        ],
        "name": "ApproveAndCallFallBack",
        "nameLocation": "5705:22:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "8f4ffcb1",
            "id": 321,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nameLocation": "5743:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 312,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5767:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "5759:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5759:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "5781:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "5773:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5773:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 316,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5797:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "5789:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5789:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 318,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5817:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "5804:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 317,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5804:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5758:64:0"
            },
            "returnParameters": {
              "id": 320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5837:0:0"
            },
            "scope": 322,
            "src": "5734:104:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 2540,
        "src": "5687:153:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 323,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57,
              "src": "5884:7:0"
            },
            "id": 324,
            "nodeType": "InheritanceSpecifier",
            "src": "5884:7:0"
          },
          {
            "baseName": {
              "id": 325,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 310,
              "src": "5893:6:0"
            },
            "id": 326,
            "nodeType": "InheritanceSpecifier",
            "src": "5893:6:0"
          },
          {
            "baseName": {
              "id": 327,
              "name": "ApproveAndCallFallBack",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 322,
              "src": "5901:22:0"
            },
            "id": 328,
            "nodeType": "InheritanceSpecifier",
            "src": "5901:22:0"
          }
        ],
        "canonicalName": "ForgeMining",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2539,
        "linearizedBaseContracts": [
          2539,
          322,
          310,
          57
        ],
        "name": "ForgeMining",
        "nameLocation": "5869:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "45d8a232",
            "id": 333,
            "mutability": "constant",
            "name": "targetTime",
            "nameLocation": "5948:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "5927:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 329,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "5927:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_2880_by_1",
                "typeString": "int_const 2880"
              },
              "id": 332,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3630",
                "id": 330,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5961:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3438",
                "id": 331,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5966:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_48_by_1",
                  "typeString": "int_const 48"
                },
                "value": "48"
              },
              "src": "5961:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2880_by_1",
                "typeString": "int_const 2880"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d60d2ce6",
            "id": 335,
            "mutability": "mutable",
            "name": "testx",
            "nameLocation": "5986:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "5971:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 334,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5971:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9fa879d9",
            "id": 337,
            "mutability": "mutable",
            "name": "testnum",
            "nameLocation": "6010:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "5994:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 336,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5994:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2ea83565",
            "id": 339,
            "mutability": "mutable",
            "name": "testden",
            "nameLocation": "6035:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "6020:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 338,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6020:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "30717bf3",
            "id": 341,
            "mutability": "mutable",
            "name": "testxx",
            "nameLocation": "6063:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "6048:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 340,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6048:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "20fa80d9",
            "id": 343,
            "mutability": "mutable",
            "name": "testxy",
            "nameLocation": "6090:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "6075:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 342,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6075:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94b939ef",
            "id": 345,
            "mutability": "mutable",
            "name": "AddressAuction",
            "nameLocation": "6141:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "6126:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 344,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6126:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2f104e0c",
            "id": 347,
            "mutability": "mutable",
            "name": "AddressLPReward",
            "nameLocation": "6176:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "6161:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 346,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6161:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "510de094",
            "id": 349,
            "mutability": "mutable",
            "name": "AddressZeroXBTC",
            "nameLocation": "6212:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "6197:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 348,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6197:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 352,
            "libraryName": {
              "id": 350,
              "name": "SafeMath2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 224,
              "src": "6248:9:0"
            },
            "nodeType": "UsingForDirective",
            "src": "6242:28:0",
            "typeName": {
              "id": 351,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6262:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 355,
            "libraryName": {
              "id": 353,
              "name": "ExtendedMath2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 243,
              "src": "6281:13:0"
            },
            "nodeType": "UsingForDirective",
            "src": "6275:29:0",
            "typeName": {
              "id": 354,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6299:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "id": 365,
            "name": "Mint",
            "nameLocation": "6315:4:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 357,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6336:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "6320:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6320:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 359,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward_amount",
                  "nameLocation": "6347:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "6342:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6342:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 361,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "epochCount",
                  "nameLocation": "6367:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "6362:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6362:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 363,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newChallengeNumber",
                  "nameLocation": "6387:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 365,
                  "src": "6379:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6379:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6319:87:0"
            },
            "src": "6309:98:0"
          },
          {
            "anonymous": false,
            "id": 375,
            "name": "MegaMint",
            "nameLocation": "6418:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6443:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "6427:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6427:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 369,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "epochCount",
                  "nameLocation": "6454:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "6449:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6449:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 371,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newChallengeNumber",
                  "nameLocation": "6474:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "6466:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 370,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6466:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 373,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "NumberOfTokensMinted",
                  "nameLocation": "6499:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 375,
                  "src": "6494:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6494:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6426:94:0"
            },
            "src": "6412:109:0"
          },
          {
            "baseFunctions": [
              248
            ],
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 379,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "6571:11:0",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 377,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6555:8:0"
            },
            "scope": 2539,
            "src": "6547:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 376,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6547:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3432303030303031303030303030303030303030303030303030",
              "id": 378,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6585:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_42000001000000000000000000_by_1",
                "typeString": "int_const 42000001000000000000000000"
              },
              "value": "42000001000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 384,
            "mutability": "constant",
            "name": "BALANCE_KEY",
            "nameLocation": "6642:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "6617:59:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 380,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "6617:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "62616c616e6365",
                  "id": 382,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "6666:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                    "typeString": "literal_string \"balance\""
                  },
                  "value": "balance"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                    "typeString": "literal_string \"balance\""
                  }
                ],
                "id": 381,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "6656:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 383,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "6656:20:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 387,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "6720:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "6715:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 385,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6715:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3231303030303030303030303030303030303030303030303030",
              "id": 386,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6735:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                "typeString": "int_const 21000000000000000000000000"
              },
              "value": "21000000000000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e932012b",
            "id": 391,
            "mutability": "mutable",
            "name": "latestDifficultyPeriodStarted2",
            "nameLocation": "6779:30:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "6767:60:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 388,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6767:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 389,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "6812:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 390,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "6812:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "829965cc",
            "id": 394,
            "mutability": "mutable",
            "name": "epochCount",
            "nameLocation": "6845:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "6833:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 392,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6833:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 393,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6858:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b5ade81b",
            "id": 397,
            "mutability": "mutable",
            "name": "_BLOCKS_PER_READJUSTMENT",
            "nameLocation": "6904:24:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "6892:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 395,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6892:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "323536",
              "id": 396,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6931:3:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_256_by_1",
                "typeString": "int_const 256"
              },
              "value": "256"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dc6e9cf9",
            "id": 402,
            "mutability": "mutable",
            "name": "_MINIMUM_TARGET",
            "nameLocation": "6976:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "6963:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 398,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6963:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_65536_by_1",
                "typeString": "int_const 65536"
              },
              "id": 401,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "32",
                "id": 399,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6994:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3136",
                "id": 400,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6997:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_16_by_1",
                  "typeString": "int_const 16"
                },
                "value": "16"
              },
              "src": "6994:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_65536_by_1",
                "typeString": "int_const 65536"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "87a2a9d6",
            "id": 407,
            "mutability": "mutable",
            "name": "_MAXIMUM_TARGET",
            "nameLocation": "7023:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7010:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 403,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7010:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                "typeString": "int_const 2760...(63 digits omitted)...7184"
              },
              "id": 406,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "32",
                "id": 404,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7041:1:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "323334",
                "id": 405,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "7044:3:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_234_by_1",
                  "typeString": "int_const 234"
                },
                "value": "234"
              },
              "src": "7041:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                "typeString": "int_const 2760...(63 digits omitted)...7184"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a769d35",
            "id": 415,
            "mutability": "mutable",
            "name": "miningTarget",
            "nameLocation": "7065:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7053:63:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 408,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7053:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_rational_5000000000000_by_1",
                    "typeString": "int_const 5000000000000"
                  },
                  "id": 413,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "323030303030303030303030",
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7100:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000000000_by_1",
                      "typeString": "int_const 200000000000"
                    },
                    "value": "200000000000"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "hexValue": "3235",
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7113:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_25_by_1",
                      "typeString": "int_const 25"
                    },
                    "value": "25"
                  },
                  "src": "7100:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_5000000000000_by_1",
                    "typeString": "int_const 5000000000000"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_5000000000000_by_1",
                    "typeString": "int_const 5000000000000"
                  }
                ],
                "expression": {
                  "id": 409,
                  "name": "_MAXIMUM_TARGET",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 407,
                  "src": "7080:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 410,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "div",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 185,
                "src": "7080:19:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                }
              },
              "id": 414,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "7080:36:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ae0368b",
            "id": 417,
            "mutability": "mutable",
            "name": "challengeNumber",
            "nameLocation": "7200:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7185:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 416,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "7185:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d38bf7a",
            "id": 420,
            "mutability": "mutable",
            "name": "rewardEra",
            "nameLocation": "7284:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7272:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 418,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7272:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 419,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7296:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4fa972e1",
            "id": 434,
            "mutability": "mutable",
            "name": "maxSupplyForEra",
            "nameLocation": "7315:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7303:84:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 421,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7303:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "components": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 432,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "lValueRequested": false,
                  "leftExpression": {
                    "id": 422,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 387,
                    "src": "7334:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7367:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 426,
                                "name": "rewardEra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 420,
                                "src": "7371:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7383:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7371:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 429,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7370:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7367:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 423,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "7349:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 185,
                      "src": "7349:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7349:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "src": "7334:52:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "id": 433,
              "isConstant": false,
              "isInlineArray": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "7333:54:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2381a60e",
            "id": 450,
            "mutability": "mutable",
            "name": "reward_amount",
            "nameLocation": "7405:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7393:75:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 435,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7393:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 448,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "32",
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7454:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "**",
                  "rightExpression": {
                    "id": 447,
                    "name": "rewardEra",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 420,
                    "src": "7457:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "src": "7454:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "expression": {
                  "components": [
                    {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "313030",
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7422:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7428:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 440,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "7437:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7432:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 438,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7432:4:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7432:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7428:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7422:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  ],
                  "id": 444,
                  "isConstant": false,
                  "isInlineArray": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "TupleExpression",
                  "src": "7421:27:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 445,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "div",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 185,
                "src": "7421:31:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                }
              },
              "id": 449,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "7421:47:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 453,
            "mutability": "mutable",
            "name": "oldecount",
            "nameLocation": "7505:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7500:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 451,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7500:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 452,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7517:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "10294317",
            "id": 457,
            "mutability": "mutable",
            "name": "previousBlockTime",
            "nameLocation": "7536:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7524:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 454,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7524:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 455,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "7556:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 456,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "7556:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 460,
            "mutability": "mutable",
            "name": "oneEthUnit",
            "nameLocation": "7582:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7577:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 458,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7577:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030303030303030303030",
              "id": 459,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7598:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1000000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 463,
            "mutability": "mutable",
            "name": "one8unit",
            "nameLocation": "7628:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7623:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 461,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7623:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030303030303030",
              "id": 462,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7654:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000_by_1",
                "typeString": "int_const 100000000"
              },
              "value": "100000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a68eb88e",
            "id": 466,
            "mutability": "mutable",
            "name": "Token2Per",
            "nameLocation": "7681:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7669:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 464,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7669:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030",
              "id": 465,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7702:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000_by_1",
                "typeString": "int_const 1000000"
              },
              "value": "1000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 469,
            "mutability": "mutable",
            "name": "Token2Min",
            "nameLocation": "7720:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7715:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 467,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7715:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3838",
              "id": 468,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7753:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_88_by_1",
                "typeString": "int_const 88"
              },
              "value": "88"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6de9f32b",
            "id": 471,
            "mutability": "mutable",
            "name": "tokensMinted",
            "nameLocation": "7773:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7761:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 470,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7761:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 475,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "7816:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7791:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 474,
              "keyType": {
                "id": 472,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7799:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7791:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 473,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "7810:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 481,
            "mutability": "mutable",
            "name": "allowed",
            "nameLocation": "7875:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7830:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 480,
              "keyType": {
                "id": 476,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7838:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7830:44:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 479,
                "keyType": {
                  "id": 477,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7857:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "7849:24:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 478,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7868:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 484,
            "mutability": "mutable",
            "name": "give0xBTC",
            "nameLocation": "7940:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7935:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 482,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7935:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 483,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7952:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 487,
            "mutability": "mutable",
            "name": "give",
            "nameLocation": "7964:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7959:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 485,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7959:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 486,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7971:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 490,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "8008:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "7994:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 488,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "7994:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "466f726765",
              "id": 489,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8015:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_77767363ea794e1f1e9d0ebf67829596c5727d1b2aaffa7d888f58bfc8506a01",
                "typeString": "literal_string \"Forge\""
              },
              "value": "Forge"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "95d89b41",
            "id": 493,
            "mutability": "constant",
            "name": "symbol",
            "nameLocation": "8051:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "8028:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 491,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "8028:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "466f726765",
              "id": 492,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8060:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_77767363ea794e1f1e9d0ebf67829596c5727d1b2aaffa7d888f58bfc8506a01",
                "typeString": "literal_string \"Forge\""
              },
              "value": "Forge"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "313ce567",
            "id": 496,
            "mutability": "constant",
            "name": "decimals",
            "nameLocation": "8095:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "8073:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 494,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "8073:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 495,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8106:2:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a5550f6",
            "id": 499,
            "mutability": "mutable",
            "name": "totalLifetimes",
            "nameLocation": "8126:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "8114:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 497,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "8114:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 498,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8143:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 503,
            "mutability": "mutable",
            "name": "lastrun",
            "nameLocation": "8159:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "8151:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 500,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "8151:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 501,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "8169:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 502,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "8169:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "cb9ae707",
            "id": 507,
            "mutability": "mutable",
            "name": "latestDifficultyPeriodStarted",
            "nameLocation": "8202:29:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "8190:56:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 504,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "8190:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 505,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "8234:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 506,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "number",
              "nodeType": "MemberAccess",
              "src": "8234:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 510,
            "mutability": "mutable",
            "name": "inited",
            "nameLocation": "8257:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 2539,
            "src": "8252:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 508,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "8252:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 509,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8266:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "8377:882:0",
              "statements": [
                {
                  "assignments": [
                    522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 522,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "8392:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 616,
                      "src": "8387:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 521,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8387:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 532,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3231303030303030303030303030303030303030303030303030",
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8396:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                        "typeString": "int_const 21000000000000000000000000"
                      },
                      "value": "21000000000000000000000000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8426:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 525,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8430:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "id": 526,
                                  "name": "totalLifetimes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 499,
                                  "src": "8435:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8430:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 528,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8429:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8426:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 530,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8425:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8396:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8387:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8529:7:0",
                        "subExpression": {
                          "id": 534,
                          "name": "inited",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 510,
                          "src": "8530:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 533,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "8522:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8522:15:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 537,
                  "nodeType": "ExpressionStatement",
                  "src": "8522:15:0"
                },
                {
                  "expression": {
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 538,
                      "name": "inited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 510,
                      "src": "8547:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8556:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8547:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "8547:13:0"
                },
                {
                  "expression": {
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 542,
                      "name": "rewardEra",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "8569:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8581:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8569:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "8569:13:0"
                },
                {
                  "expression": {
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 546,
                      "name": "tokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "8585:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8600:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8585:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 549,
                  "nodeType": "ExpressionStatement",
                  "src": "8585:16:0"
                },
                {
                  "expression": {
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 550,
                      "name": "miningTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 415,
                      "src": "8608:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3330303035",
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8643:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_30005_by_1",
                            "typeString": "int_const 30005"
                          },
                          "value": "30005"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_30005_by_1",
                            "typeString": "int_const 30005"
                          }
                        ],
                        "expression": {
                          "id": 551,
                          "name": "_MAXIMUM_TARGET",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 407,
                          "src": "8623:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 185,
                        "src": "8623:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8623:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8608:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 556,
                  "nodeType": "ExpressionStatement",
                  "src": "8608:41:0"
                },
                {
                  "expression": {
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 557,
                      "name": "latestDifficultyPeriodStarted2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "8702:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 558,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8735:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8735:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8702:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "8702:48:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 562,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2064,
                      "src": "8757:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8757:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 564,
                  "nodeType": "ExpressionStatement",
                  "src": "8757:22:0"
                },
                {
                  "expression": {
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 565,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "8835:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 567,
                      "indexExpression": {
                        "id": 566,
                        "name": "AuctionAddress2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "8844:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8835:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 568,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 522,
                      "src": "8863:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8835:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "8835:29:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8898:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8890:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 572,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8890:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8890:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 576,
                        "name": "AuctionAddress2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 512,
                        "src": "8902:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 577,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "8919:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 571,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "8881:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8881:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 579,
                  "nodeType": "EmitStatement",
                  "src": "8876:45:0"
                },
                {
                  "expression": {
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 580,
                      "name": "AddressAuction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "8930:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 581,
                      "name": "AuctionAddress2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "8947:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8930:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "8930:32:0"
                },
                {
                  "expression": {
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 584,
                      "name": "AddressLPReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 347,
                      "src": "8972:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 587,
                          "name": "LPGuild2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 514,
                          "src": "8998:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8990:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8990:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8990:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8972:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 590,
                  "nodeType": "ExpressionStatement",
                  "src": "8972:35:0"
                },
                {
                  "expression": {
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 591,
                      "name": "AddressZeroXBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 349,
                      "src": "9017:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 592,
                      "name": "_ZeroXBTCAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "9035:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9017:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 594,
                  "nodeType": "ExpressionStatement",
                  "src": "9017:34:0"
                },
                {
                  "expression": {
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 595,
                      "name": "oldecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "9063:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 596,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "9075:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9063:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "9063:22:0"
                },
                {
                  "expression": {
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 599,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "9134:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 602,
                      "indexExpression": {
                        "expression": {
                          "id": 600,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9143:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9143:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9134:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31303030303030303030303030303030303030",
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9157:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1000000000000000000"
                    },
                    "src": "9134:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 605,
                  "nodeType": "ExpressionStatement",
                  "src": "9134:42:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9210:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9202:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 607,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9202:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9202:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 611,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9214:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9214:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030303030303030303030",
                        "id": 613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9226:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 606,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "9193:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9193:53:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 615,
                  "nodeType": "EmitStatement",
                  "src": "9188:58:0"
                }
              ]
            },
            "functionSelector": "64e46726",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 519,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 518,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "8368:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8368:9:0"
              }
            ],
            "name": "zinit",
            "nameLocation": "8286:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "AuctionAddress2",
                  "nameLocation": "8300:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "8292:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8292:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "LPGuild2",
                  "nameLocation": "8325:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "8317:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8317:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 516,
                  "mutability": "mutable",
                  "name": "_ZeroXBTCAddress",
                  "nameLocation": "8343:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 617,
                  "src": "8335:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8335:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8291:69:0"
            },
            "returnParameters": {
              "id": 520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8377:0:0"
            },
            "scope": 2539,
            "src": "8277:982:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 643,
              "nodeType": "Block",
              "src": "9418:123:0",
              "statements": [
                {
                  "expression": {
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 628,
                      "name": "AddressAuction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "9424:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 629,
                      "name": "AuctionAddress2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 619,
                      "src": "9441:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9424:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "9424:32:0"
                },
                {
                  "expression": {
                    "id": 637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 632,
                      "name": "AddressLPReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 347,
                      "src": "9461:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 635,
                          "name": "LPGuild2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "9487:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9479:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 633,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9479:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9479:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "9461:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 638,
                  "nodeType": "ExpressionStatement",
                  "src": "9461:35:0"
                },
                {
                  "expression": {
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 639,
                      "name": "AddressZeroXBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 349,
                      "src": "9501:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 640,
                      "name": "_ZeroXBTCAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 623,
                      "src": "9519:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9501:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 642,
                  "nodeType": "ExpressionStatement",
                  "src": "9501:34:0"
                }
              ]
            },
            "functionSelector": "59c5bf60",
            "id": 644,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 626,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 625,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 39,
                  "src": "9409:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9409:9:0"
              }
            ],
            "name": "zinit2",
            "nameLocation": "9326:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 619,
                  "mutability": "mutable",
                  "name": "AuctionAddress2",
                  "nameLocation": "9341:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "9333:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9333:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "LPGuild2",
                  "nameLocation": "9366:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "9358:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9358:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "_ZeroXBTCAddress",
                  "nameLocation": "9384:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 644,
                  "src": "9376:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9376:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9332:69:0"
            },
            "returnParameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9418:0:0"
            },
            "scope": 2539,
            "src": "9317:224:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 846,
              "nodeType": "Block",
              "src": "9648:1138:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 655,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2064,
                      "src": "9654:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9654:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 657,
                  "nodeType": "ExpressionStatement",
                  "src": "9654:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 659,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9689:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9689:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 661,
                          "name": "previousBlockTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "9707:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9689:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2073616d65207365636f6e6420736f6c766573",
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9726:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        },
                        "value": "No same second solves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        }
                      ],
                      "id": 658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9681:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9681:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "9681:69:0"
                },
                {
                  "assignments": [
                    667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 667,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "9816:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 846,
                      "src": "9808:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 666,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9808:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 678,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 671,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 668,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9822:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 669,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9822:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 670,
                                  "name": "previousBlockTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 457,
                                  "src": "9840:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9822:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 672,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9821:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "383838",
                            "id": 673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9861:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_888_by_1",
                              "typeString": "int_const 888"
                            },
                            "value": "888"
                          },
                          "src": "9821:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 675,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9820:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 676,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "9868:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9820:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9808:70:0"
                },
                {
                  "assignments": [
                    680
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 680,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nameLocation": "9887:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 846,
                      "src": "9882:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 679,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9882:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 686,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 681,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "9895:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9899:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "9895:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "383838",
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9905:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_888_by_1",
                        "typeString": "int_const 888"
                      },
                      "value": "888"
                    },
                    "src": "9895:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9882:26:0"
                },
                {
                  "assignments": [
                    688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 688,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "9917:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 846,
                      "src": "9912:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 687,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9912:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 690,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9929:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9912:18:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 691,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "9937:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "333134",
                      "id": 692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9945:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_314_by_1",
                        "typeString": "int_const 314"
                      },
                      "value": "314"
                    },
                    "src": "9937:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 731,
                    "nodeType": "Block",
                    "src": "10037:61:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 718,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 688,
                            "src": "10042:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10074:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 721,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 719,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 667,
                                        "src": "10055:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "313030303030303030",
                                        "id": 720,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10059:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        },
                                        "value": "100000000"
                                      },
                                      "src": "10055:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 722,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "10054:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "10054:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10054:24:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "33353030303030303030",
                                  "id": 726,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10082:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3500000000_by_1",
                                    "typeString": "int_const 3500000000"
                                  },
                                  "value": "3500000000"
                                }
                              ],
                              "id": 727,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10081:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3500000000_by_1",
                                "typeString": "int_const 3500000000"
                              }
                            },
                            "src": "10054:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10042:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 730,
                        "nodeType": "ExpressionStatement",
                        "src": "10042:51:0"
                      }
                    ]
                  },
                  "id": 732,
                  "nodeType": "IfStatement",
                  "src": "9934:164:0",
                  "trueBody": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "9949:83:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 694,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 688,
                            "src": "9954:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  },
                                  "id": 705,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "383838",
                                    "id": 703,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9993:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_888_by_1",
                                      "typeString": "int_const 888"
                                    },
                                    "value": "888"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 704,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10000:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "9993:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 700,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3631303031323030",
                                        "id": 695,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9967:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_61001200_by_1",
                                          "typeString": "int_const 61001200"
                                        },
                                        "value": "61001200"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 698,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 696,
                                              "name": "x",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 667,
                                              "src": "9979:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "32",
                                              "id": 697,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "9984:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2_by_1",
                                                "typeString": "int_const 2"
                                              },
                                              "value": "2"
                                            },
                                            "src": "9979:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 699,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "9978:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "9967:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 701,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "9966:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "9966:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9966:36:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 712,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10023:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 709,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3430383631353030",
                                        "id": 707,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10005:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_40861500_by_1",
                                          "typeString": "int_const 40861500"
                                        },
                                        "value": "40861500"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 708,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 667,
                                        "src": "10016:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10005:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 710,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "10004:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "10004:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10004:23:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9966:61:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9954:73:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 716,
                        "nodeType": "ExpressionStatement",
                        "src": "9954:73:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 733,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "10104:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 735,
                      "indexExpression": {
                        "id": 734,
                        "name": "mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 650,
                        "src": "10113:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10104:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030",
                              "id": 745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10176:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "value": "100000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 742,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 740,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 450,
                                    "src": "10145:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 741,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 688,
                                    "src": "10161:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10145:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 743,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10144:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 185,
                            "src": "10144:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10144:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 736,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "10123:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 738,
                          "indexExpression": {
                            "id": 737,
                            "name": "mintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "10132:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10123:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "10123:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10123:64:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10104:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 749,
                  "nodeType": "ExpressionStatement",
                  "src": "10104:83:0"
                },
                {
                  "expression": {
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 750,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "10191:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 752,
                      "indexExpression": {
                        "id": 751,
                        "name": "AddressLPReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "10200:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10191:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              },
                              "id": 764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "313030303030303030",
                                "id": 762,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10281:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000_by_1",
                                  "typeString": "int_const 100000000"
                                },
                                "value": "100000000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 763,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10293:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "10281:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 759,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 757,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 450,
                                    "src": "10250:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 758,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 688,
                                    "src": "10266:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10250:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 760,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10249:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 185,
                            "src": "10249:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10249:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 753,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "10219:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 755,
                          "indexExpression": {
                            "id": 754,
                            "name": "AddressLPReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "10228:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10219:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "10219:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10219:77:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10191:105:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "10191:105:0"
                },
                {
                  "expression": {
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 769,
                      "name": "tokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "10300:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030",
                              "id": 777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10364:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "value": "100000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 772,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 450,
                                    "src": "10333:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 773,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 688,
                                    "src": "10349:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10333:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 775,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10332:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 185,
                            "src": "10332:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10332:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 770,
                          "name": "tokensMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 471,
                          "src": "10315:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "10315:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10315:60:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10300:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 781,
                  "nodeType": "ExpressionStatement",
                  "src": "10300:75:0"
                },
                {
                  "expression": {
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 782,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "10379:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 783,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10399:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10399:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10379:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 786,
                  "nodeType": "ExpressionStatement",
                  "src": "10379:35:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 787,
                      "name": "give0xBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "10422:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10434:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10422:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 829,
                  "nodeType": "IfStatement",
                  "src": "10419:239:0",
                  "trueBody": {
                    "id": 828,
                    "nodeType": "Block",
                    "src": "10436:222:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 790,
                            "name": "ratio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 680,
                            "src": "10444:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323030",
                            "id": 791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10452:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "value": "200"
                          },
                          "src": "10444:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 826,
                          "nodeType": "Block",
                          "src": "10564:90:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 814,
                                    "name": "mintTo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 650,
                                    "src": "10603:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "3130",
                                        "id": 822,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10644:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        }
                                      ],
                                      "expression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 819,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 817,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "hexValue": "3233",
                                                "id": 815,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "10612:2:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_23_by_1",
                                                  "typeString": "int_const 23"
                                                },
                                                "value": "23"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 816,
                                                "name": "Token2Per",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 466,
                                                "src": "10617:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "10612:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 818,
                                              "name": "give0xBTC",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 484,
                                              "src": "10629:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "10612:26:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 820,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "10611:28:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 821,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 185,
                                      "src": "10611:32:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 823,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10611:36:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 811,
                                        "name": "AddressZeroXBTC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 349,
                                        "src": "10577:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 810,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 310,
                                      "src": "10570:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 812,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10570:23:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$310",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 813,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 273,
                                  "src": "10570:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 824,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10570:78:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 825,
                              "nodeType": "ExpressionStatement",
                              "src": "10570:78:0"
                            }
                          ]
                        },
                        "id": 827,
                        "nodeType": "IfStatement",
                        "src": "10441:213:0",
                        "trueBody": {
                          "id": 809,
                          "nodeType": "Block",
                          "src": "10456:104:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 797,
                                    "name": "mintTo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 650,
                                    "src": "10495:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "313030303030303030",
                                        "id": 805,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10543:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        },
                                        "value": "100000000"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        }
                                      ],
                                      "expression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 802,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 800,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 798,
                                                "name": "totalOwed",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 688,
                                                "src": "10504:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 799,
                                                "name": "Token2Per",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 466,
                                                "src": "10516:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "10504:21:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 801,
                                              "name": "give0xBTC",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 484,
                                              "src": "10528:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "10504:33:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 803,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "10503:35:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 804,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 185,
                                      "src": "10503:39:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 806,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10503:50:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 794,
                                        "name": "AddressZeroXBTC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 349,
                                        "src": "10469:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 793,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 310,
                                      "src": "10462:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 795,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10462:23:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$310",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 796,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 273,
                                  "src": "10462:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10462:92:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 808,
                              "nodeType": "ExpressionStatement",
                              "src": "10462:92:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 831,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10672:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10672:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "313030303030303030",
                            "id": 838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10716:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "value": "100000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            }
                          ],
                          "expression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 833,
                                  "name": "reward_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 450,
                                  "src": "10685:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 834,
                                  "name": "totalOwed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 688,
                                  "src": "10701:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10685:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 836,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10684:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 185,
                          "src": "10684:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10684:42:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 840,
                        "name": "epochCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "10728:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 841,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "10740:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 830,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "10667:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10667:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 843,
                  "nodeType": "EmitStatement",
                  "src": "10662:95:0"
                },
                {
                  "expression": {
                    "id": 844,
                    "name": "totalOwed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 688,
                    "src": "10769:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 654,
                  "id": 845,
                  "nodeType": "Return",
                  "src": "10762:16:0"
                }
              ]
            },
            "functionSelector": "bb7a779d",
            "id": 847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AOpenMint",
            "nameLocation": "9554:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 646,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "9569:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "9564:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 645,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9564:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 648,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "9581:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "9576:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9576:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 650,
                  "mutability": "mutable",
                  "name": "mintTo",
                  "nameLocation": "9607:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "9599:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9599:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9563:51:0"
            },
            "returnParameters": {
              "id": 654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 653,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "9639:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 847,
                  "src": "9631:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9631:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9630:17:0"
            },
            "scope": 2539,
            "src": "9545:1241:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1026,
              "nodeType": "Block",
              "src": "10820:1080:0",
              "statements": [
                {
                  "assignments": [
                    851
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 851,
                      "mutability": "mutable",
                      "name": "runs",
                      "nameLocation": "10877:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1026,
                      "src": "10869:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 850,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10869:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 856,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 852,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10884:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10884:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 854,
                      "name": "lastrun",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "10902:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10884:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10869:40:0"
                },
                {
                  "assignments": [
                    858
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 858,
                      "mutability": "mutable",
                      "name": "epochsPast",
                      "nameLocation": "10922:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1026,
                      "src": "10914:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 857,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10914:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 862,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 859,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "10935:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 860,
                      "name": "oldecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "10948:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10935:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10914:43:0"
                },
                {
                  "assignments": [
                    864
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 864,
                      "mutability": "mutable",
                      "name": "runsperepoch",
                      "nameLocation": "10986:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1026,
                      "src": "10978:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 863,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10978:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 868,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 865,
                      "name": "runs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 851,
                      "src": "11001:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 866,
                      "name": "epochsPast",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 858,
                      "src": "11008:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11001:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10978:40:0"
                },
                {
                  "expression": {
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 869,
                      "name": "reward_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 450,
                      "src": "11023:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11071:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 881,
                            "name": "rewardEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "11074:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11071:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "313030",
                                "id": 870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11040:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 871,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11046:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 874,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 496,
                                      "src": "11055:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 873,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11050:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 872,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11050:4:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 875,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11050:14:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11046:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11040:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 878,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11039:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 185,
                        "src": "11039:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11039:46:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11023:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "11023:62:0"
                },
                {
                  "assignments": [
                    887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 887,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "11097:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1026,
                      "src": "11089:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 886,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11089:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 895,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 893,
                        "name": "targetTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 333,
                        "src": "11131:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 888,
                              "name": "runsperepoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "11102:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "383838",
                              "id": 889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11117:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_888_by_1",
                                "typeString": "int_const 888"
                              },
                              "value": "888"
                            },
                            "src": "11102:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 891,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "11101:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "divRound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 223,
                      "src": "11101:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11101:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11089:53:0"
                },
                {
                  "expression": {
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 896,
                      "name": "testxx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "11153:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 897,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 887,
                      "src": "11162:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11153:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 899,
                  "nodeType": "ExpressionStatement",
                  "src": "11153:10:0"
                },
                {
                  "assignments": [
                    901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 901,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nameLocation": "11175:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1026,
                      "src": "11167:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 900,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11167:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 907,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 902,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 887,
                        "src": "11183:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11187:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "11183:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "383838",
                      "id": 905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11193:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_888_by_1",
                        "typeString": "int_const 888"
                      },
                      "value": "888"
                    },
                    "src": "11183:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11167:29:0"
                },
                {
                  "assignments": [
                    909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 909,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "11208:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1026,
                      "src": "11200:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 908,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11200:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 910,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11200:17:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 911,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 901,
                      "src": "11225:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323030",
                      "id": 912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11233:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "11225:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 943,
                    "nodeType": "Block",
                    "src": "11326:33:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 938,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 909,
                            "src": "11331:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "hexValue": "323330303030303030",
                                "id": 939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11344:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_230000000_by_1",
                                  "typeString": "int_const 230000000"
                                },
                                "value": "230000000"
                              }
                            ],
                            "id": 940,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11343:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_230000000_by_1",
                              "typeString": "int_const 230000000"
                            }
                          },
                          "src": "11331:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 942,
                        "nodeType": "ExpressionStatement",
                        "src": "11331:23:0"
                      }
                    ]
                  },
                  "id": 944,
                  "nodeType": "IfStatement",
                  "src": "11222:137:0",
                  "trueBody": {
                    "id": 937,
                    "nodeType": "Block",
                    "src": "11237:84:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 914,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 909,
                            "src": "11242:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  },
                                  "id": 925,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "383838",
                                    "id": 923,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11281:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_888_by_1",
                                      "typeString": "int_const 888"
                                    },
                                    "value": "888"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 924,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11286:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "11281:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 920,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3631303031323030",
                                        "id": 915,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11255:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_61001200_by_1",
                                          "typeString": "int_const 61001200"
                                        },
                                        "value": "61001200"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 918,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 916,
                                              "name": "x",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 887,
                                              "src": "11267:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "32",
                                              "id": 917,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "11272:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2_by_1",
                                                "typeString": "int_const 2"
                                              },
                                              "value": "2"
                                            },
                                            "src": "11267:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 919,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "11266:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11255:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 921,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "11254:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 922,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "11254:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11254:34:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 932,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11310:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 929,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3430383631353030",
                                        "id": 927,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "11292:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_40861500_by_1",
                                          "typeString": "int_const 40861500"
                                        },
                                        "value": "40861500"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 928,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 887,
                                        "src": "11303:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11292:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 930,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "11291:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "11291:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11291:23:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11254:60:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11242:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 936,
                        "nodeType": "ExpressionStatement",
                        "src": "11242:72:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 945,
                      "name": "testxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 343,
                      "src": "11370:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_200000000_by_1",
                            "typeString": "int_const 200000000"
                          },
                          "id": 958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11434:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "313030303030303030",
                            "id": 957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11438:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "value": "100000000"
                          },
                          "src": "11434:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000_by_1",
                            "typeString": "int_const 200000000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_200000000_by_1",
                            "typeString": "int_const 200000000"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 949,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "id": 946,
                                        "name": "epochsPast",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 858,
                                        "src": "11381:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 947,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "11380:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 948,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 909,
                                    "src": "11395:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11380:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 950,
                                  "name": "Token2Per",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 466,
                                  "src": "11407:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11380:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 952,
                                "name": "give0xBTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 484,
                                "src": "11419:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11380:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 954,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11379:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 185,
                        "src": "11379:54:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11379:69:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11370:78:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 961,
                  "nodeType": "ExpressionStatement",
                  "src": "11370:78:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 968,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11497:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                "typeString": "contract ForgeMining"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                "typeString": "contract ForgeMining"
                              }
                            ],
                            "id": 967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11489:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 966,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11489:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11489:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 963,
                              "name": "AddressZeroXBTC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "11462:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 962,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 310,
                            "src": "11455:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11455:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$310",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 309,
                        "src": "11455:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11455:48:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "id": 973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3330",
                                "id": 971,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11507:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_30_by_1",
                                  "typeString": "int_const 30"
                                },
                                "value": "30"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11512:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "11507:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 976,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 974,
                                    "name": "Token2Per",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 466,
                                    "src": "11517:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 975,
                                    "name": "_BLOCKS_PER_READJUSTMENT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 397,
                                    "src": "11529:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11517:36:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 977,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11516:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11507:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 979,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11555:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "11507:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 981,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11506:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11455:102:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1015,
                    "nodeType": "Block",
                    "src": "11801:23:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1011,
                            "name": "give0xBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 484,
                            "src": "11806:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11818:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11806:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1014,
                        "nodeType": "ExpressionStatement",
                        "src": "11806:13:0"
                      }
                    ]
                  },
                  "id": 1016,
                  "nodeType": "IfStatement",
                  "src": "11452:372:0",
                  "trueBody": {
                    "id": 1010,
                    "nodeType": "Block",
                    "src": "11639:155:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 987,
                              "name": "AddressLPReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 347,
                              "src": "11677:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_200000000_by_1",
                                    "typeString": "int_const 200000000"
                                  },
                                  "id": 1000,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 998,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11749:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "313030303030303030",
                                    "id": 999,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11753:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000_by_1",
                                      "typeString": "int_const 100000000"
                                    },
                                    "value": "100000000"
                                  },
                                  "src": "11749:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_200000000_by_1",
                                    "typeString": "int_const 200000000"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_200000000_by_1",
                                    "typeString": "int_const 200000000"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 995,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 993,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 991,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "id": 988,
                                                "name": "epochsPast",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 858,
                                                "src": "11696:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 989,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "11695:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 990,
                                            "name": "totalOwed",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 909,
                                            "src": "11710:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11695:24:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 992,
                                          "name": "Token2Per",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 466,
                                          "src": "11722:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11695:36:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 994,
                                        "name": "give0xBTC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 484,
                                        "src": "11734:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11695:48:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 996,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "11694:50:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 997,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "11694:54:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11694:69:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 984,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 349,
                                  "src": "11651:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 983,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 310,
                                "src": "11644:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11644:23:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$310",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 273,
                            "src": "11644:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11644:120:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1003,
                        "nodeType": "ExpressionStatement",
                        "src": "11644:120:0"
                      },
                      {
                        "expression": {
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1004,
                            "name": "give0xBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 484,
                            "src": "11769:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31",
                              "id": 1005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11781:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1006,
                              "name": "give",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "11785:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11781:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11769:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1009,
                        "nodeType": "ExpressionStatement",
                        "src": "11769:20:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1017,
                      "name": "oldecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 453,
                      "src": "11827:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1018,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "11839:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11827:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "11827:22:0"
                },
                {
                  "expression": {
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1021,
                      "name": "lastrun",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "11871:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1022,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11881:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11881:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11871:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1025,
                  "nodeType": "ExpressionStatement",
                  "src": "11871:25:0"
                }
              ]
            },
            "functionSelector": "d0856d16",
            "id": 1027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ARewardSender",
            "nameLocation": "10797:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10810:2:0"
            },
            "returnParameters": {
              "id": 849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10820:0:0"
            },
            "scope": 2539,
            "src": "10788:1112:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1043,
              "nodeType": "Block",
              "src": "12179:51:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1037,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1029,
                        "src": "12190:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1038,
                        "name": "challenge_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1031,
                        "src": "12197:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 1039,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12215:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12215:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1036,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1276,
                      "src": "12183:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes32,address) returns (uint256)"
                      }
                    },
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12183:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "12183:43:0"
                }
              ]
            },
            "functionSelector": "1801fbe5",
            "id": 1044,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "12103:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1029,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "12116:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "12108:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12108:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1031,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "12131:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "12123:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1030,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12123:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12107:41:0"
            },
            "returnParameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1034,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "12170:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "12165:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1033,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12165:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12164:14:0"
            },
            "scope": 2539,
            "src": "12094:136:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1275,
              "nodeType": "Block",
              "src": "12441:1497:0",
              "statements": [
                {
                  "assignments": [
                    1056
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1056,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "12454:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1275,
                      "src": "12446:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1055,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12446:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1066,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1060,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "12491:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1061,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "12508:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "12508:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1063,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1046,
                            "src": "12520:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1058,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12474:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "12474:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12474:52:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1057,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12464:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12464:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12446:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1068,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1056,
                          "src": "12589:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1069,
                          "name": "challenge_digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1048,
                          "src": "12599:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "12589:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6c64206368616c6c656e67655f646967657374206f722077726f6e67206368616c6c656e67655f646967657374",
                        "id": 1071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12617:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        },
                        "value": "Old challenge_digest or wrong challenge_digest"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        }
                      ],
                      "id": 1067,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12581:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12581:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1073,
                  "nodeType": "ExpressionStatement",
                  "src": "12581:85:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1077,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1056,
                              "src": "12734:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1076,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12726:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1075,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12726:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12726:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1079,
                          "name": "miningTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "12744:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12726:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446967657374206d75737420626520736d616c6c6572207468616e206d696e696e67546172676574",
                        "id": 1081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12758:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        },
                        "value": "Digest must be smaller than miningTarget"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        }
                      ],
                      "id": 1074,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12718:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12718:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1083,
                  "nodeType": "ExpressionStatement",
                  "src": "12718:83:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1084,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2064,
                      "src": "12805:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12805:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1086,
                  "nodeType": "ExpressionStatement",
                  "src": "12805:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1088,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12840:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12840:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 1090,
                          "name": "previousBlockTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "12858:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12840:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2073616d65207365636f6e6420736f6c766573",
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12877:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        },
                        "value": "No same second solves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        }
                      ],
                      "id": 1087,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12832:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12832:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "12832:69:0"
                },
                {
                  "assignments": [
                    1096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1096,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "12967:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1275,
                      "src": "12959:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1095,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12959:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1107,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1097,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "12973:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1098,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "12973:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1099,
                                  "name": "previousBlockTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 457,
                                  "src": "12991:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12973:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1101,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12972:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "383838",
                            "id": 1102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13012:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_888_by_1",
                              "typeString": "int_const 888"
                            },
                            "value": "888"
                          },
                          "src": "12972:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1104,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12971:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1105,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "13019:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12971:58:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12959:70:0"
                },
                {
                  "assignments": [
                    1109
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1109,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nameLocation": "13038:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1275,
                      "src": "13033:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1108,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13033:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1115,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1110,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1096,
                        "src": "13046:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13050:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "13046:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "383838",
                      "id": 1113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13056:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_888_by_1",
                        "typeString": "int_const 888"
                      },
                      "value": "888"
                    },
                    "src": "13046:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13033:26:0"
                },
                {
                  "assignments": [
                    1117
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1117,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "13068:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1275,
                      "src": "13063:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1116,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13063:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1119,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13080:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13063:18:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1120,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1109,
                      "src": "13088:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "333134",
                      "id": 1121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13096:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_314_by_1",
                        "typeString": "int_const 314"
                      },
                      "value": "314"
                    },
                    "src": "13088:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1160,
                    "nodeType": "Block",
                    "src": "13188:60:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1147,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1117,
                            "src": "13193:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 1153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13225:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1150,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1148,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1096,
                                        "src": "13206:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "313030303030303030",
                                        "id": 1149,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13210:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        },
                                        "value": "100000000"
                                      },
                                      "src": "13206:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1151,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "13205:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1152,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "13205:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13205:24:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "333530303030303030",
                                  "id": 1155,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13233:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_350000000_by_1",
                                    "typeString": "int_const 350000000"
                                  },
                                  "value": "350000000"
                                }
                              ],
                              "id": 1156,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13232:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_350000000_by_1",
                                "typeString": "int_const 350000000"
                              }
                            },
                            "src": "13205:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13193:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1159,
                        "nodeType": "ExpressionStatement",
                        "src": "13193:50:0"
                      }
                    ]
                  },
                  "id": 1161,
                  "nodeType": "IfStatement",
                  "src": "13085:163:0",
                  "trueBody": {
                    "id": 1146,
                    "nodeType": "Block",
                    "src": "13100:83:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1123,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1117,
                            "src": "13105:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  },
                                  "id": 1134,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "383838",
                                    "id": 1132,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13144:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_888_by_1",
                                      "typeString": "int_const 888"
                                    },
                                    "value": "888"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 1133,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13151:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "13144:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_788544_by_1",
                                    "typeString": "int_const 788544"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1129,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3631303031323030",
                                        "id": 1124,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13118:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_61001200_by_1",
                                          "typeString": "int_const 61001200"
                                        },
                                        "value": "61001200"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1127,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1125,
                                              "name": "x",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1096,
                                              "src": "13130:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "**",
                                            "rightExpression": {
                                              "hexValue": "32",
                                              "id": 1126,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "13135:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_2_by_1",
                                                "typeString": "int_const 2"
                                              },
                                              "value": "2"
                                            },
                                            "src": "13130:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1128,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "13129:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "13118:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1130,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "13117:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "13117:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13117:36:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 1141,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13174:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1138,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3430383631353030",
                                        "id": 1136,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13156:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_40861500_by_1",
                                          "typeString": "int_const 40861500"
                                        },
                                        "value": "40861500"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "id": 1137,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1096,
                                        "src": "13167:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "13156:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1139,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "13155:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "13155:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13155:23:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13117:61:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13105:73:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1145,
                        "nodeType": "ExpressionStatement",
                        "src": "13105:73:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1162,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "13254:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1164,
                      "indexExpression": {
                        "id": 1163,
                        "name": "mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "13263:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13254:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030",
                              "id": 1174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13326:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "value": "100000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1169,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 450,
                                    "src": "13295:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1170,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1117,
                                    "src": "13311:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "13295:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1172,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13294:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 185,
                            "src": "13294:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13294:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1165,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "13273:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1167,
                          "indexExpression": {
                            "id": 1166,
                            "name": "mintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1050,
                            "src": "13282:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13273:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "13273:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13273:64:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13254:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1178,
                  "nodeType": "ExpressionStatement",
                  "src": "13254:83:0"
                },
                {
                  "expression": {
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1179,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "13341:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1181,
                      "indexExpression": {
                        "id": 1180,
                        "name": "AddressLPReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 347,
                        "src": "13350:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13341:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              },
                              "id": 1193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "313030303030303030",
                                "id": 1191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13431:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000_by_1",
                                  "typeString": "int_const 100000000"
                                },
                                "value": "100000000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 1192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13443:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "13431:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_200000000_by_1",
                                "typeString": "int_const 200000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1188,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1186,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 450,
                                    "src": "13400:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1187,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1117,
                                    "src": "13416:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "13400:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1189,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13399:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 185,
                            "src": "13399:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13399:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 1182,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "13369:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1184,
                          "indexExpression": {
                            "id": 1183,
                            "name": "AddressLPReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "13378:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13369:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "13369:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13369:77:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13341:105:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1197,
                  "nodeType": "ExpressionStatement",
                  "src": "13341:105:0"
                },
                {
                  "expression": {
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1198,
                      "name": "tokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 471,
                      "src": "13455:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "313030303030303030",
                              "id": 1206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13519:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              },
                              "value": "100000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_100000000_by_1",
                                "typeString": "int_const 100000000"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1201,
                                    "name": "reward_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 450,
                                    "src": "13488:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1202,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1117,
                                    "src": "13504:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "13488:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1204,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "13487:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 185,
                            "src": "13487:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13487:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1199,
                          "name": "tokensMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 471,
                          "src": "13470:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "13470:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13470:60:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13455:75:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1210,
                  "nodeType": "ExpressionStatement",
                  "src": "13455:75:0"
                },
                {
                  "expression": {
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1211,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "13534:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1212,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "13554:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "13554:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13534:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1215,
                  "nodeType": "ExpressionStatement",
                  "src": "13534:35:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1216,
                      "name": "give0xBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "13577:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13589:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13577:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1258,
                  "nodeType": "IfStatement",
                  "src": "13574:239:0",
                  "trueBody": {
                    "id": 1257,
                    "nodeType": "Block",
                    "src": "13591:222:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1219,
                            "name": "ratio",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "13599:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "323030",
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13607:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_200_by_1",
                              "typeString": "int_const 200"
                            },
                            "value": "200"
                          },
                          "src": "13599:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1255,
                          "nodeType": "Block",
                          "src": "13719:90:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1243,
                                    "name": "mintTo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1050,
                                    "src": "13758:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "3130",
                                        "id": 1251,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13799:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        }
                                      ],
                                      "expression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1248,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1246,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "hexValue": "3233",
                                                "id": 1244,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "13767:2:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_23_by_1",
                                                  "typeString": "int_const 23"
                                                },
                                                "value": "23"
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 1245,
                                                "name": "Token2Per",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 466,
                                                "src": "13772:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "13767:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 1247,
                                              "name": "give0xBTC",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 484,
                                              "src": "13784:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "13767:26:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1249,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "13766:28:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1250,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 185,
                                      "src": "13766:32:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1252,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13766:36:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1240,
                                        "name": "AddressZeroXBTC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 349,
                                        "src": "13732:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1239,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 310,
                                      "src": "13725:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1241,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13725:23:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$310",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 273,
                                  "src": "13725:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13725:78:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1254,
                              "nodeType": "ExpressionStatement",
                              "src": "13725:78:0"
                            }
                          ]
                        },
                        "id": 1256,
                        "nodeType": "IfStatement",
                        "src": "13596:213:0",
                        "trueBody": {
                          "id": 1238,
                          "nodeType": "Block",
                          "src": "13611:104:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1226,
                                    "name": "mintTo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1050,
                                    "src": "13650:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "313030303030303030",
                                        "id": 1234,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "13698:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        },
                                        "value": "100000000"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        }
                                      ],
                                      "expression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1231,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1229,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 1227,
                                                "name": "totalOwed",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1117,
                                                "src": "13659:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "id": 1228,
                                                "name": "Token2Per",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 466,
                                                "src": "13671:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "13659:21:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 1230,
                                              "name": "give0xBTC",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 484,
                                              "src": "13683:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "13659:33:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1232,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "13658:35:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1233,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 185,
                                      "src": "13658:39:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13658:50:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1223,
                                        "name": "AddressZeroXBTC",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 349,
                                        "src": "13624:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1222,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 310,
                                      "src": "13617:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13617:23:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$310",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 273,
                                  "src": "13617:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13617:92:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1237,
                              "nodeType": "ExpressionStatement",
                              "src": "13617:92:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1260,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13827:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13827:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "313030303030303030",
                            "id": 1267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13871:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            },
                            "value": "100000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_100000000_by_1",
                              "typeString": "int_const 100000000"
                            }
                          ],
                          "expression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1262,
                                  "name": "reward_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 450,
                                  "src": "13840:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1263,
                                  "name": "totalOwed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1117,
                                  "src": "13856:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13840:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1265,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13839:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 185,
                          "src": "13839:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13839:42:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1269,
                        "name": "epochCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "13883:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1270,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "13895:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1259,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "13822:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 1271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13822:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1272,
                  "nodeType": "EmitStatement",
                  "src": "13817:95:0"
                },
                {
                  "expression": {
                    "id": 1273,
                    "name": "totalOwed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1117,
                    "src": "13924:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1054,
                  "id": 1274,
                  "nodeType": "Return",
                  "src": "13917:16:0"
                }
              ]
            },
            "functionSelector": "ddfbd8dd",
            "id": 1276,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "12346:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1046,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "12361:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "12353:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12353:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1048,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "12376:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "12368:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1047,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12368:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1050,
                  "mutability": "mutable",
                  "name": "mintTo",
                  "nameLocation": "12403:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "12395:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12395:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12352:58:0"
            },
            "returnParameters": {
              "id": 1054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1053,
                  "mutability": "mutable",
                  "name": "owed",
                  "nameLocation": "12435:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1276,
                  "src": "12427:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12427:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12426:14:0"
            },
            "scope": 2539,
            "src": "12337:1601:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1502,
              "nodeType": "Block",
              "src": "14411:1416:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1292,
                            "name": "MintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1286,
                            "src": "14424:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "14424:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1294,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1283,
                              "src": "14441:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14441:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14461:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "14441:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14424:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f204d696e74546f2068617320746f20686176652073616d65206e756d626572206f66206164647265737373657320617320457874726146756e6473",
                        "id": 1299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14463:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d25a4bf0584ffc01a5da6d1e61b00c89d1a5bf65ec38286ca5b25a245e58f2e",
                          "typeString": "literal_string \"So MintTo has to have same number of addressses as ExtraFunds\""
                        },
                        "value": "So MintTo has to have same number of addressses as ExtraFunds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d25a4bf0584ffc01a5da6d1e61b00c89d1a5bf65ec38286ca5b25a245e58f2e",
                          "typeString": "literal_string \"So MintTo has to have same number of addressses as ExtraFunds\""
                        }
                      ],
                      "id": 1291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14416:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14416:111:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1301,
                  "nodeType": "ExpressionStatement",
                  "src": "14416:111:0"
                },
                {
                  "assignments": [
                    1303
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1303,
                      "mutability": "mutable",
                      "name": "xy",
                      "nameLocation": "14536:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1502,
                      "src": "14531:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1302,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14531:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1305,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14539:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14531:9:0"
                },
                {
                  "body": {
                    "id": 1375,
                    "nodeType": "Block",
                    "src": "14587:301:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1317,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 394,
                              "src": "14595:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 1318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14609:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1321,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1319,
                                          "name": "xy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1303,
                                          "src": "14613:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1320,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14616:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "14613:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1322,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "14612:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14609:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1324,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14608:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14595:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14623:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14595:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1330,
                        "nodeType": "IfStatement",
                        "src": "14592:50:0",
                        "trueBody": {
                          "id": 1329,
                          "nodeType": "Block",
                          "src": "14625:17:0",
                          "statements": [
                            {
                              "id": 1328,
                              "nodeType": "Break",
                              "src": "14631:5:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1332,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1283,
                                    "src": "14654:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1334,
                                  "indexExpression": {
                                    "id": 1333,
                                    "name": "xy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1303,
                                    "src": "14665:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14654:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 1337,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "14680:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                        "typeString": "contract ForgeMining"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                        "typeString": "contract ForgeMining"
                                      }
                                    ],
                                    "id": 1336,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "14672:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1335,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "14672:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1338,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14672:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14654:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1344,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1340,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1283,
                                    "src": "14689:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1342,
                                  "indexExpression": {
                                    "id": 1341,
                                    "name": "xy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1303,
                                    "src": "14700:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14689:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 1343,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 349,
                                  "src": "14707:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "14689:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "14654:68:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2062617365207072696e74696e67206f6620746f6b656e73",
                              "id": 1346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14724:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              },
                              "value": "No base printing of tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              }
                            ],
                            "id": 1331,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14646:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14646:107:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1348,
                        "nodeType": "ExpressionStatement",
                        "src": "14646:107:0"
                      },
                      {
                        "body": {
                          "id": 1373,
                          "nodeType": "Block",
                          "src": "14801:83:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 1369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1363,
                                        "name": "ExtraFunds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1283,
                                        "src": "14815:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 1365,
                                      "indexExpression": {
                                        "id": 1364,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1350,
                                        "src": "14826:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14815:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 1366,
                                        "name": "ExtraFunds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1283,
                                        "src": "14832:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 1368,
                                      "indexExpression": {
                                        "id": 1367,
                                        "name": "xy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1303,
                                        "src": "14843:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14832:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "14815:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f207072696e74696e67205468652073616d6520746f6b656e73",
                                    "id": 1370,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14848:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    },
                                    "value": "No printing The same tokens"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    }
                                  ],
                                  "id": 1362,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "14807:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14807:71:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1372,
                              "nodeType": "ExpressionStatement",
                              "src": "14807:71:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1355,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "14775:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1356,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1283,
                              "src": "14778:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14778:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14775:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1374,
                        "initializationExpression": {
                          "assignments": [
                            1350
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1350,
                              "mutability": "mutable",
                              "name": "y",
                              "nameLocation": "14767:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1374,
                              "src": "14762:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1349,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "14762:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1354,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1351,
                              "name": "xy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1303,
                              "src": "14769:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14772:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "14769:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "14762:11:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "14797:3:0",
                            "subExpression": {
                              "id": 1359,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1350,
                              "src": "14797:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1361,
                          "nodeType": "ExpressionStatement",
                          "src": "14797:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "14758:126:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1310,
                      "name": "xy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1303,
                      "src": "14556:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1311,
                        "name": "ExtraFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "14560:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14560:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14556:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1376,
                  "initializationExpression": {
                    "expression": {
                      "id": 1308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1306,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1303,
                        "src": "14548:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14553:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "14548:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1309,
                    "nodeType": "ExpressionStatement",
                    "src": "14548:6:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14579:4:0",
                      "subExpression": {
                        "id": 1314,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1303,
                        "src": "14579:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1316,
                    "nodeType": "ExpressionStatement",
                    "src": "14579:4:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "14544:344:0"
                },
                {
                  "assignments": [
                    1378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1378,
                      "mutability": "mutable",
                      "name": "totalIN",
                      "nameLocation": "14902:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1502,
                      "src": "14894:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1377,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14894:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1386,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1380,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1278,
                        "src": "14922:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1381,
                        "name": "challenge_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1280,
                        "src": "14928:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1382,
                          "name": "MintTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1286,
                          "src": "14946:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1384,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14953:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14946:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1379,
                      "name": "AOpenMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 847,
                      "src": "14912:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (bool,bool,address) returns (uint256)"
                      }
                    },
                    "id": 1385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14912:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14894:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1388,
                          "name": "totalIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1378,
                          "src": "14968:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14978:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14968:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e74206973737565",
                        "id": 1391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14981:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        },
                        "value": "mint issue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        }
                      ],
                      "id": 1387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14960:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14960:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1393,
                  "nodeType": "ExpressionStatement",
                  "src": "14960:34:0"
                },
                {
                  "assignments": [
                    1395
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1395,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "15006:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1502,
                      "src": "14998:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1394,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14998:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1396,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14998:17:0"
                },
                {
                  "assignments": [
                    1398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1398,
                      "mutability": "mutable",
                      "name": "TotalOwned",
                      "nameLocation": "15027:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1502,
                      "src": "15019:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1397,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15019:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1399,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15019:18:0"
                },
                {
                  "body": {
                    "id": 1490,
                    "nodeType": "Block",
                    "src": "15068:666:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1410,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 394,
                              "src": "15329:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1416,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 1411,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15343:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1414,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1412,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1401,
                                          "src": "15347:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1413,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15349:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "15347:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1415,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "15346:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "15343:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1417,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15342:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15329:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15356:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15329:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1489,
                        "nodeType": "IfStatement",
                        "src": "15326:397:0",
                        "trueBody": {
                          "id": 1488,
                          "nodeType": "Block",
                          "src": "15358:365:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1421,
                                  "name": "TotalOwned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1398,
                                  "src": "15364:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1430,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "15417:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                            "typeString": "contract ForgeMining"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                            "typeString": "contract ForgeMining"
                                          }
                                        ],
                                        "id": 1429,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "15409:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1428,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "15409:7:0",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1431,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15409:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1423,
                                            "name": "ExtraFunds",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1283,
                                            "src": "15384:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 1425,
                                          "indexExpression": {
                                            "id": 1424,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1401,
                                            "src": "15395:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15384:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1422,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 310,
                                        "src": "15377:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 1426,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15377:21:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$310",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1427,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 309,
                                    "src": "15377:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15377:46:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15364:59:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1434,
                              "nodeType": "ExpressionStatement",
                              "src": "15364:59:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1435,
                                  "name": "TotalOwned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1398,
                                  "src": "15432:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1436,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15446:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "15432:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1487,
                              "nodeType": "IfStatement",
                              "src": "15429:278:0",
                              "trueBody": {
                                "id": 1486,
                                "nodeType": "Block",
                                "src": "15448:259:0",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 1446,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1442,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1440,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1438,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1401,
                                            "src": "15459:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "33",
                                            "id": 1439,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "15463:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                          },
                                          "src": "15459:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 1441,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15468:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "15459:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1445,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1443,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1401,
                                          "src": "15473:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 1444,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "15478:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "15473:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "15459:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 1472,
                                      "nodeType": "Block",
                                      "src": "15561:76:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1470,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1460,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1395,
                                              "src": "15569:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  },
                                                  "id": 1468,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "313030303030303030",
                                                    "id": 1466,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "15608:9:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100000000_by_1",
                                                      "typeString": "int_const 100000000"
                                                    },
                                                    "value": "100000000"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 1467,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "15620:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "15608:16:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 1463,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 1461,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1398,
                                                        "src": "15582:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 1462,
                                                        "name": "totalIN",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1378,
                                                        "src": "15595:7:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "15582:20:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 1464,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "15581:22:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1465,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 185,
                                                "src": "15581:26:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1469,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "15581:45:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "15569:57:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1471,
                                          "nodeType": "ExpressionStatement",
                                          "src": "15569:57:0"
                                        }
                                      ]
                                    },
                                    "id": 1473,
                                    "nodeType": "IfStatement",
                                    "src": "15455:182:0",
                                    "trueBody": {
                                      "id": 1459,
                                      "nodeType": "Block",
                                      "src": "15480:77:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1457,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1447,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1395,
                                              "src": "15488:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  },
                                                  "id": 1455,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "313030303030303030",
                                                    "id": 1453,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "15532:9:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100000000_by_1",
                                                      "typeString": "int_const 100000000"
                                                    },
                                                    "value": "100000000"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 1454,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "15544:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "15532:16:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 1450,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 1448,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1398,
                                                        "src": "15501:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 1449,
                                                        "name": "totalIN",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1378,
                                                        "src": "15514:7:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "15501:20:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 1451,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "15500:22:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1452,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "divRound",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 223,
                                                "src": "15500:31:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1456,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "15500:49:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "15488:61:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1458,
                                          "nodeType": "ExpressionStatement",
                                          "src": "15488:61:0"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1480,
                                            "name": "MintTo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1286,
                                            "src": "15676:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 1482,
                                          "indexExpression": {
                                            "id": 1481,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1401,
                                            "src": "15683:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "15676:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1483,
                                          "name": "totalOwed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1395,
                                          "src": "15687:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 1475,
                                                "name": "ExtraFunds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1283,
                                                "src": "15652:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                  "typeString": "address[] memory"
                                                }
                                              },
                                              "id": 1477,
                                              "indexExpression": {
                                                "id": 1476,
                                                "name": "x",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1401,
                                                "src": "15663:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "15652:13:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1474,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 310,
                                            "src": "15645:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 1478,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15645:21:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$310",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 1479,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 273,
                                        "src": "15645:30:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 1484,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "15645:52:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1485,
                                    "nodeType": "ExpressionStatement",
                                    "src": "15645:52:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1404,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1401,
                      "src": "15055:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1405,
                      "name": "xy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1303,
                      "src": "15057:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15055:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1491,
                  "initializationExpression": {
                    "assignments": [
                      1401
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1401,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "15050:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1491,
                        "src": "15045:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1400,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15045:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1403,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15052:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15045:8:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15061:3:0",
                      "subExpression": {
                        "id": 1407,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1401,
                        "src": "15061:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1409,
                    "nodeType": "ExpressionStatement",
                    "src": "15061:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "15041:693:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1493,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "15752:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "15752:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1495,
                        "name": "epochCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "15764:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1496,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "15776:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1497,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1303,
                        "src": "15793:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1492,
                      "name": "MegaMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "15743:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,bytes32,uint256)"
                      }
                    },
                    "id": 1498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15743:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1499,
                  "nodeType": "EmitStatement",
                  "src": "15738:59:0"
                },
                {
                  "expression": {
                    "id": 1500,
                    "name": "totalOwed",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1395,
                    "src": "15809:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1290,
                  "id": 1501,
                  "nodeType": "Return",
                  "src": "15802:16:0"
                }
              ]
            },
            "functionSelector": "9ff5ff49",
            "id": 1503,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokensArrayToOPENMUSTERASE",
            "nameLocation": "14261:30:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1278,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "14297:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1503,
                  "src": "14292:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14292:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1280,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "14309:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1503,
                  "src": "14304:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1279,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14304:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1283,
                  "mutability": "mutable",
                  "name": "ExtraFunds",
                  "nameLocation": "14344:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1503,
                  "src": "14327:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1281,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14327:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1282,
                    "nodeType": "ArrayTypeName",
                    "src": "14327:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1286,
                  "mutability": "mutable",
                  "name": "MintTo",
                  "nameLocation": "14373:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1503,
                  "src": "14356:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1284,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14356:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1285,
                    "nodeType": "ArrayTypeName",
                    "src": "14356:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14291:89:0"
            },
            "returnParameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1289,
                  "mutability": "mutable",
                  "name": "owed",
                  "nameLocation": "14405:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1503,
                  "src": "14397:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14397:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14396:14:0"
            },
            "scope": 2539,
            "src": "14252:1575:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1729,
              "nodeType": "Block",
              "src": "15991:1405:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1519,
                            "name": "MintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1513,
                            "src": "16008:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "16008:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1521,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1510,
                              "src": "16025:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "16025:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16045:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "16025:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16008:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f204d696e74546f2068617320746f20686176652073616d65206e756d626572206f66206164647265737373657320617320457874726146756e6473",
                        "id": 1526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16047:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d25a4bf0584ffc01a5da6d1e61b00c89d1a5bf65ec38286ca5b25a245e58f2e",
                          "typeString": "literal_string \"So MintTo has to have same number of addressses as ExtraFunds\""
                        },
                        "value": "So MintTo has to have same number of addressses as ExtraFunds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d25a4bf0584ffc01a5da6d1e61b00c89d1a5bf65ec38286ca5b25a245e58f2e",
                          "typeString": "literal_string \"So MintTo has to have same number of addressses as ExtraFunds\""
                        }
                      ],
                      "id": 1518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16000:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16000:111:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "16000:111:0"
                },
                {
                  "assignments": [
                    1530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1530,
                      "mutability": "mutable",
                      "name": "xy",
                      "nameLocation": "16120:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1729,
                      "src": "16115:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1529,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "16115:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1532,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "16123:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16115:9:0"
                },
                {
                  "body": {
                    "id": 1602,
                    "nodeType": "Block",
                    "src": "16171:301:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1544,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 394,
                              "src": "16179:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1550,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 1545,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16193:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1548,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1546,
                                          "name": "xy",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1530,
                                          "src": "16197:2:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1547,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "16200:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "16197:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1549,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "16196:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16193:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1551,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "16192:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16179:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16207:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16179:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1557,
                        "nodeType": "IfStatement",
                        "src": "16176:50:0",
                        "trueBody": {
                          "id": 1556,
                          "nodeType": "Block",
                          "src": "16209:17:0",
                          "statements": [
                            {
                              "id": 1555,
                              "nodeType": "Break",
                              "src": "16215:5:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1566,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1559,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1510,
                                    "src": "16238:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1561,
                                  "indexExpression": {
                                    "id": 1560,
                                    "name": "xy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1530,
                                    "src": "16249:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16238:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 1564,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "16264:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                        "typeString": "contract ForgeMining"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                        "typeString": "contract ForgeMining"
                                      }
                                    ],
                                    "id": 1563,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16256:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1562,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "16256:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1565,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16256:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "16238:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1567,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1510,
                                    "src": "16273:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1569,
                                  "indexExpression": {
                                    "id": 1568,
                                    "name": "xy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1530,
                                    "src": "16284:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16273:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 1570,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 349,
                                  "src": "16291:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "16273:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "16238:68:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2062617365207072696e74696e67206f6620746f6b656e73",
                              "id": 1573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16308:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              },
                              "value": "No base printing of tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              }
                            ],
                            "id": 1558,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16230:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16230:107:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1575,
                        "nodeType": "ExpressionStatement",
                        "src": "16230:107:0"
                      },
                      {
                        "body": {
                          "id": 1600,
                          "nodeType": "Block",
                          "src": "16385:83:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 1596,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1590,
                                        "name": "ExtraFunds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1510,
                                        "src": "16399:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 1592,
                                      "indexExpression": {
                                        "id": 1591,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1577,
                                        "src": "16410:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16399:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 1593,
                                        "name": "ExtraFunds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1510,
                                        "src": "16416:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 1595,
                                      "indexExpression": {
                                        "id": 1594,
                                        "name": "xy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1530,
                                        "src": "16427:2:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16416:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "16399:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f207072696e74696e67205468652073616d6520746f6b656e73",
                                    "id": 1597,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16432:29:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    },
                                    "value": "No printing The same tokens"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    }
                                  ],
                                  "id": 1589,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "16391:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1598,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16391:71:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1599,
                              "nodeType": "ExpressionStatement",
                              "src": "16391:71:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1582,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1577,
                            "src": "16359:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1583,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1510,
                              "src": "16362:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "16362:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16359:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1601,
                        "initializationExpression": {
                          "assignments": [
                            1577
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1577,
                              "mutability": "mutable",
                              "name": "y",
                              "nameLocation": "16351:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1601,
                              "src": "16346:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1576,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "16346:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1581,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1578,
                              "name": "xy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1530,
                              "src": "16353:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16356:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "16353:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16346:11:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1587,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "16381:3:0",
                            "subExpression": {
                              "id": 1586,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1577,
                              "src": "16381:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1588,
                          "nodeType": "ExpressionStatement",
                          "src": "16381:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "16342:126:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1537,
                      "name": "xy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1530,
                      "src": "16140:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1538,
                        "name": "ExtraFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1510,
                        "src": "16144:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "16144:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16140:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1603,
                  "initializationExpression": {
                    "expression": {
                      "id": 1535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 1533,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1530,
                        "src": "16132:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 1534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16137:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "16132:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1536,
                    "nodeType": "ExpressionStatement",
                    "src": "16132:6:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "16163:4:0",
                      "subExpression": {
                        "id": 1541,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1530,
                        "src": "16163:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1543,
                    "nodeType": "ExpressionStatement",
                    "src": "16163:4:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "16128:344:0"
                },
                {
                  "assignments": [
                    1605
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1605,
                      "mutability": "mutable",
                      "name": "totalOd",
                      "nameLocation": "16486:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1729,
                      "src": "16478:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1604,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16478:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1613,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1607,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1505,
                        "src": "16503:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1608,
                        "name": "challenge_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1507,
                        "src": "16509:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1609,
                          "name": "MintTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1513,
                          "src": "16527:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1611,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 1610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16534:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16527:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1606,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1276,
                      "src": "16496:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes32,address) returns (uint256)"
                      }
                    },
                    "id": 1612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16496:41:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16478:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1615,
                          "name": "totalOd",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1605,
                          "src": "16549:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16559:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "16549:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e74206973737565",
                        "id": 1618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16562:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        },
                        "value": "mint issue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        }
                      ],
                      "id": 1614,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16541:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16541:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1620,
                  "nodeType": "ExpressionStatement",
                  "src": "16541:34:0"
                },
                {
                  "assignments": [
                    1622
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1622,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "16587:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1729,
                      "src": "16579:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1621,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16579:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1623,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16579:17:0"
                },
                {
                  "assignments": [
                    1625
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1625,
                      "mutability": "mutable",
                      "name": "TotalOwned",
                      "nameLocation": "16608:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1729,
                      "src": "16600:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1624,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16600:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1626,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16600:18:0"
                },
                {
                  "body": {
                    "id": 1717,
                    "nodeType": "Block",
                    "src": "16649:648:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1637,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 394,
                              "src": "16910:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 1638,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16924:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1641,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1639,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1628,
                                          "src": "16928:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1640,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "16930:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "16928:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1642,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "16927:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16924:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1644,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "16923:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16910:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16937:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16910:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1716,
                        "nodeType": "IfStatement",
                        "src": "16907:380:0",
                        "trueBody": {
                          "id": 1715,
                          "nodeType": "Block",
                          "src": "16939:348:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 1660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1648,
                                  "name": "TotalOwned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1625,
                                  "src": "16945:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1657,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "16998:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                            "typeString": "contract ForgeMining"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                            "typeString": "contract ForgeMining"
                                          }
                                        ],
                                        "id": 1656,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "16990:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1655,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "16990:7:0",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1658,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16990:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1650,
                                            "name": "ExtraFunds",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1510,
                                            "src": "16965:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 1652,
                                          "indexExpression": {
                                            "id": 1651,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1628,
                                            "src": "16976:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "16965:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1649,
                                        "name": "IERC20",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 310,
                                        "src": "16958:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                          "typeString": "type(contract IERC20)"
                                        }
                                      },
                                      "id": 1653,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16958:21:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$310",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1654,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 309,
                                    "src": "16958:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1659,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16958:46:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16945:59:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1661,
                              "nodeType": "ExpressionStatement",
                              "src": "16945:59:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1662,
                                  "name": "TotalOwned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1625,
                                  "src": "17013:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1663,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17027:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "17013:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1702,
                              "nodeType": "IfStatement",
                              "src": "17010:211:0",
                              "trueBody": {
                                "id": 1701,
                                "nodeType": "Block",
                                "src": "17029:192:0",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 1673,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1669,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1667,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1665,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1628,
                                            "src": "17040:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "33",
                                            "id": 1666,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "17044:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                          },
                                          "src": "17040:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 1668,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17049:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "17040:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1672,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1670,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1628,
                                          "src": "17054:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 1671,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17059:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "17054:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "17040:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 1699,
                                      "nodeType": "Block",
                                      "src": "17142:73:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1697,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1687,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1622,
                                              "src": "17150:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  },
                                                  "id": 1695,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "313030303030303030",
                                                    "id": 1693,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "17189:9:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100000000_by_1",
                                                      "typeString": "int_const 100000000"
                                                    },
                                                    "value": "100000000"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 1694,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "17201:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "17189:16:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 1690,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 1688,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1625,
                                                        "src": "17163:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 1689,
                                                        "name": "totalOd",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1605,
                                                        "src": "17176:7:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "17163:20:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 1691,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "17162:22:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1692,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 185,
                                                "src": "17162:26:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1696,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "17162:45:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "17150:57:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1698,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17150:57:0"
                                        }
                                      ]
                                    },
                                    "id": 1700,
                                    "nodeType": "IfStatement",
                                    "src": "17036:179:0",
                                    "trueBody": {
                                      "id": 1686,
                                      "nodeType": "Block",
                                      "src": "17061:77:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 1684,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 1674,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1622,
                                              "src": "17069:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  },
                                                  "id": 1682,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "313030303030303030",
                                                    "id": 1680,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "17113:9:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_100000000_by_1",
                                                      "typeString": "int_const 100000000"
                                                    },
                                                    "value": "100000000"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 1681,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "17125:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "17113:16:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_250000000000_by_1",
                                                    "typeString": "int_const 250000000000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 1677,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 1675,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1625,
                                                        "src": "17082:10:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 1676,
                                                        "name": "totalOd",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1605,
                                                        "src": "17095:7:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "17082:20:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 1678,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "17081:22:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 1679,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "divRound",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 223,
                                                "src": "17081:31:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 1683,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "17081:49:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "17069:61:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 1685,
                                          "nodeType": "ExpressionStatement",
                                          "src": "17069:61:0"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1709,
                                      "name": "MintTo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1513,
                                      "src": "17260:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 1711,
                                    "indexExpression": {
                                      "id": 1710,
                                      "name": "x",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1628,
                                      "src": "17267:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "17260:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1712,
                                    "name": "totalOwed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1622,
                                    "src": "17271:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 1704,
                                          "name": "ExtraFunds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1510,
                                          "src": "17236:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 1706,
                                        "indexExpression": {
                                          "id": 1705,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1628,
                                          "src": "17247:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "17236:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1703,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 310,
                                      "src": "17229:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 1707,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17229:21:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$310",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1708,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 273,
                                  "src": "17229:30:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17229:52:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1714,
                              "nodeType": "ExpressionStatement",
                              "src": "17229:52:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1631,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1628,
                      "src": "16636:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1632,
                      "name": "xy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1530,
                      "src": "16638:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16636:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1718,
                  "initializationExpression": {
                    "assignments": [
                      1628
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1628,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "16631:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1718,
                        "src": "16626:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1627,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "16626:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1630,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16633:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "16626:8:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "16642:3:0",
                      "subExpression": {
                        "id": 1634,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1628,
                        "src": "16642:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1636,
                    "nodeType": "ExpressionStatement",
                    "src": "16642:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "16622:675:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1720,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17324:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17324:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1722,
                        "name": "epochCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "17336:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1723,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "17348:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1724,
                        "name": "xy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1530,
                        "src": "17365:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1719,
                      "name": "MegaMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 375,
                      "src": "17315:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,bytes32,uint256)"
                      }
                    },
                    "id": 1725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17315:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1726,
                  "nodeType": "EmitStatement",
                  "src": "17310:59:0"
                },
                {
                  "expression": {
                    "id": 1727,
                    "name": "totalOd",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1605,
                    "src": "17381:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1517,
                  "id": 1728,
                  "nodeType": "Return",
                  "src": "17374:14:0"
                }
              ]
            },
            "functionSelector": "c8a1465c",
            "id": 1730,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokensArrayTo",
            "nameLocation": "15848:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1505,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "15874:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1730,
                  "src": "15866:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15866:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1507,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "15889:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1730,
                  "src": "15881:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1506,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15881:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1510,
                  "mutability": "mutable",
                  "name": "ExtraFunds",
                  "nameLocation": "15924:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1730,
                  "src": "15907:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1508,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "15907:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1509,
                    "nodeType": "ArrayTypeName",
                    "src": "15907:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1513,
                  "mutability": "mutable",
                  "name": "MintTo",
                  "nameLocation": "15953:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1730,
                  "src": "15936:23:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1511,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "15936:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1512,
                    "nodeType": "ArrayTypeName",
                    "src": "15936:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15865:95:0"
            },
            "returnParameters": {
              "id": 1517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1516,
                  "mutability": "mutable",
                  "name": "owed",
                  "nameLocation": "15985:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1730,
                  "src": "15977:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15977:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15976:14:0"
            },
            "scope": 2539,
            "src": "15839:1557:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1789,
              "nodeType": "Block",
              "src": "17547:225:0",
              "statements": [
                {
                  "assignments": [
                    1748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1748,
                      "mutability": "mutable",
                      "name": "dd",
                      "nameLocation": "17568:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1789,
                      "src": "17551:19:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1746,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17551:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1747,
                        "nodeType": "ArrayTypeName",
                        "src": "17551:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1757,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1752,
                            "name": "ExtraFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1737,
                            "src": "17587:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "17587:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 1754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17607:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "17587:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "17573:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1749,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17577:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1750,
                        "nodeType": "ArrayTypeName",
                        "src": "17577:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 1756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17573:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17551:58:0"
                },
                {
                  "body": {
                    "id": 1778,
                    "nodeType": "Block",
                    "src": "17664:24:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1772,
                              "name": "dd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1748,
                              "src": "17669:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1774,
                            "indexExpression": {
                              "id": 1773,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1759,
                              "src": "17672:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17669:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1775,
                            "name": "MintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1739,
                            "src": "17677:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "17669:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1777,
                        "nodeType": "ExpressionStatement",
                        "src": "17669:14:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1762,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1759,
                      "src": "17629:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1763,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1737,
                              "src": "17633:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "17633:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17653:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "17633:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1767,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "17632:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17629:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1779,
                  "initializationExpression": {
                    "assignments": [
                      1759
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1759,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "17624:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1779,
                        "src": "17619:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1758,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17619:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1761,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17626:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "17619:8:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "17657:3:0",
                      "subExpression": {
                        "id": 1769,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1759,
                        "src": "17657:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1771,
                    "nodeType": "ExpressionStatement",
                    "src": "17657:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "17615:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1781,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1732,
                        "src": "17712:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1782,
                        "name": "challenge_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1734,
                        "src": "17719:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1783,
                        "name": "ExtraFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1737,
                        "src": "17737:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 1784,
                        "name": "dd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1748,
                        "src": "17749:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 1780,
                      "name": "mintTokensArrayTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1730,
                      "src": "17694:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,bytes32,address[] memory,address[] memory) returns (uint256)"
                      }
                    },
                    "id": 1785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17694:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1786,
                  "nodeType": "ExpressionStatement",
                  "src": "17694:58:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17764:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1743,
                  "id": 1788,
                  "nodeType": "Return",
                  "src": "17757:11:0"
                }
              ]
            },
            "functionSelector": "1fccb33c",
            "id": 1790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokensSameAddress",
            "nameLocation": "17409:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1732,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "17439:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1790,
                  "src": "17431:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17431:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1734,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "17454:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1790,
                  "src": "17446:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1733,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17446:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1737,
                  "mutability": "mutable",
                  "name": "ExtraFunds",
                  "nameLocation": "17489:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1790,
                  "src": "17472:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1735,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "17472:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1736,
                    "nodeType": "ArrayTypeName",
                    "src": "17472:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1739,
                  "mutability": "mutable",
                  "name": "MintTo",
                  "nameLocation": "17509:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1790,
                  "src": "17501:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17501:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17430:86:0"
            },
            "returnParameters": {
              "id": 1743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1742,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "17538:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1790,
                  "src": "17533:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17533:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17532:14:0"
            },
            "scope": 2539,
            "src": "17400:372:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1854,
              "nodeType": "Block",
              "src": "17869:584:0",
              "statements": [
                {
                  "assignments": [
                    1800
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1800,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "17882:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1854,
                      "src": "17874:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1799,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "17874:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1810,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1804,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "17919:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1805,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "17936:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "17936:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1807,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1792,
                            "src": "17948:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1802,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17902:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "17902:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17902:52:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1801,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "17892:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17892:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17874:81:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 1814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1812,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1800,
                          "src": "18017:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1813,
                          "name": "challenge_digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1794,
                          "src": "18027:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "18017:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6c64206368616c6c656e67655f646967657374206f722077726f6e67206368616c6c656e67655f646967657374",
                        "id": 1815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18045:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        },
                        "value": "Old challenge_digest or wrong challenge_digest"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        }
                      ],
                      "id": 1811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18009:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18009:85:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1817,
                  "nodeType": "ExpressionStatement",
                  "src": "18009:85:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1821,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1800,
                              "src": "18162:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 1820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18154:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1819,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18154:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18154:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1823,
                          "name": "miningTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 415,
                          "src": "18172:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18154:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446967657374206d75737420626520736d616c6c6572207468616e206d696e696e67546172676574",
                        "id": 1825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18186:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        },
                        "value": "Digest must be smaller than miningTarget"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        }
                      ],
                      "id": 1818,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18146:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18146:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1827,
                  "nodeType": "ExpressionStatement",
                  "src": "18146:83:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1828,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2064,
                      "src": "18233:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18233:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1830,
                  "nodeType": "ExpressionStatement",
                  "src": "18233:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1832,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "18268:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "18268:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 1834,
                          "name": "previousBlockTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 457,
                          "src": "18286:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18268:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2073616d65207365636f6e6420736f6c766573",
                        "id": 1836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18305:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        },
                        "value": "No same second solves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b0305eb4529467ea65928bac1ff2f0ba5bb8aa1aa7d1202c53f38a305527bd7",
                          "typeString": "literal_string \"No same second solves\""
                        }
                      ],
                      "id": 1831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18260:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18260:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1838,
                  "nodeType": "ExpressionStatement",
                  "src": "18260:69:0"
                },
                {
                  "expression": {
                    "id": 1842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1839,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "18334:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1840,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "18354:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "18354:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18334:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1843,
                  "nodeType": "ExpressionStatement",
                  "src": "18334:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1845,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "18385:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "18385:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18397:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1848,
                        "name": "epochCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 394,
                        "src": "18400:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1849,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "18412:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1844,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "18380:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 1850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18380:49:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1851,
                  "nodeType": "EmitStatement",
                  "src": "18375:54:0"
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 1852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18441:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 1798,
                  "id": 1853,
                  "nodeType": "Return",
                  "src": "18434:8:0"
                }
              ]
            },
            "functionSelector": "65104a91",
            "id": 1855,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "empty_mintTo",
            "nameLocation": "17785:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1792,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "17806:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1855,
                  "src": "17798:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17798:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1794,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "17821:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1855,
                  "src": "17813:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1793,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17813:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17797:41:0"
            },
            "returnParameters": {
              "id": 1798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1797,
                  "mutability": "mutable",
                  "name": "owed",
                  "nameLocation": "17863:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1855,
                  "src": "17855:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17855:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17854:14:0"
            },
            "scope": 2539,
            "src": "17776:677:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1941,
              "nodeType": "Block",
              "src": "18540:343:0",
              "statements": [
                {
                  "assignments": [
                    1865
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1865,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "18553:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1941,
                      "src": "18545:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1864,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18545:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1875,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1868,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1866,
                                  "name": "_testthisblk",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1859,
                                  "src": "18559:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1867,
                                  "name": "_testlastblk",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1861,
                                  "src": "18574:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18559:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1869,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "18558:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "383838",
                            "id": 1870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18590:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_888_by_1",
                              "typeString": "int_const 888"
                            },
                            "value": "888"
                          },
                          "src": "18558:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1872,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "18557:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1873,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "18597:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18557:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18545:62:0"
                },
                {
                  "expression": {
                    "id": 1878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1876,
                      "name": "testden",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "18611:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1877,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1865,
                      "src": "18621:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18611:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1879,
                  "nodeType": "ExpressionStatement",
                  "src": "18611:11:0"
                },
                {
                  "assignments": [
                    1881
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1881,
                      "mutability": "mutable",
                      "name": "ratio",
                      "nameLocation": "18631:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1941,
                      "src": "18626:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1880,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18626:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1887,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1882,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1865,
                        "src": "18639:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 1883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18643:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "18639:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "383838",
                      "id": 1885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18649:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_888_by_1",
                        "typeString": "int_const 888"
                      },
                      "value": "888"
                    },
                    "src": "18639:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18626:26:0"
                },
                {
                  "assignments": [
                    1889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1889,
                      "mutability": "mutable",
                      "name": "totalOwed",
                      "nameLocation": "18661:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 1941,
                      "src": "18656:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1888,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "18656:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1891,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "18673:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18656:18:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1892,
                      "name": "ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1881,
                      "src": "18684:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "333134",
                      "id": 1893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18692:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_314_by_1",
                        "typeString": "int_const 314"
                      },
                      "value": "314"
                    },
                    "src": "18684:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1935,
                    "nodeType": "Block",
                    "src": "18797:60:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1933,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1922,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "18802:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1932,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "hexValue": "383838",
                                  "id": 1928,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18834:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  },
                                  "value": "888"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_888_by_1",
                                    "typeString": "int_const 888"
                                  }
                                ],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1925,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1923,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1865,
                                        "src": "18815:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "hexValue": "313030303030303030",
                                        "id": 1924,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18819:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_100000000_by_1",
                                          "typeString": "int_const 100000000"
                                        },
                                        "value": "100000000"
                                      },
                                      "src": "18815:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1926,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "18814:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "18814:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18814:24:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "hexValue": "333530303030303030",
                                  "id": 1930,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18842:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_350000000_by_1",
                                    "typeString": "int_const 350000000"
                                  },
                                  "value": "350000000"
                                }
                              ],
                              "id": 1931,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "18841:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_350000000_by_1",
                                "typeString": "int_const 350000000"
                              }
                            },
                            "src": "18814:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18802:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1934,
                        "nodeType": "ExpressionStatement",
                        "src": "18802:50:0"
                      }
                    ]
                  },
                  "id": 1936,
                  "nodeType": "IfStatement",
                  "src": "18681:176:0",
                  "trueBody": {
                    "id": 1921,
                    "nodeType": "Block",
                    "src": "18696:96:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1895,
                            "name": "totalOwed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "18701:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1915,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_rational_788544_by_1",
                                          "typeString": "int_const 788544"
                                        },
                                        "id": 1906,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "383838",
                                          "id": 1904,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "18742:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_888_by_1",
                                            "typeString": "int_const 888"
                                          },
                                          "value": "888"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 1905,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "18749:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "18742:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_788544_by_1",
                                          "typeString": "int_const 788544"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_788544_by_1",
                                          "typeString": "int_const 788544"
                                        }
                                      ],
                                      "expression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1901,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3631303031323030",
                                              "id": 1896,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "18716:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_61001200_by_1",
                                                "typeString": "int_const 61001200"
                                              },
                                              "value": "61001200"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "components": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  "id": 1899,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "id": 1897,
                                                    "name": "x",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1865,
                                                    "src": "18728:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "**",
                                                  "rightExpression": {
                                                    "hexValue": "32",
                                                    "id": 1898,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "18733:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2_by_1",
                                                      "typeString": "int_const 2"
                                                    },
                                                    "value": "2"
                                                  },
                                                  "src": "18728:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "id": 1900,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "18727:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "18716:20:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1902,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "18714:23:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1903,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 185,
                                      "src": "18714:27:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1907,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18714:37:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "383838",
                                        "id": 1913,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18772:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_888_by_1",
                                          "typeString": "int_const 888"
                                        },
                                        "value": "888"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_888_by_1",
                                          "typeString": "int_const 888"
                                        }
                                      ],
                                      "expression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1910,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "hexValue": "3430383631353030",
                                              "id": 1908,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "18754:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_40861500_by_1",
                                                "typeString": "int_const 40861500"
                                              },
                                              "value": "40861500"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 1909,
                                              "name": "x",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1865,
                                              "src": "18765:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "18754:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1911,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "18753:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1912,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 185,
                                      "src": "18753:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1914,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18753:23:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18714:62:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "323931303336",
                                  "id": 1916,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18780:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_291036_by_1",
                                    "typeString": "int_const 291036"
                                  },
                                  "value": "291036"
                                },
                                "src": "18714:72:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1918,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "18713:74:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18701:86:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1920,
                        "nodeType": "ExpressionStatement",
                        "src": "18701:86:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1937,
                      "name": "testx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 335,
                      "src": "18861:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1938,
                      "name": "totalOwed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1889,
                      "src": "18869:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18861:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1940,
                  "nodeType": "ExpressionStatement",
                  "src": "18861:17:0"
                }
              ]
            },
            "functionSelector": "61805cc3",
            "id": 1942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test",
            "nameLocation": "18466:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1857,
                  "mutability": "mutable",
                  "name": "_testx",
                  "nameLocation": "18480:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1942,
                  "src": "18472:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18472:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "_testthisblk",
                  "nameLocation": "18496:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1942,
                  "src": "18488:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18488:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1861,
                  "mutability": "mutable",
                  "name": "_testlastblk",
                  "nameLocation": "18518:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1942,
                  "src": "18510:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18510:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18470:62:0"
            },
            "returnParameters": {
              "id": 1863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18540:0:0"
            },
            "scope": 2539,
            "src": "18457:426:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2063,
              "nodeType": "Block",
              "src": "18928:1272:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1945,
                        "name": "tokensMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "19201:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 1946,
                        "name": "maxSupplyForEra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "19216:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19201:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1948,
                        "name": "rewardEra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "19235:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "3339",
                        "id": 1949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19247:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_39_by_1",
                          "typeString": "int_const 39"
                        },
                        "value": "39"
                      },
                      "src": "19235:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "19201:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1968,
                  "nodeType": "IfStatement",
                  "src": "19197:144:0",
                  "trueBody": {
                    "id": 1967,
                    "nodeType": "Block",
                    "src": "19253:88:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1952,
                            "name": "rewardEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "19258:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1953,
                              "name": "rewardEra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 420,
                              "src": "19270:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19282:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "19270:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19258:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1957,
                        "nodeType": "ExpressionStatement",
                        "src": "19258:25:0"
                      },
                      {
                        "expression": {
                          "id": 1965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1958,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "19288:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 1961,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19321:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "id": 1962,
                                  "name": "rewardEra",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 420,
                                  "src": "19326:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19321:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 1959,
                                "name": "miningTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 415,
                                "src": "19303:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mult",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 164,
                              "src": "19303:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19303:33:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19288:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1966,
                        "nodeType": "ExpressionStatement",
                        "src": "19288:48:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1969,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 394,
                      "src": "19500:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 1972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19528:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 1970,
                          "name": "epochCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 394,
                          "src": "19513:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "19513:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19513:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19500:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1975,
                  "nodeType": "ExpressionStatement",
                  "src": "19500:30:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "id": 1976,
                            "name": "epochCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "19609:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1977,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "19608:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1978,
                              "name": "_BLOCKS_PER_READJUSTMENT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "19624:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "34",
                              "id": 1979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19651:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "19624:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1981,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "19623:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19608:45:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "19657:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "19608:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2053,
                  "nodeType": "IfStatement",
                  "src": "19605:542:0",
                  "trueBody": {
                    "id": 2052,
                    "nodeType": "Block",
                    "src": "19662:485:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1985,
                            "name": "ARewardSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "19667:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19667:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1987,
                        "nodeType": "ExpressionStatement",
                        "src": "19667:15:0"
                      },
                      {
                        "expression": {
                          "id": 2000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1988,
                            "name": "maxSupplyForEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 434,
                            "src": "19687:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1989,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "19705:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1997,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 1992,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "19738:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1995,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1993,
                                          "name": "rewardEra",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 420,
                                          "src": "19742:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 1994,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "19754:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "19742:13:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1996,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "19741:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "19738:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1990,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 387,
                                  "src": "19720:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1991,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 185,
                                "src": "19720:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "19720:37:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "19705:52:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19687:70:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2001,
                        "nodeType": "ExpressionStatement",
                        "src": "19687:70:0"
                      },
                      {
                        "condition": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2004,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2002,
                                  "name": "epochCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 394,
                                  "src": "19767:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "id": 2003,
                                  "name": "_BLOCKS_PER_READJUSTMENT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 397,
                                  "src": "19780:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19767:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19807:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "19767:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 2007,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "19766:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2051,
                        "nodeType": "IfStatement",
                        "src": "19763:380:0",
                        "trueBody": {
                          "id": 2050,
                          "nodeType": "Block",
                          "src": "19814:329:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2018,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 2014,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "19867:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                                  "typeString": "contract ForgeMining"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                                  "typeString": "contract ForgeMining"
                                                }
                                              ],
                                              "id": 2013,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "19859:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 2012,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "19859:7:0",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 2015,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19859:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 2009,
                                                "name": "AddressZeroXBTC",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 349,
                                                "src": "19832:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 2008,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 310,
                                              "src": "19825:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 2010,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "19825:23:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$310",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 2011,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 309,
                                          "src": "19825:33:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 2016,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19825:48:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 2017,
                                        "name": "Token2Per",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 466,
                                        "src": "19876:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "19825:60:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 2019,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "19823:63:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "3230303030",
                                  "id": 2020,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "19890:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_20000_by_1",
                                    "typeString": "int_const 20000"
                                  },
                                  "value": "20000"
                                },
                                "src": "19823:72:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 2045,
                                "nodeType": "Block",
                                "src": "20068:43:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 2043,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 2038,
                                        "name": "Token2Per",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 466,
                                        "src": "20075:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "hexValue": "33",
                                            "id": 2041,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "20102:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2039,
                                            "name": "Token2Per",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 466,
                                            "src": "20087:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2040,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mult",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 164,
                                          "src": "20087:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 2042,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "20087:17:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "20075:29:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2044,
                                    "nodeType": "ExpressionStatement",
                                    "src": "20075:29:0"
                                  }
                                ]
                              },
                              "id": 2046,
                              "nodeType": "IfStatement",
                              "src": "19820:291:0",
                              "trueBody": {
                                "id": 2037,
                                "nodeType": "Block",
                                "src": "19969:95:0",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 2027,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "32",
                                            "id": 2024,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "19993:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            }
                                          ],
                                          "expression": {
                                            "id": 2022,
                                            "name": "Token2Per",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 466,
                                            "src": "19979:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2023,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "div",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 185,
                                          "src": "19979:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 2025,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "19979:16:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 2026,
                                        "name": "Token2Min",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 469,
                                        "src": "19998:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "19979:28:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 2036,
                                    "nodeType": "IfStatement",
                                    "src": "19976:82:0",
                                    "trueBody": {
                                      "id": 2035,
                                      "nodeType": "Block",
                                      "src": "20014:44:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 2033,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 2028,
                                              "name": "Token2Per",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 466,
                                              "src": "20022:9:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "hexValue": "32",
                                                  "id": 2031,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "20048:1:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_2_by_1",
                                                    "typeString": "int_const 2"
                                                  },
                                                  "value": "2"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_2_by_1",
                                                    "typeString": "int_const 2"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 2029,
                                                  "name": "Token2Per",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 466,
                                                  "src": "20034:9:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 2030,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 185,
                                                "src": "20034:13:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 2032,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "20034:16:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "20022:28:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 2034,
                                          "nodeType": "ExpressionStatement",
                                          "src": "20022:28:0"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 2047,
                                  "name": "_reAdjustDifficulty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2194,
                                  "src": "20116:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 2048,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20116:21:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2049,
                              "nodeType": "ExpressionStatement",
                              "src": "20116:21:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2054,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "20151:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2056,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "20179:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "20179:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 2058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20194:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "20179:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2055,
                        "name": "blockhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -5,
                        "src": "20169:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256) view returns (bytes32)"
                        }
                      },
                      "id": 2060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20169:27:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "20151:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2062,
                  "nodeType": "ExpressionStatement",
                  "src": "20151:45:0"
                }
              ]
            },
            "id": 2064,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_startNewMiningEpoch",
            "nameLocation": "18896:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18916:2:0"
            },
            "returnParameters": {
              "id": 1944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18928:0:0"
            },
            "scope": 2539,
            "src": "18887:1313:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2193,
              "nodeType": "Block",
              "src": "20244:1360:0",
              "statements": [
                {
                  "assignments": [
                    2068
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2068,
                      "mutability": "mutable",
                      "name": "blktimestamp",
                      "nameLocation": "20256:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 2193,
                      "src": "20248:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2067,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20248:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2071,
                  "initialValue": {
                    "expression": {
                      "id": 2069,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "20271:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 2070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "20271:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20248:38:0"
                },
                {
                  "assignments": [
                    2073
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2073,
                      "mutability": "mutable",
                      "name": "ethBlocksSinceLastDifficultyPeriod2",
                      "nameLocation": "20295:35:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 2193,
                      "src": "20290:40:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2072,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20290:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2077,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2074,
                      "name": "blktimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2068,
                      "src": "20333:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 2075,
                      "name": "latestDifficultyPeriodStarted2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "20348:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20333:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20290:88:0"
                },
                {
                  "assignments": [
                    2079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2079,
                      "mutability": "mutable",
                      "name": "adjusDiffTargetTime",
                      "nameLocation": "20388:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 2193,
                      "src": "20383:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2078,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "20383:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2083,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2080,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 333,
                      "src": "20410:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 2081,
                      "name": "_BLOCKS_PER_READJUSTMENT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 397,
                      "src": "20424:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20410:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20383:65:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2084,
                      "name": "ethBlocksSinceLastDifficultyPeriod2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2073,
                      "src": "20551:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2085,
                      "name": "adjusDiffTargetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2079,
                      "src": "20589:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20551:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2164,
                    "nodeType": "Block",
                    "src": "20946:365:0",
                    "statements": [
                      {
                        "assignments": [
                          2127
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2127,
                            "mutability": "mutable",
                            "name": "shortage_block_pct",
                            "nameLocation": "20956:18:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2164,
                            "src": "20951:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2126,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20951:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2136,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2134,
                              "name": "adjusDiffTargetTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2079,
                              "src": "21030:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "313030",
                                      "id": 2130,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "21019:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2128,
                                      "name": "ethBlocksSinceLastDifficultyPeriod2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2073,
                                      "src": "20978:35:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2129,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mult",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 164,
                                    "src": "20978:40:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20978:45:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2132,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "20977:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 185,
                            "src": "20977:51:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20977:74:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20951:100:0"
                      },
                      {
                        "expression": {
                          "id": 2139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2137,
                            "name": "give",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "21056:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 2138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "21063:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "21056:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2140,
                        "nodeType": "ExpressionStatement",
                        "src": "21056:8:0"
                      },
                      {
                        "assignments": [
                          2142
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2142,
                            "mutability": "mutable",
                            "name": "shortage_block_pct_extra",
                            "nameLocation": "21074:24:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2164,
                            "src": "21069:29:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2141,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "21069:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2150,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 2148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21143:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313030",
                                  "id": 2145,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "21124:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "id": 2143,
                                  "name": "shortage_block_pct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2127,
                                  "src": "21101:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 130,
                                "src": "21101:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21101:27:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "limitLessThan",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 242,
                            "src": "21101:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21101:47:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21069:79:0"
                      },
                      {
                        "expression": {
                          "id": 2162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2151,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "21201:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2159,
                                    "name": "shortage_block_pct_extra",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2142,
                                    "src": "21261:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "31303030",
                                        "id": 2156,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "21250:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000_by_1",
                                          "typeString": "int_const 1000"
                                        },
                                        "value": "1000"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1000_by_1",
                                          "typeString": "int_const 1000"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2154,
                                        "name": "miningTarget",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 415,
                                        "src": "21233:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2155,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 185,
                                      "src": "21233:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2157,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "21233:22:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2158,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mult",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 164,
                                  "src": "21233:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21233:53:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2152,
                                "name": "miningTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 415,
                                "src": "21216:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 109,
                              "src": "21216:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21216:71:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21201:86:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2163,
                        "nodeType": "ExpressionStatement",
                        "src": "21201:86:0"
                      }
                    ]
                  },
                  "id": 2165,
                  "nodeType": "IfStatement",
                  "src": "20547:764:0",
                  "trueBody": {
                    "id": 2125,
                    "nodeType": "Block",
                    "src": "20613:329:0",
                    "statements": [
                      {
                        "assignments": [
                          2088
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2088,
                            "mutability": "mutable",
                            "name": "excess_block_pct",
                            "nameLocation": "20623:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2125,
                            "src": "20618:21:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2087,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20618:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2097,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2095,
                              "name": "ethBlocksSinceLastDifficultyPeriod2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2073,
                              "src": "20679:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "313030",
                                      "id": 2091,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "20668:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "id": 2089,
                                      "name": "adjusDiffTargetTime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2079,
                                      "src": "20643:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2090,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mult",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 164,
                                    "src": "20643:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "20643:29:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2093,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "20642:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 185,
                            "src": "20642:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20642:74:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20618:98:0"
                      },
                      {
                        "expression": {
                          "id": 2100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2098,
                            "name": "give",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 487,
                            "src": "20721:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 2099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20728:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "20721:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2101,
                        "nodeType": "ExpressionStatement",
                        "src": "20721:8:0"
                      },
                      {
                        "assignments": [
                          2103
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2103,
                            "mutability": "mutable",
                            "name": "excess_block_pct_extra",
                            "nameLocation": "20739:22:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 2125,
                            "src": "20734:27:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2102,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "20734:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2111,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 2109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20804:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313030",
                                  "id": 2106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "20785:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "id": 2104,
                                  "name": "excess_block_pct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2088,
                                  "src": "20764:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 130,
                                "src": "20764:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20764:25:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2108,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "limitLessThan",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 242,
                            "src": "20764:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "20764:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "20734:75:0"
                      },
                      {
                        "expression": {
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2112,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "20835:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 2120,
                                    "name": "excess_block_pct_extra",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2103,
                                    "src": "20895:22:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "32303030",
                                        "id": 2117,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "20884:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2000_by_1",
                                          "typeString": "int_const 2000"
                                        },
                                        "value": "2000"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_2000_by_1",
                                          "typeString": "int_const 2000"
                                        }
                                      ],
                                      "expression": {
                                        "id": 2115,
                                        "name": "miningTarget",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 415,
                                        "src": "20867:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 2116,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 185,
                                      "src": "20867:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 2118,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "20867:22:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 2119,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mult",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 164,
                                  "src": "20867:27:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 2121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20867:51:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2113,
                                "name": "miningTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 415,
                                "src": "20850:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 130,
                              "src": "20850:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20850:69:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "20835:84:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2124,
                        "nodeType": "ExpressionStatement",
                        "src": "20835:84:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2166,
                      "name": "latestDifficultyPeriodStarted2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 391,
                      "src": "21315:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2167,
                      "name": "blktimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2068,
                      "src": "21348:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21315:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2169,
                  "nodeType": "ExpressionStatement",
                  "src": "21315:45:0"
                },
                {
                  "expression": {
                    "id": 2173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2170,
                      "name": "latestDifficultyPeriodStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 507,
                      "src": "21364:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2171,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "21396:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 2172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "21396:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21364:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2174,
                  "nodeType": "ExpressionStatement",
                  "src": "21364:44:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2175,
                      "name": "miningTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 415,
                      "src": "21415:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2176,
                      "name": "_MINIMUM_TARGET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "21430:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21415:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2183,
                  "nodeType": "IfStatement",
                  "src": "21412:94:0",
                  "trueBody": {
                    "id": 2182,
                    "nodeType": "Block",
                    "src": "21466:40:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 2180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2178,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "21471:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2179,
                            "name": "_MINIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "21486:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21471:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2181,
                        "nodeType": "ExpressionStatement",
                        "src": "21471:30:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2184,
                      "name": "miningTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 415,
                      "src": "21512:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 2185,
                      "name": "_MAXIMUM_TARGET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "21527:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21512:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2192,
                  "nodeType": "IfStatement",
                  "src": "21509:89:0",
                  "trueBody": {
                    "id": 2191,
                    "nodeType": "Block",
                    "src": "21558:40:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 2189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2187,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 415,
                            "src": "21563:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2188,
                            "name": "_MAXIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 407,
                            "src": "21578:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21563:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2190,
                        "nodeType": "ExpressionStatement",
                        "src": "21563:30:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 2194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_reAdjustDifficulty",
            "nameLocation": "20213:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20232:2:0"
            },
            "returnParameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20244:0:0"
            },
            "scope": 2539,
            "src": "20204:1400:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2237,
              "nodeType": "Block",
              "src": "21939:181:0",
              "statements": [
                {
                  "assignments": [
                    2208
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2208,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "21951:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 2237,
                      "src": "21943:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2207,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "21943:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2221,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2214,
                                "name": "challenge_number",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2200,
                                "src": "21995:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 2215,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "22012:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2216,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "22012:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2217,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2196,
                                "src": "22023:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 2212,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "21978:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "21978:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 2218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "21978:51:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2211,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "21968:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 2219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21968:62:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "21960:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 2209,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "21960:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21960:71:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21943:88:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 2224,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2208,
                          "src": "22046:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 2223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "22038:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 2222,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22038:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22038:15:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 2226,
                      "name": "testTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2202,
                      "src": "22056:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22038:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2231,
                  "nodeType": "IfStatement",
                  "src": "22035:41:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2228,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "22068:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 2229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "22068:8:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 2230,
                    "nodeType": "ExpressionStatement",
                    "src": "22068:8:0"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 2234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2232,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2208,
                          "src": "22089:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2233,
                          "name": "challenge_digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2198,
                          "src": "22099:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "22089:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2235,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "22088:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2206,
                  "id": 2236,
                  "nodeType": "Return",
                  "src": "22081:35:0"
                }
              ]
            },
            "functionSelector": "81269a56",
            "id": 2238,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkMintSolution",
            "nameLocation": "21802:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2196,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "21828:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2238,
                  "src": "21820:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21820:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2198,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "21843:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2238,
                  "src": "21835:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2197,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21835:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2200,
                  "mutability": "mutable",
                  "name": "challenge_number",
                  "nameLocation": "21869:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2238,
                  "src": "21861:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2199,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "21861:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2202,
                  "mutability": "mutable",
                  "name": "testTarget",
                  "nameLocation": "21892:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2238,
                  "src": "21887:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2201,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21887:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21819:84:0"
            },
            "returnParameters": {
              "id": 2206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2205,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "21930:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2238,
                  "src": "21925:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2204,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21925:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21924:14:0"
            },
            "scope": 2539,
            "src": "21793:327:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2245,
              "nodeType": "Block",
              "src": "22266:32:0",
              "statements": [
                {
                  "expression": {
                    "id": 2243,
                    "name": "challengeNumber",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 417,
                    "src": "22278:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2242,
                  "id": 2244,
                  "nodeType": "Return",
                  "src": "22271:22:0"
                }
              ]
            },
            "functionSelector": "4ef37628",
            "id": 2246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChallengeNumber",
            "nameLocation": "22215:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22233:2:0"
            },
            "returnParameters": {
              "id": 2242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2241,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2246,
                  "src": "22257:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2240,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "22257:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22256:9:0"
            },
            "scope": 2539,
            "src": "22206:92:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2256,
              "nodeType": "Block",
              "src": "22439:49:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2253,
                        "name": "miningTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "22471:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2251,
                        "name": "_MAXIMUM_TARGET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "22451:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 185,
                      "src": "22451:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22451:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2250,
                  "id": 2255,
                  "nodeType": "Return",
                  "src": "22444:40:0"
                }
              ]
            },
            "functionSelector": "17da485f",
            "id": 2257,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningDifficulty",
            "nameLocation": "22390:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22409:2:0"
            },
            "returnParameters": {
              "id": 2250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2257,
                  "src": "22433:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2248,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22433:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22432:6:0"
            },
            "scope": 2539,
            "src": "22381:107:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2264,
              "nodeType": "Block",
              "src": "22546:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 2262,
                    "name": "miningTarget",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 415,
                    "src": "22558:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2261,
                  "id": 2263,
                  "nodeType": "Return",
                  "src": "22551:19:0"
                }
              ]
            },
            "functionSelector": "32e99708",
            "id": 2265,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningTarget",
            "nameLocation": "22501:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22516:2:0"
            },
            "returnParameters": {
              "id": 2261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2260,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2265,
                  "src": "22540:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2259,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22540:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22539:6:0"
            },
            "scope": 2539,
            "src": "22492:83:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2272,
              "nodeType": "Block",
              "src": "22633:29:0",
              "statements": [
                {
                  "expression": {
                    "id": 2270,
                    "name": "tokensMinted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 471,
                    "src": "22645:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2269,
                  "id": 2271,
                  "nodeType": "Return",
                  "src": "22638:19:0"
                }
              ]
            },
            "functionSelector": "c0abebe0",
            "id": 2273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningMinted",
            "nameLocation": "22588:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22603:2:0"
            },
            "returnParameters": {
              "id": 2269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2268,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2273,
                  "src": "22627:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2267,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22627:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22626:6:0"
            },
            "scope": 2539,
            "src": "22579:83:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2293,
              "nodeType": "Block",
              "src": "22821:177:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 2288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22977:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "id": 2289,
                          "name": "rewardEra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 420,
                          "src": "22980:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "22977:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313030",
                              "id": 2278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "22945:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 2279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22951:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 2282,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 496,
                                    "src": "22960:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 2281,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "22955:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2280,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "22955:4:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "22955:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "22951:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "22945:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 2286,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "22944:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 185,
                      "src": "22944:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22944:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2277,
                  "id": 2292,
                  "nodeType": "Return",
                  "src": "22937:54:0"
                }
              ]
            },
            "functionSelector": "490203a7",
            "id": 2294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningReward",
            "nameLocation": "22776:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22791:2:0"
            },
            "returnParameters": {
              "id": 2277,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2276,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2294,
                  "src": "22815:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2275,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22815:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22814:6:0"
            },
            "scope": 2539,
            "src": "22767:231:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2301,
              "nodeType": "Block",
              "src": "23049:28:0",
              "statements": [
                {
                  "expression": {
                    "id": 2299,
                    "name": "epochCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 394,
                    "src": "23061:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2298,
                  "id": 2300,
                  "nodeType": "Return",
                  "src": "23054:17:0"
                }
              ]
            },
            "functionSelector": "757991a8",
            "id": 2302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEpoch",
            "nameLocation": "23011:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23019:2:0"
            },
            "returnParameters": {
              "id": 2298,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2297,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2302,
                  "src": "23043:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2296,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "23043:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23042:6:0"
            },
            "scope": 2539,
            "src": "23002:75:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2327,
              "nodeType": "Block",
              "src": "23242:109:0",
              "statements": [
                {
                  "assignments": [
                    2314
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2314,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "23255:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 2327,
                      "src": "23247:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2313,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "23247:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2324,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2318,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "23292:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 2319,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "23309:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "23309:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2321,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2304,
                            "src": "23321:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2316,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "23275:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "23275:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23275:52:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2315,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "23265:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23265:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23247:81:0"
                },
                {
                  "expression": {
                    "id": 2325,
                    "name": "digest",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2314,
                    "src": "23340:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2312,
                  "id": 2326,
                  "nodeType": "Return",
                  "src": "23333:13:0"
                }
              ]
            },
            "functionSelector": "97566aa0",
            "id": 2328,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMintDigest",
            "nameLocation": "23120:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2304,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "23142:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2328,
                  "src": "23134:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2303,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23134:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2306,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "23157:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2328,
                  "src": "23149:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2305,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23149:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2308,
                  "mutability": "mutable",
                  "name": "challenge_number",
                  "nameLocation": "23183:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2328,
                  "src": "23175:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2307,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23175:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23133:67:0"
            },
            "returnParameters": {
              "id": 2312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2311,
                  "mutability": "mutable",
                  "name": "digesttest",
                  "nameLocation": "23230:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2328,
                  "src": "23222:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2310,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "23222:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23221:20:0"
            },
            "scope": 2539,
            "src": "23111:240:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              309
            ],
            "body": {
              "id": 2340,
              "nodeType": "Block",
              "src": "23649:37:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2336,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 475,
                      "src": "23661:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2338,
                    "indexExpression": {
                      "id": 2337,
                      "name": "tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2330,
                      "src": "23670:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23661:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2335,
                  "id": 2339,
                  "nodeType": "Return",
                  "src": "23654:27:0"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 2341,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "23575:9:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2332,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23612:8:0"
            },
            "parameters": {
              "id": 2331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2330,
                  "mutability": "mutable",
                  "name": "tokenOwner",
                  "nameLocation": "23593:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2341,
                  "src": "23585:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23585:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23584:20:0"
            },
            "returnParameters": {
              "id": 2335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2334,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "23640:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2341,
                  "src": "23635:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2333,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "23635:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23634:14:0"
            },
            "scope": 2539,
            "src": "23566:120:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              273
            ],
            "body": {
              "id": 2384,
              "nodeType": "Block",
              "src": "24104:166:0",
              "statements": [
                {
                  "expression": {
                    "id": 2362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2351,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "24109:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2354,
                      "indexExpression": {
                        "expression": {
                          "id": 2352,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24118:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "24118:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24109:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2360,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2345,
                          "src": "24157:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 2355,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "24132:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2358,
                          "indexExpression": {
                            "expression": {
                              "id": 2356,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "24141:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "24141:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24132:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 130,
                        "src": "24132:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24132:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24109:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2363,
                  "nodeType": "ExpressionStatement",
                  "src": "24109:55:0"
                },
                {
                  "expression": {
                    "id": 2373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2364,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "24168:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2366,
                      "indexExpression": {
                        "id": 2365,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2343,
                        "src": "24177:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24168:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2371,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2345,
                          "src": "24200:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 2367,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "24183:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2369,
                          "indexExpression": {
                            "id": 2368,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2343,
                            "src": "24192:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "24183:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "24183:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24183:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24168:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2374,
                  "nodeType": "ExpressionStatement",
                  "src": "24168:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2376,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24226:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "24226:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2378,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2343,
                        "src": "24238:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2379,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2345,
                        "src": "24242:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2375,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "24217:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24217:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2381,
                  "nodeType": "EmitStatement",
                  "src": "24212:37:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "24261:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2350,
                  "id": 2383,
                  "nodeType": "Return",
                  "src": "24254:11:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 2385,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "24031:8:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2347,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24072:8:0"
            },
            "parameters": {
              "id": 2346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2343,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "24048:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2385,
                  "src": "24040:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24040:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2345,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "24057:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2385,
                  "src": "24052:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2344,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24052:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24039:25:0"
            },
            "returnParameters": {
              "id": 2350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2349,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "24095:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2385,
                  "src": "24090:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2348,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24090:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24089:14:0"
            },
            "scope": 2539,
            "src": "24022:248:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              302
            ],
            "body": {
              "id": 2413,
              "nodeType": "Block",
              "src": "24851:110:0",
              "statements": [
                {
                  "expression": {
                    "id": 2402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2395,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 481,
                          "src": "24856:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2399,
                        "indexExpression": {
                          "expression": {
                            "id": 2396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "24864:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "24864:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "24856:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2400,
                      "indexExpression": {
                        "id": 2398,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "24876:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "24856:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2401,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2389,
                      "src": "24887:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24856:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2403,
                  "nodeType": "ExpressionStatement",
                  "src": "24856:37:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2405,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "24912:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "24912:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2407,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "24924:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2408,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2389,
                        "src": "24933:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2404,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "24903:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24903:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2410,
                  "nodeType": "EmitStatement",
                  "src": "24898:42:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "24952:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2394,
                  "id": 2412,
                  "nodeType": "Return",
                  "src": "24945:11:0"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 2414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "24774:7:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2391,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24819:8:0"
            },
            "parameters": {
              "id": 2390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2387,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "24790:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2414,
                  "src": "24782:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24782:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2389,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "24804:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2414,
                  "src": "24799:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2388,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "24799:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24781:30:0"
            },
            "returnParameters": {
              "id": 2394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2393,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "24842:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2414,
                  "src": "24837:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2392,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24837:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24836:14:0"
            },
            "scope": 2539,
            "src": "24765:196:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              284
            ],
            "body": {
              "id": 2473,
              "nodeType": "Block",
              "src": "25581:217:0",
              "statements": [
                {
                  "expression": {
                    "id": 2435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2426,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "25586:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2428,
                      "indexExpression": {
                        "id": 2427,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2416,
                        "src": "25595:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "25586:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2433,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2420,
                          "src": "25622:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 2429,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "25603:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2431,
                          "indexExpression": {
                            "id": 2430,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2416,
                            "src": "25612:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25603:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 130,
                        "src": "25603:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25603:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25586:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2436,
                  "nodeType": "ExpressionStatement",
                  "src": "25586:43:0"
                },
                {
                  "expression": {
                    "id": 2452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2437,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 481,
                          "src": "25633:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2441,
                        "indexExpression": {
                          "id": 2438,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2416,
                          "src": "25641:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "25633:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2442,
                      "indexExpression": {
                        "expression": {
                          "id": 2439,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "25647:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "25647:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "25633:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2450,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2420,
                          "src": "25691:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 2443,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 481,
                              "src": "25661:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 2445,
                            "indexExpression": {
                              "id": 2444,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2416,
                              "src": "25669:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "25661:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2448,
                          "indexExpression": {
                            "expression": {
                              "id": 2446,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "25675:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "25675:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25661:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 130,
                        "src": "25661:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25661:37:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25633:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2453,
                  "nodeType": "ExpressionStatement",
                  "src": "25633:65:0"
                },
                {
                  "expression": {
                    "id": 2463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2454,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 475,
                        "src": "25702:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2456,
                      "indexExpression": {
                        "id": 2455,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2418,
                        "src": "25711:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "25702:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2461,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2420,
                          "src": "25734:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 2457,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 475,
                            "src": "25717:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2459,
                          "indexExpression": {
                            "id": 2458,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2418,
                            "src": "25726:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "25717:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 109,
                        "src": "25717:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25717:24:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25702:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2464,
                  "nodeType": "ExpressionStatement",
                  "src": "25702:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2466,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2416,
                        "src": "25760:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2467,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2418,
                        "src": "25766:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2468,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2420,
                        "src": "25770:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2465,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "25751:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25751:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2470,
                  "nodeType": "EmitStatement",
                  "src": "25746:31:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "25789:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2425,
                  "id": 2472,
                  "nodeType": "Return",
                  "src": "25782:11:0"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 2474,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "25490:12:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2422,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25549:8:0"
            },
            "parameters": {
              "id": 2421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2416,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "25511:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2474,
                  "src": "25503:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25503:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2418,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "25525:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2474,
                  "src": "25517:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25517:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2420,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "25534:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2474,
                  "src": "25529:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2419,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "25529:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25502:39:0"
            },
            "returnParameters": {
              "id": 2425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2424,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "25572:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2474,
                  "src": "25567:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2423,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25567:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25566:14:0"
            },
            "scope": 2539,
            "src": "25481:317:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              293
            ],
            "body": {
              "id": 2490,
              "nodeType": "Block",
              "src": "26175:45:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2484,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 481,
                        "src": "26187:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2486,
                      "indexExpression": {
                        "id": 2485,
                        "name": "tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2476,
                        "src": "26195:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "26187:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2488,
                    "indexExpression": {
                      "id": 2487,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2478,
                      "src": "26207:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "26187:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2483,
                  "id": 2489,
                  "nodeType": "Return",
                  "src": "26180:35:0"
                }
              ]
            },
            "functionSelector": "dd62ed3e",
            "id": 2491,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "26082:9:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2480,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26136:8:0"
            },
            "parameters": {
              "id": 2479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2476,
                  "mutability": "mutable",
                  "name": "tokenOwner",
                  "nameLocation": "26100:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2491,
                  "src": "26092:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26092:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2478,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "26120:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2491,
                  "src": "26112:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26112:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26091:37:0"
            },
            "returnParameters": {
              "id": 2483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2482,
                  "mutability": "mutable",
                  "name": "remaining",
                  "nameLocation": "26164:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2491,
                  "src": "26159:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2481,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "26159:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26158:16:0"
            },
            "scope": 2539,
            "src": "26073:147:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              321
            ],
            "body": {
              "id": 2523,
              "nodeType": "Block",
              "src": "26677:90:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2504,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2497,
                          "src": "26690:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2507,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "26707:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                "typeString": "contract ForgeMining"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                "typeString": "contract ForgeMining"
                              }
                            ],
                            "id": 2506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "26699:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2505,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "26699:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26699:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26690:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26682:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26682:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2511,
                  "nodeType": "ExpressionStatement",
                  "src": "26682:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2519,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2493,
                        "src": "26748:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2520,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2495,
                        "src": "26754:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2515,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "26732:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                  "typeString": "contract ForgeMining"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForgeMining_$2539",
                                  "typeString": "contract ForgeMining"
                                }
                              ],
                              "id": 2514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "26724:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2513,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "26724:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26724:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2512,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "26717:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$310_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26717:21:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$310",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 273,
                      "src": "26717:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26717:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2522,
                  "nodeType": "ExpressionStatement",
                  "src": "26717:44:0"
                }
              ]
            },
            "functionSelector": "8f4ffcb1",
            "id": 2524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nameLocation": "26582:15:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2501,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26669:8:0"
            },
            "parameters": {
              "id": 2500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2493,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "26606:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "26598:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26598:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2495,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "26620:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "26612:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26612:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2497,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "26636:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "26628:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2496,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26628:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2499,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "26656:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 2524,
                  "src": "26643:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2498,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "26643:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26597:64:0"
            },
            "returnParameters": {
              "id": 2502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26677:0:0"
            },
            "scope": 2539,
            "src": "26573:194:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2530,
              "nodeType": "Block",
              "src": "26829:17:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2527,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "26834:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 2528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26834:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2529,
                  "nodeType": "ExpressionStatement",
                  "src": "26834:8:0"
                }
              ]
            },
            "id": 2531,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26809:2:0"
            },
            "returnParameters": {
              "id": 2526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26829:0:0"
            },
            "scope": 2539,
            "src": "26802:44:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2537,
              "nodeType": "Block",
              "src": "26878:17:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2534,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "26883:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 2535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26883:8:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2536,
                  "nodeType": "ExpressionStatement",
                  "src": "26883:8:0"
                }
              ]
            },
            "id": 2538,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26858:2:0"
            },
            "returnParameters": {
              "id": 2533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26878:0:0"
            },
            "scope": 2539,
            "src": "26850:45:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2540,
        "src": "5860:21039:0",
        "usedErrors": []
      }
    ],
    "src": "2843:24057:0"
  },
  "bytecode": "60806040526a22bdd89dce55b0116400006009556a115eec47f6cf7e35000000600a5542600b556000600c55610100600d5562010000600e55600160ea1b600f556200006265048c27395000600f54620001d560201b620024a81790919060201c565b6010556000601255620000a360125460016200007f9190620002e8565b6200008c90600262000400565b600a54620001d560201b620024a81790919060201c565b600a54620000b291906200040e565b601355620000f96012546002620000ca919062000400565b620000d86012600a62000400565b620000e590606462000428565b620001d560201b620024a81790919060201c565b6014556000601581905542601655670de0b6b3a76400006017556305f5e100601855620f42406019556058601a55601e556001601f5560408051808201909152600580825264466f72676560d81b60209283019081526200015b92916200022c565b50600060215542602255436023556024805460ff191690553480156200018057600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c910160405180910390a1620004aa565b600081620002175760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b604482015260640160405180910390fd5b6200022382846200044a565b90505b92915050565b8280546200023a906200046d565b90600052602060002090601f0160209004810192826200025e5760008555620002a9565b82601f106200027957805160ff1916838001178555620002a9565b82800160010185558215620002a9579182015b82811115620002a95782518255916020019190600101906200028c565b50620002b7929150620002bb565b5090565b5b80821115620002b75760008155600101620002bc565b634e487b7160e01b600052601160045260246000fd5b60008219821115620002fe57620002fe620002d2565b500190565b600181815b8085111562000344578160001904821115620003285762000328620002d2565b808516156200033657918102915b93841c939080029062000308565b509250929050565b6000826200035d5750600162000226565b816200036c5750600062000226565b81600181146200038557600281146200039057620003b0565b600191505062000226565b60ff841115620003a457620003a4620002d2565b50506001821b62000226565b5060208310610133831016604e8410600b8410161715620003d5575081810a62000226565b620003e1838362000303565b8060001904821115620003f857620003f8620002d2565b029392505050565b60006200022383836200034c565b600082821015620004235762000423620002d2565b500390565b6000816000190483118215151615620004455762000445620002d2565b500290565b6000826200046857634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806200048257607f821691505b60208210811415620004a457634e487b7160e01b600052602260045260246000fd5b50919050565b61324b80620004ba6000396000f3fe6080604052600436106103395760003560e01c8063757991a8116101ab5780639ff5ff49116100f7578063cb9ae70711610095578063dc6e9cf91161006f578063dc6e9cf9146108e4578063dd62ed3e146108fa578063ddfbd8dd14610940578063e932012b1461096057600080fd5b8063cb9ae707146108a3578063d0856d16146108b9578063d60d2ce6146108ce57600080fd5b8063b5ade81b116100d1578063b5ade81b14610838578063bb7a779d1461084e578063c0abebe01461086e578063c8a1465c1461088357600080fd5b80639ff5ff49146107e2578063a68eb88e14610802578063a9059cbb1461081857600080fd5b80638ae0368b1161016457806394b939ef1161013e57806394b939ef1461075b57806395d89b411461077b57806397566aa0146107ac5780639fa879d9146107cc57600080fd5b80638ae0368b146107055780638da5cb5b1461071b5780638f4ffcb11461073b57600080fd5b8063757991a81461067857806381269a561461068d578063829965cc146106ad57806387a2a9d6146106c35780638a5550f6146106d95780638a769d35146106ef57600080fd5b806330717bf311610285578063510de0941161022357806364e46726116101fd57806364e46726146105ec57806365104a911461060c5780636de9f32b1461062c57806370a082311461064257600080fd5b8063510de0941461058a57806359c5bf60146105aa57806361805cc3146105cc57600080fd5b806345d8a2321161025f57806345d8a23214610534578063490203a71461054a5780634ef376281461055f5780634fa972e11461057457600080fd5b806330717bf3146104e2578063313ce567146104f857806332e997081461051f57600080fd5b80631fccb33c116102f257806323b872dd116102cc57806323b872dd1461045e5780632d38bf7a1461047e5780632ea83565146104945780632f104e0c146104aa57600080fd5b80631fccb33c1461041257806320fa80d9146104325780632381a60e1461044857600080fd5b806306fdde0314610348578063095ea7b31461037357806310294317146103a357806317da485f146103c75780631801fbe5146103dc57806318160ddd146103fc57600080fd5b3661034357600080fd5b600080fd5b34801561035457600080fd5b5061035d610976565b60405161036a9190612949565b60405180910390f35b34801561037f57600080fd5b5061039361038e3660046129ba565b610a04565b604051901515815260200161036a565b3480156103af57600080fd5b506103b960165481565b60405190815260200161036a565b3480156103d357600080fd5b506103b9610a71565b3480156103e857600080fd5b506103936103f73660046129e4565b610a8f565b34801561040857600080fd5b506103b960095481565b34801561041e57600080fd5b5061039361042d366004612ad4565b610aa3565b34801561043e57600080fd5b506103b960055481565b34801561045457600080fd5b506103b960145481565b34801561046a57600080fd5b50610393610479366004612b35565b610b66565b34801561048a57600080fd5b506103b960125481565b3480156104a057600080fd5b506103b960035481565b3480156104b657600080fd5b506007546104ca906001600160a01b031681565b6040516001600160a01b03909116815260200161036a565b3480156104ee57600080fd5b506103b960045481565b34801561050457600080fd5b5061050d601281565b60405160ff909116815260200161036a565b34801561052b57600080fd5b506010546103b9565b34801561054057600080fd5b506103b9610b4081565b34801561055657600080fd5b506103b9610c52565b34801561056b57600080fd5b506011546103b9565b34801561058057600080fd5b506103b960135481565b34801561059657600080fd5b506008546104ca906001600160a01b031681565b3480156105b657600080fd5b506105ca6105c5366004612b71565b610c83565b005b3480156105d857600080fd5b506105ca6105e7366004612bb4565b610d0e565b3480156105f857600080fd5b506105ca610607366004612b71565b610de4565b34801561061857600080fd5b506103b96106273660046129e4565b610f6f565b34801561063857600080fd5b506103b9601b5481565b34801561064e57600080fd5b506103b961065d366004612be0565b6001600160a01b03166000908152601c602052604090205490565b34801561068457600080fd5b50600c546103b9565b34801561069957600080fd5b506103936106a8366004612bfb565b611060565b3480156106b957600080fd5b506103b9600c5481565b3480156106cf57600080fd5b506103b9600f5481565b3480156106e557600080fd5b506103b960215481565b3480156106fb57600080fd5b506103b960105481565b34801561071157600080fd5b506103b960115481565b34801561072757600080fd5b506000546104ca906001600160a01b031681565b34801561074757600080fd5b506105ca610756366004612c2d565b6110ab565b34801561076757600080fd5b506006546104ca906001600160a01b031681565b34801561078757600080fd5b5061035d60405180604001604052806005815260200164466f72676560d81b81525081565b3480156107b857600080fd5b506103b96107c7366004612bb4565b611138565b3480156107d857600080fd5b506103b960025481565b3480156107ee57600080fd5b506103b96107fd366004612cfe565b611173565b34801561080e57600080fd5b506103b960195481565b34801561082457600080fd5b506103936108333660046129ba565b611602565b34801561084457600080fd5b506103b9600d5481565b34801561085a57600080fd5b506103b9610869366004612d87565b611687565b34801561087a57600080fd5b50601b546103b9565b34801561088f57600080fd5b506103b961089e366004612db7565b611a06565b3480156108af57600080fd5b506103b960235481565b3480156108c557600080fd5b506105ca611e90565b3480156108da57600080fd5b506103b960015481565b3480156108f057600080fd5b506103b9600e5481565b34801561090657600080fd5b506103b9610915366004612df3565b6001600160a01b039182166000908152601d6020908152604080832093909416825291909152205490565b34801561094c57600080fd5b506103b961095b366004612e26565b6120ec565b34801561096c57600080fd5b506103b9600b5481565b6020805461098390612e52565b80601f01602080910402602001604051908101604052809291908181526020018280546109af90612e52565b80156109fc5780601f106109d1576101008083540402835291602001916109fc565b820191906000526020600020905b8154815290600101906020018083116109df57829003601f168201915b505050505081565b336000818152601d602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610a5f9086815260200190565b60405180910390a35060015b92915050565b6000610a8a601054600f546124a890919063ffffffff16565b905090565b6000610a9c8383336120ec565b5092915050565b60008083516001610ab49190612ea3565b67ffffffffffffffff811115610acc57610acc612a06565b604051908082528060200260200182016040528015610af5578160200160208202803683370190505b50905060005b8451610b08906001612ea3565b811015610b4c5783828281518110610b2257610b22612ebb565b6001600160a01b039092166020928302919091019091015280610b4481612ed1565b915050610afb565b50610b5986868684611a06565b5060019695505050505050565b6001600160a01b0383166000908152601c6020526040812054610b8990836124f6565b6001600160a01b0385166000908152601c6020908152604080832093909355601d815282822033835290522054610bc090836124f6565b6001600160a01b038086166000908152601d602090815260408083203384528252808320949094559186168152601c9091522054610bfe9083612542565b6001600160a01b038085166000818152601c602052604090819020939093559151908616906000805160206131f683398151915290610c409086815260200190565b60405180910390a35060019392505050565b6000610a8a6012546002610c669190612fd0565b610c726012600a612fd0565b610c7d906064612fdc565b906124a8565b6000546001600160a01b03163314610ccf5760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b60448201526064015b60405180910390fd5b600680546001600160a01b039485166001600160a01b031991821617909155600780549385169382169390931790925560088054919093169116179055565b6000610b40610d1d8385612ffb565b610d2990610378612fdc565b610d339190613028565b600381905590506000610378610d4a836064612fdc565b610d549190613028565b9050600061013a821015610db557620470dc610d7a610378610c7d8663026f7f3c612fdc565b610d9a620c0840610d8c60028861303c565b610c7d906303a2cdf0612fdc565b610da49190612ea3565b610dae9190612ffb565b9050610dda565b610dc9610378610c7d856305f5e100612fdc565b610dd7906314dc9380612ea3565b90505b6001555050505050565b6000546001600160a01b03163314610e2b5760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b6044820152606401610cc6565b60006021546002610e3c9190612fd0565b610e47906002612fdc565b610e5c906a115eec47f6cf7e35000000613028565b60245490915060ff1615610e7257610e7261304b565b6024805460ff1916600117905560006012819055601b55600f54610e98906175356124a8565b60105542600b55610ea7612590565b6001600160a01b0384166000818152601c60209081526040808320859055518481526000805160206131f6833981519152910160405180910390a3600680546001600160a01b038087166001600160a01b031992831617909255600780548684169083161790556008805492851692909116919091179055600c54601555336000818152601c6020526040808220670de0b6b3a76400009081905590516000805160206131f683398151915291610f619190815260200190565b60405180910390a350505050565b6000806011543385604051602001610f8993929190613061565b604051602081830303815290604052805190602001209050828114610fc05760405162461bcd60e51b8152600401610cc690613089565b6010548110610fe15760405162461bcd60e51b8152600401610cc6906130d7565b610fe9612590565b601654421161100a5760405162461bcd60e51b8152600401610cc69061311f565b42601655600c546011546040805160008152602081019390935282015233907fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d9060600160405180910390a25060009392505050565b60008083338760405160200161107893929190613061565b604051602081830303815290604052805190602001209050828160001c11156110a057600080fd5b909314949350505050565b6001600160a01b03821630146110c057600080fd5b60405163a9059cbb60e01b81526001600160a01b038516600482015260248101849052309063a9059cbb906044016020604051808303816000875af115801561110d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611131919061314e565b5050505050565b600080601154338660405160200161115293929190613061565b60408051808303601f19018152919052805160209091012095945050505050565b6000825160016111839190612ea3565b8251146111a25760405162461bcd60e51b8152600401610cc69061316b565b60005b8351811015611366576111b9816001612ea3565b6111c4906002612fd0565b600c546111d191906131c8565b156111db57611366565b306001600160a01b03168482815181106111f7576111f7612ebb565b60200260200101516001600160a01b031614158015611248575060085484516001600160a01b039091169085908390811061123457611234612ebb565b60200260200101516001600160a01b031614155b6112945760405162461bcd60e51b815260206004820152601a60248201527f4e6f2062617365207072696e74696e67206f6620746f6b656e730000000000006044820152606401610cc6565b60006112a1826001612ea3565b90505b8451811015611353578482815181106112bf576112bf612ebb565b60200260200101516001600160a01b03168582815181106112e2576112e2612ebb565b60200260200101516001600160a01b031614156113415760405162461bcd60e51b815260206004820152601b60248201527f4e6f207072696e74696e67205468652073616d6520746f6b656e7300000000006044820152606401610cc6565b8061134b81612ed1565b9150506112a4565b508061135e81612ed1565b9150506111a5565b600061138d87878660008151811061138057611380612ebb565b6020026020010151611687565b9050600081116113cc5760405162461bcd60e51b815260206004820152600a6024820152696d696e7420697373756560b01b6044820152606401610cc6565b60008060005b848110156115ac576113e5816001612ea3565b6113f0906002612fd0565b600c546113fd91906131c8565b61159a5787818151811061141357611413612ebb565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611463573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148791906131dc565b9150811561159a5761149a6003826131c8565b1580156114a657508015155b156114cb576114c4643a352944006114be8685612fdc565b90612736565b92506114e1565b6114de643a35294400610c7d8685612fdc565b92505b8781815181106114f3576114f3612ebb565b60200260200101516001600160a01b031663a9059cbb88838151811061151b5761151b612ebb565b6020026020010151856040518363ffffffff1660e01b81526004016115559291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015611574573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611598919061314e565b505b806115a481612ed1565b9150506113d2565b50600c54601154604080519283526020830191909152810185905233907fc32557acceb6aeb205c3115ac08a8dc54d82fb5ea08f2b7f1e6b794488e3851c9060600160405180910390a250979650505050505050565b336000908152601c602052604081205461161c90836124f6565b336000908152601c6020526040808220929092556001600160a01b038516815220546116489083612542565b6001600160a01b0384166000818152601c60205260409081902092909255905133906000805160206131f683398151915290610a5f9086815260200190565b6000611691612590565b60165442116116b25760405162461bcd60e51b8152600401610cc69061311f565b6000610b40601654426116c59190612ffb565b6116d190610378612fdc565b6116db9190613028565b905060006103786116ed836064612fdc565b6116f79190613028565b9050600061013a82101561173c57611719610378610c7d8563026f7f3c612fdc565b61172b620c0840610d8c60028761303c565b6117359190612ea3565b9050611761565b611750610378610c7d856305f5e100612fdc565b61175e9063d09dc300612ea3565b90505b61179961177a6305f5e10083601454610c7d9190612fdc565b6001600160a01b0387166000908152601c602052604090205490612542565b6001600160a01b0386166000908152601c60205260409020556014546117ef906117ce90630bebc20090610c7d908590612fdc565b6007546001600160a01b03166000908152601c602052604090205490612542565b6007546001600160a01b03166000908152601c602052604090205560145461182f90611826906305f5e10090610c7d908590612fdc565b601b5490612542565b601b5542601655601e54156119975760c88210156118f757600854601e546019546001600160a01b039092169163a9059cbb918891611882916305f5e100916118789088612fdc565b610c7d9190612fdc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156118cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f1919061314e565b50611997565b600854601e546019546001600160a01b039092169163a9059cbb91889161192691600a91611878906017612fdc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611971573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611995919061314e565b505b336001600160a01b03167fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d6119d86305f5e10084601454610c7d9190612fdc565b600c546011546040805193845260208401929092529082015260600160405180910390a29695505050505050565b600082516001611a169190612ea3565b825114611a355760405162461bcd60e51b8152600401610cc69061316b565b60005b8351811015611bf957611a4c816001612ea3565b611a57906002612fd0565b600c54611a6491906131c8565b15611a6e57611bf9565b306001600160a01b0316848281518110611a8a57611a8a612ebb565b60200260200101516001600160a01b031614158015611adb575060085484516001600160a01b0390911690859083908110611ac757611ac7612ebb565b60200260200101516001600160a01b031614155b611b275760405162461bcd60e51b815260206004820152601a60248201527f4e6f2062617365207072696e74696e67206f6620746f6b656e730000000000006044820152606401610cc6565b6000611b34826001612ea3565b90505b8451811015611be657848281518110611b5257611b52612ebb565b60200260200101516001600160a01b0316858281518110611b7557611b75612ebb565b60200260200101516001600160a01b03161415611bd45760405162461bcd60e51b815260206004820152601b60248201527f4e6f207072696e74696e67205468652073616d6520746f6b656e7300000000006044820152606401610cc6565b80611bde81612ed1565b915050611b37565b5080611bf181612ed1565b915050611a38565b6000611c20878786600081518110611c1357611c13612ebb565b60200260200101516120ec565b905060008111611c5f5760405162461bcd60e51b815260206004820152600a6024820152696d696e7420697373756560b01b6044820152606401610cc6565b60008060005b84811015611e3957611c78816001612ea3565b611c83906002612fd0565b600c54611c9091906131c8565b611e2757878181518110611ca657611ca6612ebb565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1a91906131dc565b91508115611d6e57611d2d6003826131c8565b158015611d3957508015155b15611d5857611d51643a352944006114be8685612fdc565b9250611d6e565b611d6b643a35294400610c7d8685612fdc565b92505b878181518110611d8057611d80612ebb565b60200260200101516001600160a01b031663a9059cbb888381518110611da857611da8612ebb565b6020026020010151856040518363ffffffff1660e01b8152600401611de29291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015611e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e25919061314e565b505b80611e3181612ed1565b915050611c65565b50600c54601154604080519283526020830191909152810185905233907fc32557acceb6aeb205c3115ac08a8dc54d82fb5ea08f2b7f1e6b794488e3851c9060600160405180910390a25090979650505050505050565b600060225442611ea09190612ffb565b90506000601554600c54611eb49190612ffb565b90506000611ec28284613028565b9050611ed66012546002610c669190612fd0565b6014556000611eed610b406114be84610378612fdc565b600481905590506000610378611f04836064612fdc565b611f0e9190613028565b9050600060c8821015611f5257611f2f610378610c7d8563026f7f3c612fdc565b611f41620c0840610d8c60028761303c565b611f4b9190612ea3565b9050611f59565b50630db585805b611f7d630bebc200601e546019548489611f739190612fdc565b6118789190612fdc565b600555600d54601954600491611f9291612fdc565b611f9d90603c612fdc565b611fa79190613028565b6008546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611fef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201391906131dc565b11156120d457600854600754601e546019546001600160a01b039384169363a9059cbb93169161204e91630bebc2009190611f73888d612fdc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015612099573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120bd919061314e565b50601f546120cc906001612fdc565b601e556120da565b6000601e555b5050600c546015555050426022555050565b600080601154338660405160200161210693929190613061565b60405160208183030381529060405280519060200120905083811461213d5760405162461bcd60e51b8152600401610cc690613089565b601054811061215e5760405162461bcd60e51b8152600401610cc6906130d7565b612166612590565b60165442116121875760405162461bcd60e51b8152600401610cc69061311f565b6000610b406016544261219a9190612ffb565b6121a690610378612fdc565b6121b09190613028565b905060006103786121c2836064612fdc565b6121cc9190613028565b9050600061013a821015612211576121ee610378610c7d8563026f7f3c612fdc565b612200620c0840610d8c60028761303c565b61220a9190612ea3565b9050612236565b612225610378610c7d856305f5e100612fdc565b612233906314dc9380612ea3565b90505b61226e61224f6305f5e10083601454610c7d9190612fdc565b6001600160a01b0388166000908152601c602052604090205490612542565b6001600160a01b0387166000908152601c60205260409020556014546122a3906117ce90630bebc20090610c7d908590612fdc565b6007546001600160a01b03166000908152601c60205260409020556014546122da90611826906305f5e10090610c7d908590612fdc565b601b5542601655601e54156124385760c882101561239857600854601e546019546001600160a01b039092169163a9059cbb918991612323916305f5e100916118789088612fdc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561236e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612392919061314e565b50612438565b600854601e546019546001600160a01b039092169163a9059cbb9189916123c791600a91611878906017612fdc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015612412573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612436919061314e565b505b336001600160a01b03167fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d6124796305f5e10084601454610c7d9190612fdc565b600c546011546040805193845260208401929092529082015260600160405180910390a2979650505050505050565b6000816124e55760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b6044820152606401610cc6565b6124ef8284613028565b9392505050565b6000818310156125385760405162461bcd60e51b815260206004820152600d60248201526c53756220756e646572666c6f7760981b6044820152606401610cc6565b6124ef8284612ffb565b60008061254f8385612ea3565b9050838110156124ef5760405162461bcd60e51b815260206004820152600c60248201526b416464206f766572666c6f7760a01b6044820152606401610cc6565b601354601b541180156125a557506027601254105b156125d9576012546125b8906001612ea3565b60128190556125d5906125cc906002612fd0565b601054906127a3565b6010555b600c546125e7906001612542565b600c55600d546125f990600490613028565b600c5461260691906131c8565b61272557612612611e90565b61263860125460016126249190612ea3565b61262f906002612fd0565b600a54906124a8565b600a546126459190612ffb565b601355600d54600c5461265891906131c8565b612725576019546008546040516370a0823160e01b8152306004820152614e2092916001600160a01b0316906370a0823190602401602060405180830381865afa1580156126aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126ce91906131dc565b6126d89190613028565b1161270b57601a546019546126ee9060026124a8565b1115612706576019546127029060026124a8565b6019555b61271d565b6019546127199060036127a3565b6019555b612725612808565b612730600143612ffb565b40601155565b6000816127735760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b6044820152606401610cc6565b600061277f8385613028565b905061278b83856131c8565b156124ef5761279b816001612ea3565b949350505050565b6000826127b257506000610a6b565b60006127be8385612fdc565b9050826127cb8583613028565b146124ef5760405162461bcd60e51b815260206004820152600d60248201526c4d756c74206f766572666c6f7760981b6044820152606401610cc6565b600b54429060009061281a9083612ffb565b90506000600d54610b4061282e9190612fdc565b9050808210156128a357600061284983610c7d8460646127a3565b6001601f55905060006128696103e86128638460646124f6565b90612931565b905061289861288f826128896107d06010546124a890919063ffffffff16565b906127a3565b601054906124f6565b601055506128fd9050565b60006128b482610c7d8560646127a3565b6002601f55905060006128ce6103e86128638460646124f6565b90506128f76128ee826128896103e86010546124a890919063ffffffff16565b60105490612542565b60105550505b600b83905543602355600e54601054101561291957600e546010555b600f54601054111561292c57600f546010555b505050565b600081831115612942575080610a6b565b5090919050565b600060208083528351808285015260005b818110156129765785810183015185820160400152820161295a565b81811115612988576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146129b557600080fd5b919050565b600080604083850312156129cd57600080fd5b6129d68361299e565b946020939093013593505050565b600080604083850312156129f757600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612a4557612a45612a06565b604052919050565b600082601f830112612a5e57600080fd5b8135602067ffffffffffffffff821115612a7a57612a7a612a06565b8160051b612a89828201612a1c565b9283528481018201928281019087851115612aa357600080fd5b83870192505b84831015612ac957612aba8361299e565b82529183019190830190612aa9565b979650505050505050565b60008060008060808587031215612aea57600080fd5b8435935060208501359250604085013567ffffffffffffffff811115612b0f57600080fd5b612b1b87828801612a4d565b925050612b2a6060860161299e565b905092959194509250565b600080600060608486031215612b4a57600080fd5b612b538461299e565b9250612b616020850161299e565b9150604084013590509250925092565b600080600060608486031215612b8657600080fd5b612b8f8461299e565b9250612b9d6020850161299e565b9150612bab6040850161299e565b90509250925092565b600080600060608486031215612bc957600080fd5b505081359360208301359350604090920135919050565b600060208284031215612bf257600080fd5b6124ef8261299e565b60008060008060808587031215612c1157600080fd5b5050823594602084013594506040840135936060013592509050565b60008060008060808587031215612c4357600080fd5b612c4c8561299e565b93506020808601359350612c626040870161299e565b9250606086013567ffffffffffffffff80821115612c7f57600080fd5b818801915088601f830112612c9357600080fd5b813581811115612ca557612ca5612a06565b612cb7601f8201601f19168501612a1c565b91508082528984828501011115612ccd57600080fd5b808484018584013760008482840101525080935050505092959194509250565b8015158114612cfb57600080fd5b50565b60008060008060808587031215612d1457600080fd5b8435612d1f81612ced565b93506020850135612d2f81612ced565b9250604085013567ffffffffffffffff80821115612d4c57600080fd5b612d5888838901612a4d565b93506060870135915080821115612d6e57600080fd5b50612d7b87828801612a4d565b91505092959194509250565b600080600060608486031215612d9c57600080fd5b8335612da781612ced565b92506020840135612b9d81612ced565b60008060008060808587031215612dcd57600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115612d4c57600080fd5b60008060408385031215612e0657600080fd5b612e0f8361299e565b9150612e1d6020840161299e565b90509250929050565b600080600060608486031215612e3b57600080fd5b8335925060208401359150612bab6040850161299e565b600181811c90821680612e6657607f821691505b60208210811415612e8757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612eb657612eb6612e8d565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612ee557612ee5612e8d565b5060010190565b600181815b80851115612f27578160001904821115612f0d57612f0d612e8d565b80851615612f1a57918102915b93841c9390800290612ef1565b509250929050565b600082612f3e57506001610a6b565b81612f4b57506000610a6b565b8160018114612f615760028114612f6b57612f87565b6001915050610a6b565b60ff841115612f7c57612f7c612e8d565b50506001821b610a6b565b5060208310610133831016604e8410600b8410161715612faa575081810a610a6b565b612fb48383612eec565b8060001904821115612fc857612fc8612e8d565b029392505050565b60006124ef8383612f2f565b6000816000190483118215151615612ff657612ff6612e8d565b500290565b60008282101561300d5761300d612e8d565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261303757613037613012565b500490565b60006124ef60ff841683612f2f565b634e487b7160e01b600052600160045260246000fd5b92835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b6020808252602e908201527f4f6c64206368616c6c656e67655f646967657374206f722077726f6e6720636860408201526d185b1b195b99d957d91a59d95cdd60921b606082015260800190565b60208082526028908201527f446967657374206d75737420626520736d616c6c6572207468616e206d696e696040820152671b99d5185c99d95d60c21b606082015260800190565b6020808252601590820152744e6f2073616d65207365636f6e6420736f6c76657360581b604082015260600190565b60006020828403121561316057600080fd5b81516124ef81612ced565b6020808252603d908201527f536f204d696e74546f2068617320746f20686176652073616d65206e756d626560408201527f72206f66206164647265737373657320617320457874726146756e6473000000606082015260800190565b6000826131d7576131d7613012565b500690565b6000602082840312156131ee57600080fd5b505191905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220adeb11185509c70de48da6f44ffcec30b2b783741f46fa800755eab4dbdb4cd664736f6c634300080b0033",
  "bytecodeSha1": "4ed067298767d91a5afb6cdad47386002bd18900",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "ForgeMining",
  "coverageMap": {
    "branches": {
      "0": {
        "ExtendedMath2.limitLessThan": {
          "201": [
            4847,
            4852,
            false
          ]
        },
        "ForgeMining.AOpenMint": {
          "166": [
            9689,
            9724,
            true
          ],
          "167": [
            9937,
            9948,
            false
          ],
          "168": [
            10422,
            10435,
            false
          ],
          "169": [
            10444,
            10455,
            false
          ]
        },
        "ForgeMining.ARewardSender": {
          "179": [
            11225,
            11236,
            false
          ],
          "180": [
            11455,
            11557,
            false
          ]
        },
        "ForgeMining._reAdjustDifficulty": {
          "198": [
            20551,
            20608,
            false
          ],
          "199": [
            21415,
            21445,
            false
          ],
          "200": [
            21512,
            21542,
            false
          ]
        },
        "ForgeMining._startNewMiningEpoch": {
          "190": [
            19201,
            19231,
            false
          ],
          "191": [
            19235,
            19249,
            false
          ],
          "192": [
            19823,
            19895,
            false
          ],
          "193": [
            19979,
            20007,
            false
          ]
        },
        "ForgeMining.checkMintSolution": {
          "155": [
            22038,
            22066,
            false
          ]
        },
        "ForgeMining.empty_mintTo": {
          "152": [
            18017,
            18043,
            true
          ],
          "153": [
            18154,
            18184,
            true
          ],
          "154": [
            18268,
            18303,
            true
          ]
        },
        "ForgeMining.mintTo": {
          "181": [
            12589,
            12615,
            true
          ],
          "182": [
            12726,
            12756,
            true
          ],
          "183": [
            12840,
            12875,
            true
          ],
          "184": [
            13088,
            13099,
            false
          ],
          "185": [
            13577,
            13590,
            false
          ],
          "186": [
            13599,
            13610,
            false
          ]
        },
        "ForgeMining.mintTokensArrayTo": {
          "170": [
            16008,
            16046,
            true
          ],
          "171": [
            16179,
            16208,
            false
          ],
          "172": [
            16238,
            16269,
            false
          ],
          "173": [
            16273,
            16306,
            true
          ],
          "174": [
            16399,
            16430,
            true
          ],
          "175": [
            16549,
            16560,
            true
          ],
          "176": [
            17013,
            17028,
            false
          ],
          "177": [
            17040,
            17050,
            false
          ],
          "178": [
            17054,
            17060,
            false
          ]
        },
        "ForgeMining.mintTokensArrayToOPENMUSTERASE": {
          "157": [
            14424,
            14462,
            true
          ],
          "158": [
            14595,
            14624,
            false
          ],
          "159": [
            14654,
            14685,
            false
          ],
          "160": [
            14689,
            14722,
            true
          ],
          "161": [
            14815,
            14846,
            true
          ],
          "162": [
            14968,
            14979,
            true
          ],
          "163": [
            15432,
            15447,
            false
          ],
          "164": [
            15459,
            15469,
            false
          ],
          "165": [
            15473,
            15479,
            false
          ]
        },
        "ForgeMining.receiveApproval": {
          "156": [
            26690,
            26712,
            true
          ]
        },
        "ForgeMining.test": {
          "151": [
            18684,
            18695,
            false
          ]
        },
        "SafeMath2.add": {
          "189": [
            3851,
            3857,
            true
          ]
        },
        "SafeMath2.div": {
          "187": [
            4361,
            4367,
            true
          ]
        },
        "SafeMath2.divRound": {
          "194": [
            4508,
            4514,
            true
          ],
          "195": [
            4571,
            4581,
            false
          ]
        },
        "SafeMath2.mult": {
          "196": [
            4131,
            4137,
            false
          ],
          "197": [
            4217,
            4227,
            true
          ]
        },
        "SafeMath2.sub": {
          "188": [
            3990,
            3996,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "ExtendedMath2.limitLessThan": {
          "149": [
            4854,
            4862
          ],
          "150": [
            4873,
            4881
          ]
        },
        "ForgeMining.<fallback>": {
          "0": [
            26883,
            26891
          ]
        },
        "ForgeMining.<receive>": {
          "1": [
            26834,
            26842
          ]
        },
        "ForgeMining.AOpenMint": {
          "73": [
            9654,
            9676
          ],
          "74": [
            9681,
            9750
          ],
          "75": [
            9954,
            10027
          ],
          "76": [
            10042,
            10093
          ],
          "77": [
            10104,
            10187
          ],
          "78": [
            10191,
            10296
          ],
          "79": [
            10300,
            10375
          ],
          "80": [
            10379,
            10414
          ],
          "81": [
            10462,
            10554
          ],
          "82": [
            10570,
            10648
          ],
          "83": [
            10662,
            10757
          ],
          "84": [
            10762,
            10778
          ]
        },
        "ForgeMining.ARewardSender": {
          "99": [
            11023,
            11085
          ],
          "100": [
            11153,
            11163
          ],
          "101": [
            11242,
            11314
          ],
          "102": [
            11331,
            11354
          ],
          "103": [
            11370,
            11448
          ],
          "104": [
            11644,
            11764
          ],
          "105": [
            11769,
            11789
          ],
          "106": [
            11806,
            11819
          ],
          "107": [
            11827,
            11849
          ],
          "108": [
            11871,
            11896
          ]
        },
        "ForgeMining._reAdjustDifficulty": {
          "141": [
            20721,
            20729
          ],
          "142": [
            20835,
            20919
          ],
          "143": [
            21056,
            21064
          ],
          "144": [
            21201,
            21287
          ],
          "145": [
            21315,
            21360
          ],
          "146": [
            21364,
            21408
          ],
          "147": [
            21471,
            21501
          ],
          "148": [
            21563,
            21593
          ]
        },
        "ForgeMining._startNewMiningEpoch": {
          "128": [
            19258,
            19283
          ],
          "129": [
            19288,
            19336
          ],
          "130": [
            19500,
            19530
          ],
          "131": [
            19667,
            19682
          ],
          "132": [
            19687,
            19757
          ],
          "133": [
            20022,
            20050
          ],
          "134": [
            20075,
            20104
          ],
          "135": [
            20116,
            20137
          ],
          "136": [
            20151,
            20196
          ]
        },
        "ForgeMining.allowance": {
          "7": [
            26180,
            26215
          ]
        },
        "ForgeMining.approve": {
          "8": [
            24856,
            24893
          ],
          "9": [
            24898,
            24940
          ],
          "10": [
            24945,
            24956
          ]
        },
        "ForgeMining.balanceOf": {
          "4": [
            23654,
            23681
          ]
        },
        "ForgeMining.checkMintSolution": {
          "52": [
            22068,
            22076
          ],
          "53": [
            22081,
            22116
          ]
        },
        "ForgeMining.empty_mintTo": {
          "45": [
            18009,
            18094
          ],
          "46": [
            18146,
            18229
          ],
          "47": [
            18233,
            18255
          ],
          "48": [
            18260,
            18329
          ],
          "49": [
            18334,
            18369
          ],
          "50": [
            18375,
            18429
          ],
          "51": [
            18434,
            18442
          ]
        },
        "ForgeMining.getChallengeNumber": {
          "3": [
            22271,
            22293
          ]
        },
        "ForgeMining.getEpoch": {
          "5": [
            23054,
            23071
          ]
        },
        "ForgeMining.getMiningDifficulty": {
          "11": [
            22444,
            22484
          ]
        },
        "ForgeMining.getMiningMinted": {
          "6": [
            22638,
            22657
          ]
        },
        "ForgeMining.getMiningReward": {
          "22": [
            22937,
            22991
          ]
        },
        "ForgeMining.getMiningTarget": {
          "2": [
            22551,
            22570
          ]
        },
        "ForgeMining.mint": {
          "12": [
            12183,
            12226
          ]
        },
        "ForgeMining.mintTo": {
          "109": [
            12581,
            12666
          ],
          "110": [
            12718,
            12801
          ],
          "111": [
            12805,
            12827
          ],
          "112": [
            12832,
            12901
          ],
          "113": [
            13105,
            13178
          ],
          "114": [
            13193,
            13243
          ],
          "115": [
            13254,
            13337
          ],
          "116": [
            13341,
            13446
          ],
          "117": [
            13455,
            13530
          ],
          "118": [
            13534,
            13569
          ],
          "119": [
            13617,
            13709
          ],
          "120": [
            13725,
            13803
          ],
          "121": [
            13817,
            13912
          ],
          "122": [
            13917,
            13933
          ]
        },
        "ForgeMining.mintTokensArrayTo": {
          "85": [
            16000,
            16111
          ],
          "86": [
            16215,
            16220
          ],
          "87": [
            16230,
            16337
          ],
          "88": [
            16391,
            16462
          ],
          "89": [
            16381,
            16384
          ],
          "90": [
            16163,
            16167
          ],
          "91": [
            16541,
            16575
          ],
          "92": [
            16945,
            17004
          ],
          "93": [
            17069,
            17130
          ],
          "94": [
            17150,
            17207
          ],
          "95": [
            17229,
            17281
          ],
          "96": [
            16642,
            16645
          ],
          "97": [
            17310,
            17369
          ],
          "98": [
            17374,
            17388
          ]
        },
        "ForgeMining.mintTokensArrayToOPENMUSTERASE": {
          "56": [
            14416,
            14527
          ],
          "57": [
            14631,
            14636
          ],
          "58": [
            14646,
            14753
          ],
          "59": [
            14807,
            14878
          ],
          "60": [
            14797,
            14800
          ],
          "61": [
            14579,
            14583
          ],
          "62": [
            14960,
            14994
          ],
          "63": [
            15364,
            15423
          ],
          "64": [
            15488,
            15549
          ],
          "65": [
            15569,
            15626
          ],
          "66": [
            15645,
            15697
          ],
          "67": [
            15061,
            15064
          ],
          "68": [
            15738,
            15797
          ],
          "69": [
            15802,
            15818
          ]
        },
        "ForgeMining.mintTokensSameAddress": {
          "13": [
            17669,
            17683
          ],
          "14": [
            17657,
            17660
          ],
          "15": [
            17694,
            17752
          ],
          "16": [
            17757,
            17768
          ]
        },
        "ForgeMining.receiveApproval": {
          "54": [
            26682,
            26713
          ],
          "55": [
            26717,
            26761
          ]
        },
        "ForgeMining.test": {
          "26": [
            18611,
            18622
          ],
          "27": [
            18701,
            18787
          ],
          "28": [
            18802,
            18852
          ],
          "29": [
            18861,
            18878
          ]
        },
        "ForgeMining.transfer": {
          "70": [
            24109,
            24164
          ],
          "71": [
            24168,
            24207
          ],
          "72": [
            24212,
            24249
          ]
        },
        "ForgeMining.transferFrom": {
          "17": [
            25586,
            25629
          ],
          "18": [
            25633,
            25698
          ],
          "19": [
            25702,
            25741
          ],
          "20": [
            25746,
            25777
          ],
          "21": [
            25782,
            25793
          ]
        },
        "ForgeMining.zinit": {
          "30": [
            8522,
            8537
          ],
          "31": [
            8547,
            8560
          ],
          "32": [
            8569,
            8582
          ],
          "33": [
            8585,
            8601
          ],
          "34": [
            8608,
            8649
          ],
          "35": [
            8702,
            8750
          ],
          "36": [
            8757,
            8779
          ],
          "37": [
            8835,
            8864
          ],
          "38": [
            8876,
            8921
          ],
          "39": [
            8930,
            8962
          ],
          "40": [
            8972,
            9007
          ],
          "41": [
            9017,
            9051
          ],
          "42": [
            9063,
            9085
          ],
          "43": [
            9134,
            9176
          ],
          "44": [
            9188,
            9246
          ]
        },
        "ForgeMining.zinit2": {
          "23": [
            9424,
            9456
          ],
          "24": [
            9461,
            9496
          ],
          "25": [
            9501,
            9535
          ]
        },
        "SafeMath2.add": {
          "127": [
            3843,
            3874
          ]
        },
        "SafeMath2.div": {
          "123": [
            4353,
            4383
          ],
          "124": [
            4393,
            4405
          ]
        },
        "SafeMath2.divRound": {
          "137": [
            4500,
            4530
          ],
          "138": [
            4597,
            4606
          ]
        },
        "SafeMath2.mult": {
          "139": [
            4153,
            4161
          ],
          "140": [
            4209,
            4245
          ]
        },
        "SafeMath2.sub": {
          "125": [
            3982,
            4014
          ],
          "126": [
            4024,
            4036
          ]
        }
      }
    }
  },
  "dependencies": [
    "ApproveAndCallFallBack",
    "ExtendedMath2",
    "IERC20",
    "Ownable",
    "SafeMath2"
  ],
  "deployedBytecode": "6080604052600436106103395760003560e01c8063757991a8116101ab5780639ff5ff49116100f7578063cb9ae70711610095578063dc6e9cf91161006f578063dc6e9cf9146108e4578063dd62ed3e146108fa578063ddfbd8dd14610940578063e932012b1461096057600080fd5b8063cb9ae707146108a3578063d0856d16146108b9578063d60d2ce6146108ce57600080fd5b8063b5ade81b116100d1578063b5ade81b14610838578063bb7a779d1461084e578063c0abebe01461086e578063c8a1465c1461088357600080fd5b80639ff5ff49146107e2578063a68eb88e14610802578063a9059cbb1461081857600080fd5b80638ae0368b1161016457806394b939ef1161013e57806394b939ef1461075b57806395d89b411461077b57806397566aa0146107ac5780639fa879d9146107cc57600080fd5b80638ae0368b146107055780638da5cb5b1461071b5780638f4ffcb11461073b57600080fd5b8063757991a81461067857806381269a561461068d578063829965cc146106ad57806387a2a9d6146106c35780638a5550f6146106d95780638a769d35146106ef57600080fd5b806330717bf311610285578063510de0941161022357806364e46726116101fd57806364e46726146105ec57806365104a911461060c5780636de9f32b1461062c57806370a082311461064257600080fd5b8063510de0941461058a57806359c5bf60146105aa57806361805cc3146105cc57600080fd5b806345d8a2321161025f57806345d8a23214610534578063490203a71461054a5780634ef376281461055f5780634fa972e11461057457600080fd5b806330717bf3146104e2578063313ce567146104f857806332e997081461051f57600080fd5b80631fccb33c116102f257806323b872dd116102cc57806323b872dd1461045e5780632d38bf7a1461047e5780632ea83565146104945780632f104e0c146104aa57600080fd5b80631fccb33c1461041257806320fa80d9146104325780632381a60e1461044857600080fd5b806306fdde0314610348578063095ea7b31461037357806310294317146103a357806317da485f146103c75780631801fbe5146103dc57806318160ddd146103fc57600080fd5b3661034357600080fd5b600080fd5b34801561035457600080fd5b5061035d610976565b60405161036a9190612949565b60405180910390f35b34801561037f57600080fd5b5061039361038e3660046129ba565b610a04565b604051901515815260200161036a565b3480156103af57600080fd5b506103b960165481565b60405190815260200161036a565b3480156103d357600080fd5b506103b9610a71565b3480156103e857600080fd5b506103936103f73660046129e4565b610a8f565b34801561040857600080fd5b506103b960095481565b34801561041e57600080fd5b5061039361042d366004612ad4565b610aa3565b34801561043e57600080fd5b506103b960055481565b34801561045457600080fd5b506103b960145481565b34801561046a57600080fd5b50610393610479366004612b35565b610b66565b34801561048a57600080fd5b506103b960125481565b3480156104a057600080fd5b506103b960035481565b3480156104b657600080fd5b506007546104ca906001600160a01b031681565b6040516001600160a01b03909116815260200161036a565b3480156104ee57600080fd5b506103b960045481565b34801561050457600080fd5b5061050d601281565b60405160ff909116815260200161036a565b34801561052b57600080fd5b506010546103b9565b34801561054057600080fd5b506103b9610b4081565b34801561055657600080fd5b506103b9610c52565b34801561056b57600080fd5b506011546103b9565b34801561058057600080fd5b506103b960135481565b34801561059657600080fd5b506008546104ca906001600160a01b031681565b3480156105b657600080fd5b506105ca6105c5366004612b71565b610c83565b005b3480156105d857600080fd5b506105ca6105e7366004612bb4565b610d0e565b3480156105f857600080fd5b506105ca610607366004612b71565b610de4565b34801561061857600080fd5b506103b96106273660046129e4565b610f6f565b34801561063857600080fd5b506103b9601b5481565b34801561064e57600080fd5b506103b961065d366004612be0565b6001600160a01b03166000908152601c602052604090205490565b34801561068457600080fd5b50600c546103b9565b34801561069957600080fd5b506103936106a8366004612bfb565b611060565b3480156106b957600080fd5b506103b9600c5481565b3480156106cf57600080fd5b506103b9600f5481565b3480156106e557600080fd5b506103b960215481565b3480156106fb57600080fd5b506103b960105481565b34801561071157600080fd5b506103b960115481565b34801561072757600080fd5b506000546104ca906001600160a01b031681565b34801561074757600080fd5b506105ca610756366004612c2d565b6110ab565b34801561076757600080fd5b506006546104ca906001600160a01b031681565b34801561078757600080fd5b5061035d60405180604001604052806005815260200164466f72676560d81b81525081565b3480156107b857600080fd5b506103b96107c7366004612bb4565b611138565b3480156107d857600080fd5b506103b960025481565b3480156107ee57600080fd5b506103b96107fd366004612cfe565b611173565b34801561080e57600080fd5b506103b960195481565b34801561082457600080fd5b506103936108333660046129ba565b611602565b34801561084457600080fd5b506103b9600d5481565b34801561085a57600080fd5b506103b9610869366004612d87565b611687565b34801561087a57600080fd5b50601b546103b9565b34801561088f57600080fd5b506103b961089e366004612db7565b611a06565b3480156108af57600080fd5b506103b960235481565b3480156108c557600080fd5b506105ca611e90565b3480156108da57600080fd5b506103b960015481565b3480156108f057600080fd5b506103b9600e5481565b34801561090657600080fd5b506103b9610915366004612df3565b6001600160a01b039182166000908152601d6020908152604080832093909416825291909152205490565b34801561094c57600080fd5b506103b961095b366004612e26565b6120ec565b34801561096c57600080fd5b506103b9600b5481565b6020805461098390612e52565b80601f01602080910402602001604051908101604052809291908181526020018280546109af90612e52565b80156109fc5780601f106109d1576101008083540402835291602001916109fc565b820191906000526020600020905b8154815290600101906020018083116109df57829003601f168201915b505050505081565b336000818152601d602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610a5f9086815260200190565b60405180910390a35060015b92915050565b6000610a8a601054600f546124a890919063ffffffff16565b905090565b6000610a9c8383336120ec565b5092915050565b60008083516001610ab49190612ea3565b67ffffffffffffffff811115610acc57610acc612a06565b604051908082528060200260200182016040528015610af5578160200160208202803683370190505b50905060005b8451610b08906001612ea3565b811015610b4c5783828281518110610b2257610b22612ebb565b6001600160a01b039092166020928302919091019091015280610b4481612ed1565b915050610afb565b50610b5986868684611a06565b5060019695505050505050565b6001600160a01b0383166000908152601c6020526040812054610b8990836124f6565b6001600160a01b0385166000908152601c6020908152604080832093909355601d815282822033835290522054610bc090836124f6565b6001600160a01b038086166000908152601d602090815260408083203384528252808320949094559186168152601c9091522054610bfe9083612542565b6001600160a01b038085166000818152601c602052604090819020939093559151908616906000805160206131f683398151915290610c409086815260200190565b60405180910390a35060019392505050565b6000610a8a6012546002610c669190612fd0565b610c726012600a612fd0565b610c7d906064612fdc565b906124a8565b6000546001600160a01b03163314610ccf5760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b60448201526064015b60405180910390fd5b600680546001600160a01b039485166001600160a01b031991821617909155600780549385169382169390931790925560088054919093169116179055565b6000610b40610d1d8385612ffb565b610d2990610378612fdc565b610d339190613028565b600381905590506000610378610d4a836064612fdc565b610d549190613028565b9050600061013a821015610db557620470dc610d7a610378610c7d8663026f7f3c612fdc565b610d9a620c0840610d8c60028861303c565b610c7d906303a2cdf0612fdc565b610da49190612ea3565b610dae9190612ffb565b9050610dda565b610dc9610378610c7d856305f5e100612fdc565b610dd7906314dc9380612ea3565b90505b6001555050505050565b6000546001600160a01b03163314610e2b5760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b6044820152606401610cc6565b60006021546002610e3c9190612fd0565b610e47906002612fdc565b610e5c906a115eec47f6cf7e35000000613028565b60245490915060ff1615610e7257610e7261304b565b6024805460ff1916600117905560006012819055601b55600f54610e98906175356124a8565b60105542600b55610ea7612590565b6001600160a01b0384166000818152601c60209081526040808320859055518481526000805160206131f6833981519152910160405180910390a3600680546001600160a01b038087166001600160a01b031992831617909255600780548684169083161790556008805492851692909116919091179055600c54601555336000818152601c6020526040808220670de0b6b3a76400009081905590516000805160206131f683398151915291610f619190815260200190565b60405180910390a350505050565b6000806011543385604051602001610f8993929190613061565b604051602081830303815290604052805190602001209050828114610fc05760405162461bcd60e51b8152600401610cc690613089565b6010548110610fe15760405162461bcd60e51b8152600401610cc6906130d7565b610fe9612590565b601654421161100a5760405162461bcd60e51b8152600401610cc69061311f565b42601655600c546011546040805160008152602081019390935282015233907fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d9060600160405180910390a25060009392505050565b60008083338760405160200161107893929190613061565b604051602081830303815290604052805190602001209050828160001c11156110a057600080fd5b909314949350505050565b6001600160a01b03821630146110c057600080fd5b60405163a9059cbb60e01b81526001600160a01b038516600482015260248101849052309063a9059cbb906044016020604051808303816000875af115801561110d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611131919061314e565b5050505050565b600080601154338660405160200161115293929190613061565b60408051808303601f19018152919052805160209091012095945050505050565b6000825160016111839190612ea3565b8251146111a25760405162461bcd60e51b8152600401610cc69061316b565b60005b8351811015611366576111b9816001612ea3565b6111c4906002612fd0565b600c546111d191906131c8565b156111db57611366565b306001600160a01b03168482815181106111f7576111f7612ebb565b60200260200101516001600160a01b031614158015611248575060085484516001600160a01b039091169085908390811061123457611234612ebb565b60200260200101516001600160a01b031614155b6112945760405162461bcd60e51b815260206004820152601a60248201527f4e6f2062617365207072696e74696e67206f6620746f6b656e730000000000006044820152606401610cc6565b60006112a1826001612ea3565b90505b8451811015611353578482815181106112bf576112bf612ebb565b60200260200101516001600160a01b03168582815181106112e2576112e2612ebb565b60200260200101516001600160a01b031614156113415760405162461bcd60e51b815260206004820152601b60248201527f4e6f207072696e74696e67205468652073616d6520746f6b656e7300000000006044820152606401610cc6565b8061134b81612ed1565b9150506112a4565b508061135e81612ed1565b9150506111a5565b600061138d87878660008151811061138057611380612ebb565b6020026020010151611687565b9050600081116113cc5760405162461bcd60e51b815260206004820152600a6024820152696d696e7420697373756560b01b6044820152606401610cc6565b60008060005b848110156115ac576113e5816001612ea3565b6113f0906002612fd0565b600c546113fd91906131c8565b61159a5787818151811061141357611413612ebb565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611463573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148791906131dc565b9150811561159a5761149a6003826131c8565b1580156114a657508015155b156114cb576114c4643a352944006114be8685612fdc565b90612736565b92506114e1565b6114de643a35294400610c7d8685612fdc565b92505b8781815181106114f3576114f3612ebb565b60200260200101516001600160a01b031663a9059cbb88838151811061151b5761151b612ebb565b6020026020010151856040518363ffffffff1660e01b81526004016115559291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015611574573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611598919061314e565b505b806115a481612ed1565b9150506113d2565b50600c54601154604080519283526020830191909152810185905233907fc32557acceb6aeb205c3115ac08a8dc54d82fb5ea08f2b7f1e6b794488e3851c9060600160405180910390a250979650505050505050565b336000908152601c602052604081205461161c90836124f6565b336000908152601c6020526040808220929092556001600160a01b038516815220546116489083612542565b6001600160a01b0384166000818152601c60205260409081902092909255905133906000805160206131f683398151915290610a5f9086815260200190565b6000611691612590565b60165442116116b25760405162461bcd60e51b8152600401610cc69061311f565b6000610b40601654426116c59190612ffb565b6116d190610378612fdc565b6116db9190613028565b905060006103786116ed836064612fdc565b6116f79190613028565b9050600061013a82101561173c57611719610378610c7d8563026f7f3c612fdc565b61172b620c0840610d8c60028761303c565b6117359190612ea3565b9050611761565b611750610378610c7d856305f5e100612fdc565b61175e9063d09dc300612ea3565b90505b61179961177a6305f5e10083601454610c7d9190612fdc565b6001600160a01b0387166000908152601c602052604090205490612542565b6001600160a01b0386166000908152601c60205260409020556014546117ef906117ce90630bebc20090610c7d908590612fdc565b6007546001600160a01b03166000908152601c602052604090205490612542565b6007546001600160a01b03166000908152601c602052604090205560145461182f90611826906305f5e10090610c7d908590612fdc565b601b5490612542565b601b5542601655601e54156119975760c88210156118f757600854601e546019546001600160a01b039092169163a9059cbb918891611882916305f5e100916118789088612fdc565b610c7d9190612fdc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156118cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f1919061314e565b50611997565b600854601e546019546001600160a01b039092169163a9059cbb91889161192691600a91611878906017612fdc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611971573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611995919061314e565b505b336001600160a01b03167fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d6119d86305f5e10084601454610c7d9190612fdc565b600c546011546040805193845260208401929092529082015260600160405180910390a29695505050505050565b600082516001611a169190612ea3565b825114611a355760405162461bcd60e51b8152600401610cc69061316b565b60005b8351811015611bf957611a4c816001612ea3565b611a57906002612fd0565b600c54611a6491906131c8565b15611a6e57611bf9565b306001600160a01b0316848281518110611a8a57611a8a612ebb565b60200260200101516001600160a01b031614158015611adb575060085484516001600160a01b0390911690859083908110611ac757611ac7612ebb565b60200260200101516001600160a01b031614155b611b275760405162461bcd60e51b815260206004820152601a60248201527f4e6f2062617365207072696e74696e67206f6620746f6b656e730000000000006044820152606401610cc6565b6000611b34826001612ea3565b90505b8451811015611be657848281518110611b5257611b52612ebb565b60200260200101516001600160a01b0316858281518110611b7557611b75612ebb565b60200260200101516001600160a01b03161415611bd45760405162461bcd60e51b815260206004820152601b60248201527f4e6f207072696e74696e67205468652073616d6520746f6b656e7300000000006044820152606401610cc6565b80611bde81612ed1565b915050611b37565b5080611bf181612ed1565b915050611a38565b6000611c20878786600081518110611c1357611c13612ebb565b60200260200101516120ec565b905060008111611c5f5760405162461bcd60e51b815260206004820152600a6024820152696d696e7420697373756560b01b6044820152606401610cc6565b60008060005b84811015611e3957611c78816001612ea3565b611c83906002612fd0565b600c54611c9091906131c8565b611e2757878181518110611ca657611ca6612ebb565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611cf6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1a91906131dc565b91508115611d6e57611d2d6003826131c8565b158015611d3957508015155b15611d5857611d51643a352944006114be8685612fdc565b9250611d6e565b611d6b643a35294400610c7d8685612fdc565b92505b878181518110611d8057611d80612ebb565b60200260200101516001600160a01b031663a9059cbb888381518110611da857611da8612ebb565b6020026020010151856040518363ffffffff1660e01b8152600401611de29291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af1158015611e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e25919061314e565b505b80611e3181612ed1565b915050611c65565b50600c54601154604080519283526020830191909152810185905233907fc32557acceb6aeb205c3115ac08a8dc54d82fb5ea08f2b7f1e6b794488e3851c9060600160405180910390a25090979650505050505050565b600060225442611ea09190612ffb565b90506000601554600c54611eb49190612ffb565b90506000611ec28284613028565b9050611ed66012546002610c669190612fd0565b6014556000611eed610b406114be84610378612fdc565b600481905590506000610378611f04836064612fdc565b611f0e9190613028565b9050600060c8821015611f5257611f2f610378610c7d8563026f7f3c612fdc565b611f41620c0840610d8c60028761303c565b611f4b9190612ea3565b9050611f59565b50630db585805b611f7d630bebc200601e546019548489611f739190612fdc565b6118789190612fdc565b600555600d54601954600491611f9291612fdc565b611f9d90603c612fdc565b611fa79190613028565b6008546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611fef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201391906131dc565b11156120d457600854600754601e546019546001600160a01b039384169363a9059cbb93169161204e91630bebc2009190611f73888d612fdc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015612099573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120bd919061314e565b50601f546120cc906001612fdc565b601e556120da565b6000601e555b5050600c546015555050426022555050565b600080601154338660405160200161210693929190613061565b60405160208183030381529060405280519060200120905083811461213d5760405162461bcd60e51b8152600401610cc690613089565b601054811061215e5760405162461bcd60e51b8152600401610cc6906130d7565b612166612590565b60165442116121875760405162461bcd60e51b8152600401610cc69061311f565b6000610b406016544261219a9190612ffb565b6121a690610378612fdc565b6121b09190613028565b905060006103786121c2836064612fdc565b6121cc9190613028565b9050600061013a821015612211576121ee610378610c7d8563026f7f3c612fdc565b612200620c0840610d8c60028761303c565b61220a9190612ea3565b9050612236565b612225610378610c7d856305f5e100612fdc565b612233906314dc9380612ea3565b90505b61226e61224f6305f5e10083601454610c7d9190612fdc565b6001600160a01b0388166000908152601c602052604090205490612542565b6001600160a01b0387166000908152601c60205260409020556014546122a3906117ce90630bebc20090610c7d908590612fdc565b6007546001600160a01b03166000908152601c60205260409020556014546122da90611826906305f5e10090610c7d908590612fdc565b601b5542601655601e54156124385760c882101561239857600854601e546019546001600160a01b039092169163a9059cbb918991612323916305f5e100916118789088612fdc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561236e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612392919061314e565b50612438565b600854601e546019546001600160a01b039092169163a9059cbb9189916123c791600a91611878906017612fdc565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015612412573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612436919061314e565b505b336001600160a01b03167fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d6124796305f5e10084601454610c7d9190612fdc565b600c546011546040805193845260208401929092529082015260600160405180910390a2979650505050505050565b6000816124e55760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b6044820152606401610cc6565b6124ef8284613028565b9392505050565b6000818310156125385760405162461bcd60e51b815260206004820152600d60248201526c53756220756e646572666c6f7760981b6044820152606401610cc6565b6124ef8284612ffb565b60008061254f8385612ea3565b9050838110156124ef5760405162461bcd60e51b815260206004820152600c60248201526b416464206f766572666c6f7760a01b6044820152606401610cc6565b601354601b541180156125a557506027601254105b156125d9576012546125b8906001612ea3565b60128190556125d5906125cc906002612fd0565b601054906127a3565b6010555b600c546125e7906001612542565b600c55600d546125f990600490613028565b600c5461260691906131c8565b61272557612612611e90565b61263860125460016126249190612ea3565b61262f906002612fd0565b600a54906124a8565b600a546126459190612ffb565b601355600d54600c5461265891906131c8565b612725576019546008546040516370a0823160e01b8152306004820152614e2092916001600160a01b0316906370a0823190602401602060405180830381865afa1580156126aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126ce91906131dc565b6126d89190613028565b1161270b57601a546019546126ee9060026124a8565b1115612706576019546127029060026124a8565b6019555b61271d565b6019546127199060036127a3565b6019555b612725612808565b612730600143612ffb565b40601155565b6000816127735760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b6044820152606401610cc6565b600061277f8385613028565b905061278b83856131c8565b156124ef5761279b816001612ea3565b949350505050565b6000826127b257506000610a6b565b60006127be8385612fdc565b9050826127cb8583613028565b146124ef5760405162461bcd60e51b815260206004820152600d60248201526c4d756c74206f766572666c6f7760981b6044820152606401610cc6565b600b54429060009061281a9083612ffb565b90506000600d54610b4061282e9190612fdc565b9050808210156128a357600061284983610c7d8460646127a3565b6001601f55905060006128696103e86128638460646124f6565b90612931565b905061289861288f826128896107d06010546124a890919063ffffffff16565b906127a3565b601054906124f6565b601055506128fd9050565b60006128b482610c7d8560646127a3565b6002601f55905060006128ce6103e86128638460646124f6565b90506128f76128ee826128896103e86010546124a890919063ffffffff16565b60105490612542565b60105550505b600b83905543602355600e54601054101561291957600e546010555b600f54601054111561292c57600f546010555b505050565b600081831115612942575080610a6b565b5090919050565b600060208083528351808285015260005b818110156129765785810183015185820160400152820161295a565b81811115612988576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146129b557600080fd5b919050565b600080604083850312156129cd57600080fd5b6129d68361299e565b946020939093013593505050565b600080604083850312156129f757600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612a4557612a45612a06565b604052919050565b600082601f830112612a5e57600080fd5b8135602067ffffffffffffffff821115612a7a57612a7a612a06565b8160051b612a89828201612a1c565b9283528481018201928281019087851115612aa357600080fd5b83870192505b84831015612ac957612aba8361299e565b82529183019190830190612aa9565b979650505050505050565b60008060008060808587031215612aea57600080fd5b8435935060208501359250604085013567ffffffffffffffff811115612b0f57600080fd5b612b1b87828801612a4d565b925050612b2a6060860161299e565b905092959194509250565b600080600060608486031215612b4a57600080fd5b612b538461299e565b9250612b616020850161299e565b9150604084013590509250925092565b600080600060608486031215612b8657600080fd5b612b8f8461299e565b9250612b9d6020850161299e565b9150612bab6040850161299e565b90509250925092565b600080600060608486031215612bc957600080fd5b505081359360208301359350604090920135919050565b600060208284031215612bf257600080fd5b6124ef8261299e565b60008060008060808587031215612c1157600080fd5b5050823594602084013594506040840135936060013592509050565b60008060008060808587031215612c4357600080fd5b612c4c8561299e565b93506020808601359350612c626040870161299e565b9250606086013567ffffffffffffffff80821115612c7f57600080fd5b818801915088601f830112612c9357600080fd5b813581811115612ca557612ca5612a06565b612cb7601f8201601f19168501612a1c565b91508082528984828501011115612ccd57600080fd5b808484018584013760008482840101525080935050505092959194509250565b8015158114612cfb57600080fd5b50565b60008060008060808587031215612d1457600080fd5b8435612d1f81612ced565b93506020850135612d2f81612ced565b9250604085013567ffffffffffffffff80821115612d4c57600080fd5b612d5888838901612a4d565b93506060870135915080821115612d6e57600080fd5b50612d7b87828801612a4d565b91505092959194509250565b600080600060608486031215612d9c57600080fd5b8335612da781612ced565b92506020840135612b9d81612ced565b60008060008060808587031215612dcd57600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115612d4c57600080fd5b60008060408385031215612e0657600080fd5b612e0f8361299e565b9150612e1d6020840161299e565b90509250929050565b600080600060608486031215612e3b57600080fd5b8335925060208401359150612bab6040850161299e565b600181811c90821680612e6657607f821691505b60208210811415612e8757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612eb657612eb6612e8d565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612ee557612ee5612e8d565b5060010190565b600181815b80851115612f27578160001904821115612f0d57612f0d612e8d565b80851615612f1a57918102915b93841c9390800290612ef1565b509250929050565b600082612f3e57506001610a6b565b81612f4b57506000610a6b565b8160018114612f615760028114612f6b57612f87565b6001915050610a6b565b60ff841115612f7c57612f7c612e8d565b50506001821b610a6b565b5060208310610133831016604e8410600b8410161715612faa575081810a610a6b565b612fb48383612eec565b8060001904821115612fc857612fc8612e8d565b029392505050565b60006124ef8383612f2f565b6000816000190483118215151615612ff657612ff6612e8d565b500290565b60008282101561300d5761300d612e8d565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261303757613037613012565b500490565b60006124ef60ff841683612f2f565b634e487b7160e01b600052600160045260246000fd5b92835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b6020808252602e908201527f4f6c64206368616c6c656e67655f646967657374206f722077726f6e6720636860408201526d185b1b195b99d957d91a59d95cdd60921b606082015260800190565b60208082526028908201527f446967657374206d75737420626520736d616c6c6572207468616e206d696e696040820152671b99d5185c99d95d60c21b606082015260800190565b6020808252601590820152744e6f2073616d65207365636f6e6420736f6c76657360581b604082015260600190565b60006020828403121561316057600080fd5b81516124ef81612ced565b6020808252603d908201527f536f204d696e74546f2068617320746f20686176652073616d65206e756d626560408201527f72206f66206164647265737373657320617320457874726146756e6473000000606082015260800190565b6000826131d7576131d7613012565b500690565b6000602082840312156131ee57600080fd5b505191905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220adeb11185509c70de48da6f44ffcec30b2b783741f46fa800755eab4dbdb4cd664736f6c634300080b0033",
  "deployedSourceMap": "5860:21039:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;;;;;;;;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;;;;;;;;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26883:8;;;5860:21039;;;;26834:8;;;5860:21039;26883:8;;;7994:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24765:196;;;;;;;;;;-1:-1:-1;24765:196:0;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;24765:196:0;1053:187:1;7524:47:0;;;;;;;;;;;;;;;;;;;1391:25:1;;;1379:2;1364:18;7524:47:0;1245:177:1;22381:107:0;;;;;;;;;;;;;:::i;12094:136::-;;;;;;;;;;-1:-1:-1;12094:136:0;;;;;:::i;:::-;;:::i;6547:64::-;;;;;;;;;;;;;;;;17400:372;;;;;;;;;;-1:-1:-1;17400:372:0;;;;;:::i;:::-;;:::i;6075:21::-;;;;;;;;;;;;;;;;7393:75;;;;;;;;;;;;;;;;25481:317;;;;;;;;;;-1:-1:-1;25481:317:0;;;;;:::i;:::-;;:::i;7272:25::-;;;;;;;;;;;;;;;;6020:22;;;;;;;;;;;;;;;;6161:30;;;;;;;;;;-1:-1:-1;6161:30:0;;;;-1:-1:-1;;;;;6161:30:0;;;;;;-1:-1:-1;;;;;3876:32:1;;;3858:51;;3846:2;3831:18;6161:30:0;3712:203:1;6048:21:0;;;;;;;;;;;;;;;;8073:35;;;;;;;;;;;;8106:2;8073:35;;;;;4092:4:1;4080:17;;;4062:36;;4050:2;4035:18;8073:35:0;3920:184:1;22492:83:0;;;;;;;;;;-1:-1:-1;22558:12:0;;22492:83;;5927:41;;;;;;;;;;;;5961:7;5927:41;;22767:231;;;;;;;;;;;;;:::i;22206:92::-;;;;;;;;;;-1:-1:-1;22278:15:0;;22206:92;;7303:84;;;;;;;;;;;;;;;;6197:30;;;;;;;;;;-1:-1:-1;6197:30:0;;;;-1:-1:-1;;;;;6197:30:0;;;9317:224;;;;;;;;;;-1:-1:-1;9317:224:0;;;;;:::i;:::-;;:::i;:::-;;18457:426;;;;;;;;;;-1:-1:-1;18457:426:0;;;;;:::i;:::-;;:::i;8277:982::-;;;;;;;;;;-1:-1:-1;8277:982:0;;;;;:::i;:::-;;:::i;17776:677::-;;;;;;;;;;-1:-1:-1;17776:677:0;;;;;:::i;:::-;;:::i;7761:24::-;;;;;;;;;;;;;;;;23566:120;;;;;;;;;;-1:-1:-1;23566:120:0;;;;;:::i;:::-;-1:-1:-1;;;;;23661:20:0;23635:12;23661:20;;;:8;:20;;;;;;;23566:120;23002:75;;;;;;;;;;-1:-1:-1;23061:10:0;;23002:75;;21793:327;;;;;;;;;;-1:-1:-1;21793:327:0;;;;;:::i;:::-;;:::i;6833:26::-;;;;;;;;;;;;;;;;7010:37;;;;;;;;;;;;;;;;8114:30;;;;;;;;;;;;;;;;7053:63;;;;;;;;;;;;;;;;7185:30;;;;;;;;;;;;;;;;2891:20;;;;;;;;;;-1:-1:-1;2891:20:0;;;;-1:-1:-1;;;;;2891:20:0;;;26573:194;;;;;;;;;;-1:-1:-1;26573:194:0;;;;;:::i;:::-;;:::i;6126:29::-;;;;;;;;;;-1:-1:-1;6126:29:0;;;;-1:-1:-1;;;;;6126:29:0;;;8028:39;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8028:39:0;;;;;23111:240;;;;;;;;;;-1:-1:-1;23111:240:0;;;;;:::i;:::-;;:::i;5994:23::-;;;;;;;;;;;;;;;;14252:1575;;;;;;;;;;-1:-1:-1;14252:1575:0;;;;;:::i;:::-;;:::i;7669:40::-;;;;;;;;;;;;;;;;24022:248;;;;;;;;;;-1:-1:-1;24022:248:0;;;;;:::i;:::-;;:::i;6892:42::-;;;;;;;;;;;;;;;;9545:1241;;;;;;;;;;-1:-1:-1;9545:1241:0;;;;;:::i;:::-;;:::i;22579:83::-;;;;;;;;;;-1:-1:-1;22645:12:0;;22579:83;;15839:1557;;;;;;;;;;-1:-1:-1;15839:1557:0;;;;;:::i;:::-;;:::i;8190:56::-;;;;;;;;;;;;;;;;10788:1112;;;;;;;;;;;;;:::i;5971:20::-;;;;;;;;;;;;;;;;6963:36;;;;;;;;;;;;;;;;26073:147;;;;;;;;;;-1:-1:-1;26073:147:0;;;;;:::i;:::-;-1:-1:-1;;;;;26187:19:0;;;26159:14;26187:19;;;:7;:19;;;;;;;;:28;;;;;;;;;;;;;26073:147;12337:1601;;;;;;;;;;-1:-1:-1;12337:1601:0;;;;;:::i;:::-;;:::i;6767:60::-;;;;;;;;;;;;;;;;7994:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;24765:196::-;24864:10;24837:12;24856:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;24856:28:0;;;;;;;;;;:37;;;24903;24837:12;;24856:28;;24903:37;;;;24887:6;1391:25:1;;1379:2;1364:18;;1245:177;24903:37:0;;;;;;;;-1:-1:-1;24952:4:0;24765:196;;;;;:::o;22381:107::-;22433:4;22451:33;22471:12;;22451:15;;:19;;:33;;;;:::i;:::-;22444:40;;22381:107;:::o;12094:136::-;12165:12;12183:43;12190:5;12197:16;12215:10;12183:6;:43::i;:::-;;12094:136;;;;:::o;17400:372::-;17533:12;17551:19;17587:10;:17;17607:1;17587:21;;;;:::i;:::-;17573:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17573:36:0;;17551:58;;17619:6;17615:73;17633:17;;:21;;17653:1;17633:21;:::i;:::-;17629:1;:26;17615:73;;;17677:6;17669:2;17672:1;17669:5;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17669:14:0;;;:5;;;;;;;;;;;:14;17657:3;;;;:::i;:::-;;;;17615:73;;;;17694:58;17712:5;17719:16;17737:10;17749:2;17694:17;:58::i;:::-;-1:-1:-1;17764:4:0;;17400:372;-1:-1:-1;;;;;;17400:372:0:o;25481:317::-;-1:-1:-1;;;;;25603:14:0;;25567:12;25603:14;;;:8;:14;;;;;;:26;;25622:6;25603:18;:26::i;:::-;-1:-1:-1;;;;;25586:14:0;;;;;;:8;:14;;;;;;;;:43;;;;25661:7;:13;;;;;25675:10;25661:25;;;;;;:37;;25691:6;25661:29;:37::i;:::-;-1:-1:-1;;;;;25633:13:0;;;;;;;:7;:13;;;;;;;;25647:10;25633:25;;;;;;;:65;;;;25717:12;;;;;:8;:12;;;;;:24;;25734:6;25717:16;:24::i;:::-;-1:-1:-1;;;;;25702:12:0;;;;;;;:8;:12;;;;;;;:39;;;;25751:26;;;;;;-1:-1:-1;;;;;;;;;;;25751:26:0;;;25770:6;1391:25:1;;1379:2;1364:18;;1245:177;25751:26:0;;;;;;;;-1:-1:-1;25789:4:0;25481:317;;;;;:::o;22767:231::-;22815:4;22944:47;22980:9;;22977:1;:12;;;;:::i;:::-;22951:18;8106:2;22951;:18;:::i;:::-;22945:24;;:3;:24;:::i;:::-;22944:31;;:47::i;9317:224::-;3147:5;;-1:-1:-1;;;;;3147:5:0;3133:10;:19;3125:42;;;;-1:-1:-1;;;3125:42:0;;12281:2:1;3125:42:0;;;12263:21:1;12320:2;12300:18;;;12293:30;-1:-1:-1;;;12339:18:1;;;12332:40;12389:18;;3125:42:0;;;;;;;;;9424:14:::1;:32:::0;;-1:-1:-1;;;;;9424:32:0;;::::1;-1:-1:-1::0;;;;;;9424:32:0;;::::1;;::::0;;;9461:15:::1;:35:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;9501:15:::1;:34:::0;;;;;::::1;::::0;::::1;;::::0;;9317:224::o;18457:426::-;18545:9;5961:7;18559:27;18574:12;18559;:27;:::i;:::-;18558:35;;18590:3;18558:35;:::i;:::-;18557:50;;;;:::i;:::-;18611:7;:11;;;18545:62;-1:-1:-1;18626:10:0;18649:3;18639:7;18545:62;18643:3;18639:7;:::i;:::-;:13;;;;:::i;:::-;18626:26;;18656:14;18692:3;18684:5;:11;18681:176;;;18780:6;18753:23;18772:3;18754:12;18765:1;18754:8;:12;:::i;18753:23::-;18714:37;18742:8;18728:6;18733:1;18728;:6;:::i;:::-;18716:20;;:8;:20;:::i;18714:37::-;:62;;;;:::i;:::-;:72;;;;:::i;:::-;18701:86;;18681:176;;;18814:24;18834:3;18815:13;:1;18819:9;18815:13;:::i;18814:24::-;:38;;18842:9;18814:38;:::i;:::-;18802:50;;18681:176;18861:5;:17;-1:-1:-1;;;;;18457:426:0:o;8277:982::-;3147:5;;-1:-1:-1;;;;;3147:5:0;3133:10;:19;3125:42;;;;-1:-1:-1;;;3125:42:0;;12281:2:1;3125:42:0;;;12263:21:1;12320:2;12300:18;;;12293:30;-1:-1:-1;;;12339:18:1;;;12332:40;12389:18;;3125:42:0;12079:334:1;3125:42:0;8387:6:::1;8435:14;;8430:1;:19;;;;:::i;:::-;8426:24;::::0;:1:::1;:24;:::i;:::-;8396:55;::::0;:26:::1;:55;:::i;:::-;8530:6;::::0;8387:64;;-1:-1:-1;8530:6:0::1;;8529:7;8522:15;;;;:::i;:::-;8547:6;:13:::0;;-1:-1:-1;;8547:13:0::1;8556:4;8547:13;::::0;;:6:::1;8569:9;:13:::0;;;8585:12:::1;:16:::0;8623:15:::1;::::0;:26:::1;::::0;8643:5:::1;8623:19;:26::i;:::-;8608:12;:41:::0;8735:15:::1;8702:30;:48:::0;8757:22:::1;:20;:22::i;:::-;-1:-1:-1::0;;;;;8835:25:0;::::1;;::::0;;;:8:::1;:25;::::0;;;;;;;:29;;;8881:40;1391:25:1;;;-1:-1:-1;;;;;;;;;;;8881:40:0;1364:18:1;8881:40:0::1;;;;;;;8930:14;:32:::0;;-1:-1:-1;;;;;8930:32:0;;::::1;-1:-1:-1::0;;;;;;8930:32:0;;::::1;;::::0;;;8972:15:::1;:35:::0;;;;::::1;::::0;;::::1;;::::0;;9017:15:::1;:34:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;9075:10:::1;::::0;9063:9:::1;:22:::0;9143:10:::1;8930:14;9134:20:::0;;;:8:::1;:20;::::0;;;;;9157:19:::1;9134:42:::0;;;;9193:53;;-1:-1:-1;;;;;;;;;;;9193:53:0;::::1;::::0;1391:25:1;;;1379:2;1364:18;;1245:177;9193:53:0::1;;;;;;;;8377:882;8277:982:::0;;;:::o;17776:677::-;17855:12;17874:14;17919:15;;17936:10;17948:5;17902:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17892:63;;;;;;17874:81;;18027:16;18017:6;:26;18009:85;;;;-1:-1:-1;;;18009:85:0;;;;;;;:::i;:::-;18172:12;;18154:30;;18146:83;;;;-1:-1:-1;;;18146:83:0;;;;;;;:::i;:::-;18233:22;:20;:22::i;:::-;18286:17;;18268:15;:35;18260:69;;;;-1:-1:-1;;;18260:69:0;;;;;;;:::i;:::-;18354:15;18334:17;:35;18400:10;;18412:15;;18380:49;;;18397:1;15038:25:1;;15094:2;15079:18;;15072:34;;;;15122:18;;15115:34;18385:10:0;;18380:49;;15026:2:1;15011:18;18380:49:0;;;;;;;-1:-1:-1;18441:1:0;;17776:677;-1:-1:-1;;;17776:677:0:o;21793:327::-;21925:12;21943:14;21995:16;22012:10;22023:5;21978:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;21968:62;;;;;;21943:88;;22056:10;22046:6;22038:15;;:28;22035:41;;;22068:8;;;22035:41;22089:26;;;;21793:327;-1:-1:-1;;;;21793:327:0:o;26573:194::-;-1:-1:-1;;;;;26690:22:0;;26707:4;26690:22;26682:31;;;;;;26717:44;;-1:-1:-1;;;26717:44:0;;-1:-1:-1;;;;;15352:32:1;;26717:44:0;;;15334:51:1;15401:18;;;15394:34;;;26732:4:0;;26717:30;;15307:18:1;;26717:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;26573:194;;;;:::o;23111:240::-;23222:18;23247:14;23292:15;;23309:10;23321:5;23275:52;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;23275:52:0;;;;;;23265:63;;23275:52;23265:63;;;;;23111:240;-1:-1:-1;;;;;23111:240:0:o;14252:1575::-;14397:12;14441:10;:17;14461:1;14441:21;;;;:::i;:::-;14424:6;:13;:38;14416:111;;;;-1:-1:-1;;;14416:111:0;;;;;;;:::i;:::-;14531:7;14544:344;14560:10;:17;14556:2;:21;14544:344;;;14613:4;:2;14616:1;14613:4;:::i;:::-;14609:9;;:1;:9;:::i;:::-;14595:10;;:24;;;;:::i;:::-;:29;14592:50;;14631:5;;14592:50;14680:4;-1:-1:-1;;;;;14654:31:0;:10;14665:2;14654:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14654:31:0;;;:68;;;;-1:-1:-1;14707:15:0;;14689:14;;-1:-1:-1;;;;;14707:15:0;;;;14689:10;;14700:2;;14689:14;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14689:33:0;;;14654:68;14646:107;;;;-1:-1:-1;;;14646:107:0;;16438:2:1;14646:107:0;;;16420:21:1;16477:2;16457:18;;;16450:30;16516:28;16496:18;;;16489:56;16562:18;;14646:107:0;16236:350:1;14646:107:0;14762:6;14769:4;:2;14772:1;14769:4;:::i;:::-;14762:11;;14758:126;14778:10;:17;14775:1;:20;14758:126;;;14832:10;14843:2;14832:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14815:31:0;:10;14826:1;14815:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14815:31:0;;;14807:71;;;;-1:-1:-1;;;14807:71:0;;16793:2:1;14807:71:0;;;16775:21:1;16832:2;16812:18;;;16805:30;16871:29;16851:18;;;16844:57;16918:18;;14807:71:0;16591:351:1;14807:71:0;14797:3;;;;:::i;:::-;;;;14758:126;;;-1:-1:-1;14579:4:0;;;;:::i;:::-;;;;14544:344;;;14894:15;14912:44;14922:5;14928:16;14946:6;14953:1;14946:9;;;;;;;;:::i;:::-;;;;;;;14912;:44::i;:::-;14894:62;;14978:1;14968:7;:11;14960:34;;;;-1:-1:-1;;;14960:34:0;;17149:2:1;14960:34:0;;;17131:21:1;17188:2;17168:18;;;17161:30;-1:-1:-1;;;17207:18:1;;;17200:40;17257:18;;14960:34:0;16947:334:1;14960:34:0;14998:17;15019:18;15045:6;15041:693;15057:2;15055:1;:4;15041:693;;;15347:3;:1;15349;15347:3;:::i;:::-;15343:8;;:1;:8;:::i;:::-;15329:10;;:23;;;;:::i;:::-;15326:397;;15384:10;15395:1;15384:13;;;;;;;;:::i;:::-;;;;;;;;;;;15377:46;;-1:-1:-1;;;15377:46:0;;15417:4;15377:46;;;3858:51:1;-1:-1:-1;;;;;15377:31:0;;;;;;3831:18:1;;15377:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15364:59;-1:-1:-1;15432:15:0;;15429:278;;15459:5;15463:1;15459;:5;:::i;:::-;:10;:20;;;;-1:-1:-1;15473:6:0;;;15459:20;15455:182;;;15500:49;15532:16;15501:20;15514:7;15501:10;:20;:::i;:::-;15500:31;;:49::i;:::-;15488:61;;15455:182;;;15581:45;15608:16;15582:20;15595:7;15582:10;:20;:::i;15581:45::-;15569:57;;15455:182;15652:10;15663:1;15652:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;15645:30:0;;15676:6;15683:1;15676:9;;;;;;;;:::i;:::-;;;;;;;15687;15645:52;;;;;;;;;;;;;;;-1:-1:-1;;;;;15352:32:1;;;;15334:51;;15416:2;15401:18;;15394:34;15322:2;15307:18;;15160:274;15645:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15429:278;15061:3;;;;:::i;:::-;;;;15041:693;;;-1:-1:-1;15764:10:0;;15776:15;;15743:54;;;15038:25:1;;;15094:2;15079:18;;15072:34;;;;15122:18;;15115:34;;;15752:10:0;;15743:54;;15026:2:1;15011:18;15743:54:0;;;;;;;-1:-1:-1;15809:9:0;14252:1575;-1:-1:-1;;;;;;;14252:1575:0:o;24022:248::-;24141:10;24090:12;24132:20;;;:8;:20;;;;;;:32;;24157:6;24132:24;:32::i;:::-;24118:10;24109:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;24183:12:0;;;;;;:24;;24200:6;24183:16;:24::i;:::-;-1:-1:-1;;;;;24168:12:0;;;;;;:8;:12;;;;;;;:39;;;;24217:32;;24226:10;;-1:-1:-1;;;;;;;;;;;24217:32:0;;;24242:6;1391:25:1;;1379:2;1364:18;;1245:177;9545:1241:0;9631:15;9654:22;:20;:22::i;:::-;9707:17;;9689:15;:35;9681:69;;;;-1:-1:-1;;;9681:69:0;;;;;;;:::i;:::-;9808:9;5961:7;9840:17;;9822:15;:35;;;;:::i;:::-;9821:43;;9861:3;9821:43;:::i;:::-;9820:58;;;;:::i;:::-;9808:70;-1:-1:-1;9882:10:0;9905:3;9895:7;9808:70;9899:3;9895:7;:::i;:::-;:13;;;;:::i;:::-;9882:26;;9912:14;9945:3;9937:5;:11;9934:164;;;10004:23;10023:3;10005:12;10016:1;10005:8;:12;:::i;10004:23::-;9966:36;9993:8;9979:6;9984:1;9979;:6;:::i;9966:36::-;:61;;;;:::i;:::-;9954:73;;9934:164;;;10054:24;10074:3;10055:13;:1;10059:9;10055:13;:::i;10054:24::-;:39;;10082:10;10054:39;:::i;:::-;10042:51;;9934:164;10123:64;10144:42;10176:9;10161;10145:13;;:25;;;;:::i;10144:42::-;-1:-1:-1;;;;;10123:16:0;;;;;;:8;:16;;;;;;;:20;:64::i;:::-;-1:-1:-1;;;;;10104:16:0;;;;;;:8;:16;;;;;:83;10250:13;;10219:77;;10249:46;;10281:13;;10250:25;;10266:9;;10250:25;:::i;10249:46::-;10228:15;;-1:-1:-1;;;;;10228:15:0;10219:25;;;;:8;:25;;;;;;;:29;:77::i;:::-;10200:15;;-1:-1:-1;;;;;10200:15:0;10191:25;;;;:8;:25;;;;;:105;10333:13;;10315:60;;10332:42;;10364:9;;10333:25;;10349:9;;10333:25;:::i;10332:42::-;10315:12;;;:16;:60::i;:::-;10300:12;:75;10399:15;10379:17;:35;10422:9;;:13;10419:239;;10452:3;10444:5;:11;10441:213;;;10469:15;;10528:9;;10516;;-1:-1:-1;;;;;10469:15:0;;;;10462:32;;10495:6;;10503:50;;10543:9;;10504:21;;:9;:21;:::i;:::-;:33;;;;:::i;10503:50::-;10462:92;;-1:-1:-1;;;;;;10462:92:0;;;;;;;-1:-1:-1;;;;;15352:32:1;;;10462:92:0;;;15334:51:1;15401:18;;;15394:34;15307:18;;10462:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10441:213;;;10577:15;;10629:9;;10617;;-1:-1:-1;;;;;10577:15:0;;;;10570:32;;10603:6;;10611:36;;10644:2;;10612:14;;:2;:14;:::i;10611:36::-;10570:78;;-1:-1:-1;;;;;;10570:78:0;;;;;;;-1:-1:-1;;;;;15352:32:1;;;10570:78:0;;;15334:51:1;15401:18;;;15394:34;15307:18;;10570:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10441:213;10672:10;-1:-1:-1;;;;;10667:90:0;;10684:42;10716:9;10701;10685:13;;:25;;;;:::i;10684:42::-;10728:10;;10740:15;;10667:90;;;15038:25:1;;;15094:2;15079:18;;15072:34;;;;15122:18;;;15115:34;15026:2;15011:18;10667:90:0;;;;;;;10769:9;9545:1241;-1:-1:-1;;;;;;9545:1241:0:o;15839:1557::-;15977:12;16025:10;:17;16045:1;16025:21;;;;:::i;:::-;16008:6;:13;:38;16000:111;;;;-1:-1:-1;;;16000:111:0;;;;;;;:::i;:::-;16115:7;16128:344;16144:10;:17;16140:2;:21;16128:344;;;16197:4;:2;16200:1;16197:4;:::i;:::-;16193:9;;:1;:9;:::i;:::-;16179:10;;:24;;;;:::i;:::-;:29;16176:50;;16215:5;;16176:50;16264:4;-1:-1:-1;;;;;16238:31:0;:10;16249:2;16238:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;16238:31:0;;;:68;;;;-1:-1:-1;16291:15:0;;16273:14;;-1:-1:-1;;;;;16291:15:0;;;;16273:10;;16284:2;;16273:14;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;16273:33:0;;;16238:68;16230:107;;;;-1:-1:-1;;;16230:107:0;;16438:2:1;16230:107:0;;;16420:21:1;16477:2;16457:18;;;16450:30;16516:28;16496:18;;;16489:56;16562:18;;16230:107:0;16236:350:1;16230:107:0;16346:6;16353:4;:2;16356:1;16353:4;:::i;:::-;16346:11;;16342:126;16362:10;:17;16359:1;:20;16342:126;;;16416:10;16427:2;16416:14;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;16399:31:0;:10;16410:1;16399:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;16399:31:0;;;16391:71;;;;-1:-1:-1;;;16391:71:0;;16793:2:1;16391:71:0;;;16775:21:1;16832:2;16812:18;;;16805:30;16871:29;16851:18;;;16844:57;16918:18;;16391:71:0;16591:351:1;16391:71:0;16381:3;;;;:::i;:::-;;;;16342:126;;;-1:-1:-1;16163:4:0;;;;:::i;:::-;;;;16128:344;;;16478:15;16496:41;16503:5;16509:16;16527:6;16534:1;16527:9;;;;;;;;:::i;:::-;;;;;;;16496:6;:41::i;:::-;16478:59;;16559:1;16549:7;:11;16541:34;;;;-1:-1:-1;;;16541:34:0;;17149:2:1;16541:34:0;;;17131:21:1;17188:2;17168:18;;;17161:30;-1:-1:-1;;;17207:18:1;;;17200:40;17257:18;;16541:34:0;16947:334:1;16541:34:0;16579:17;16600:18;16626:6;16622:675;16638:2;16636:1;:4;16622:675;;;16928:3;:1;16930;16928:3;:::i;:::-;16924:8;;:1;:8;:::i;:::-;16910:10;;:23;;;;:::i;:::-;16907:380;;16965:10;16976:1;16965:13;;;;;;;;:::i;:::-;;;;;;;;;;;16958:46;;-1:-1:-1;;;16958:46:0;;16998:4;16958:46;;;3858:51:1;-1:-1:-1;;;;;16958:31:0;;;;;;3831:18:1;;16958:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16945:59;-1:-1:-1;17013:15:0;;17010:211;;17040:5;17044:1;17040;:5;:::i;:::-;:10;:20;;;;-1:-1:-1;17054:6:0;;;17040:20;17036:179;;;17081:49;17113:16;17082:20;17095:7;17082:10;:20;:::i;17081:49::-;17069:61;;17036:179;;;17162:45;17189:16;17163:20;17176:7;17163:10;:20;:::i;17162:45::-;17150:57;;17036:179;17236:10;17247:1;17236:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;17229:30:0;;17260:6;17267:1;17260:9;;;;;;;;:::i;:::-;;;;;;;17271;17229:52;;;;;;;;;;;;;;;-1:-1:-1;;;;;15352:32:1;;;;15334:51;;15416:2;15401:18;;15394:34;15322:2;15307:18;;15160:274;17229:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16907:380;16642:3;;;;:::i;:::-;;;;16622:675;;;-1:-1:-1;17336:10:0;;17348:15;;17315:54;;;15038:25:1;;;15094:2;15079:18;;15072:34;;;;15122:18;;15115:34;;;17324:10:0;;17315:54;;15026:2:1;15011:18;17315:54:0;;;;;;;-1:-1:-1;17381:7:0;;15839:1557;-1:-1:-1;;;;;;;15839:1557:0:o;10788:1112::-;10869:12;10902:7;;10884:15;:25;;;;:::i;:::-;10869:40;;10914:18;10948:9;;10935:10;;:22;;;;:::i;:::-;10914:43;-1:-1:-1;10978:20:0;11001:17;10914:43;11001:4;:17;:::i;:::-;10978:40;;11039:46;11074:9;;11071:1;:12;;;;:::i;11039:46::-;11023:13;:62;11089:9;11101:41;5961:7;11102:18;:12;11117:3;11102:18;:::i;11101:41::-;11153:6;:10;;;11089:53;-1:-1:-1;11167:13:0;11193:3;11183:7;11089:53;11187:3;11183:7;:::i;:::-;:13;;;;:::i;:::-;11167:29;;11200:17;11233:3;11225:5;:11;11222:137;;;11291:23;11310:3;11292:12;11303:1;11292:8;:12;:::i;11291:23::-;11254:34;11281:6;11267;11272:1;11267;:6;:::i;11254:34::-;:60;;;;:::i;:::-;11242:72;;11222:137;;;-1:-1:-1;11344:9:0;11222:137;11379:69;11434:13;11419:9;;11407;;11395;11381:10;11380:24;;;;:::i;:::-;:36;;;;:::i;11379:69::-;11370:6;:78;11529:24;;11517:9;;11555:1;;11517:36;;;:::i;:::-;11507:47;;:6;:47;:::i;:::-;:49;;;;:::i;:::-;11462:15;;11455:48;;-1:-1:-1;;;11455:48:0;;11497:4;11455:48;;;3858:51:1;-1:-1:-1;;;;;11462:15:0;;;;11455:33;;3831:18:1;;11455:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:102;11452:372;;;11651:15;;11677;;11734:9;;11722;;-1:-1:-1;;;;;11651:15:0;;;;11644:32;;11677:15;;11694:69;;11749:13;;11734:9;11695:24;11710:9;11696:10;11695:24;:::i;11694:69::-;11644:120;;-1:-1:-1;;;;;;11644:120:0;;;;;;;-1:-1:-1;;;;;15352:32:1;;;11644:120:0;;;15334:51:1;15401:18;;;15394:34;15307:18;;11644:120:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11785:4:0;;11781:8;;:1;:8;:::i;:::-;11769:9;:20;11452:372;;;11818:1;11806:9;:13;11452:372;-1:-1:-1;;11839:10:0;;11827:9;:22;-1:-1:-1;;11881:15:0;11871:7;:25;-1:-1:-1;;10788:1112:0:o;12337:1601::-;12427:12;12446:14;12491:15;;12508:10;12520:5;12474:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12464:63;;;;;;12446:81;;12599:16;12589:6;:26;12581:85;;;;-1:-1:-1;;;12581:85:0;;;;;;;:::i;:::-;12744:12;;12726:30;;12718:83;;;;-1:-1:-1;;;12718:83:0;;;;;;;:::i;:::-;12805:22;:20;:22::i;:::-;12858:17;;12840:15;:35;12832:69;;;;-1:-1:-1;;;12832:69:0;;;;;;;:::i;:::-;12959:9;5961:7;12991:17;;12973:15;:35;;;;:::i;:::-;12972:43;;13012:3;12972:43;:::i;:::-;12971:58;;;;:::i;:::-;12959:70;-1:-1:-1;13033:10:0;13056:3;13046:7;12959:70;13050:3;13046:7;:::i;:::-;:13;;;;:::i;:::-;13033:26;;13063:14;13096:3;13088:5;:11;13085:163;;;13155:23;13174:3;13156:12;13167:1;13156:8;:12;:::i;13155:23::-;13117:36;13144:8;13130:6;13135:1;13130;:6;:::i;13117:36::-;:61;;;;:::i;:::-;13105:73;;13085:163;;;13205:24;13225:3;13206:13;:1;13210:9;13206:13;:::i;13205:24::-;:38;;13233:9;13205:38;:::i;:::-;13193:50;;13085:163;13273:64;13294:42;13326:9;13311;13295:13;;:25;;;;:::i;13294:42::-;-1:-1:-1;;;;;13273:16:0;;;;;;:8;:16;;;;;;;:20;:64::i;:::-;-1:-1:-1;;;;;13254:16:0;;;;;;:8;:16;;;;;:83;13400:13;;13369:77;;13399:46;;13431:13;;13400:25;;13416:9;;13400:25;:::i;13369:77::-;13350:15;;-1:-1:-1;;;;;13350:15:0;13341:25;;;;:8;:25;;;;;:105;13488:13;;13470:60;;13487:42;;13519:9;;13488:25;;13504:9;;13488:25;:::i;13470:60::-;13455:12;:75;13554:15;13534:17;:35;13577:9;;:13;13574:239;;13607:3;13599:5;:11;13596:213;;;13624:15;;13683:9;;13671;;-1:-1:-1;;;;;13624:15:0;;;;13617:32;;13650:6;;13658:50;;13698:9;;13659:21;;:9;:21;:::i;13658:50::-;13617:92;;-1:-1:-1;;;;;;13617:92:0;;;;;;;-1:-1:-1;;;;;15352:32:1;;;13617:92:0;;;15334:51:1;15401:18;;;15394:34;15307:18;;13617:92:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13596:213;;;13732:15;;13784:9;;13772;;-1:-1:-1;;;;;13732:15:0;;;;13725:32;;13758:6;;13766:36;;13799:2;;13767:14;;:2;:14;:::i;13766:36::-;13725:78;;-1:-1:-1;;;;;;13725:78:0;;;;;;;-1:-1:-1;;;;;15352:32:1;;;13725:78:0;;;15334:51:1;15401:18;;;15394:34;15307:18;;13725:78:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13596:213;13827:10;-1:-1:-1;;;;;13822:90:0;;13839:42;13871:9;13856;13840:13;;:25;;;;:::i;13839:42::-;13883:10;;13895:15;;13822:90;;;15038:25:1;;;15094:2;15079:18;;15072:34;;;;15122:18;;;15115:34;15026:2;15011:18;13822:90:0;;;;;;;13924:9;12337:1601;-1:-1:-1;;;;;;;12337:1601:0:o;4276:136::-;4334:7;4361:6;4353:30;;;;-1:-1:-1;;;4353:30:0;;18325:2:1;4353:30:0;;;18307:21:1;18364:2;18344:18;;;18337:30;-1:-1:-1;;;18383:18:1;;;18376:41;18434:18;;4353:30:0;18123:335:1;4353:30:0;4400:5;4404:1;4400;:5;:::i;:::-;4393:12;4276:136;-1:-1:-1;;;4276:136:0:o;3905:138::-;3963:7;3995:1;3990;:6;;3982:32;;;;-1:-1:-1;;;3982:32:0;;18665:2:1;3982:32:0;;;18647:21:1;18704:2;18684:18;;;18677:30;-1:-1:-1;;;18723:18:1;;;18716:43;18776:18;;3982:32:0;18463:337:1;3982:32:0;4031:5;4035:1;4031;:5;:::i;3739:160::-;3797:7;;3828:5;3832:1;3828;:5;:::i;:::-;3816:17;;3856:1;3851;:6;;3843:31;;;;-1:-1:-1;;;3843:31:0;;19007:2:1;3843:31:0;;;18989:21:1;19046:2;19026:18;;;19019:30;-1:-1:-1;;;19065:18:1;;;19058:42;19117:18;;3843:31:0;18805:336:1;18887:1313:0;19216:15;;19201:12;;:30;:48;;;;;19247:2;19235:9;;:14;19201:48;19197:144;;;19270:9;;:13;;19282:1;19270:13;:::i;:::-;19258:9;:25;;;19303:33;;19321:14;;:1;:14;:::i;:::-;19303:12;;;:17;:33::i;:::-;19288:12;:48;19197:144;19513:10;;:17;;19528:1;19513:14;:17::i;:::-;19500:10;:30;19624:24;;:28;;19651:1;;19624:28;:::i;:::-;19609:10;;19608:45;;;;:::i;:::-;19605:542;;19667:15;:13;:15::i;:::-;19720:37;19742:9;;19754:1;19742:13;;;;:::i;:::-;19738:18;;:1;:18;:::i;:::-;19720:12;;;:16;:37::i;:::-;19705:12;;:52;;;;:::i;:::-;19687:15;:70;19780:24;;19767:10;;:37;;19780:24;19767:37;:::i;:::-;19763:380;;19876:9;;19832:15;;19825:48;;-1:-1:-1;;;19825:48:0;;19867:4;19825:48;;;3858:51:1;19890:5:0;;19876:9;-1:-1:-1;;;;;19832:15:0;;19825:33;;3831:18:1;;19825:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;;;:::i;:::-;19823:72;19820:291;;19998:9;;19979;;:16;;19993:1;19979:13;:16::i;:::-;:28;19976:82;;;20034:9;;:16;;20048:1;20034:13;:16::i;:::-;20022:9;:28;19976:82;19820:291;;;20087:9;;:17;;20102:1;20087:14;:17::i;:::-;20075:9;:29;19820:291;20116:21;:19;:21::i;:::-;20179:16;20194:1;20179:12;:16;:::i;:::-;20169:27;20151:15;:45;18887:1313::o;4418:224::-;4481:7;4508:6;4500:30;;;;-1:-1:-1;;;4500:30:0;;18325:2:1;4500:30:0;;;18307:21:1;18364:2;18344:18;;;18337:30;-1:-1:-1;;;18383:18:1;;;18376:41;18434:18;;4500:30:0;18123:335:1;4500:30:0;4540:9;4552:5;4556:1;4552;:5;:::i;:::-;4540:17;-1:-1:-1;4571:5:0;4575:1;4571;:5;:::i;:::-;:10;4567:50;;4601:5;:1;4605;4601:5;:::i;:::-;4597:9;4418:224;-1:-1:-1;;;;4418:224:0:o;4049:221::-;4108:7;4131:6;4127:45;;-1:-1:-1;4160:1:0;4153:8;;4127:45;4182:9;4194:5;4198:1;4194;:5;:::i;:::-;4182:17;-1:-1:-1;4226:1:0;4217:5;4221:1;4182:17;4217:5;:::i;:::-;:10;4209:36;;;;-1:-1:-1;;;4209:36:0;;19348:2:1;4209:36:0;;;19330:21:1;19387:2;19367:18;;;19360:30;-1:-1:-1;;;19406:18:1;;;19399:43;19459:18;;4209:36:0;19146:337:1;20204:1400:0;20348:30;;20271:15;;20248:20;;20333:45;;20271:15;20333:45;:::i;:::-;20290:88;;20383:24;20424;;5961:7;20410:38;;;;:::i;:::-;20383:65;;20589:19;20551:35;:57;20547:764;;;20618:21;20642:74;20679:35;20643:29;:19;20668:3;20643:24;:29::i;20642:74::-;20728:1;20721:4;:8;20618:98;-1:-1:-1;20734:27:0;20764:45;20804:4;20764:25;20618:98;20785:3;20764:20;:25::i;:::-;:39;;:45::i;:::-;20734:75;;20850:69;20867:51;20895:22;20867;20884:4;20867:12;;:16;;:22;;;;:::i;:::-;:27;;:51::i;:::-;20850:12;;;:16;:69::i;:::-;20835:12;:84;-1:-1:-1;20547:764:0;;-1:-1:-1;20547:764:0;;20951:23;20977:74;21030:19;20978:45;:35;21019:3;20978:40;:45::i;20977:74::-;21063:1;21056:4;:8;20951:100;-1:-1:-1;21069:29:0;21101:47;21143:4;21101:27;20951:100;21124:3;21101:22;:27::i;:47::-;21069:79;;21216:71;21233:53;21261:24;21233:22;21250:4;21233:12;;:16;;:22;;;;:::i;:53::-;21216:12;;;:16;:71::i;:::-;21201:12;:86;-1:-1:-1;;20547:764:0;21315:30;:45;;;21396:12;21364:29;:44;21430:15;;21415:12;;:30;21412:94;;;21486:15;;21471:12;:30;21412:94;21527:15;;21512:12;;:30;21509:89;;;21578:15;;21563:12;:30;21509:89;20244:1360;;;20204:1400::o;4763:126::-;4825:6;4851:1;4847;:5;4844:18;;;-1:-1:-1;4861:1:0;4854:8;;4844:18;-1:-1:-1;4880:1:0;;4763:126;-1:-1:-1;4763:126:0:o;14:597:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:248::-;1495:6;1503;1556:2;1544:9;1535:7;1531:23;1527:32;1524:52;;;1572:1;1569;1562:12;1524:52;-1:-1:-1;;1595:23:1;;;1665:2;1650:18;;;1637:32;;-1:-1:-1;1427:248:1:o;1680:127::-;1741:10;1736:3;1732:20;1729:1;1722:31;1772:4;1769:1;1762:15;1796:4;1793:1;1786:15;1812:275;1883:2;1877:9;1948:2;1929:13;;-1:-1:-1;;1925:27:1;1913:40;;1983:18;1968:34;;2004:22;;;1965:62;1962:88;;;2030:18;;:::i;:::-;2066:2;2059:22;1812:275;;-1:-1:-1;1812:275:1:o;2092:718::-;2146:5;2199:3;2192:4;2184:6;2180:17;2176:27;2166:55;;2217:1;2214;2207:12;2166:55;2253:6;2240:20;2279:4;2302:18;2298:2;2295:26;2292:52;;;2324:18;;:::i;:::-;2370:2;2367:1;2363:10;2393:28;2417:2;2413;2409:11;2393:28;:::i;:::-;2455:15;;;2525;;;2521:24;;;2486:12;;;;2557:15;;;2554:35;;;2585:1;2582;2575:12;2554:35;2621:2;2613:6;2609:15;2598:26;;2633:148;2649:6;2644:3;2641:15;2633:148;;;2715:23;2734:3;2715:23;:::i;:::-;2703:36;;2666:12;;;;2759;;;;2633:148;;;2799:5;2092:718;-1:-1:-1;;;;;;;2092:718:1:o;2815:559::-;2926:6;2934;2942;2950;3003:3;2991:9;2982:7;2978:23;2974:33;2971:53;;;3020:1;3017;3010:12;2971:53;3056:9;3043:23;3033:33;;3113:2;3102:9;3098:18;3085:32;3075:42;;3168:2;3157:9;3153:18;3140:32;3195:18;3187:6;3184:30;3181:50;;;3227:1;3224;3217:12;3181:50;3250:61;3303:7;3294:6;3283:9;3279:22;3250:61;:::i;:::-;3240:71;;;3330:38;3364:2;3353:9;3349:18;3330:38;:::i;:::-;3320:48;;2815:559;;;;;;;:::o;3379:328::-;3456:6;3464;3472;3525:2;3513:9;3504:7;3500:23;3496:32;3493:52;;;3541:1;3538;3531:12;3493:52;3564:29;3583:9;3564:29;:::i;:::-;3554:39;;3612:38;3646:2;3635:9;3631:18;3612:38;:::i;:::-;3602:48;;3697:2;3686:9;3682:18;3669:32;3659:42;;3379:328;;;;;:::o;4291:334::-;4368:6;4376;4384;4437:2;4425:9;4416:7;4412:23;4408:32;4405:52;;;4453:1;4450;4443:12;4405:52;4476:29;4495:9;4476:29;:::i;:::-;4466:39;;4524:38;4558:2;4547:9;4543:18;4524:38;:::i;:::-;4514:48;;4581:38;4615:2;4604:9;4600:18;4581:38;:::i;:::-;4571:48;;4291:334;;;;;:::o;4630:316::-;4707:6;4715;4723;4776:2;4764:9;4755:7;4751:23;4747:32;4744:52;;;4792:1;4789;4782:12;4744:52;-1:-1:-1;;4815:23:1;;;4885:2;4870:18;;4857:32;;-1:-1:-1;4936:2:1;4921:18;;;4908:32;;4630:316;-1:-1:-1;4630:316:1:o;4951:186::-;5010:6;5063:2;5051:9;5042:7;5038:23;5034:32;5031:52;;;5079:1;5076;5069:12;5031:52;5102:29;5121:9;5102:29;:::i;5142:385::-;5228:6;5236;5244;5252;5305:3;5293:9;5284:7;5280:23;5276:33;5273:53;;;5322:1;5319;5312:12;5273:53;-1:-1:-1;;5345:23:1;;;5415:2;5400:18;;5387:32;;-1:-1:-1;5466:2:1;5451:18;;5438:32;;5517:2;5502:18;5489:32;;-1:-1:-1;5142:385:1;-1:-1:-1;5142:385:1:o;5532:980::-;5627:6;5635;5643;5651;5704:3;5692:9;5683:7;5679:23;5675:33;5672:53;;;5721:1;5718;5711:12;5672:53;5744:29;5763:9;5744:29;:::i;:::-;5734:39;;5792:2;5841;5830:9;5826:18;5813:32;5803:42;;5864:38;5898:2;5887:9;5883:18;5864:38;:::i;:::-;5854:48;;5953:2;5942:9;5938:18;5925:32;5976:18;6017:2;6009:6;6006:14;6003:34;;;6033:1;6030;6023:12;6003:34;6071:6;6060:9;6056:22;6046:32;;6116:7;6109:4;6105:2;6101:13;6097:27;6087:55;;6138:1;6135;6128:12;6087:55;6174:2;6161:16;6196:2;6192;6189:10;6186:36;;;6202:18;;:::i;:::-;6244:53;6287:2;6268:13;;-1:-1:-1;;6264:27:1;6260:36;;6244:53;:::i;:::-;6231:66;;6320:2;6313:5;6306:17;6360:7;6355:2;6350;6346;6342:11;6338:20;6335:33;6332:53;;;6381:1;6378;6371:12;6332:53;6436:2;6431;6427;6423:11;6418:2;6411:5;6407:14;6394:45;6480:1;6475:2;6470;6463:5;6459:14;6455:23;6448:34;;6501:5;6491:15;;;;;5532:980;;;;;;;:::o;6838:118::-;6924:5;6917:13;6910:21;6903:5;6900:32;6890:60;;6946:1;6943;6936:12;6890:60;6838:118;:::o;6961:860::-;7091:6;7099;7107;7115;7168:3;7156:9;7147:7;7143:23;7139:33;7136:53;;;7185:1;7182;7175:12;7136:53;7224:9;7211:23;7243:28;7265:5;7243:28;:::i;:::-;7290:5;-1:-1:-1;7347:2:1;7332:18;;7319:32;7360:30;7319:32;7360:30;:::i;:::-;7409:7;-1:-1:-1;7467:2:1;7452:18;;7439:32;7490:18;7520:14;;;7517:34;;;7547:1;7544;7537:12;7517:34;7570:61;7623:7;7614:6;7603:9;7599:22;7570:61;:::i;:::-;7560:71;;7684:2;7673:9;7669:18;7656:32;7640:48;;7713:2;7703:8;7700:16;7697:36;;;7729:1;7726;7719:12;7697:36;;7752:63;7807:7;7796:8;7785:9;7781:24;7752:63;:::i;:::-;7742:73;;;6961:860;;;;;;;:::o;7826:450::-;7897:6;7905;7913;7966:2;7954:9;7945:7;7941:23;7937:32;7934:52;;;7982:1;7979;7972:12;7934:52;8021:9;8008:23;8040:28;8062:5;8040:28;:::i;:::-;8087:5;-1:-1:-1;8144:2:1;8129:18;;8116:32;8157:30;8116:32;8157:30;:::i;8281:732::-;8417:6;8425;8433;8441;8494:3;8482:9;8473:7;8469:23;8465:33;8462:53;;;8511:1;8508;8501:12;8462:53;8547:9;8534:23;8524:33;;8604:2;8593:9;8589:18;8576:32;8566:42;;8659:2;8648:9;8644:18;8631:32;8682:18;8723:2;8715:6;8712:14;8709:34;;;8739:1;8736;8729:12;9018:260;9086:6;9094;9147:2;9135:9;9126:7;9122:23;9118:32;9115:52;;;9163:1;9160;9153:12;9115:52;9186:29;9205:9;9186:29;:::i;:::-;9176:39;;9234:38;9268:2;9257:9;9253:18;9234:38;:::i;:::-;9224:48;;9018:260;;;;;:::o;9283:322::-;9360:6;9368;9376;9429:2;9417:9;9408:7;9404:23;9400:32;9397:52;;;9445:1;9442;9435:12;9397:52;9481:9;9468:23;9458:33;;9538:2;9527:9;9523:18;9510:32;9500:42;;9561:38;9595:2;9584:9;9580:18;9561:38;:::i;9610:380::-;9689:1;9685:12;;;;9732;;;9753:61;;9807:4;9799:6;9795:17;9785:27;;9753:61;9860:2;9852:6;9849:14;9829:18;9826:38;9823:161;;;9906:10;9901:3;9897:20;9894:1;9887:31;9941:4;9938:1;9931:15;9969:4;9966:1;9959:15;9823:161;;9610:380;;;:::o;9995:127::-;10056:10;10051:3;10047:20;10044:1;10037:31;10087:4;10084:1;10077:15;10111:4;10108:1;10101:15;10127:128;10167:3;10198:1;10194:6;10191:1;10188:13;10185:39;;;10204:18;;:::i;:::-;-1:-1:-1;10240:9:1;;10127:128::o;10260:127::-;10321:10;10316:3;10312:20;10309:1;10302:31;10352:4;10349:1;10342:15;10376:4;10373:1;10366:15;10392:135;10431:3;-1:-1:-1;;10452:17:1;;10449:43;;;10472:18;;:::i;:::-;-1:-1:-1;10519:1:1;10508:13;;10392:135::o;10532:422::-;10621:1;10664:5;10621:1;10678:270;10699:7;10689:8;10686:21;10678:270;;;10758:4;10754:1;10750:6;10746:17;10740:4;10737:27;10734:53;;;10767:18;;:::i;:::-;10817:7;10807:8;10803:22;10800:55;;;10837:16;;;;10800:55;10916:22;;;;10876:15;;;;10678:270;;;10682:3;10532:422;;;;;:::o;10959:806::-;11008:5;11038:8;11028:80;;-1:-1:-1;11079:1:1;11093:5;;11028:80;11127:4;11117:76;;-1:-1:-1;11164:1:1;11178:5;;11117:76;11209:4;11227:1;11222:59;;;;11295:1;11290:130;;;;11202:218;;11222:59;11252:1;11243:10;;11266:5;;;11290:130;11327:3;11317:8;11314:17;11311:43;;;11334:18;;:::i;:::-;-1:-1:-1;;11390:1:1;11376:16;;11405:5;;11202:218;;11504:2;11494:8;11491:16;11485:3;11479:4;11476:13;11472:36;11466:2;11456:8;11453:16;11448:2;11442:4;11439:12;11435:35;11432:77;11429:159;;;-1:-1:-1;11541:19:1;;;11573:5;;11429:159;11620:34;11645:8;11639:4;11620:34;:::i;:::-;11690:6;11686:1;11682:6;11678:19;11669:7;11666:32;11663:58;;;11701:18;;:::i;:::-;11739:20;;10959:806;-1:-1:-1;;;10959:806:1:o;11770:131::-;11830:5;11859:36;11886:8;11880:4;11859:36;:::i;11906:168::-;11946:7;12012:1;12008;12004:6;12000:14;11997:1;11994:21;11989:1;11982:9;11975:17;11971:45;11968:71;;;12019:18;;:::i;:::-;-1:-1:-1;12059:9:1;;11906:168::o;12418:125::-;12458:4;12486:1;12483;12480:8;12477:34;;;12491:18;;:::i;:::-;-1:-1:-1;12528:9:1;;12418:125::o;12548:127::-;12609:10;12604:3;12600:20;12597:1;12590:31;12640:4;12637:1;12630:15;12664:4;12661:1;12654:15;12680:120;12720:1;12746;12736:35;;12751:18;;:::i;:::-;-1:-1:-1;12785:9:1;;12680:120::o;12805:140::-;12863:5;12892:47;12933:4;12923:8;12919:19;12913:4;12892:47;:::i;12950:127::-;13011:10;13006:3;13002:20;12999:1;12992:31;13042:4;13039:1;13032:15;13066:4;13063:1;13056:15;13290:359;13475:19;;;13532:2;13528:15;;;;-1:-1:-1;;13524:53:1;13519:2;13510:12;;13503:75;13603:2;13594:12;;13587:28;13640:2;13631:12;;13290:359::o;13654:410::-;13856:2;13838:21;;;13895:2;13875:18;;;13868:30;13934:34;13929:2;13914:18;;13907:62;-1:-1:-1;;;14000:2:1;13985:18;;13978:44;14054:3;14039:19;;13654:410::o;14069:404::-;14271:2;14253:21;;;14310:2;14290:18;;;14283:30;14349:34;14344:2;14329:18;;14322:62;-1:-1:-1;;;14415:2:1;14400:18;;14393:38;14463:3;14448:19;;14069:404::o;14478:345::-;14680:2;14662:21;;;14719:2;14699:18;;;14692:30;-1:-1:-1;;;14753:2:1;14738:18;;14731:51;14814:2;14799:18;;14478:345::o;15439:245::-;15506:6;15559:2;15547:9;15538:7;15534:23;15530:32;15527:52;;;15575:1;15572;15565:12;15527:52;15607:9;15601:16;15626:28;15648:5;15626:28;:::i;15689:425::-;15891:2;15873:21;;;15930:2;15910:18;;;15903:30;15969:34;15964:2;15949:18;;15942:62;16040:31;16035:2;16020:18;;16013:59;16104:3;16089:19;;15689:425::o;16119:112::-;16151:1;16177;16167:35;;16182:18;;:::i;:::-;-1:-1:-1;16216:9:1;;16119:112::o;17286:184::-;17356:6;17409:2;17397:9;17388:7;17384:23;17380:32;17377:52;;;17425:1;17422;17415:12;17377:52;-1:-1:-1;17448:16:1;;17286:184;-1:-1:-1;17286:184:1:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    5860,
    26899
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x339 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x757991A8 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x9FF5FF49 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xCB9AE707 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDC6E9CF9 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDC6E9CF9 EQ PUSH2 0x8E4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x8FA JUMPI DUP1 PUSH4 0xDDFBD8DD EQ PUSH2 0x940 JUMPI DUP1 PUSH4 0xE932012B EQ PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCB9AE707 EQ PUSH2 0x8A3 JUMPI DUP1 PUSH4 0xD0856D16 EQ PUSH2 0x8B9 JUMPI DUP1 PUSH4 0xD60D2CE6 EQ PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB5ADE81B GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xB5ADE81B EQ PUSH2 0x838 JUMPI DUP1 PUSH4 0xBB7A779D EQ PUSH2 0x84E JUMPI DUP1 PUSH4 0xC0ABEBE0 EQ PUSH2 0x86E JUMPI DUP1 PUSH4 0xC8A1465C EQ PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9FF5FF49 EQ PUSH2 0x7E2 JUMPI DUP1 PUSH4 0xA68EB88E EQ PUSH2 0x802 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AE0368B GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x94B939EF GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x94B939EF EQ PUSH2 0x75B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x77B JUMPI DUP1 PUSH4 0x97566AA0 EQ PUSH2 0x7AC JUMPI DUP1 PUSH4 0x9FA879D9 EQ PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AE0368B EQ PUSH2 0x705 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x73B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x757991A8 EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0x81269A56 EQ PUSH2 0x68D JUMPI DUP1 PUSH4 0x829965CC EQ PUSH2 0x6AD JUMPI DUP1 PUSH4 0x87A2A9D6 EQ PUSH2 0x6C3 JUMPI DUP1 PUSH4 0x8A5550F6 EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0x8A769D35 EQ PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30717BF3 GT PUSH2 0x285 JUMPI DUP1 PUSH4 0x510DE094 GT PUSH2 0x223 JUMPI DUP1 PUSH4 0x64E46726 GT PUSH2 0x1FD JUMPI DUP1 PUSH4 0x64E46726 EQ PUSH2 0x5EC JUMPI DUP1 PUSH4 0x65104A91 EQ PUSH2 0x60C JUMPI DUP1 PUSH4 0x6DE9F32B EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x510DE094 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0x59C5BF60 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0x61805CC3 EQ PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x45D8A232 GT PUSH2 0x25F JUMPI DUP1 PUSH4 0x45D8A232 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0x490203A7 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0x4EF37628 EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0x4FA972E1 EQ PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30717BF3 EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x32E99708 EQ PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FCCB33C GT PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x23B872DD GT PUSH2 0x2CC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x2D38BF7A EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x2EA83565 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x2F104E0C EQ PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FCCB33C EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x20FA80D9 EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x2381A60E EQ PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x10294317 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x17DA485F EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x1801FBE5 EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35D PUSH2 0x976 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x393 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x16 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0xA71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x393 PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x29E4 JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x393 PUSH2 0x42D CALLDATASIZE PUSH1 0x4 PUSH2 0x2AD4 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x393 PUSH2 0x479 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B35 JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7 SLOAD PUSH2 0x4CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x504 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x50D PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x36A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x3B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0xB40 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0xC52 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x11 SLOAD PUSH2 0x3B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x580 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x4CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CA PUSH2 0x5C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CA PUSH2 0x5E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB4 JUMP JUMPDEST PUSH2 0xD0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CA PUSH2 0x607 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B71 JUMP JUMPDEST PUSH2 0xDE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x618 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x627 CALLDATASIZE PUSH1 0x4 PUSH2 0x29E4 JUMP JUMPDEST PUSH2 0xF6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x65D CALLDATASIZE PUSH1 0x4 PUSH2 0x2BE0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xC SLOAD PUSH2 0x3B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x699 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x393 PUSH2 0x6A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BFB JUMP JUMPDEST PUSH2 0x1060 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x21 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x4CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CA PUSH2 0x756 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x10AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH2 0x4CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35D PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x466F726765 PUSH1 0xD8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x7C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB4 JUMP JUMPDEST PUSH2 0x1138 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x7FD CALLDATASIZE PUSH1 0x4 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x1173 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x80E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x393 PUSH2 0x833 CALLDATASIZE PUSH1 0x4 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x1602 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x869 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D87 JUMP JUMPDEST PUSH2 0x1687 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x87A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1B SLOAD PUSH2 0x3B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x89E CALLDATASIZE PUSH1 0x4 PUSH2 0x2DB7 JUMP JUMPDEST PUSH2 0x1A06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x23 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CA PUSH2 0x1E90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x915 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x94C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x95B CALLDATASIZE PUSH1 0x4 PUSH2 0x2E26 JUMP JUMPDEST PUSH2 0x20EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x20 DUP1 SLOAD PUSH2 0x983 SWAP1 PUSH2 0x2E52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9AF SWAP1 PUSH2 0x2E52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9FC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9FC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9DF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0xA5F SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8A PUSH1 0x10 SLOAD PUSH1 0xF SLOAD PUSH2 0x24A8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9C DUP4 DUP4 CALLER PUSH2 0x20EC JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD PUSH1 0x1 PUSH2 0xAB4 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xACC JUMPI PUSH2 0xACC PUSH2 0x2A06 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAF5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD PUSH2 0xB08 SWAP1 PUSH1 0x1 PUSH2 0x2EA3 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xB4C JUMPI DUP4 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xB22 JUMPI PUSH2 0xB22 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0xB44 DUP2 PUSH2 0x2ED1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAFB JUMP JUMPDEST POP PUSH2 0xB59 DUP7 DUP7 DUP7 DUP5 PUSH2 0x1A06 JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB89 SWAP1 DUP4 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1D DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0xBC0 SWAP1 DUP4 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1D PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x1C SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0xBFE SWAP1 DUP4 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x31F6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xC40 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8A PUSH1 0x12 SLOAD PUSH1 0x2 PUSH2 0xC66 SWAP2 SWAP1 PUSH2 0x2FD0 JUMP JUMPDEST PUSH2 0xC72 PUSH1 0x12 PUSH1 0xA PUSH2 0x2FD0 JUMP JUMPDEST PUSH2 0xC7D SWAP1 PUSH1 0x64 PUSH2 0x2FDC JUMP JUMPDEST SWAP1 PUSH2 0x24A8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB40 PUSH2 0xD1D DUP4 DUP6 PUSH2 0x2FFB JUMP JUMPDEST PUSH2 0xD29 SWAP1 PUSH2 0x378 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0xD33 SWAP2 SWAP1 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x378 PUSH2 0xD4A DUP4 PUSH1 0x64 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0xD54 SWAP2 SWAP1 PUSH2 0x3028 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13A DUP3 LT ISZERO PUSH2 0xDB5 JUMPI PUSH3 0x470DC PUSH2 0xD7A PUSH2 0x378 PUSH2 0xC7D DUP7 PUSH4 0x26F7F3C PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0xD9A PUSH3 0xC0840 PUSH2 0xD8C PUSH1 0x2 DUP9 PUSH2 0x303C JUMP JUMPDEST PUSH2 0xC7D SWAP1 PUSH4 0x3A2CDF0 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0xDA4 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x2FFB JUMP JUMPDEST SWAP1 POP PUSH2 0xDDA JUMP JUMPDEST PUSH2 0xDC9 PUSH2 0x378 PUSH2 0xC7D DUP6 PUSH4 0x5F5E100 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0xDD7 SWAP1 PUSH4 0x14DC9380 PUSH2 0x2EA3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x21 SLOAD PUSH1 0x2 PUSH2 0xE3C SWAP2 SWAP1 PUSH2 0x2FD0 JUMP JUMPDEST PUSH2 0xE47 SWAP1 PUSH1 0x2 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0xE5C SWAP1 PUSH11 0x115EEC47F6CF7E35000000 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0x24 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xE72 JUMPI PUSH2 0xE72 PUSH2 0x304B JUMP JUMPDEST PUSH1 0x24 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x12 DUP2 SWAP1 SSTORE PUSH1 0x1B SSTORE PUSH1 0xF SLOAD PUSH2 0xE98 SWAP1 PUSH2 0x7535 PUSH2 0x24A8 JUMP JUMPDEST PUSH1 0x10 SSTORE TIMESTAMP PUSH1 0xB SSTORE PUSH2 0xEA7 PUSH2 0x2590 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x31F6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x8 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC SLOAD PUSH1 0x15 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x31F6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0xF61 SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x11 SLOAD CALLER DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF89 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3061 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP3 DUP2 EQ PUSH2 0xFC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC6 SWAP1 PUSH2 0x3089 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT PUSH2 0xFE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC6 SWAP1 PUSH2 0x30D7 JUMP JUMPDEST PUSH2 0xFE9 PUSH2 0x2590 JUMP JUMPDEST PUSH1 0x16 SLOAD TIMESTAMP GT PUSH2 0x100A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC6 SWAP1 PUSH2 0x311F JUMP JUMPDEST TIMESTAMP PUSH1 0x16 SSTORE PUSH1 0xC SLOAD PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLER DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1078 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3061 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 SHR GT ISZERO PUSH2 0x10A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP4 EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ PUSH2 0x10C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x110D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1131 SWAP2 SWAP1 PUSH2 0x314E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x11 SLOAD CALLER DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1152 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3061 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x1 PUSH2 0x1183 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST DUP3 MLOAD EQ PUSH2 0x11A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC6 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1366 JUMPI PUSH2 0x11B9 DUP2 PUSH1 0x1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH2 0x11C4 SWAP1 PUSH1 0x2 PUSH2 0x2FD0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x11D1 SWAP2 SWAP1 PUSH2 0x31C8 JUMP JUMPDEST ISZERO PUSH2 0x11DB JUMPI PUSH2 0x1366 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11F7 JUMPI PUSH2 0x11F7 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1248 JUMPI POP PUSH1 0x8 SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1234 JUMPI PUSH2 0x1234 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x1294 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A1 DUP3 PUSH1 0x1 PUSH2 0x2EA3 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1353 JUMPI DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12BF JUMPI PUSH2 0x12BF PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x12E2 JUMPI PUSH2 0x12E2 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC6 JUMP JUMPDEST DUP1 PUSH2 0x134B DUP2 PUSH2 0x2ED1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12A4 JUMP JUMPDEST POP DUP1 PUSH2 0x135E DUP2 PUSH2 0x2ED1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11A5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138D DUP8 DUP8 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1380 JUMPI PUSH2 0x1380 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1687 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x13CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6D696E74206973737565 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x15AC JUMPI PUSH2 0x13E5 DUP2 PUSH1 0x1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH2 0x13F0 SWAP1 PUSH1 0x2 PUSH2 0x2FD0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x13FD SWAP2 SWAP1 PUSH2 0x31C8 JUMP JUMPDEST PUSH2 0x159A JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1413 JUMPI PUSH2 0x1413 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1463 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1487 SWAP2 SWAP1 PUSH2 0x31DC JUMP JUMPDEST SWAP2 POP DUP2 ISZERO PUSH2 0x159A JUMPI PUSH2 0x149A PUSH1 0x3 DUP3 PUSH2 0x31C8 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x14A6 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x14CB JUMPI PUSH2 0x14C4 PUSH5 0x3A35294400 PUSH2 0x14BE DUP7 DUP6 PUSH2 0x2FDC JUMP JUMPDEST SWAP1 PUSH2 0x2736 JUMP JUMPDEST SWAP3 POP PUSH2 0x14E1 JUMP JUMPDEST PUSH2 0x14DE PUSH5 0x3A35294400 PUSH2 0xC7D DUP7 DUP6 PUSH2 0x2FDC JUMP JUMPDEST SWAP3 POP JUMPDEST DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x14F3 JUMPI PUSH2 0x14F3 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x151B JUMPI PUSH2 0x151B PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1555 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1574 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1598 SWAP2 SWAP1 PUSH2 0x314E JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x15A4 DUP2 PUSH2 0x2ED1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13D2 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP1 PUSH32 0xC32557ACCEB6AEB205C3115AC08A8DC54D82FB5EA08F2B7F1E6B794488E3851C SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x161C SWAP1 DUP4 PUSH2 0x24F6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1648 SWAP1 DUP4 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x31F6 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xA5F SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1691 PUSH2 0x2590 JUMP JUMPDEST PUSH1 0x16 SLOAD TIMESTAMP GT PUSH2 0x16B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC6 SWAP1 PUSH2 0x311F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB40 PUSH1 0x16 SLOAD TIMESTAMP PUSH2 0x16C5 SWAP2 SWAP1 PUSH2 0x2FFB JUMP JUMPDEST PUSH2 0x16D1 SWAP1 PUSH2 0x378 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x16DB SWAP2 SWAP1 PUSH2 0x3028 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x378 PUSH2 0x16ED DUP4 PUSH1 0x64 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x16F7 SWAP2 SWAP1 PUSH2 0x3028 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13A DUP3 LT ISZERO PUSH2 0x173C JUMPI PUSH2 0x1719 PUSH2 0x378 PUSH2 0xC7D DUP6 PUSH4 0x26F7F3C PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x172B PUSH3 0xC0840 PUSH2 0xD8C PUSH1 0x2 DUP8 PUSH2 0x303C JUMP JUMPDEST PUSH2 0x1735 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1761 JUMP JUMPDEST PUSH2 0x1750 PUSH2 0x378 PUSH2 0xC7D DUP6 PUSH4 0x5F5E100 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x175E SWAP1 PUSH4 0xD09DC300 PUSH2 0x2EA3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x1799 PUSH2 0x177A PUSH4 0x5F5E100 DUP4 PUSH1 0x14 SLOAD PUSH2 0xC7D SWAP2 SWAP1 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x14 SLOAD PUSH2 0x17EF SWAP1 PUSH2 0x17CE SWAP1 PUSH4 0xBEBC200 SWAP1 PUSH2 0xC7D SWAP1 DUP6 SWAP1 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x14 SLOAD PUSH2 0x182F SWAP1 PUSH2 0x1826 SWAP1 PUSH4 0x5F5E100 SWAP1 PUSH2 0xC7D SWAP1 DUP6 SWAP1 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x1B SLOAD SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0x1B SSTORE TIMESTAMP PUSH1 0x16 SSTORE PUSH1 0x1E SLOAD ISZERO PUSH2 0x1997 JUMPI PUSH1 0xC8 DUP3 LT ISZERO PUSH2 0x18F7 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1E SLOAD PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 DUP9 SWAP2 PUSH2 0x1882 SWAP2 PUSH4 0x5F5E100 SWAP2 PUSH2 0x1878 SWAP1 DUP9 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0xC7D SWAP2 SWAP1 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18F1 SWAP2 SWAP1 PUSH2 0x314E JUMP JUMPDEST POP PUSH2 0x1997 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1E SLOAD PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 DUP9 SWAP2 PUSH2 0x1926 SWAP2 PUSH1 0xA SWAP2 PUSH2 0x1878 SWAP1 PUSH1 0x17 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1971 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1995 SWAP2 SWAP1 PUSH2 0x314E JUMP JUMPDEST POP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D PUSH2 0x19D8 PUSH4 0x5F5E100 DUP5 PUSH1 0x14 SLOAD PUSH2 0xC7D SWAP2 SWAP1 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x1 PUSH2 0x1A16 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST DUP3 MLOAD EQ PUSH2 0x1A35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC6 SWAP1 PUSH2 0x316B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1A4C DUP2 PUSH1 0x1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH2 0x1A57 SWAP1 PUSH1 0x2 PUSH2 0x2FD0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1A64 SWAP2 SWAP1 PUSH2 0x31C8 JUMP JUMPDEST ISZERO PUSH2 0x1A6E JUMPI PUSH2 0x1BF9 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A8A JUMPI PUSH2 0x1A8A PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1ADB JUMPI POP PUSH1 0x8 SLOAD DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP6 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1AC7 JUMPI PUSH2 0x1AC7 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x1B27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B34 DUP3 PUSH1 0x1 PUSH2 0x2EA3 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x1BE6 JUMPI DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B52 JUMPI PUSH2 0x1B52 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B75 JUMPI PUSH2 0x1B75 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1BD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC6 JUMP JUMPDEST DUP1 PUSH2 0x1BDE DUP2 PUSH2 0x2ED1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1B37 JUMP JUMPDEST POP DUP1 PUSH2 0x1BF1 DUP2 PUSH2 0x2ED1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C20 DUP8 DUP8 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1C13 JUMPI PUSH2 0x1C13 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x20EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1C5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6D696E74206973737565 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1E39 JUMPI PUSH2 0x1C78 DUP2 PUSH1 0x1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH2 0x1C83 SWAP1 PUSH1 0x2 PUSH2 0x2FD0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x1C90 SWAP2 SWAP1 PUSH2 0x31C8 JUMP JUMPDEST PUSH2 0x1E27 JUMPI DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1CA6 JUMPI PUSH2 0x1CA6 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D1A SWAP2 SWAP1 PUSH2 0x31DC JUMP JUMPDEST SWAP2 POP DUP2 ISZERO PUSH2 0x1D6E JUMPI PUSH2 0x1D2D PUSH1 0x3 DUP3 PUSH2 0x31C8 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1D39 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1D58 JUMPI PUSH2 0x1D51 PUSH5 0x3A35294400 PUSH2 0x14BE DUP7 DUP6 PUSH2 0x2FDC JUMP JUMPDEST SWAP3 POP PUSH2 0x1D6E JUMP JUMPDEST PUSH2 0x1D6B PUSH5 0x3A35294400 PUSH2 0xC7D DUP7 DUP6 PUSH2 0x2FDC JUMP JUMPDEST SWAP3 POP JUMPDEST DUP8 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1D80 JUMPI PUSH2 0x1D80 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DA8 JUMPI PUSH2 0x1DA8 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE2 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E25 SWAP2 SWAP1 PUSH2 0x314E JUMP JUMPDEST POP JUMPDEST DUP1 PUSH2 0x1E31 DUP2 PUSH2 0x2ED1 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C65 JUMP JUMPDEST POP PUSH1 0xC SLOAD PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP1 PUSH32 0xC32557ACCEB6AEB205C3115AC08A8DC54D82FB5EA08F2B7F1E6B794488E3851C SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 SLOAD TIMESTAMP PUSH2 0x1EA0 SWAP2 SWAP1 PUSH2 0x2FFB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x15 SLOAD PUSH1 0xC SLOAD PUSH2 0x1EB4 SWAP2 SWAP1 PUSH2 0x2FFB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1EC2 DUP3 DUP5 PUSH2 0x3028 JUMP JUMPDEST SWAP1 POP PUSH2 0x1ED6 PUSH1 0x12 SLOAD PUSH1 0x2 PUSH2 0xC66 SWAP2 SWAP1 PUSH2 0x2FD0 JUMP JUMPDEST PUSH1 0x14 SSTORE PUSH1 0x0 PUSH2 0x1EED PUSH2 0xB40 PUSH2 0x14BE DUP5 PUSH2 0x378 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x378 PUSH2 0x1F04 DUP4 PUSH1 0x64 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x1F0E SWAP2 SWAP1 PUSH2 0x3028 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xC8 DUP3 LT ISZERO PUSH2 0x1F52 JUMPI PUSH2 0x1F2F PUSH2 0x378 PUSH2 0xC7D DUP6 PUSH4 0x26F7F3C PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x1F41 PUSH3 0xC0840 PUSH2 0xD8C PUSH1 0x2 DUP8 PUSH2 0x303C JUMP JUMPDEST PUSH2 0x1F4B SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F59 JUMP JUMPDEST POP PUSH4 0xDB58580 JUMPDEST PUSH2 0x1F7D PUSH4 0xBEBC200 PUSH1 0x1E SLOAD PUSH1 0x19 SLOAD DUP5 DUP10 PUSH2 0x1F73 SWAP2 SWAP1 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x1878 SWAP2 SWAP1 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0xD SLOAD PUSH1 0x19 SLOAD PUSH1 0x4 SWAP2 PUSH2 0x1F92 SWAP2 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x1F9D SWAP1 PUSH1 0x3C PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x1FA7 SWAP2 SWAP1 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2013 SWAP2 SWAP1 PUSH2 0x31DC JUMP JUMPDEST GT ISZERO PUSH2 0x20D4 JUMPI PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH1 0x1E SLOAD PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 PUSH4 0xA9059CBB SWAP4 AND SWAP2 PUSH2 0x204E SWAP2 PUSH4 0xBEBC200 SWAP2 SWAP1 PUSH2 0x1F73 DUP9 DUP14 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2099 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20BD SWAP2 SWAP1 PUSH2 0x314E JUMP JUMPDEST POP PUSH1 0x1F SLOAD PUSH2 0x20CC SWAP1 PUSH1 0x1 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x1E SSTORE PUSH2 0x20DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1E SSTORE JUMPDEST POP POP PUSH1 0xC SLOAD PUSH1 0x15 SSTORE POP POP TIMESTAMP PUSH1 0x22 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x11 SLOAD CALLER DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2106 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3061 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP4 DUP2 EQ PUSH2 0x213D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC6 SWAP1 PUSH2 0x3089 JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 LT PUSH2 0x215E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC6 SWAP1 PUSH2 0x30D7 JUMP JUMPDEST PUSH2 0x2166 PUSH2 0x2590 JUMP JUMPDEST PUSH1 0x16 SLOAD TIMESTAMP GT PUSH2 0x2187 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC6 SWAP1 PUSH2 0x311F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB40 PUSH1 0x16 SLOAD TIMESTAMP PUSH2 0x219A SWAP2 SWAP1 PUSH2 0x2FFB JUMP JUMPDEST PUSH2 0x21A6 SWAP1 PUSH2 0x378 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x21B0 SWAP2 SWAP1 PUSH2 0x3028 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x378 PUSH2 0x21C2 DUP4 PUSH1 0x64 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x21CC SWAP2 SWAP1 PUSH2 0x3028 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x13A DUP3 LT ISZERO PUSH2 0x2211 JUMPI PUSH2 0x21EE PUSH2 0x378 PUSH2 0xC7D DUP6 PUSH4 0x26F7F3C PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x2200 PUSH3 0xC0840 PUSH2 0xD8C PUSH1 0x2 DUP8 PUSH2 0x303C JUMP JUMPDEST PUSH2 0x220A SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2236 JUMP JUMPDEST PUSH2 0x2225 PUSH2 0x378 PUSH2 0xC7D DUP6 PUSH4 0x5F5E100 PUSH2 0x2FDC JUMP JUMPDEST PUSH2 0x2233 SWAP1 PUSH4 0x14DC9380 PUSH2 0x2EA3 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x226E PUSH2 0x224F PUSH4 0x5F5E100 DUP4 PUSH1 0x14 SLOAD PUSH2 0xC7D SWAP2 SWAP1 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x14 SLOAD PUSH2 0x22A3 SWAP1 PUSH2 0x17CE SWAP1 PUSH4 0xBEBC200 SWAP1 PUSH2 0xC7D SWAP1 DUP6 SWAP1 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x14 SLOAD PUSH2 0x22DA SWAP1 PUSH2 0x1826 SWAP1 PUSH4 0x5F5E100 SWAP1 PUSH2 0xC7D SWAP1 DUP6 SWAP1 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x1B SSTORE TIMESTAMP PUSH1 0x16 SSTORE PUSH1 0x1E SLOAD ISZERO PUSH2 0x2438 JUMPI PUSH1 0xC8 DUP3 LT ISZERO PUSH2 0x2398 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1E SLOAD PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 DUP10 SWAP2 PUSH2 0x2323 SWAP2 PUSH4 0x5F5E100 SWAP2 PUSH2 0x1878 SWAP1 DUP9 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x236E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2392 SWAP2 SWAP1 PUSH2 0x314E JUMP JUMPDEST POP PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1E SLOAD PUSH1 0x19 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 DUP10 SWAP2 PUSH2 0x23C7 SWAP2 PUSH1 0xA SWAP2 PUSH2 0x1878 SWAP1 PUSH1 0x17 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2412 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2436 SWAP2 SWAP1 PUSH2 0x314E JUMP JUMPDEST POP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D PUSH2 0x2479 PUSH4 0x5F5E100 DUP5 PUSH1 0x14 SLOAD PUSH2 0xC7D SWAP2 SWAP1 PUSH2 0x2FDC JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x11 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x24E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x446976206279207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x24EF DUP3 DUP5 PUSH2 0x3028 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x2538 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x53756220756E646572666C6F77 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC6 JUMP JUMPDEST PUSH2 0x24EF DUP3 DUP5 PUSH2 0x2FFB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x254F DUP4 DUP6 PUSH2 0x2EA3 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x24EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x416464206F766572666C6F77 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x1B SLOAD GT DUP1 ISZERO PUSH2 0x25A5 JUMPI POP PUSH1 0x27 PUSH1 0x12 SLOAD LT JUMPDEST ISZERO PUSH2 0x25D9 JUMPI PUSH1 0x12 SLOAD PUSH2 0x25B8 SWAP1 PUSH1 0x1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH1 0x12 DUP2 SWAP1 SSTORE PUSH2 0x25D5 SWAP1 PUSH2 0x25CC SWAP1 PUSH1 0x2 PUSH2 0x2FD0 JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 PUSH2 0x27A3 JUMP JUMPDEST PUSH1 0x10 SSTORE JUMPDEST PUSH1 0xC SLOAD PUSH2 0x25E7 SWAP1 PUSH1 0x1 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xD SLOAD PUSH2 0x25F9 SWAP1 PUSH1 0x4 SWAP1 PUSH2 0x3028 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x2606 SWAP2 SWAP1 PUSH2 0x31C8 JUMP JUMPDEST PUSH2 0x2725 JUMPI PUSH2 0x2612 PUSH2 0x1E90 JUMP JUMPDEST PUSH2 0x2638 PUSH1 0x12 SLOAD PUSH1 0x1 PUSH2 0x2624 SWAP2 SWAP1 PUSH2 0x2EA3 JUMP JUMPDEST PUSH2 0x262F SWAP1 PUSH1 0x2 PUSH2 0x2FD0 JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH2 0x24A8 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x2645 SWAP2 SWAP1 PUSH2 0x2FFB JUMP JUMPDEST PUSH1 0x13 SSTORE PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH2 0x2658 SWAP2 SWAP1 PUSH2 0x31C8 JUMP JUMPDEST PUSH2 0x2725 JUMPI PUSH1 0x19 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x4E20 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26CE SWAP2 SWAP1 PUSH2 0x31DC JUMP JUMPDEST PUSH2 0x26D8 SWAP2 SWAP1 PUSH2 0x3028 JUMP JUMPDEST GT PUSH2 0x270B JUMPI PUSH1 0x1A SLOAD PUSH1 0x19 SLOAD PUSH2 0x26EE SWAP1 PUSH1 0x2 PUSH2 0x24A8 JUMP JUMPDEST GT ISZERO PUSH2 0x2706 JUMPI PUSH1 0x19 SLOAD PUSH2 0x2702 SWAP1 PUSH1 0x2 PUSH2 0x24A8 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMPDEST PUSH2 0x271D JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH2 0x2719 SWAP1 PUSH1 0x3 PUSH2 0x27A3 JUMP JUMPDEST PUSH1 0x19 SSTORE JUMPDEST PUSH2 0x2725 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x2730 PUSH1 0x1 NUMBER PUSH2 0x2FFB JUMP JUMPDEST BLOCKHASH PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2773 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x446976206279207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x277F DUP4 DUP6 PUSH2 0x3028 JUMP JUMPDEST SWAP1 POP PUSH2 0x278B DUP4 DUP6 PUSH2 0x31C8 JUMP JUMPDEST ISZERO PUSH2 0x24EF JUMPI PUSH2 0x279B DUP2 PUSH1 0x1 PUSH2 0x2EA3 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x27B2 JUMPI POP PUSH1 0x0 PUSH2 0xA6B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27BE DUP4 DUP6 PUSH2 0x2FDC JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x27CB DUP6 DUP4 PUSH2 0x3028 JUMP JUMPDEST EQ PUSH2 0x24EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4D756C74206F766572666C6F77 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0xB SLOAD TIMESTAMP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x281A SWAP1 DUP4 PUSH2 0x2FFB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xD SLOAD PUSH2 0xB40 PUSH2 0x282E SWAP2 SWAP1 PUSH2 0x2FDC JUMP JUMPDEST SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x28A3 JUMPI PUSH1 0x0 PUSH2 0x2849 DUP4 PUSH2 0xC7D DUP5 PUSH1 0x64 PUSH2 0x27A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1F SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x2869 PUSH2 0x3E8 PUSH2 0x2863 DUP5 PUSH1 0x64 PUSH2 0x24F6 JUMP JUMPDEST SWAP1 PUSH2 0x2931 JUMP JUMPDEST SWAP1 POP PUSH2 0x2898 PUSH2 0x288F DUP3 PUSH2 0x2889 PUSH2 0x7D0 PUSH1 0x10 SLOAD PUSH2 0x24A8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x27A3 JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x10 SSTORE POP PUSH2 0x28FD SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B4 DUP3 PUSH2 0xC7D DUP6 PUSH1 0x64 PUSH2 0x27A3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1F SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x28CE PUSH2 0x3E8 PUSH2 0x2863 DUP5 PUSH1 0x64 PUSH2 0x24F6 JUMP JUMPDEST SWAP1 POP PUSH2 0x28F7 PUSH2 0x28EE DUP3 PUSH2 0x2889 PUSH2 0x3E8 PUSH1 0x10 SLOAD PUSH2 0x24A8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 PUSH2 0x2542 JUMP JUMPDEST PUSH1 0x10 SSTORE POP POP JUMPDEST PUSH1 0xB DUP4 SWAP1 SSTORE NUMBER PUSH1 0x23 SSTORE PUSH1 0xE SLOAD PUSH1 0x10 SLOAD LT ISZERO PUSH2 0x2919 JUMPI PUSH1 0xE SLOAD PUSH1 0x10 SSTORE JUMPDEST PUSH1 0xF SLOAD PUSH1 0x10 SLOAD GT ISZERO PUSH2 0x292C JUMPI PUSH1 0xF SLOAD PUSH1 0x10 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x2942 JUMPI POP DUP1 PUSH2 0xA6B JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2976 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x295A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2988 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x29B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29D6 DUP4 PUSH2 0x299E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2A45 JUMPI PUSH2 0x2A45 PUSH2 0x2A06 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A7A JUMPI PUSH2 0x2A7A PUSH2 0x2A06 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x2A89 DUP3 DUP3 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x2AA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x2AC9 JUMPI PUSH2 0x2ABA DUP4 PUSH2 0x299E JUMP JUMPDEST DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x2AA9 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2AEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B1B DUP8 DUP3 DUP9 ADD PUSH2 0x2A4D JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2B2A PUSH1 0x60 DUP7 ADD PUSH2 0x299E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B53 DUP5 PUSH2 0x299E JUMP JUMPDEST SWAP3 POP PUSH2 0x2B61 PUSH1 0x20 DUP6 ADD PUSH2 0x299E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B8F DUP5 PUSH2 0x299E JUMP JUMPDEST SWAP3 POP PUSH2 0x2B9D PUSH1 0x20 DUP6 ADD PUSH2 0x299E JUMP JUMPDEST SWAP2 POP PUSH2 0x2BAB PUSH1 0x40 DUP6 ADD PUSH2 0x299E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2BC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24EF DUP3 PUSH2 0x299E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C4C DUP6 PUSH2 0x299E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP1 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x2C62 PUSH1 0x40 DUP8 ADD PUSH2 0x299E JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2CA5 JUMPI PUSH2 0x2CA5 PUSH2 0x2A06 JUMP JUMPDEST PUSH2 0x2CB7 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP10 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2CCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2CFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2D14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2D1F DUP2 PUSH2 0x2CED JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x2D2F DUP2 PUSH2 0x2CED JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2D4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D58 DUP9 DUP4 DUP10 ADD PUSH2 0x2A4D JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2D6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7B DUP8 DUP3 DUP9 ADD PUSH2 0x2A4D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2D9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2DA7 DUP2 PUSH2 0x2CED JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2B9D DUP2 PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2DCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2D4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E0F DUP4 PUSH2 0x299E JUMP JUMPDEST SWAP2 POP PUSH2 0x2E1D PUSH1 0x20 DUP5 ADD PUSH2 0x299E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2E3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x2BAB PUSH1 0x40 DUP6 ADD PUSH2 0x299E JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2E66 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2E87 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2EB6 JUMPI PUSH2 0x2EB6 PUSH2 0x2E8D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2EE5 JUMPI PUSH2 0x2EE5 PUSH2 0x2E8D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2F27 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2F0D JUMPI PUSH2 0x2F0D PUSH2 0x2E8D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2F1A JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2EF1 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2F3E JUMPI POP PUSH1 0x1 PUSH2 0xA6B JUMP JUMPDEST DUP2 PUSH2 0x2F4B JUMPI POP PUSH1 0x0 PUSH2 0xA6B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2F61 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2F6B JUMPI PUSH2 0x2F87 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xA6B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2F7C JUMPI PUSH2 0x2F7C PUSH2 0x2E8D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xA6B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2FAA JUMPI POP DUP2 DUP2 EXP PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x2FB4 DUP4 DUP4 PUSH2 0x2EEC JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x2FC8 JUMPI PUSH2 0x2FC8 PUSH2 0x2E8D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EF DUP4 DUP4 PUSH2 0x2F2F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2FF6 JUMPI PUSH2 0x2FF6 PUSH2 0x2E8D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x300D JUMPI PUSH2 0x300D PUSH2 0x2E8D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3037 JUMPI PUSH2 0x3037 PUSH2 0x3012 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24EF PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2F2F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6C64206368616C6C656E67655F646967657374206F722077726F6E67206368 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x185B1B195B99D957D91A59D95CDD PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x446967657374206D75737420626520736D616C6C6572207468616E206D696E69 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x1B99D5185C99D95D PUSH1 0xC2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x4E6F2073616D65207365636F6E6420736F6C766573 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x24EF DUP2 PUSH2 0x2CED JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3D SWAP1 DUP3 ADD MSTORE PUSH32 0x536F204D696E74546F2068617320746F20686176652073616D65206E756D6265 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x72206F66206164647265737373657320617320457874726146756E6473000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x31D7 JUMPI PUSH2 0x31D7 PUSH2 0x3012 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xEB GT XOR SSTORE MULMOD 0xC7 0xD 0xE4 DUP14 0xA6 DELEGATECALL 0x4F 0xFC 0xEC ADDRESS 0xB2 0xB7 DUP4 PUSH21 0x1F46FA800755EAB4DBDB4CD664736F6C634300080B STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x339"
    },
    "12": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x757991A8"
    },
    "25": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AB"
    },
    "29": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9FF5FF49"
    },
    "36": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "GT",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7"
    },
    "40": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCB9AE707"
    },
    "47": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "GT",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "51": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDC6E9CF9"
    },
    "58": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "GT",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "62": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDC6E9CF9"
    },
    "69": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E4"
    },
    "73": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "80": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FA"
    },
    "84": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDDFBD8DD"
    },
    "91": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x940"
    },
    "95": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE932012B"
    },
    "102": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "103": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x960"
    },
    "106": {
      "fn": null,
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "107": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "109": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "110": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "111": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "112": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCB9AE707"
    },
    "118": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A3"
    },
    "122": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD0856D16"
    },
    "129": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B9"
    },
    "133": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD60D2CE6"
    },
    "140": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "141": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8CE"
    },
    "144": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "145": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "147": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "149": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "150": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB5ADE81B"
    },
    "156": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "GT",
      "path": "0"
    },
    "157": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "160": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "161": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "162": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB5ADE81B"
    },
    "167": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "168": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x838"
    },
    "171": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "172": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBB7A779D"
    },
    "178": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "179": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x84E"
    },
    "182": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "183": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "184": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC0ABEBE0"
    },
    "189": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "190": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86E"
    },
    "193": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "194": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "195": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC8A1465C"
    },
    "200": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "201": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x883"
    },
    "204": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "205": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "207": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "209": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "210": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "211": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9FF5FF49"
    },
    "216": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "217": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E2"
    },
    "220": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "221": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "222": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA68EB88E"
    },
    "227": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "228": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x802"
    },
    "231": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "232": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "233": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "238": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "239": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x818"
    },
    "242": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "243": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "245": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "246": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "247": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "248": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "249": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8AE0368B"
    },
    "254": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "GT",
      "path": "0"
    },
    "255": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164"
    },
    "258": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "259": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "260": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x94B939EF"
    },
    "265": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "GT",
      "path": "0"
    },
    "266": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E"
    },
    "269": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "270": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "271": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x94B939EF"
    },
    "276": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "277": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75B"
    },
    "280": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "281": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "282": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "287": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "288": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77B"
    },
    "291": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "292": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "293": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x97566AA0"
    },
    "298": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "299": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AC"
    },
    "302": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "303": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "304": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x9FA879D9"
    },
    "309": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "310": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7CC"
    },
    "313": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "314": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "316": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "317": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "318": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "319": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "320": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8AE0368B"
    },
    "325": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "326": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x705"
    },
    "329": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "330": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "331": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "336": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "337": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71B"
    },
    "340": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "341": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "342": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8F4FFCB1"
    },
    "347": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "348": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x73B"
    },
    "351": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "352": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "354": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "355": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "356": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "357": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "358": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x757991A8"
    },
    "363": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "364": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x678"
    },
    "367": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "368": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "369": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x81269A56"
    },
    "374": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "375": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x68D"
    },
    "378": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "379": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "380": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x829965CC"
    },
    "385": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "386": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AD"
    },
    "389": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "390": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "391": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x87A2A9D6"
    },
    "396": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "397": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C3"
    },
    "400": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "401": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "402": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8A5550F6"
    },
    "407": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "408": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D9"
    },
    "411": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "412": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "413": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8A769D35"
    },
    "418": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "419": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6EF"
    },
    "422": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "423": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "425": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "426": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "427": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "428": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "429": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x30717BF3"
    },
    "434": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "GT",
      "path": "0"
    },
    "435": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x285"
    },
    "438": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "439": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "440": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x510DE094"
    },
    "445": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "GT",
      "path": "0"
    },
    "446": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x223"
    },
    "449": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "450": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "451": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x64E46726"
    },
    "456": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "GT",
      "path": "0"
    },
    "457": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FD"
    },
    "460": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "461": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "462": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x64E46726"
    },
    "467": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "468": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EC"
    },
    "471": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "472": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "473": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x65104A91"
    },
    "478": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "479": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60C"
    },
    "482": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "483": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "484": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6DE9F32B"
    },
    "489": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "490": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62C"
    },
    "493": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "494": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "495": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "500": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "501": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x642"
    },
    "504": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "505": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "507": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "508": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "509": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "510": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "511": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x510DE094"
    },
    "516": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "517": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58A"
    },
    "520": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "521": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "522": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x59C5BF60"
    },
    "527": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "528": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AA"
    },
    "531": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "532": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "533": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x61805CC3"
    },
    "538": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "539": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CC"
    },
    "542": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "543": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "545": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "546": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "547": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "548": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "549": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x45D8A232"
    },
    "554": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "GT",
      "path": "0"
    },
    "555": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25F"
    },
    "558": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "559": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "560": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x45D8A232"
    },
    "565": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "566": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x534"
    },
    "569": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "570": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "571": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x490203A7"
    },
    "576": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "577": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54A"
    },
    "580": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "581": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "582": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4EF37628"
    },
    "587": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "588": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55F"
    },
    "591": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "592": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "593": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4FA972E1"
    },
    "598": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "599": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x574"
    },
    "602": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "603": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "605": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "606": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "607": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "608": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "609": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x30717BF3"
    },
    "614": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "615": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E2"
    },
    "618": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "619": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "620": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "625": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "626": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F8"
    },
    "629": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "630": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "631": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x32E99708"
    },
    "636": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "637": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51F"
    },
    "640": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "641": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "643": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "644": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "645": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "646": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "647": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1FCCB33C"
    },
    "652": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "GT",
      "path": "0"
    },
    "653": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F2"
    },
    "656": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "657": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "658": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "663": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "GT",
      "path": "0"
    },
    "664": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CC"
    },
    "667": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "668": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "669": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "674": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "675": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x45E"
    },
    "678": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "679": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "680": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2D38BF7A"
    },
    "685": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "686": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47E"
    },
    "689": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "690": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "691": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2EA83565"
    },
    "696": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "697": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x494"
    },
    "700": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "701": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "702": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2F104E0C"
    },
    "707": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "708": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AA"
    },
    "711": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "712": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "714": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "715": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "716": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "717": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "718": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1FCCB33C"
    },
    "723": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "724": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x412"
    },
    "727": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "728": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "729": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x20FA80D9"
    },
    "734": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "735": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x432"
    },
    "738": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "739": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "740": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2381A60E"
    },
    "745": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "746": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x448"
    },
    "749": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "750": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "752": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "753": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "754": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "755": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "756": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "761": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "762": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x348"
    },
    "765": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "766": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "767": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "772": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "773": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x373"
    },
    "776": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "777": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "778": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x10294317"
    },
    "783": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "784": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A3"
    },
    "787": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "788": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "789": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x17DA485F"
    },
    "794": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "795": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C7"
    },
    "798": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "799": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "800": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x1801FBE5"
    },
    "805": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "806": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3DC"
    },
    "809": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "810": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "DUP1",
      "path": "0"
    },
    "811": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "816": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "EQ",
      "path": "0"
    },
    "817": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FC"
    },
    "820": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "821": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "823": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "824": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "825": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "826": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "827": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x343"
    },
    "830": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "831": {
      "fn": "ForgeMining.<receive>",
      "offset": [
        26834,
        26842
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x0"
    },
    "833": {
      "fn": "ForgeMining.<receive>",
      "offset": [
        26834,
        26842
      ],
      "op": "DUP1",
      "path": "0"
    },
    "834": {
      "fn": "ForgeMining.<receive>",
      "offset": [
        26834,
        26842
      ],
      "op": "REVERT",
      "path": "0"
    },
    "835": {
      "offset": [
        5860,
        26899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "836": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "838": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "839": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        26883,
        26891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "840": {
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "841": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "842": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "843": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "844": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x354"
    },
    "847": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "848": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "850": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "851": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "REVERT",
      "path": "0"
    },
    "852": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "853": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "POP",
      "path": "0"
    },
    "854": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35D"
    },
    "857": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x976"
    },
    "860": {
      "fn": "ForgeMining.<fallback>",
      "jump": "i",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMP",
      "path": "0"
    },
    "861": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "862": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "864": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "865": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36A"
    },
    "868": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "869": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "870": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2949"
    },
    "873": {
      "fn": "ForgeMining.<fallback>",
      "jump": "i",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMP",
      "path": "0"
    },
    "874": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "875": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "877": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "878": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "879": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "880": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "SUB",
      "path": "0"
    },
    "881": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "882": {
      "fn": "ForgeMining.<fallback>",
      "offset": [
        7994,
        8022
      ],
      "op": "RETURN",
      "path": "0"
    },
    "883": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "884": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "885": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "886": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "887": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37F"
    },
    "890": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "891": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "893": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "894": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "REVERT",
      "path": "0"
    },
    "895": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "896": {
      "op": "POP"
    },
    "897": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "900": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38E"
    },
    "903": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "904": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "906": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29BA"
    },
    "909": {
      "fn": "ForgeMining.approve",
      "jump": "i",
      "offset": [
        24765,
        24961
      ],
      "op": "JUMP",
      "path": "0"
    },
    "910": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "911": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA04"
    },
    "914": {
      "fn": "ForgeMining.approve",
      "jump": "i",
      "offset": [
        24765,
        24961
      ],
      "op": "JUMP",
      "path": "0"
    },
    "915": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "916": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "918": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "919": {
      "op": "SWAP1"
    },
    "920": {
      "op": "ISZERO"
    },
    "921": {
      "op": "ISZERO"
    },
    "922": {
      "op": "DUP2"
    },
    "923": {
      "op": "MSTORE"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "926": {
      "op": "ADD"
    },
    "927": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36A"
    },
    "930": {
      "op": "JUMP"
    },
    "931": {
      "offset": [
        7524,
        7571
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "932": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "933": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "DUP1",
      "path": "0"
    },
    "934": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "935": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AF"
    },
    "938": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "939": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "941": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "DUP1",
      "path": "0"
    },
    "942": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "REVERT",
      "path": "0"
    },
    "943": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "944": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "POP",
      "path": "0"
    },
    "945": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "948": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "950": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "951": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "DUP2",
      "path": "0"
    },
    "952": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "JUMP",
      "path": "0"
    },
    "953": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "954": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "956": {
      "fn": "ForgeMining.approve",
      "offset": [
        7524,
        7571
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "957": {
      "op": "SWAP1"
    },
    "958": {
      "op": "DUP2"
    },
    "959": {
      "op": "MSTORE"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "962": {
      "op": "ADD"
    },
    "963": {
      "offset": [
        7524,
        7571
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36A"
    },
    "966": {
      "op": "JUMP"
    },
    "967": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "968": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "969": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "DUP1",
      "path": "0"
    },
    "970": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "971": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D3"
    },
    "974": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "975": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "977": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "DUP1",
      "path": "0"
    },
    "978": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "REVERT",
      "path": "0"
    },
    "979": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "980": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "POP",
      "path": "0"
    },
    "981": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "984": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA71"
    },
    "987": {
      "fn": "ForgeMining.getMiningDifficulty",
      "jump": "i",
      "offset": [
        22381,
        22488
      ],
      "op": "JUMP",
      "path": "0"
    },
    "988": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "989": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "990": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "DUP1",
      "path": "0"
    },
    "991": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "992": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E8"
    },
    "995": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "996": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "998": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "DUP1",
      "path": "0"
    },
    "999": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1000": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1001": {
      "op": "POP"
    },
    "1002": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "1005": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F7"
    },
    "1008": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1009": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1011": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29E4"
    },
    "1014": {
      "fn": "ForgeMining.mint",
      "jump": "i",
      "offset": [
        12094,
        12230
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1015": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1016": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8F"
    },
    "1019": {
      "fn": "ForgeMining.mint",
      "jump": "i",
      "offset": [
        12094,
        12230
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1020": {
      "offset": [
        6547,
        6611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1021": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1022": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1023": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1024": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x408"
    },
    "1027": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1028": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1030": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1031": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1032": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1033": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "POP",
      "path": "0"
    },
    "1034": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1037": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1039": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1040": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1041": {
      "fn": "ForgeMining.mint",
      "offset": [
        6547,
        6611
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1042": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1043": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1044": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1045": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1046": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E"
    },
    "1049": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1050": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1052": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1053": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1054": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1055": {
      "op": "POP"
    },
    "1056": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "1059": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42D"
    },
    "1062": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1063": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1065": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AD4"
    },
    "1068": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        17400,
        17772
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1069": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1070": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA3"
    },
    "1073": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        17400,
        17772
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1074": {
      "offset": [
        6075,
        6096
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1075": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1076": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1077": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1078": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43E"
    },
    "1081": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1082": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1084": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1085": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1086": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1087": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "POP",
      "path": "0"
    },
    "1088": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1091": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1093": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1094": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1095": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        6075,
        6096
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1096": {
      "offset": [
        7393,
        7468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1097": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1098": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1099": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1100": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x454"
    },
    "1103": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1104": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1106": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1107": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1108": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1109": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "POP",
      "path": "0"
    },
    "1110": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1113": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "1115": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1116": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1117": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7393,
        7468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1118": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1119": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1120": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1121": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1122": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46A"
    },
    "1125": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1126": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1128": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1129": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1130": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1131": {
      "op": "POP"
    },
    "1132": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "1135": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x479"
    },
    "1138": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1139": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1141": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B35"
    },
    "1144": {
      "fn": "ForgeMining.transferFrom",
      "jump": "i",
      "offset": [
        25481,
        25798
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1145": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1146": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB66"
    },
    "1149": {
      "fn": "ForgeMining.transferFrom",
      "jump": "i",
      "offset": [
        25481,
        25798
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1150": {
      "offset": [
        7272,
        7297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1151": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1152": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1153": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1154": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x48A"
    },
    "1157": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1158": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1160": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1161": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1162": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1163": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "POP",
      "path": "0"
    },
    "1164": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1167": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "1169": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1170": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1171": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7272,
        7297
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1172": {
      "offset": [
        6020,
        6042
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1173": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1174": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1175": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1176": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A0"
    },
    "1179": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1180": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1182": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1183": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1184": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1185": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "POP",
      "path": "0"
    },
    "1186": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1189": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1191": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1192": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1193": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6020,
        6042
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1194": {
      "offset": [
        6161,
        6191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1195": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1196": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1197": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1198": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B6"
    },
    "1201": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1202": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1204": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1205": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1206": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1207": {
      "op": "POP"
    },
    "1208": {
      "offset": [
        6161,
        6191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1210": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1211": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CA"
    },
    "1214": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1221": {
      "op": "SHL"
    },
    "1222": {
      "op": "SUB"
    },
    "1223": {
      "offset": [
        6161,
        6191
      ],
      "op": "AND",
      "path": "0"
    },
    "1224": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1225": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1226": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1227": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1229": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6161,
        6191
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "op": "SUB"
    },
    "1238": {
      "op": "SWAP1"
    },
    "1239": {
      "op": "SWAP2"
    },
    "1240": {
      "op": "AND"
    },
    "1241": {
      "op": "DUP2"
    },
    "1242": {
      "op": "MSTORE"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1245": {
      "op": "ADD"
    },
    "1246": {
      "offset": [
        6161,
        6191
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36A"
    },
    "1249": {
      "op": "JUMP"
    },
    "1250": {
      "offset": [
        6048,
        6069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1251": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1252": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1253": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1254": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4EE"
    },
    "1257": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1258": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1260": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1261": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1262": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1263": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "POP",
      "path": "0"
    },
    "1264": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1267": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1269": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1270": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1271": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        6048,
        6069
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1272": {
      "offset": [
        8073,
        8108
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1273": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1274": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1275": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1276": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x504"
    },
    "1279": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1280": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1282": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1283": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1284": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1285": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "POP",
      "path": "0"
    },
    "1286": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x50D"
    },
    "1289": {
      "offset": [
        8106,
        8108
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "1291": {
      "offset": [
        8073,
        8108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1292": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1293": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1294": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1296": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8073,
        8108
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1299": {
      "op": "SWAP1"
    },
    "1300": {
      "op": "SWAP2"
    },
    "1301": {
      "op": "AND"
    },
    "1302": {
      "op": "DUP2"
    },
    "1303": {
      "op": "MSTORE"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1306": {
      "op": "ADD"
    },
    "1307": {
      "offset": [
        8073,
        8108
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36A"
    },
    "1310": {
      "op": "JUMP"
    },
    "1311": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22492,
        22575
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1312": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22492,
        22575
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1313": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22492,
        22575
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1314": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22492,
        22575
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1315": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22492,
        22575
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52B"
    },
    "1318": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22492,
        22575
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1319": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22492,
        22575
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1321": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22492,
        22575
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1322": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22492,
        22575
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1323": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22492,
        22575
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1324": {
      "op": "POP"
    },
    "1325": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22558,
        22570
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x10"
    },
    "1327": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22558,
        22570
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1328": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22492,
        22575
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1331": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        22492,
        22575
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1332": {
      "offset": [
        5927,
        5968
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1333": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5927,
        5968
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1334": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5927,
        5968
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1335": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5927,
        5968
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1336": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5927,
        5968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x540"
    },
    "1339": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5927,
        5968
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1340": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5927,
        5968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1342": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5927,
        5968
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1343": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5927,
        5968
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1344": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5927,
        5968
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1345": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5927,
        5968
      ],
      "op": "POP",
      "path": "0"
    },
    "1346": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5927,
        5968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1349": {
      "offset": [
        5961,
        5968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB40"
    },
    "1352": {
      "offset": [
        5927,
        5968
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1353": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5927,
        5968
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1354": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1355": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1356": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1357": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1358": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x556"
    },
    "1361": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1362": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1364": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1365": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1366": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1367": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "POP",
      "path": "0"
    },
    "1368": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1371": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC52"
    },
    "1374": {
      "fn": "ForgeMining.getMiningReward",
      "jump": "i",
      "offset": [
        22767,
        22998
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1375": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22206,
        22298
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1376": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22206,
        22298
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1377": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22206,
        22298
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1378": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22206,
        22298
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1379": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22206,
        22298
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56B"
    },
    "1382": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22206,
        22298
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1383": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22206,
        22298
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1385": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22206,
        22298
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1386": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22206,
        22298
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1387": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22206,
        22298
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1388": {
      "op": "POP"
    },
    "1389": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22278,
        22293
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x11"
    },
    "1391": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22278,
        22293
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1392": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22206,
        22298
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1395": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        22206,
        22298
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1396": {
      "offset": [
        7303,
        7387
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1397": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1398": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1399": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1400": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x580"
    },
    "1403": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1404": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1406": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1407": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1408": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1409": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "POP",
      "path": "0"
    },
    "1410": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1413": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "1415": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1416": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1417": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7303,
        7387
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1418": {
      "offset": [
        6197,
        6227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1419": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1420": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1421": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1422": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x596"
    },
    "1425": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1426": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1428": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1429": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1430": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1431": {
      "op": "POP"
    },
    "1432": {
      "offset": [
        6197,
        6227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1434": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1435": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CA"
    },
    "1438": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1445": {
      "op": "SHL"
    },
    "1446": {
      "op": "SUB"
    },
    "1447": {
      "offset": [
        6197,
        6227
      ],
      "op": "AND",
      "path": "0"
    },
    "1448": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1449": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6197,
        6227
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1450": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1451": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1452": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1453": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1454": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B6"
    },
    "1457": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1458": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1460": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1461": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1462": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1463": {
      "op": "POP"
    },
    "1464": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CA"
    },
    "1467": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C5"
    },
    "1470": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1471": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1473": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B71"
    },
    "1476": {
      "fn": "ForgeMining.zinit2",
      "jump": "i",
      "offset": [
        9317,
        9541
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1477": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1478": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC83"
    },
    "1481": {
      "fn": "ForgeMining.zinit2",
      "jump": "i",
      "offset": [
        9317,
        9541
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1482": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1483": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "STOP",
      "path": "0"
    },
    "1484": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1485": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1486": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1487": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1488": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D8"
    },
    "1491": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1492": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1494": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1495": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1496": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1497": {
      "op": "POP"
    },
    "1498": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CA"
    },
    "1501": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5E7"
    },
    "1504": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1505": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1507": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB4"
    },
    "1510": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18457,
        18883
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1511": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1512": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD0E"
    },
    "1515": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18457,
        18883
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1516": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1517": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1518": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1519": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1520": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F8"
    },
    "1523": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1524": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1526": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1527": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1528": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1529": {
      "op": "POP"
    },
    "1530": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CA"
    },
    "1533": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x607"
    },
    "1536": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1537": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1539": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B71"
    },
    "1542": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8277,
        9259
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1543": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1544": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE4"
    },
    "1547": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8277,
        9259
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1548": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1549": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1550": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1551": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1552": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x618"
    },
    "1555": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1556": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1558": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1559": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1560": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1561": {
      "op": "POP"
    },
    "1562": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1565": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x627"
    },
    "1568": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1569": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1571": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29E4"
    },
    "1574": {
      "fn": "ForgeMining.empty_mintTo",
      "jump": "i",
      "offset": [
        17776,
        18453
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1575": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1576": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF6F"
    },
    "1579": {
      "fn": "ForgeMining.empty_mintTo",
      "jump": "i",
      "offset": [
        17776,
        18453
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1580": {
      "offset": [
        7761,
        7785
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1581": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1582": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1583": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1584": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x638"
    },
    "1587": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1588": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1590": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1591": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1592": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1593": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "POP",
      "path": "0"
    },
    "1594": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1597": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1B"
    },
    "1599": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1600": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1601": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        7761,
        7785
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1602": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1603": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1604": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1605": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1606": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64E"
    },
    "1609": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1610": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1612": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1613": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1614": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1615": {
      "op": "POP"
    },
    "1616": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1619": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65D"
    },
    "1622": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1623": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1625": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BE0"
    },
    "1628": {
      "fn": "ForgeMining.balanceOf",
      "jump": "i",
      "offset": [
        23566,
        23686
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1629": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1636": {
      "op": "SHL"
    },
    "1637": {
      "op": "SUB"
    },
    "1638": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23661,
        23681
      ],
      "op": "AND",
      "path": "0",
      "statement": 4
    },
    "1639": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23635,
        23647
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1641": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23661,
        23681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1642": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23661,
        23681
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1643": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23661,
        23681
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1644": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23661,
        23669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "1646": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23661,
        23681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1648": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23661,
        23681
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1649": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23661,
        23681
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1651": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23661,
        23681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1652": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23661,
        23681
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1653": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23661,
        23681
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1654": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23661,
        23681
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1655": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        23566,
        23686
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1656": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23002,
        23077
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1657": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23002,
        23077
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1658": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23002,
        23077
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1659": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23002,
        23077
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1660": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23002,
        23077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x684"
    },
    "1663": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23002,
        23077
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1664": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23002,
        23077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1666": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23002,
        23077
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1667": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23002,
        23077
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1668": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23002,
        23077
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1669": {
      "op": "POP"
    },
    "1670": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23061,
        23071
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0xC"
    },
    "1672": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23061,
        23071
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1673": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23002,
        23077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1676": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        23002,
        23077
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1677": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1678": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1679": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1680": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1681": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x699"
    },
    "1684": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1685": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1687": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1688": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1689": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1690": {
      "op": "POP"
    },
    "1691": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "1694": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A8"
    },
    "1697": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1698": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1700": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BFB"
    },
    "1703": {
      "fn": "ForgeMining.checkMintSolution",
      "jump": "i",
      "offset": [
        21793,
        22120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1704": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1705": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1060"
    },
    "1708": {
      "fn": "ForgeMining.checkMintSolution",
      "jump": "i",
      "offset": [
        21793,
        22120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1709": {
      "offset": [
        6833,
        6859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1710": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1711": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1712": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1713": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B9"
    },
    "1716": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1717": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1719": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1720": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1721": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1722": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "POP",
      "path": "0"
    },
    "1723": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1726": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "1728": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1729": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1730": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6833,
        6859
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1731": {
      "offset": [
        7010,
        7047
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1732": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1733": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1734": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1735": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6CF"
    },
    "1738": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1739": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1741": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1742": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1743": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1744": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "POP",
      "path": "0"
    },
    "1745": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1748": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "1750": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1751": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1752": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7010,
        7047
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1753": {
      "offset": [
        8114,
        8144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1754": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1755": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1756": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1757": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E5"
    },
    "1760": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1761": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1763": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1764": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1765": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1766": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "POP",
      "path": "0"
    },
    "1767": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1770": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "1772": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1773": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1774": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8114,
        8144
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1775": {
      "offset": [
        7053,
        7116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1776": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1777": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1778": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1779": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FB"
    },
    "1782": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1783": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1785": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1786": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1787": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1788": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "POP",
      "path": "0"
    },
    "1789": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1792": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "1794": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1795": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1796": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7053,
        7116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1797": {
      "offset": [
        7185,
        7215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1798": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1799": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1800": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1801": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x711"
    },
    "1804": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1805": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1807": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1808": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1809": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1810": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "POP",
      "path": "0"
    },
    "1811": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1814": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "1816": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1817": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1818": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7185,
        7215
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1819": {
      "offset": [
        2891,
        2911
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1820": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1821": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1822": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1823": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x727"
    },
    "1826": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1827": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1829": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1830": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1831": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1832": {
      "op": "POP"
    },
    "1833": {
      "offset": [
        2891,
        2911
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1835": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1836": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CA"
    },
    "1839": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1846": {
      "op": "SHL"
    },
    "1847": {
      "op": "SUB"
    },
    "1848": {
      "offset": [
        2891,
        2911
      ],
      "op": "AND",
      "path": "0"
    },
    "1849": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1850": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2891,
        2911
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1851": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1852": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1853": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1854": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1855": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x747"
    },
    "1858": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1859": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1861": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1862": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1863": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CA"
    },
    "1868": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x756"
    },
    "1871": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1872": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1874": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C2D"
    },
    "1877": {
      "fn": "ForgeMining.receiveApproval",
      "jump": "i",
      "offset": [
        26573,
        26767
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1878": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1879": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10AB"
    },
    "1882": {
      "fn": "ForgeMining.receiveApproval",
      "jump": "i",
      "offset": [
        26573,
        26767
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1883": {
      "offset": [
        6126,
        6155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1884": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1885": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1886": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1887": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x767"
    },
    "1890": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1891": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1893": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1894": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1895": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1896": {
      "op": "POP"
    },
    "1897": {
      "offset": [
        6126,
        6155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1899": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1900": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CA"
    },
    "1903": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1910": {
      "op": "SHL"
    },
    "1911": {
      "op": "SUB"
    },
    "1912": {
      "offset": [
        6126,
        6155
      ],
      "op": "AND",
      "path": "0"
    },
    "1913": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1914": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        6126,
        6155
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1915": {
      "offset": [
        8028,
        8067
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1916": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1917": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1918": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1919": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x787"
    },
    "1922": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1923": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1925": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1926": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1927": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1928": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "POP",
      "path": "0"
    },
    "1929": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35D"
    },
    "1932": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1934": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1935": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1936": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1938": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "ADD",
      "path": "0"
    },
    "1939": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1941": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1942": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1943": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1945": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1946": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1947": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1949": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "ADD",
      "path": "0"
    },
    "1950": {
      "op": "PUSH5",
      "value": "0x466F726765"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1958": {
      "op": "SHL"
    },
    "1959": {
      "offset": [
        8028,
        8067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1960": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1961": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "POP",
      "path": "0"
    },
    "1962": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1963": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8028,
        8067
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1964": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1965": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1966": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1967": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1968": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7B8"
    },
    "1971": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1972": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1974": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1975": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1976": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1977": {
      "op": "POP"
    },
    "1978": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "1981": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C7"
    },
    "1984": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1985": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1987": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB4"
    },
    "1990": {
      "fn": "ForgeMining.getMintDigest",
      "jump": "i",
      "offset": [
        23111,
        23351
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1991": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1992": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1138"
    },
    "1995": {
      "fn": "ForgeMining.getMintDigest",
      "jump": "i",
      "offset": [
        23111,
        23351
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1996": {
      "offset": [
        5994,
        6017
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1997": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1998": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1999": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2000": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D8"
    },
    "2003": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2004": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2006": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2007": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2008": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2009": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "POP",
      "path": "0"
    },
    "2010": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "2013": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2015": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2016": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2017": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        5994,
        6017
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2018": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2019": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2020": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2021": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2022": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7EE"
    },
    "2025": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2026": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2028": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2029": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2030": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2031": {
      "op": "POP"
    },
    "2032": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "2035": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7FD"
    },
    "2038": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2039": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2041": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CFE"
    },
    "2044": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14252,
        15827
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2045": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2046": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1173"
    },
    "2049": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14252,
        15827
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2050": {
      "offset": [
        7669,
        7709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2051": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2052": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2053": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2054": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x80E"
    },
    "2057": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2058": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2060": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2061": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2062": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2063": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "POP",
      "path": "0"
    },
    "2064": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "2067": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "2069": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2070": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2071": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        7669,
        7709
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2072": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2073": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2074": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2075": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2076": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x824"
    },
    "2079": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2080": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2082": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2083": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2084": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2085": {
      "op": "POP"
    },
    "2086": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x393"
    },
    "2089": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x833"
    },
    "2092": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2093": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2095": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29BA"
    },
    "2098": {
      "fn": "ForgeMining.transfer",
      "jump": "i",
      "offset": [
        24022,
        24270
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2099": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2100": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1602"
    },
    "2103": {
      "fn": "ForgeMining.transfer",
      "jump": "i",
      "offset": [
        24022,
        24270
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2104": {
      "offset": [
        6892,
        6934
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2105": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2106": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2107": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2108": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x844"
    },
    "2111": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2112": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2114": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2115": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2116": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2117": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "POP",
      "path": "0"
    },
    "2118": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "2121": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "2123": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2124": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2125": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6892,
        6934
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2126": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2127": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2128": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2129": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2130": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85A"
    },
    "2133": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2134": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2136": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2137": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2138": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2139": {
      "op": "POP"
    },
    "2140": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "2143": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x869"
    },
    "2146": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2147": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2149": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D87"
    },
    "2152": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9545,
        10786
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2153": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2154": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1687"
    },
    "2157": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9545,
        10786
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2158": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22579,
        22662
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2159": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22579,
        22662
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2160": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22579,
        22662
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2161": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22579,
        22662
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2162": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22579,
        22662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87A"
    },
    "2165": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22579,
        22662
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2166": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22579,
        22662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2168": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22579,
        22662
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2169": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22579,
        22662
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2170": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22579,
        22662
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2171": {
      "op": "POP"
    },
    "2172": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22645,
        22657
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1B"
    },
    "2174": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22645,
        22657
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2175": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22579,
        22662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "2178": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        22579,
        22662
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2179": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2180": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2181": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2182": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2183": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88F"
    },
    "2186": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2187": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2189": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2190": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2191": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2192": {
      "op": "POP"
    },
    "2193": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "2196": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x89E"
    },
    "2199": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2200": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2202": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DB7"
    },
    "2205": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        15839,
        17396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2206": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2207": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A06"
    },
    "2210": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        15839,
        17396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2211": {
      "offset": [
        8190,
        8246
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2212": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2213": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2214": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2215": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AF"
    },
    "2218": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2219": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2221": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2222": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2223": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2224": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "POP",
      "path": "0"
    },
    "2225": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "2228": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x23"
    },
    "2230": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2231": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2232": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        8190,
        8246
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2233": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2234": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2235": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2236": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2237": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C5"
    },
    "2240": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2241": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2243": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2244": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2245": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2246": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "POP",
      "path": "0"
    },
    "2247": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CA"
    },
    "2250": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E90"
    },
    "2253": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10788,
        11900
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2254": {
      "offset": [
        5971,
        5991
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2255": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2256": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2257": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2258": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8DA"
    },
    "2261": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2262": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2264": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2265": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2266": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2267": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "POP",
      "path": "0"
    },
    "2268": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "2271": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2273": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2274": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2275": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        5971,
        5991
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2276": {
      "offset": [
        6963,
        6999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2277": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2278": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2279": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2280": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8F0"
    },
    "2283": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2284": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2286": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2287": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2288": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2289": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "POP",
      "path": "0"
    },
    "2290": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "2293": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "2295": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2296": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2297": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6963,
        6999
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2298": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2299": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2300": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2301": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2302": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x906"
    },
    "2305": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2306": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2308": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2309": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2310": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2311": {
      "op": "POP"
    },
    "2312": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "2315": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x915"
    },
    "2318": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2319": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2321": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DF3"
    },
    "2324": {
      "fn": "ForgeMining.allowance",
      "jump": "i",
      "offset": [
        26073,
        26220
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2325": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2332": {
      "op": "SHL"
    },
    "2333": {
      "op": "SUB"
    },
    "2334": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 7
    },
    "2335": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2336": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "AND",
      "path": "0"
    },
    "2337": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26159,
        26173
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2339": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2340": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2341": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2342": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1D"
    },
    "2344": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2346": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2347": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2348": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2349": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2351": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2352": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2353": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26206
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2354": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26215
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2355": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2356": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26215
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "2357": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26215
      ],
      "op": "AND",
      "path": "0"
    },
    "2358": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26215
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2359": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26215
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2360": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26215
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2361": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2362": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26215
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2363": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26215
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2364": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26215
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2365": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26215
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2366": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26187,
        26215
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2367": {
      "fn": "ForgeMining.allowance",
      "offset": [
        26073,
        26220
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2368": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2369": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2370": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2371": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2372": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x94C"
    },
    "2375": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2376": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2378": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2379": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2380": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2381": {
      "op": "POP"
    },
    "2382": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "2385": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95B"
    },
    "2388": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2389": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2391": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E26"
    },
    "2394": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12337,
        13938
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2395": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2396": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20EC"
    },
    "2399": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12337,
        13938
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2400": {
      "offset": [
        6767,
        6827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2401": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "2402": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2403": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2404": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96C"
    },
    "2407": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2408": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2410": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2411": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2412": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2413": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "POP",
      "path": "0"
    },
    "2414": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B9"
    },
    "2417": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "2419": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2420": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2421": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6767,
        6827
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2422": {
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2423": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2425": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2426": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2427": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x983"
    },
    "2430": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2431": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E52"
    },
    "2434": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2435": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2436": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2437": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2439": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "ADD",
      "path": "0"
    },
    "2440": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2442": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2443": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2444": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DIV",
      "path": "0"
    },
    "2445": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "MUL",
      "path": "0"
    },
    "2446": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2448": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "ADD",
      "path": "0"
    },
    "2449": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2451": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2452": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2453": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2454": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "ADD",
      "path": "0"
    },
    "2455": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2457": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2458": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2459": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2460": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2461": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2462": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2463": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2464": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2465": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2467": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "ADD",
      "path": "0"
    },
    "2468": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2469": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2470": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2471": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9AF"
    },
    "2474": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2475": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2E52"
    },
    "2478": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2479": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2480": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2481": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2482": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9FC"
    },
    "2485": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2486": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2487": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2489": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "LT",
      "path": "0"
    },
    "2490": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D1"
    },
    "2493": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2494": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2497": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2498": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2499": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2500": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DIV",
      "path": "0"
    },
    "2501": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "MUL",
      "path": "0"
    },
    "2502": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2503": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2504": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2505": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2507": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "ADD",
      "path": "0"
    },
    "2508": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2509": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9FC"
    },
    "2512": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2513": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2514": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2515": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "ADD",
      "path": "0"
    },
    "2516": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2517": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2518": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2520": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2521": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2523": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2525": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2526": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2527": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2528": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2529": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2530": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2531": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2532": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2533": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2535": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "ADD",
      "path": "0"
    },
    "2536": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2537": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2539": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "ADD",
      "path": "0"
    },
    "2540": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2541": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2542": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "GT",
      "path": "0"
    },
    "2543": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DF"
    },
    "2546": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2547": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2548": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2549": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SUB",
      "path": "0"
    },
    "2550": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2552": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "AND",
      "path": "0"
    },
    "2553": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2554": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "ADD",
      "path": "0"
    },
    "2555": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2556": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2557": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "POP",
      "path": "0"
    },
    "2558": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "POP",
      "path": "0"
    },
    "2559": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "POP",
      "path": "0"
    },
    "2560": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "POP",
      "path": "0"
    },
    "2561": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "POP",
      "path": "0"
    },
    "2562": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        7994,
        8022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2563": {
      "fn": "ForgeMining.mintTo",
      "jump": "o",
      "offset": [
        7994,
        8022
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2564": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2565": {
      "fn": "ForgeMining.approve",
      "offset": [
        24864,
        24874
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 8
    },
    "2566": {
      "fn": "ForgeMining.approve",
      "offset": [
        24837,
        24849
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2568": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24875
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2569": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24875
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2570": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24875
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2571": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24863
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1D"
    },
    "2573": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2575": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2576": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24875
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2577": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24875
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2578": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2580": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24875
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2581": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24875
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2582": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24875
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2589": {
      "op": "SHL"
    },
    "2590": {
      "op": "SUB"
    },
    "2591": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24884
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2592": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24884
      ],
      "op": "AND",
      "path": "0"
    },
    "2593": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2594": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24884
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2595": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24884
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2596": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24884
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2597": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24884
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2598": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24884
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2599": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24884
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2600": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24884
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2601": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24893
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2602": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24893
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2603": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24893
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2604": {
      "fn": "ForgeMining.approve",
      "offset": [
        24903,
        24940
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 9
    },
    "2605": {
      "fn": "ForgeMining.approve",
      "offset": [
        24837,
        24849
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2606": {
      "fn": "ForgeMining.approve",
      "offset": [
        24837,
        24849
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2607": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24884
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2608": {
      "fn": "ForgeMining.approve",
      "offset": [
        24856,
        24884
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2609": {
      "fn": "ForgeMining.approve",
      "offset": [
        24903,
        24940
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2642": {
      "fn": "ForgeMining.approve",
      "offset": [
        24903,
        24940
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2643": {
      "fn": "ForgeMining.approve",
      "offset": [
        24903,
        24940
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5F"
    },
    "2646": {
      "fn": "ForgeMining.approve",
      "offset": [
        24903,
        24940
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2647": {
      "fn": "ForgeMining.approve",
      "offset": [
        24887,
        24893
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2648": {
      "op": "DUP2"
    },
    "2649": {
      "op": "MSTORE"
    },
    "2650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2652": {
      "op": "ADD"
    },
    "2653": {
      "op": "SWAP1"
    },
    "2654": {
      "op": "JUMP"
    },
    "2655": {
      "fn": "ForgeMining.approve",
      "offset": [
        24903,
        24940
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2656": {
      "fn": "ForgeMining.approve",
      "offset": [
        24903,
        24940
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2658": {
      "fn": "ForgeMining.approve",
      "offset": [
        24903,
        24940
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2659": {
      "fn": "ForgeMining.approve",
      "offset": [
        24903,
        24940
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2660": {
      "fn": "ForgeMining.approve",
      "offset": [
        24903,
        24940
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2661": {
      "fn": "ForgeMining.approve",
      "offset": [
        24903,
        24940
      ],
      "op": "SUB",
      "path": "0"
    },
    "2662": {
      "fn": "ForgeMining.approve",
      "offset": [
        24903,
        24940
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2663": {
      "fn": "ForgeMining.approve",
      "offset": [
        24903,
        24940
      ],
      "op": "LOG3",
      "path": "0"
    },
    "2664": {
      "op": "POP"
    },
    "2665": {
      "fn": "ForgeMining.approve",
      "offset": [
        24952,
        24956
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x1"
    },
    "2667": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2668": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2669": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2670": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "POP",
      "path": "0"
    },
    "2671": {
      "fn": "ForgeMining.approve",
      "offset": [
        24765,
        24961
      ],
      "op": "POP",
      "path": "0"
    },
    "2672": {
      "fn": "ForgeMining.approve",
      "jump": "o",
      "offset": [
        24765,
        24961
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2673": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2674": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22433,
        22437
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2676": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22451,
        22484
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0xA8A"
    },
    "2679": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22471,
        22483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "2681": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22471,
        22483
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2682": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22451,
        22466
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "2684": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22451,
        22466
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2685": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22451,
        22470
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A8"
    },
    "2688": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22451,
        22470
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2689": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22451,
        22484
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2690": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22451,
        22484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2691": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22451,
        22484
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2696": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22451,
        22484
      ],
      "op": "AND",
      "path": "0"
    },
    "2697": {
      "fn": "ForgeMining.getMiningDifficulty",
      "jump": "i",
      "offset": [
        22451,
        22484
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2698": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22451,
        22484
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2699": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22444,
        22484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2700": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22444,
        22484
      ],
      "op": "POP",
      "path": "0"
    },
    "2701": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        22381,
        22488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2702": {
      "fn": "ForgeMining.getMiningDifficulty",
      "jump": "o",
      "offset": [
        22381,
        22488
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2703": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2704": {
      "fn": "ForgeMining.mint",
      "offset": [
        12165,
        12177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2706": {
      "fn": "ForgeMining.mint",
      "offset": [
        12183,
        12226
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0xA9C"
    },
    "2709": {
      "fn": "ForgeMining.mint",
      "offset": [
        12190,
        12195
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2710": {
      "fn": "ForgeMining.mint",
      "offset": [
        12197,
        12213
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2711": {
      "fn": "ForgeMining.mint",
      "offset": [
        12215,
        12225
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2712": {
      "fn": "ForgeMining.mint",
      "offset": [
        12183,
        12189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20EC"
    },
    "2715": {
      "fn": "ForgeMining.mint",
      "jump": "i",
      "offset": [
        12183,
        12226
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2716": {
      "fn": "ForgeMining.mint",
      "offset": [
        12183,
        12226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2717": {
      "fn": "ForgeMining.mint",
      "offset": [
        12183,
        12226
      ],
      "op": "POP",
      "path": "0"
    },
    "2718": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2719": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2720": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "POP",
      "path": "0"
    },
    "2721": {
      "fn": "ForgeMining.mint",
      "offset": [
        12094,
        12230
      ],
      "op": "POP",
      "path": "0"
    },
    "2722": {
      "fn": "ForgeMining.mint",
      "jump": "o",
      "offset": [
        12094,
        12230
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2723": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2724": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17533,
        17545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2726": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17551,
        17570
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2727": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17587,
        17597
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2728": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17587,
        17604
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2729": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17607,
        17608
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2731": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17587,
        17608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB4"
    },
    "2734": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17587,
        17608
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2735": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17587,
        17608
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2736": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17587,
        17608
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "2739": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        17587,
        17608
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2740": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17587,
        17608
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2741": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2750": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2751": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "GT",
      "path": "0"
    },
    "2752": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2753": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xACC"
    },
    "2756": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2757": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xACC"
    },
    "2760": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A06"
    },
    "2763": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        17573,
        17609
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2764": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2765": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2767": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2768": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2769": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2770": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2771": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2772": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2773": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2775": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "MUL",
      "path": "0"
    },
    "2776": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2778": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "ADD",
      "path": "0"
    },
    "2779": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2780": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "ADD",
      "path": "0"
    },
    "2781": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2783": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2784": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2785": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2786": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF5"
    },
    "2789": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2790": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2791": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2793": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "ADD",
      "path": "0"
    },
    "2794": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2796": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2797": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "MUL",
      "path": "0"
    },
    "2798": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2799": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "2800": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2801": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "2802": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "ADD",
      "path": "0"
    },
    "2803": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2804": {
      "op": "POP"
    },
    "2805": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2806": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17573,
        17609
      ],
      "op": "POP",
      "path": "0"
    },
    "2807": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17551,
        17609
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2808": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17551,
        17609
      ],
      "op": "POP",
      "path": "0"
    },
    "2809": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17619,
        17625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2811": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17615,
        17688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2812": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17633,
        17650
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2813": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17633,
        17650
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2814": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17633,
        17654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB08"
    },
    "2817": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17633,
        17654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2818": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17653,
        17654
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2820": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17633,
        17654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "2823": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        17633,
        17654
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2824": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17633,
        17654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2825": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17629,
        17630
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2826": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17629,
        17655
      ],
      "op": "LT",
      "path": "0"
    },
    "2827": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17615,
        17688
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2828": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17615,
        17688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB4C"
    },
    "2831": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17615,
        17688
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2832": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17677,
        17683
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 13
    },
    "2833": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17671
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2834": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17672,
        17673
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2835": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2836": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2837": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2838": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "LT",
      "path": "0"
    },
    "2839": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB22"
    },
    "2842": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2843": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB22"
    },
    "2846": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "2849": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        17669,
        17674
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2850": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2857": {
      "op": "SHL"
    },
    "2858": {
      "op": "SUB"
    },
    "2859": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17683
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2860": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17683
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2861": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17683
      ],
      "op": "AND",
      "path": "0"
    },
    "2862": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2864": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2865": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2866": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "MUL",
      "path": "0"
    },
    "2867": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2868": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2869": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2870": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "ADD",
      "path": "0"
    },
    "2871": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2872": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2873": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17674
      ],
      "op": "ADD",
      "path": "0"
    },
    "2874": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17669,
        17683
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2875": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17657,
        17660
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 14
    },
    "2876": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17657,
        17660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB44"
    },
    "2879": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17657,
        17660
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2880": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17657,
        17660
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED1"
    },
    "2883": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        17657,
        17660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2884": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17657,
        17660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2885": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17657,
        17660
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2886": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17657,
        17660
      ],
      "op": "POP",
      "path": "0"
    },
    "2887": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17657,
        17660
      ],
      "op": "POP",
      "path": "0"
    },
    "2888": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17615,
        17688
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAFB"
    },
    "2891": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17615,
        17688
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2892": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17615,
        17688
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2893": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17615,
        17688
      ],
      "op": "POP",
      "path": "0"
    },
    "2894": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17694,
        17752
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 15,
      "value": "0xB59"
    },
    "2897": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17712,
        17717
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2898": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17719,
        17735
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2899": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17737,
        17747
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2900": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17749,
        17751
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2901": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17694,
        17711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A06"
    },
    "2904": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        17694,
        17752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2905": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17694,
        17752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2906": {
      "op": "POP"
    },
    "2907": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17764,
        17768
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x1"
    },
    "2909": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17764,
        17768
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "2910": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        17400,
        17772
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2911": {
      "op": "POP"
    },
    "2912": {
      "op": "POP"
    },
    "2913": {
      "op": "POP"
    },
    "2914": {
      "op": "POP"
    },
    "2915": {
      "op": "POP"
    },
    "2916": {
      "op": "POP"
    },
    "2917": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "o",
      "offset": [
        17400,
        17772
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2918": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2925": {
      "op": "SHL"
    },
    "2926": {
      "op": "SUB"
    },
    "2927": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25617
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 17
    },
    "2928": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25617
      ],
      "op": "AND",
      "path": "0"
    },
    "2929": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25567,
        25579
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2931": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25617
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2932": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25617
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2933": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25617
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2934": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "2936": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2938": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25617
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2939": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2941": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25617
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2942": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25617
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2943": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25617
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2944": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25629
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB89"
    },
    "2947": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25629
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2948": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25622,
        25628
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2949": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25621
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F6"
    },
    "2952": {
      "fn": "ForgeMining.transferFrom",
      "jump": "i",
      "offset": [
        25603,
        25629
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2953": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25603,
        25629
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2960": {
      "op": "SHL"
    },
    "2961": {
      "op": "SUB"
    },
    "2962": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2963": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "AND",
      "path": "0"
    },
    "2964": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2966": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2967": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2968": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2969": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25594
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "2971": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2973": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2974": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2975": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2976": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2978": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2979": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2980": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25600
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2981": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25629
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2982": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25629
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2983": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25629
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2984": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25586,
        25629
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2985": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25668
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x1D"
    },
    "2987": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25674
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2988": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25674
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2989": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25674
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2990": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25674
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2991": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25674
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2992": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25675,
        25685
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2993": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25686
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2994": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25686
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2995": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25686
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2996": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25686
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2997": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25686
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2998": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25686
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2999": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25698
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBC0"
    },
    "3002": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3003": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25691,
        25697
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3004": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25690
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F6"
    },
    "3007": {
      "fn": "ForgeMining.transferFrom",
      "jump": "i",
      "offset": [
        25661,
        25698
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3008": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25661,
        25698
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3015": {
      "op": "SHL"
    },
    "3016": {
      "op": "SUB"
    },
    "3017": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3018": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3019": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "AND",
      "path": "0"
    },
    "3020": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3022": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3023": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3024": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3025": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25640
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1D"
    },
    "3027": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3029": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3030": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3031": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3032": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3034": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3035": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3036": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25646
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3037": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25647,
        25657
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3038": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25658
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3039": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25658
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3040": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25658
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3041": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25658
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3042": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25658
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3043": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25658
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3044": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25658
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3045": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25698
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3046": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25698
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3047": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25698
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3048": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25633,
        25698
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3049": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25729
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 19
    },
    "3050": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25729
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3051": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25729
      ],
      "op": "AND",
      "path": "0"
    },
    "3052": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25729
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3053": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25729
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3054": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "3056": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3057": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25729
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3058": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25729
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3059": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25729
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3060": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25729
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3061": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBFE"
    },
    "3064": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25741
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3065": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25734,
        25740
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3066": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25733
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2542"
    },
    "3069": {
      "fn": "ForgeMining.transferFrom",
      "jump": "i",
      "offset": [
        25717,
        25741
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3070": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25717,
        25741
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3077": {
      "op": "SHL"
    },
    "3078": {
      "op": "SUB"
    },
    "3079": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3080": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3081": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "AND",
      "path": "0"
    },
    "3082": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3084": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3085": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3086": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3087": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25710
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "3089": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3091": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3092": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3094": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3095": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3096": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3097": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25714
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3098": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25741
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3099": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25741
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3100": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25741
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3101": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25702,
        25741
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3102": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 20
    },
    "3103": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3104": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3105": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3106": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "AND",
      "path": "0"
    },
    "3107": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3110": {
      "op": "DUP1"
    },
    "3111": {
      "op": "MLOAD"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3114": {
      "op": "PUSH2",
      "value": "0x31F6"
    },
    "3117": {
      "op": "DUP4"
    },
    "3118": {
      "op": "CODECOPY"
    },
    "3119": {
      "op": "DUP2"
    },
    "3120": {
      "op": "MLOAD"
    },
    "3121": {
      "op": "SWAP2"
    },
    "3122": {
      "op": "MSTORE"
    },
    "3123": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3124": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC40"
    },
    "3127": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3128": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25770,
        25776
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3129": {
      "op": "DUP2"
    },
    "3130": {
      "op": "MSTORE"
    },
    "3131": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3133": {
      "op": "ADD"
    },
    "3134": {
      "op": "SWAP1"
    },
    "3135": {
      "op": "JUMP"
    },
    "3136": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3137": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3139": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3140": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3141": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3142": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "SUB",
      "path": "0"
    },
    "3143": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3144": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25751,
        25777
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3145": {
      "op": "POP"
    },
    "3146": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25789,
        25793
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x1"
    },
    "3148": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3149": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3150": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "POP",
      "path": "0"
    },
    "3151": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "POP",
      "path": "0"
    },
    "3152": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        25481,
        25798
      ],
      "op": "POP",
      "path": "0"
    },
    "3153": {
      "fn": "ForgeMining.transferFrom",
      "jump": "o",
      "offset": [
        25481,
        25798
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3154": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22767,
        22998
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3155": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22815,
        22819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3157": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22944,
        22991
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 22,
      "value": "0xA8A"
    },
    "3160": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22980,
        22989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "3162": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22980,
        22989
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3163": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22977,
        22978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3165": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22977,
        22989
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC66"
    },
    "3168": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22977,
        22989
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3169": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22977,
        22989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3170": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22977,
        22989
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD0"
    },
    "3173": {
      "fn": "ForgeMining.getMiningReward",
      "jump": "i",
      "offset": [
        22977,
        22989
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3174": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22977,
        22989
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3175": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22951,
        22969
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC72"
    },
    "3178": {
      "offset": [
        8106,
        8108
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "3180": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22951,
        22953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3182": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22951,
        22969
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD0"
    },
    "3185": {
      "fn": "ForgeMining.getMiningReward",
      "jump": "i",
      "offset": [
        22951,
        22969
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3186": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22951,
        22969
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3187": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22945,
        22969
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "3190": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22945,
        22969
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3191": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22945,
        22948
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3193": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22945,
        22969
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "3196": {
      "fn": "ForgeMining.getMiningReward",
      "jump": "i",
      "offset": [
        22945,
        22969
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3197": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22945,
        22969
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3198": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22944,
        22975
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3199": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        22944,
        22975
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A8"
    },
    "3202": {
      "fn": "ForgeMining.getMiningReward",
      "jump": "i",
      "offset": [
        22944,
        22991
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3203": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9317,
        9541
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3204": {
      "offset": [
        3147,
        3152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3206": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3147,
        3152
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3213": {
      "op": "SHL"
    },
    "3214": {
      "op": "SUB"
    },
    "3215": {
      "offset": [
        3147,
        3152
      ],
      "op": "AND",
      "path": "0"
    },
    "3216": {
      "offset": [
        3133,
        3143
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3217": {
      "offset": [
        3133,
        3152
      ],
      "op": "EQ",
      "path": "0"
    },
    "3218": {
      "offset": [
        3125,
        3167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCCF"
    },
    "3221": {
      "offset": [
        3125,
        3167
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3222": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3125,
        3167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3224": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3125,
        3167
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3225": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3229": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3231": {
      "op": "SHL"
    },
    "3232": {
      "offset": [
        3125,
        3167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3233": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3125,
        3167
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3236": {
      "offset": [
        3125,
        3167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3238": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3125,
        3167
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3239": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3125,
        3167
      ],
      "op": "ADD",
      "path": "0"
    },
    "3240": {
      "op": "MSTORE"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3245": {
      "op": "DUP3"
    },
    "3246": {
      "op": "ADD"
    },
    "3247": {
      "op": "MSTORE"
    },
    "3248": {
      "op": "PUSH10",
      "value": "0x37B7363C9037BBB732B9"
    },
    "3259": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3261": {
      "op": "SHL"
    },
    "3262": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3264": {
      "op": "DUP3"
    },
    "3265": {
      "op": "ADD"
    },
    "3266": {
      "op": "MSTORE"
    },
    "3267": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "offset": [
        3125,
        3167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3271": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3125,
        3167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3273": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3125,
        3167
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3274": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3125,
        3167
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3275": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3125,
        3167
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3276": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3125,
        3167
      ],
      "op": "SUB",
      "path": "0"
    },
    "3277": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3125,
        3167
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3278": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3125,
        3167
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "3279": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        3125,
        3167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3280": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9424,
        9438
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x6"
    },
    "3282": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9424,
        9456
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3283": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9424,
        9456
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3290": {
      "op": "SHL"
    },
    "3291": {
      "op": "SUB"
    },
    "3292": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9424,
        9456
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3293": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9424,
        9456
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3294": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9424,
        9456
      ],
      "op": "AND",
      "path": "0"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3301": {
      "op": "SHL"
    },
    "3302": {
      "op": "SUB"
    },
    "3303": {
      "op": "NOT"
    },
    "3304": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9424,
        9456
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3305": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9424,
        9456
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3306": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9424,
        9456
      ],
      "op": "AND",
      "path": "0"
    },
    "3307": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9424,
        9456
      ],
      "op": "OR",
      "path": "0"
    },
    "3308": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9424,
        9456
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3309": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9424,
        9456
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3310": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9424,
        9456
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3311": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9476
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x7"
    },
    "3313": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3314": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3315": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3316": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3317": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "AND",
      "path": "0"
    },
    "3318": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3319": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3320": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "AND",
      "path": "0"
    },
    "3321": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3322": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3323": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3324": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "OR",
      "path": "0"
    },
    "3325": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3326": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3327": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9461,
        9496
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3328": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9501,
        9516
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x8"
    },
    "3330": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9501,
        9535
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3331": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9501,
        9535
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3332": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9501,
        9535
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3333": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9501,
        9535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3334": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9501,
        9535
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3335": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9501,
        9535
      ],
      "op": "AND",
      "path": "0"
    },
    "3336": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9501,
        9535
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3337": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9501,
        9535
      ],
      "op": "AND",
      "path": "0"
    },
    "3338": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9501,
        9535
      ],
      "op": "OR",
      "path": "0"
    },
    "3339": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9501,
        9535
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3340": {
      "fn": "ForgeMining.zinit2",
      "offset": [
        9501,
        9535
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3341": {
      "fn": "ForgeMining.zinit2",
      "jump": "o",
      "offset": [
        9317,
        9541
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3342": {
      "fn": "ForgeMining.test",
      "offset": [
        18457,
        18883
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3343": {
      "fn": "ForgeMining.test",
      "offset": [
        18545,
        18554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3345": {
      "offset": [
        5961,
        5968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB40"
    },
    "3348": {
      "fn": "ForgeMining.test",
      "offset": [
        18559,
        18586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1D"
    },
    "3351": {
      "fn": "ForgeMining.test",
      "offset": [
        18574,
        18586
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3352": {
      "fn": "ForgeMining.test",
      "offset": [
        18559,
        18571
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3353": {
      "fn": "ForgeMining.test",
      "offset": [
        18559,
        18586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FFB"
    },
    "3356": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18559,
        18586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3357": {
      "fn": "ForgeMining.test",
      "offset": [
        18559,
        18586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3358": {
      "fn": "ForgeMining.test",
      "offset": [
        18558,
        18593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD29"
    },
    "3361": {
      "fn": "ForgeMining.test",
      "offset": [
        18558,
        18593
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3362": {
      "fn": "ForgeMining.test",
      "offset": [
        18590,
        18593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "3365": {
      "fn": "ForgeMining.test",
      "offset": [
        18558,
        18593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "3368": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18558,
        18593
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3369": {
      "fn": "ForgeMining.test",
      "offset": [
        18558,
        18593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3370": {
      "fn": "ForgeMining.test",
      "offset": [
        18557,
        18607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD33"
    },
    "3373": {
      "fn": "ForgeMining.test",
      "offset": [
        18557,
        18607
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3374": {
      "fn": "ForgeMining.test",
      "offset": [
        18557,
        18607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3375": {
      "fn": "ForgeMining.test",
      "offset": [
        18557,
        18607
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "3378": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18557,
        18607
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3379": {
      "fn": "ForgeMining.test",
      "offset": [
        18557,
        18607
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3380": {
      "fn": "ForgeMining.test",
      "offset": [
        18611,
        18618
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x3"
    },
    "3382": {
      "fn": "ForgeMining.test",
      "offset": [
        18611,
        18622
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3383": {
      "fn": "ForgeMining.test",
      "offset": [
        18611,
        18622
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3384": {
      "fn": "ForgeMining.test",
      "offset": [
        18611,
        18622
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3385": {
      "fn": "ForgeMining.test",
      "offset": [
        18545,
        18607
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "fn": "ForgeMining.test",
      "offset": [
        18626,
        18636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3389": {
      "fn": "ForgeMining.test",
      "offset": [
        18649,
        18652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "3392": {
      "fn": "ForgeMining.test",
      "offset": [
        18639,
        18646
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4A"
    },
    "3395": {
      "fn": "ForgeMining.test",
      "offset": [
        18545,
        18607
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3396": {
      "fn": "ForgeMining.test",
      "offset": [
        18643,
        18646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3398": {
      "fn": "ForgeMining.test",
      "offset": [
        18639,
        18646
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "3401": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18639,
        18646
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3402": {
      "fn": "ForgeMining.test",
      "offset": [
        18639,
        18646
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3403": {
      "fn": "ForgeMining.test",
      "offset": [
        18639,
        18652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD54"
    },
    "3406": {
      "fn": "ForgeMining.test",
      "offset": [
        18639,
        18652
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3407": {
      "fn": "ForgeMining.test",
      "offset": [
        18639,
        18652
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3408": {
      "fn": "ForgeMining.test",
      "offset": [
        18639,
        18652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "3411": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18639,
        18652
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3412": {
      "fn": "ForgeMining.test",
      "offset": [
        18639,
        18652
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3413": {
      "fn": "ForgeMining.test",
      "offset": [
        18626,
        18652
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3414": {
      "fn": "ForgeMining.test",
      "offset": [
        18626,
        18652
      ],
      "op": "POP",
      "path": "0"
    },
    "3415": {
      "fn": "ForgeMining.test",
      "offset": [
        18656,
        18670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3417": {
      "fn": "ForgeMining.test",
      "offset": [
        18692,
        18695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A"
    },
    "3420": {
      "fn": "ForgeMining.test",
      "offset": [
        18684,
        18689
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3421": {
      "branch": 151,
      "fn": "ForgeMining.test",
      "offset": [
        18684,
        18695
      ],
      "op": "LT",
      "path": "0"
    },
    "3422": {
      "fn": "ForgeMining.test",
      "offset": [
        18681,
        18857
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3423": {
      "fn": "ForgeMining.test",
      "offset": [
        18681,
        18857
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDB5"
    },
    "3426": {
      "branch": 151,
      "fn": "ForgeMining.test",
      "offset": [
        18681,
        18857
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3427": {
      "fn": "ForgeMining.test",
      "offset": [
        18780,
        18786
      ],
      "op": "PUSH3",
      "path": "0",
      "statement": 27,
      "value": "0x470DC"
    },
    "3431": {
      "fn": "ForgeMining.test",
      "offset": [
        18753,
        18776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD7A"
    },
    "3434": {
      "fn": "ForgeMining.test",
      "offset": [
        18772,
        18775
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "3437": {
      "fn": "ForgeMining.test",
      "offset": [
        18754,
        18766
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "3440": {
      "fn": "ForgeMining.test",
      "offset": [
        18765,
        18766
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3441": {
      "fn": "ForgeMining.test",
      "offset": [
        18754,
        18762
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x26F7F3C"
    },
    "3446": {
      "fn": "ForgeMining.test",
      "offset": [
        18754,
        18766
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "3449": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18754,
        18766
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3450": {
      "fn": "ForgeMining.test",
      "offset": [
        18753,
        18776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3451": {
      "fn": "ForgeMining.test",
      "offset": [
        18714,
        18751
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9A"
    },
    "3454": {
      "fn": "ForgeMining.test",
      "offset": [
        18742,
        18750
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC0840"
    },
    "3458": {
      "fn": "ForgeMining.test",
      "offset": [
        18728,
        18734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8C"
    },
    "3461": {
      "fn": "ForgeMining.test",
      "offset": [
        18733,
        18734
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3463": {
      "fn": "ForgeMining.test",
      "offset": [
        18728,
        18729
      ],
      "op": "DUP9",
      "path": "0"
    },
    "3464": {
      "fn": "ForgeMining.test",
      "offset": [
        18728,
        18734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x303C"
    },
    "3467": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18728,
        18734
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3468": {
      "fn": "ForgeMining.test",
      "offset": [
        18728,
        18734
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3469": {
      "fn": "ForgeMining.test",
      "offset": [
        18716,
        18736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "3472": {
      "fn": "ForgeMining.test",
      "offset": [
        18716,
        18736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3473": {
      "fn": "ForgeMining.test",
      "offset": [
        18716,
        18724
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3A2CDF0"
    },
    "3478": {
      "fn": "ForgeMining.test",
      "offset": [
        18716,
        18736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "3481": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18716,
        18736
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3482": {
      "fn": "ForgeMining.test",
      "offset": [
        18714,
        18751
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3483": {
      "fn": "ForgeMining.test",
      "offset": [
        18714,
        18776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA4"
    },
    "3486": {
      "fn": "ForgeMining.test",
      "offset": [
        18714,
        18776
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3487": {
      "fn": "ForgeMining.test",
      "offset": [
        18714,
        18776
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3488": {
      "fn": "ForgeMining.test",
      "offset": [
        18714,
        18776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "3491": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18714,
        18776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3492": {
      "fn": "ForgeMining.test",
      "offset": [
        18714,
        18776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3493": {
      "fn": "ForgeMining.test",
      "offset": [
        18714,
        18786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDAE"
    },
    "3496": {
      "fn": "ForgeMining.test",
      "offset": [
        18714,
        18786
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3497": {
      "fn": "ForgeMining.test",
      "offset": [
        18714,
        18786
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3498": {
      "fn": "ForgeMining.test",
      "offset": [
        18714,
        18786
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FFB"
    },
    "3501": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18714,
        18786
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3502": {
      "fn": "ForgeMining.test",
      "offset": [
        18714,
        18786
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3503": {
      "fn": "ForgeMining.test",
      "offset": [
        18701,
        18787
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3504": {
      "fn": "ForgeMining.test",
      "offset": [
        18701,
        18787
      ],
      "op": "POP",
      "path": "0"
    },
    "3505": {
      "fn": "ForgeMining.test",
      "offset": [
        18681,
        18857
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDDA"
    },
    "3508": {
      "fn": "ForgeMining.test",
      "offset": [
        18681,
        18857
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3509": {
      "fn": "ForgeMining.test",
      "offset": [
        18681,
        18857
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3510": {
      "fn": "ForgeMining.test",
      "offset": [
        18814,
        18838
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 28,
      "value": "0xDC9"
    },
    "3513": {
      "fn": "ForgeMining.test",
      "offset": [
        18834,
        18837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "3516": {
      "fn": "ForgeMining.test",
      "offset": [
        18815,
        18828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "3519": {
      "fn": "ForgeMining.test",
      "offset": [
        18815,
        18816
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3520": {
      "fn": "ForgeMining.test",
      "offset": [
        18819,
        18828
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "3525": {
      "fn": "ForgeMining.test",
      "offset": [
        18815,
        18828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "3528": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18815,
        18828
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3529": {
      "fn": "ForgeMining.test",
      "offset": [
        18814,
        18838
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3530": {
      "fn": "ForgeMining.test",
      "offset": [
        18814,
        18852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD7"
    },
    "3533": {
      "fn": "ForgeMining.test",
      "offset": [
        18814,
        18852
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3534": {
      "fn": "ForgeMining.test",
      "offset": [
        18842,
        18851
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x14DC9380"
    },
    "3539": {
      "fn": "ForgeMining.test",
      "offset": [
        18814,
        18852
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "3542": {
      "fn": "ForgeMining.test",
      "jump": "i",
      "offset": [
        18814,
        18852
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3543": {
      "fn": "ForgeMining.test",
      "offset": [
        18814,
        18852
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3544": {
      "fn": "ForgeMining.test",
      "offset": [
        18802,
        18852
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3545": {
      "fn": "ForgeMining.test",
      "offset": [
        18802,
        18852
      ],
      "op": "POP",
      "path": "0"
    },
    "3546": {
      "fn": "ForgeMining.test",
      "offset": [
        18681,
        18857
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3547": {
      "fn": "ForgeMining.test",
      "offset": [
        18861,
        18866
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x1"
    },
    "3549": {
      "fn": "ForgeMining.test",
      "offset": [
        18861,
        18878
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3550": {
      "op": "POP"
    },
    "3551": {
      "op": "POP"
    },
    "3552": {
      "op": "POP"
    },
    "3553": {
      "op": "POP"
    },
    "3554": {
      "op": "POP"
    },
    "3555": {
      "fn": "ForgeMining.test",
      "jump": "o",
      "offset": [
        18457,
        18883
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3556": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3557": {
      "offset": [
        3147,
        3152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3559": {
      "fn": "ForgeMining.zinit",
      "offset": [
        3147,
        3152
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3566": {
      "op": "SHL"
    },
    "3567": {
      "op": "SUB"
    },
    "3568": {
      "offset": [
        3147,
        3152
      ],
      "op": "AND",
      "path": "0"
    },
    "3569": {
      "offset": [
        3133,
        3143
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3570": {
      "offset": [
        3133,
        3152
      ],
      "op": "EQ",
      "path": "0"
    },
    "3571": {
      "offset": [
        3125,
        3167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE2B"
    },
    "3574": {
      "offset": [
        3125,
        3167
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3575": {
      "fn": "ForgeMining.zinit",
      "offset": [
        3125,
        3167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3577": {
      "fn": "ForgeMining.zinit",
      "offset": [
        3125,
        3167
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3584": {
      "op": "SHL"
    },
    "3585": {
      "offset": [
        3125,
        3167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3586": {
      "fn": "ForgeMining.zinit",
      "offset": [
        3125,
        3167
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3589": {
      "offset": [
        3125,
        3167
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3591": {
      "fn": "ForgeMining.zinit",
      "offset": [
        3125,
        3167
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3592": {
      "fn": "ForgeMining.zinit",
      "offset": [
        3125,
        3167
      ],
      "op": "ADD",
      "path": "0"
    },
    "3593": {
      "op": "MSTORE"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3598": {
      "op": "DUP3"
    },
    "3599": {
      "op": "ADD"
    },
    "3600": {
      "op": "MSTORE"
    },
    "3601": {
      "op": "PUSH10",
      "value": "0x37B7363C9037BBB732B9"
    },
    "3612": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3614": {
      "op": "SHL"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3617": {
      "op": "DUP3"
    },
    "3618": {
      "op": "ADD"
    },
    "3619": {
      "op": "MSTORE"
    },
    "3620": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3622": {
      "op": "ADD"
    },
    "3623": {
      "offset": [
        3125,
        3167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "3626": {
      "op": "JUMP"
    },
    "3627": {
      "offset": [
        3125,
        3167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3628": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8387,
        8393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3630": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8435,
        8449
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x21"
    },
    "3632": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8435,
        8449
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3633": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8430,
        8431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3635": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8430,
        8449
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE3C"
    },
    "3638": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8430,
        8449
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3639": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8430,
        8449
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3640": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8430,
        8449
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD0"
    },
    "3643": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8430,
        8449
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3644": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8430,
        8449
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3645": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8426,
        8450
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE47"
    },
    "3648": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8426,
        8450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3649": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8426,
        8427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3651": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8426,
        8450
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "3654": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8426,
        8450
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3655": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8426,
        8450
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3656": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8396,
        8451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE5C"
    },
    "3659": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8396,
        8451
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3660": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8396,
        8422
      ],
      "op": "PUSH11",
      "path": "0",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "3672": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8396,
        8451
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "3675": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8396,
        8451
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3676": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8396,
        8451
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3677": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8530,
        8536
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x24"
    },
    "3679": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8530,
        8536
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3680": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8387,
        8451
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3681": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8387,
        8451
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3682": {
      "op": "POP"
    },
    "3683": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8530,
        8536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3685": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8530,
        8536
      ],
      "op": "AND",
      "path": "0"
    },
    "3686": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8529,
        8536
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3687": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8522,
        8537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE72"
    },
    "3690": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8522,
        8537
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3691": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8522,
        8537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE72"
    },
    "3694": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8522,
        8537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x304B"
    },
    "3697": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8522,
        8537
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3698": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8522,
        8537
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3699": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8547,
        8553
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 31,
      "value": "0x24"
    },
    "3701": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8547,
        8560
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3702": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8547,
        8560
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3705": {
      "op": "NOT"
    },
    "3706": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8547,
        8560
      ],
      "op": "AND",
      "path": "0"
    },
    "3707": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8556,
        8560
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3709": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8547,
        8560
      ],
      "op": "OR",
      "path": "0"
    },
    "3710": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8547,
        8560
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3711": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8547,
        8560
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3712": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8547,
        8553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3714": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8569,
        8578
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 32,
      "value": "0x12"
    },
    "3716": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8569,
        8582
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3717": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8569,
        8582
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3718": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8569,
        8582
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3719": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8585,
        8597
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x1B"
    },
    "3721": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8585,
        8601
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3722": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8623,
        8638
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0xF"
    },
    "3724": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8623,
        8638
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3725": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8623,
        8649
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE98"
    },
    "3728": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8623,
        8649
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3729": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8643,
        8648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7535"
    },
    "3732": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8623,
        8642
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A8"
    },
    "3735": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8623,
        8649
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3736": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8623,
        8649
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3737": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8608,
        8620
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "3739": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8608,
        8649
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3740": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8735,
        8750
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 35
    },
    "3741": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8702,
        8732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3743": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8702,
        8750
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3744": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8757,
        8779
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 36,
      "value": "0xEA7"
    },
    "3747": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8757,
        8777
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2590"
    },
    "3750": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8757,
        8779
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3751": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8757,
        8779
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3758": {
      "op": "SHL"
    },
    "3759": {
      "op": "SUB"
    },
    "3760": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 37
    },
    "3761": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "AND",
      "path": "0"
    },
    "3762": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3764": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3765": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3766": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3767": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8843
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "3769": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3771": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3772": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3773": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3774": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3776": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3777": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3778": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8860
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3779": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8864
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3780": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8864
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3781": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8835,
        8864
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3782": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8881,
        8921
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 38
    },
    "3783": {
      "op": "DUP5"
    },
    "3784": {
      "op": "DUP2"
    },
    "3785": {
      "op": "MSTORE"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3788": {
      "op": "DUP1"
    },
    "3789": {
      "op": "MLOAD"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3792": {
      "op": "PUSH2",
      "value": "0x31F6"
    },
    "3795": {
      "op": "DUP4"
    },
    "3796": {
      "op": "CODECOPY"
    },
    "3797": {
      "op": "DUP2"
    },
    "3798": {
      "op": "MLOAD"
    },
    "3799": {
      "op": "SWAP2"
    },
    "3800": {
      "op": "MSTORE"
    },
    "3801": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8881,
        8921
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3802": {
      "op": "ADD"
    },
    "3803": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8881,
        8921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3805": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8881,
        8921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3806": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8881,
        8921
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3807": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8881,
        8921
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3808": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8881,
        8921
      ],
      "op": "SUB",
      "path": "0"
    },
    "3809": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8881,
        8921
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3810": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8881,
        8921
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3811": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8944
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x6"
    },
    "3813": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8962
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3814": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8962
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3821": {
      "op": "SHL"
    },
    "3822": {
      "op": "SUB"
    },
    "3823": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8962
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3824": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8962
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3825": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8962
      ],
      "op": "AND",
      "path": "0"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3832": {
      "op": "SHL"
    },
    "3833": {
      "op": "SUB"
    },
    "3834": {
      "op": "NOT"
    },
    "3835": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8962
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3836": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8962
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3837": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8962
      ],
      "op": "AND",
      "path": "0"
    },
    "3838": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8962
      ],
      "op": "OR",
      "path": "0"
    },
    "3839": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8962
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3840": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8962
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3841": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8962
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3842": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8972,
        8987
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 40,
      "value": "0x7"
    },
    "3844": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8972,
        9007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3845": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8972,
        9007
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3846": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8972,
        9007
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3847": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8972,
        9007
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3848": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8972,
        9007
      ],
      "op": "AND",
      "path": "0"
    },
    "3849": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8972,
        9007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3850": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8972,
        9007
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3851": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8972,
        9007
      ],
      "op": "AND",
      "path": "0"
    },
    "3852": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8972,
        9007
      ],
      "op": "OR",
      "path": "0"
    },
    "3853": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8972,
        9007
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3854": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8972,
        9007
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3855": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9032
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 41,
      "value": "0x8"
    },
    "3857": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3858": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3859": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3860": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3861": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "AND",
      "path": "0"
    },
    "3862": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3863": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3864": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3865": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "AND",
      "path": "0"
    },
    "3866": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3867": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3868": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3869": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "OR",
      "path": "0"
    },
    "3870": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3871": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9017,
        9051
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3872": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9075,
        9085
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 42,
      "value": "0xC"
    },
    "3874": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9075,
        9085
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3875": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9063,
        9072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "3877": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9063,
        9085
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3878": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9143,
        9153
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 43
    },
    "3879": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8930,
        8944
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3881": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9154
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3882": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9154
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3883": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9154
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3884": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9142
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "3886": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3888": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9154
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3889": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9154
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3891": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9154
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3892": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9154
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3893": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9154
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3894": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9157,
        9176
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "3903": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3904": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3905": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3906": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9134,
        9176
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3907": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9193,
        9246
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 44
    },
    "3908": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9193,
        9246
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3911": {
      "op": "DUP1"
    },
    "3912": {
      "op": "MLOAD"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3915": {
      "op": "PUSH2",
      "value": "0x31F6"
    },
    "3918": {
      "op": "DUP4"
    },
    "3919": {
      "op": "CODECOPY"
    },
    "3920": {
      "op": "DUP2"
    },
    "3921": {
      "op": "MLOAD"
    },
    "3922": {
      "op": "SWAP2"
    },
    "3923": {
      "op": "MSTORE"
    },
    "3924": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9193,
        9246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3925": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9193,
        9246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF61"
    },
    "3928": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9193,
        9246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3929": {
      "op": "SWAP1"
    },
    "3930": {
      "op": "DUP2"
    },
    "3931": {
      "op": "MSTORE"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3934": {
      "op": "ADD"
    },
    "3935": {
      "op": "SWAP1"
    },
    "3936": {
      "op": "JUMP"
    },
    "3937": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9193,
        9246
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3938": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9193,
        9246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3940": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9193,
        9246
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3941": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9193,
        9246
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3942": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9193,
        9246
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3943": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9193,
        9246
      ],
      "op": "SUB",
      "path": "0"
    },
    "3944": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9193,
        9246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3945": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9193,
        9246
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3946": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8377,
        9259
      ],
      "op": "POP",
      "path": "0"
    },
    "3947": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "POP",
      "path": "0"
    },
    "3948": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "POP",
      "path": "0"
    },
    "3949": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8277,
        9259
      ],
      "op": "POP",
      "path": "0"
    },
    "3950": {
      "fn": "ForgeMining.zinit",
      "jump": "o",
      "offset": [
        8277,
        9259
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3951": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3952": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17855,
        17867
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3954": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17874,
        17888
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3955": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17919,
        17934
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "3957": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17919,
        17934
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3958": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17936,
        17946
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3959": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17948,
        17953
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3960": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3962": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3963": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3965": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "ADD",
      "path": "0"
    },
    "3966": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF89"
    },
    "3969": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3970": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3971": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3972": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3973": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3061"
    },
    "3976": {
      "fn": "ForgeMining.empty_mintTo",
      "jump": "i",
      "offset": [
        17902,
        17954
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3977": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3978": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3980": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3981": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3983": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3984": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3985": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "SUB",
      "path": "0"
    },
    "3986": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "SUB",
      "path": "0"
    },
    "3987": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3988": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3989": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3990": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3992": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17902,
        17954
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3993": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17892,
        17955
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3994": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17892,
        17955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3995": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17892,
        17955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3996": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17892,
        17955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3998": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17892,
        17955
      ],
      "op": "ADD",
      "path": "0"
    },
    "3999": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17892,
        17955
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4000": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17874,
        17955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4001": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17874,
        17955
      ],
      "op": "POP",
      "path": "0"
    },
    "4002": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18027,
        18043
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 45
    },
    "4003": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18017,
        18023
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4004": {
      "branch": 152,
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18017,
        18043
      ],
      "op": "EQ",
      "path": "0"
    },
    "4005": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18009,
        18094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC0"
    },
    "4008": {
      "branch": 152,
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18009,
        18094
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4009": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18009,
        18094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4011": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18009,
        18094
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4012": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4018": {
      "op": "SHL"
    },
    "4019": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18009,
        18094
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4020": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18009,
        18094
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4021": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18009,
        18094
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4023": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18009,
        18094
      ],
      "op": "ADD",
      "path": "0"
    },
    "4024": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18009,
        18094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "4027": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18009,
        18094
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4028": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18009,
        18094
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3089"
    },
    "4031": {
      "fn": "ForgeMining.empty_mintTo",
      "jump": "i",
      "offset": [
        18009,
        18094
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4032": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18009,
        18094
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4033": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18172,
        18184
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 46,
      "value": "0x10"
    },
    "4035": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18172,
        18184
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4036": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18154,
        18184
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4037": {
      "branch": 153,
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18154,
        18184
      ],
      "op": "LT",
      "path": "0"
    },
    "4038": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18146,
        18229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFE1"
    },
    "4041": {
      "branch": 153,
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18146,
        18229
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4042": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18146,
        18229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4044": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18146,
        18229
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4051": {
      "op": "SHL"
    },
    "4052": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18146,
        18229
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4053": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18146,
        18229
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4054": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18146,
        18229
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4056": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18146,
        18229
      ],
      "op": "ADD",
      "path": "0"
    },
    "4057": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18146,
        18229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "4060": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18146,
        18229
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4061": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18146,
        18229
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30D7"
    },
    "4064": {
      "fn": "ForgeMining.empty_mintTo",
      "jump": "i",
      "offset": [
        18146,
        18229
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4065": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18146,
        18229
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4066": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18233,
        18255
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 47,
      "value": "0xFE9"
    },
    "4069": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18233,
        18253
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2590"
    },
    "4072": {
      "fn": "ForgeMining.empty_mintTo",
      "jump": "i",
      "offset": [
        18233,
        18255
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4073": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18233,
        18255
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4074": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18286,
        18303
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 48,
      "value": "0x16"
    },
    "4076": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18286,
        18303
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4077": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18268,
        18283
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "4078": {
      "branch": 154,
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18268,
        18303
      ],
      "op": "GT",
      "path": "0"
    },
    "4079": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18260,
        18329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100A"
    },
    "4082": {
      "branch": 154,
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18260,
        18329
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4083": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18260,
        18329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4085": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18260,
        18329
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4086": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4092": {
      "op": "SHL"
    },
    "4093": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18260,
        18329
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4094": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18260,
        18329
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4095": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18260,
        18329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4097": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18260,
        18329
      ],
      "op": "ADD",
      "path": "0"
    },
    "4098": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18260,
        18329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "4101": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18260,
        18329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4102": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18260,
        18329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x311F"
    },
    "4105": {
      "fn": "ForgeMining.empty_mintTo",
      "jump": "i",
      "offset": [
        18260,
        18329
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4106": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18260,
        18329
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4107": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18354,
        18369
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 49
    },
    "4108": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18334,
        18351
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "4110": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18334,
        18369
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4111": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18400,
        18410
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0xC"
    },
    "4113": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18400,
        18410
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4114": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18412,
        18427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "4116": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18412,
        18427
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4117": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18380,
        18429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4119": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18380,
        18429
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4120": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18380,
        18429
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4121": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18397,
        18398
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4123": {
      "op": "DUP2"
    },
    "4124": {
      "op": "MSTORE"
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4127": {
      "op": "DUP2"
    },
    "4128": {
      "op": "ADD"
    },
    "4129": {
      "op": "SWAP4"
    },
    "4130": {
      "op": "SWAP1"
    },
    "4131": {
      "op": "SWAP4"
    },
    "4132": {
      "op": "MSTORE"
    },
    "4133": {
      "op": "DUP3"
    },
    "4134": {
      "op": "ADD"
    },
    "4135": {
      "op": "MSTORE"
    },
    "4136": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18385,
        18395
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4137": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18385,
        18395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4138": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18380,
        18429
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D"
    },
    "4171": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18380,
        18429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4174": {
      "op": "ADD"
    },
    "4175": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18380,
        18429
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4177": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18380,
        18429
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4178": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18380,
        18429
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4179": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18380,
        18429
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4180": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18380,
        18429
      ],
      "op": "SUB",
      "path": "0"
    },
    "4181": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18380,
        18429
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4182": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18380,
        18429
      ],
      "op": "LOG2",
      "path": "0"
    },
    "4183": {
      "op": "POP"
    },
    "4184": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18441,
        18442
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 51,
      "value": "0x0"
    },
    "4186": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        18441,
        18442
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4187": {
      "fn": "ForgeMining.empty_mintTo",
      "offset": [
        17776,
        18453
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4188": {
      "op": "POP"
    },
    "4189": {
      "op": "POP"
    },
    "4190": {
      "op": "POP"
    },
    "4191": {
      "fn": "ForgeMining.empty_mintTo",
      "jump": "o",
      "offset": [
        17776,
        18453
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4192": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4193": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21925,
        21937
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4195": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21943,
        21957
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4196": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21995,
        22011
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4197": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22012,
        22022
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4198": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22023,
        22028
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4199": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4201": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4202": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4204": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "ADD",
      "path": "0"
    },
    "4205": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1078"
    },
    "4208": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4209": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4210": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4211": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4212": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3061"
    },
    "4215": {
      "fn": "ForgeMining.checkMintSolution",
      "jump": "i",
      "offset": [
        21978,
        22029
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4216": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4217": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4219": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4220": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4222": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4223": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4224": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "SUB",
      "path": "0"
    },
    "4225": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "SUB",
      "path": "0"
    },
    "4226": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4227": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4228": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4229": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4231": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21978,
        22029
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4232": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21968,
        22030
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4233": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21968,
        22030
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4234": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21968,
        22030
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4235": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21968,
        22030
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4237": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21968,
        22030
      ],
      "op": "ADD",
      "path": "0"
    },
    "4238": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21968,
        22030
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4239": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21943,
        22031
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4240": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21943,
        22031
      ],
      "op": "POP",
      "path": "0"
    },
    "4241": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22056,
        22066
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4242": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22046,
        22052
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4243": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22038,
        22053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4245": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22038,
        22053
      ],
      "op": "SHR",
      "path": "0"
    },
    "4246": {
      "branch": 155,
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22038,
        22066
      ],
      "op": "GT",
      "path": "0"
    },
    "4247": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22035,
        22076
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4248": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22035,
        22076
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A0"
    },
    "4251": {
      "branch": 155,
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22035,
        22076
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4252": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22068,
        22076
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 52,
      "value": "0x0"
    },
    "4254": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22068,
        22076
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4255": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22068,
        22076
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4256": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22035,
        22076
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4257": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22089,
        22115
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 53
    },
    "4258": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22089,
        22115
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4259": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22089,
        22115
      ],
      "op": "EQ",
      "path": "0"
    },
    "4260": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        22089,
        22115
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4261": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        21793,
        22120
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4262": {
      "op": "POP"
    },
    "4263": {
      "op": "POP"
    },
    "4264": {
      "op": "POP"
    },
    "4265": {
      "op": "POP"
    },
    "4266": {
      "fn": "ForgeMining.checkMintSolution",
      "jump": "o",
      "offset": [
        21793,
        22120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4267": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4274": {
      "op": "SHL"
    },
    "4275": {
      "op": "SUB"
    },
    "4276": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26690,
        26712
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 54
    },
    "4277": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26690,
        26712
      ],
      "op": "AND",
      "path": "0"
    },
    "4278": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26707,
        26711
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "4279": {
      "branch": 156,
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26690,
        26712
      ],
      "op": "EQ",
      "path": "0"
    },
    "4280": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26682,
        26713
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10C0"
    },
    "4283": {
      "branch": 156,
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26682,
        26713
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4284": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26682,
        26713
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4286": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26682,
        26713
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4287": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26682,
        26713
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4288": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26682,
        26713
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4289": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 55,
      "value": "0x40"
    },
    "4291": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4292": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4299": {
      "op": "SHL"
    },
    "4300": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4301": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4308": {
      "op": "SHL"
    },
    "4309": {
      "op": "SUB"
    },
    "4310": {
      "op": "DUP6"
    },
    "4311": {
      "op": "AND"
    },
    "4312": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4314": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4315": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "ADD",
      "path": "0"
    },
    "4316": {
      "op": "MSTORE"
    },
    "4317": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4319": {
      "op": "DUP2"
    },
    "4320": {
      "op": "ADD"
    },
    "4321": {
      "op": "DUP5"
    },
    "4322": {
      "op": "SWAP1"
    },
    "4323": {
      "op": "MSTORE"
    },
    "4324": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26732,
        26736
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "4325": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26732,
        26736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4326": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26747
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "4331": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4334": {
      "op": "ADD"
    },
    "4335": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4337": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4339": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4340": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4341": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4342": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "SUB",
      "path": "0"
    },
    "4343": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4344": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4346": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4347": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "GAS",
      "path": "0"
    },
    "4348": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "CALL",
      "path": "0"
    },
    "4349": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4350": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4351": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4352": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x110D"
    },
    "4355": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4356": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4357": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4359": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4360": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4361": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4362": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4364": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4365": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4366": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "POP",
      "path": "0"
    },
    "4367": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "POP",
      "path": "0"
    },
    "4368": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "POP",
      "path": "0"
    },
    "4369": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "POP",
      "path": "0"
    },
    "4370": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4372": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4373": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4374": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4376": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "NOT",
      "path": "0"
    },
    "4377": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4379": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4380": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "ADD",
      "path": "0"
    },
    "4381": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "AND",
      "path": "0"
    },
    "4382": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4383": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "ADD",
      "path": "0"
    },
    "4384": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4385": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4387": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4388": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "POP",
      "path": "0"
    },
    "4389": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4390": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "ADD",
      "path": "0"
    },
    "4391": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4392": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1131"
    },
    "4395": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4396": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4397": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x314E"
    },
    "4400": {
      "fn": "ForgeMining.receiveApproval",
      "jump": "i",
      "offset": [
        26717,
        26761
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4401": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4402": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26717,
        26761
      ],
      "op": "POP",
      "path": "0"
    },
    "4403": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "POP",
      "path": "0"
    },
    "4404": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "POP",
      "path": "0"
    },
    "4405": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "POP",
      "path": "0"
    },
    "4406": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        26573,
        26767
      ],
      "op": "POP",
      "path": "0"
    },
    "4407": {
      "fn": "ForgeMining.receiveApproval",
      "jump": "o",
      "offset": [
        26573,
        26767
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4408": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4409": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23222,
        23240
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4411": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23247,
        23261
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4412": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23292,
        23307
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "4414": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23292,
        23307
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4415": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23309,
        23319
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4416": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23321,
        23326
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4417": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4419": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4420": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4422": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "ADD",
      "path": "0"
    },
    "4423": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1152"
    },
    "4426": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4427": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4428": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4429": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4430": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3061"
    },
    "4433": {
      "fn": "ForgeMining.getMintDigest",
      "jump": "i",
      "offset": [
        23275,
        23327
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4434": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4435": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4437": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4438": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4439": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4440": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4441": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "SUB",
      "path": "0"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4444": {
      "op": "NOT"
    },
    "4445": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "ADD",
      "path": "0"
    },
    "4446": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4447": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4448": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4449": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4450": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4451": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23265,
        23328
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4452": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23265,
        23328
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4453": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23275,
        23327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4455": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23265,
        23328
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4456": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23265,
        23328
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4457": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23265,
        23328
      ],
      "op": "ADD",
      "path": "0"
    },
    "4458": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23265,
        23328
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4459": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23265,
        23328
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "4460": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        23111,
        23351
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4461": {
      "op": "POP"
    },
    "4462": {
      "op": "POP"
    },
    "4463": {
      "op": "POP"
    },
    "4464": {
      "op": "POP"
    },
    "4465": {
      "op": "POP"
    },
    "4466": {
      "fn": "ForgeMining.getMintDigest",
      "jump": "o",
      "offset": [
        23111,
        23351
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4467": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4468": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14397,
        14409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4470": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14441,
        14451
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 56
    },
    "4471": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14441,
        14458
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4472": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14461,
        14462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4474": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14441,
        14462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1183"
    },
    "4477": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14441,
        14462
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4478": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14441,
        14462
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4479": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14441,
        14462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "4482": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14441,
        14462
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4483": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14441,
        14462
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4484": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14424,
        14430
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4485": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14424,
        14437
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4486": {
      "branch": 157,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14424,
        14462
      ],
      "op": "EQ",
      "path": "0"
    },
    "4487": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14416,
        14527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A2"
    },
    "4490": {
      "branch": 157,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14416,
        14527
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4491": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14416,
        14527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4493": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14416,
        14527
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4494": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4500": {
      "op": "SHL"
    },
    "4501": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14416,
        14527
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4502": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14416,
        14527
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4503": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14416,
        14527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4505": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14416,
        14527
      ],
      "op": "ADD",
      "path": "0"
    },
    "4506": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14416,
        14527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "4509": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14416,
        14527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4510": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14416,
        14527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x316B"
    },
    "4513": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14416,
        14527
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4514": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14416,
        14527
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4515": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14531,
        14538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4517": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14544,
        14888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4518": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14560,
        14570
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4519": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14560,
        14577
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4520": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14556,
        14558
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4521": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14556,
        14577
      ],
      "op": "LT",
      "path": "0"
    },
    "4522": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14544,
        14888
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4523": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14544,
        14888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1366"
    },
    "4526": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14544,
        14888
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4527": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14613,
        14617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11B9"
    },
    "4530": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14613,
        14615
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4531": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14616,
        14617
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4533": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14613,
        14617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "4536": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14613,
        14617
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4537": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14613,
        14617
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4538": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14609,
        14618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11C4"
    },
    "4541": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14609,
        14618
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4542": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14609,
        14610
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4544": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14609,
        14618
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD0"
    },
    "4547": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14609,
        14618
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4548": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14609,
        14618
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4549": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14595,
        14605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "4551": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14595,
        14605
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4552": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14595,
        14619
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D1"
    },
    "4555": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14595,
        14619
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4556": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14595,
        14619
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4557": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14595,
        14619
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C8"
    },
    "4560": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14595,
        14619
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4561": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14595,
        14619
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4562": {
      "branch": 158,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14595,
        14624
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4563": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14592,
        14642
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11DB"
    },
    "4566": {
      "branch": 158,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14592,
        14642
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4567": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14631,
        14636
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 57,
      "value": "0x1366"
    },
    "4570": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14631,
        14636
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4571": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14592,
        14642
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4572": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14680,
        14684
      ],
      "op": "ADDRESS",
      "path": "0",
      "statement": 58
    },
    "4573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4579": {
      "op": "SHL"
    },
    "4580": {
      "op": "SUB"
    },
    "4581": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14685
      ],
      "op": "AND",
      "path": "0"
    },
    "4582": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14664
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4583": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14665,
        14667
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4584": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4585": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4586": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4587": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "LT",
      "path": "0"
    },
    "4588": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F7"
    },
    "4591": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4592": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11F7"
    },
    "4595": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "4598": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14654,
        14668
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4599": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4600": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4602": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "MUL",
      "path": "0"
    },
    "4603": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4605": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "ADD",
      "path": "0"
    },
    "4606": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "ADD",
      "path": "0"
    },
    "4607": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14668
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4614": {
      "op": "SHL"
    },
    "4615": {
      "op": "SUB"
    },
    "4616": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14685
      ],
      "op": "AND",
      "path": "0"
    },
    "4617": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14685
      ],
      "op": "EQ",
      "path": "0"
    },
    "4618": {
      "branch": 159,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14685
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4619": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14722
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4620": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14722
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4621": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14722
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1248"
    },
    "4624": {
      "branch": 159,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14722
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4625": {
      "op": "POP"
    },
    "4626": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14707,
        14722
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "4628": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14707,
        14722
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4629": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4630": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4637": {
      "op": "SHL"
    },
    "4638": {
      "op": "SUB"
    },
    "4639": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14707,
        14722
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4640": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14707,
        14722
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4641": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14707,
        14722
      ],
      "op": "AND",
      "path": "0"
    },
    "4642": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14707,
        14722
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4643": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14699
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4644": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14699
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4645": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14700,
        14702
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4646": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14700,
        14702
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4647": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4648": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "LT",
      "path": "0"
    },
    "4649": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1234"
    },
    "4652": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4653": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1234"
    },
    "4656": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "4659": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14689,
        14703
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4660": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4661": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4663": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "MUL",
      "path": "0"
    },
    "4664": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4666": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "ADD",
      "path": "0"
    },
    "4667": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "ADD",
      "path": "0"
    },
    "4668": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14703
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4675": {
      "op": "SHL"
    },
    "4676": {
      "op": "SUB"
    },
    "4677": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14722
      ],
      "op": "AND",
      "path": "0"
    },
    "4678": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14722
      ],
      "op": "EQ",
      "path": "0"
    },
    "4679": {
      "branch": 160,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14689,
        14722
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4680": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14654,
        14722
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4681": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14646,
        14753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1294"
    },
    "4684": {
      "branch": 160,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14646,
        14753
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4685": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14646,
        14753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4687": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14646,
        14753
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4688": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4694": {
      "op": "SHL"
    },
    "4695": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14646,
        14753
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4696": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14646,
        14753
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4699": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14646,
        14753
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4701": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14646,
        14753
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4702": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14646,
        14753
      ],
      "op": "ADD",
      "path": "0"
    },
    "4703": {
      "op": "MSTORE"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4708": {
      "op": "DUP3"
    },
    "4709": {
      "op": "ADD"
    },
    "4710": {
      "op": "MSTORE"
    },
    "4711": {
      "op": "PUSH32",
      "value": "0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4746": {
      "op": "DUP3"
    },
    "4747": {
      "op": "ADD"
    },
    "4748": {
      "op": "MSTORE"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4751": {
      "op": "ADD"
    },
    "4752": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14646,
        14753
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "4755": {
      "op": "JUMP"
    },
    "4756": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14646,
        14753
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4757": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14762,
        14768
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4759": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14769,
        14773
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A1"
    },
    "4762": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14769,
        14771
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4763": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14772,
        14773
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4765": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14769,
        14773
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "4768": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14769,
        14773
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4769": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14769,
        14773
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4770": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14762,
        14773
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4771": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14762,
        14773
      ],
      "op": "POP",
      "path": "0"
    },
    "4772": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14758,
        14884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4773": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14778,
        14788
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4774": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14778,
        14795
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4775": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14775,
        14776
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4776": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14775,
        14795
      ],
      "op": "LT",
      "path": "0"
    },
    "4777": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14758,
        14884
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4778": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14758,
        14884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1353"
    },
    "4781": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14758,
        14884
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4782": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14842
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 59
    },
    "4783": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14843,
        14845
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4784": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4785": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4786": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4787": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "LT",
      "path": "0"
    },
    "4788": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12BF"
    },
    "4791": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4792": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12BF"
    },
    "4795": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "4798": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14832,
        14846
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4799": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4800": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4802": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "MUL",
      "path": "0"
    },
    "4803": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4805": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "ADD",
      "path": "0"
    },
    "4806": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "ADD",
      "path": "0"
    },
    "4807": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14832,
        14846
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4814": {
      "op": "SHL"
    },
    "4815": {
      "op": "SUB"
    },
    "4816": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14846
      ],
      "op": "AND",
      "path": "0"
    },
    "4817": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14825
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4818": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14826,
        14827
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4819": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4820": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4821": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4822": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "LT",
      "path": "0"
    },
    "4823": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E2"
    },
    "4826": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4827": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E2"
    },
    "4830": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "4833": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14815,
        14828
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4834": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4835": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4837": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "MUL",
      "path": "0"
    },
    "4838": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4840": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "ADD",
      "path": "0"
    },
    "4841": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "ADD",
      "path": "0"
    },
    "4842": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14828
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4849": {
      "op": "SHL"
    },
    "4850": {
      "op": "SUB"
    },
    "4851": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14846
      ],
      "op": "AND",
      "path": "0"
    },
    "4852": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14846
      ],
      "op": "EQ",
      "path": "0"
    },
    "4853": {
      "branch": 161,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14815,
        14846
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4854": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14807,
        14878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1341"
    },
    "4857": {
      "branch": 161,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14807,
        14878
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4858": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14807,
        14878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4860": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14807,
        14878
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4867": {
      "op": "SHL"
    },
    "4868": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14807,
        14878
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4869": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14807,
        14878
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4872": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14807,
        14878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4874": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14807,
        14878
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4875": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14807,
        14878
      ],
      "op": "ADD",
      "path": "0"
    },
    "4876": {
      "op": "MSTORE"
    },
    "4877": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4879": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4881": {
      "op": "DUP3"
    },
    "4882": {
      "op": "ADD"
    },
    "4883": {
      "op": "MSTORE"
    },
    "4884": {
      "op": "PUSH32",
      "value": "0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4919": {
      "op": "DUP3"
    },
    "4920": {
      "op": "ADD"
    },
    "4921": {
      "op": "MSTORE"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4924": {
      "op": "ADD"
    },
    "4925": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14807,
        14878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "4928": {
      "op": "JUMP"
    },
    "4929": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14807,
        14878
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4930": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14797,
        14800
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 60
    },
    "4931": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14797,
        14800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x134B"
    },
    "4934": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14797,
        14800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4935": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14797,
        14800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED1"
    },
    "4938": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14797,
        14800
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4939": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14797,
        14800
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4940": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14797,
        14800
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4941": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14797,
        14800
      ],
      "op": "POP",
      "path": "0"
    },
    "4942": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14797,
        14800
      ],
      "op": "POP",
      "path": "0"
    },
    "4943": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14758,
        14884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A4"
    },
    "4946": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14758,
        14884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4947": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14758,
        14884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4948": {
      "op": "POP"
    },
    "4949": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14579,
        14583
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 61
    },
    "4950": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14579,
        14583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x135E"
    },
    "4953": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14579,
        14583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4954": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14579,
        14583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED1"
    },
    "4957": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14579,
        14583
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4958": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14579,
        14583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4959": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14579,
        14583
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4960": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14579,
        14583
      ],
      "op": "POP",
      "path": "0"
    },
    "4961": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14579,
        14583
      ],
      "op": "POP",
      "path": "0"
    },
    "4962": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14544,
        14888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A5"
    },
    "4965": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14544,
        14888
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4966": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14544,
        14888
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4967": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14894,
        14909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4969": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14912,
        14956
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x138D"
    },
    "4972": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14922,
        14927
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4973": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14928,
        14944
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4974": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14952
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4975": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14953,
        14954
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4977": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4978": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4979": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4980": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "LT",
      "path": "0"
    },
    "4981": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1380"
    },
    "4984": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4985": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1380"
    },
    "4988": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "4991": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14946,
        14955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4992": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4993": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4995": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "MUL",
      "path": "0"
    },
    "4996": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4998": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "ADD",
      "path": "0"
    },
    "4999": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "ADD",
      "path": "0"
    },
    "5000": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14946,
        14955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5001": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14912,
        14921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1687"
    },
    "5004": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        14912,
        14956
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5005": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14912,
        14956
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5006": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14894,
        14956
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5007": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14894,
        14956
      ],
      "op": "POP",
      "path": "0"
    },
    "5008": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14978,
        14979
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 62,
      "value": "0x0"
    },
    "5010": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14968,
        14975
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5011": {
      "branch": 162,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14968,
        14979
      ],
      "op": "GT",
      "path": "0"
    },
    "5012": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14960,
        14994
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13CC"
    },
    "5015": {
      "branch": 162,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14960,
        14994
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5016": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14960,
        14994
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5018": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14960,
        14994
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5025": {
      "op": "SHL"
    },
    "5026": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14960,
        14994
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5027": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14960,
        14994
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5030": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14960,
        14994
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5032": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14960,
        14994
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5033": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14960,
        14994
      ],
      "op": "ADD",
      "path": "0"
    },
    "5034": {
      "op": "MSTORE"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "5037": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5039": {
      "op": "DUP3"
    },
    "5040": {
      "op": "ADD"
    },
    "5041": {
      "op": "MSTORE"
    },
    "5042": {
      "op": "PUSH10",
      "value": "0x6D696E74206973737565"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "5055": {
      "op": "SHL"
    },
    "5056": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5058": {
      "op": "DUP3"
    },
    "5059": {
      "op": "ADD"
    },
    "5060": {
      "op": "MSTORE"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5063": {
      "op": "ADD"
    },
    "5064": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14960,
        14994
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "5067": {
      "op": "JUMP"
    },
    "5068": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14960,
        14994
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5069": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14998,
        15015
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5071": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15019,
        15037
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5072": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15045,
        15051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5074": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15041,
        15734
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5075": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15057,
        15059
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5076": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15055,
        15056
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5077": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15055,
        15059
      ],
      "op": "LT",
      "path": "0"
    },
    "5078": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15041,
        15734
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5079": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15041,
        15734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15AC"
    },
    "5082": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15041,
        15734
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5083": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15347,
        15350
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13E5"
    },
    "5086": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15347,
        15348
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5087": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15349,
        15350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "5089": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15347,
        15350
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "5092": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        15347,
        15350
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5093": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15347,
        15350
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5094": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15343,
        15351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13F0"
    },
    "5097": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15343,
        15351
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5098": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15343,
        15344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5100": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15343,
        15351
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD0"
    },
    "5103": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        15343,
        15351
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5104": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15343,
        15351
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5105": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15329,
        15339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "5107": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15329,
        15339
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5108": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15329,
        15352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13FD"
    },
    "5111": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15329,
        15352
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5112": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15329,
        15352
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5113": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15329,
        15352
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C8"
    },
    "5116": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        15329,
        15352
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5117": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15329,
        15352
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5118": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15326,
        15723
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159A"
    },
    "5121": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15326,
        15723
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5122": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15394
      ],
      "op": "DUP8",
      "path": "0",
      "statement": 63
    },
    "5123": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15395,
        15396
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5124": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5125": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5126": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5127": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "LT",
      "path": "0"
    },
    "5128": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1413"
    },
    "5131": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5132": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1413"
    },
    "5135": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "5138": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        15384,
        15397
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5139": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5140": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5142": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5143": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5144": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "MUL",
      "path": "0"
    },
    "5145": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5146": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5147": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5148": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "ADD",
      "path": "0"
    },
    "5149": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "ADD",
      "path": "0"
    },
    "5150": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15384,
        15397
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5151": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5153": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5154": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5159": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5161": {
      "op": "SHL"
    },
    "5162": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5163": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5164": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15417,
        15421
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "5165": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5167": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5168": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "ADD",
      "path": "0"
    },
    "5169": {
      "op": "MSTORE"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5176": {
      "op": "SHL"
    },
    "5177": {
      "op": "SUB"
    },
    "5178": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5179": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15408
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5180": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15408
      ],
      "op": "AND",
      "path": "0"
    },
    "5181": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5182": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15408
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "5187": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15408
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5188": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5190": {
      "op": "ADD"
    },
    "5191": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5193": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5195": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5196": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5197": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5198": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "SUB",
      "path": "0"
    },
    "5199": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5200": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5201": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "GAS",
      "path": "0"
    },
    "5202": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "5203": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5204": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5205": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5206": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1463"
    },
    "5209": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5210": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5211": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5213": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5214": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5215": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5216": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5218": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5219": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5220": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "POP",
      "path": "0"
    },
    "5221": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "POP",
      "path": "0"
    },
    "5222": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "POP",
      "path": "0"
    },
    "5223": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "POP",
      "path": "0"
    },
    "5224": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5226": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5227": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5228": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5230": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "NOT",
      "path": "0"
    },
    "5231": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5233": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5234": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "ADD",
      "path": "0"
    },
    "5235": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "AND",
      "path": "0"
    },
    "5236": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5237": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "ADD",
      "path": "0"
    },
    "5238": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5239": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5241": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5242": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "POP",
      "path": "0"
    },
    "5243": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5244": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "ADD",
      "path": "0"
    },
    "5245": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5246": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1487"
    },
    "5249": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5250": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5251": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31DC"
    },
    "5254": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        15377,
        15423
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5255": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15377,
        15423
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5256": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15364,
        15423
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5257": {
      "op": "POP"
    },
    "5258": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15432,
        15447
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5259": {
      "branch": 163,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15432,
        15447
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5260": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15429,
        15707
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x159A"
    },
    "5263": {
      "branch": 163,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15429,
        15707
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5264": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15459,
        15464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x149A"
    },
    "5267": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15463,
        15464
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5269": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15459,
        15460
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5270": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15459,
        15464
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C8"
    },
    "5273": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        15459,
        15464
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5274": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15459,
        15464
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5275": {
      "branch": 164,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15459,
        15469
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5276": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15459,
        15479
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5277": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15459,
        15479
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5278": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15459,
        15479
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A6"
    },
    "5281": {
      "branch": 164,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15459,
        15479
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5282": {
      "op": "POP"
    },
    "5283": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15473,
        15479
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5284": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15473,
        15479
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5285": {
      "branch": 165,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15473,
        15479
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5286": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15459,
        15479
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5287": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15455,
        15637
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5288": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15455,
        15637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14CB"
    },
    "5291": {
      "branch": 165,
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15455,
        15637
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5292": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15500,
        15549
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 64,
      "value": "0x14C4"
    },
    "5295": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15532,
        15548
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x3A35294400"
    },
    "5301": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15501,
        15521
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14BE"
    },
    "5304": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15514,
        15521
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5305": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15501,
        15511
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5306": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15501,
        15521
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "5309": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        15501,
        15521
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5310": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15501,
        15521
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5311": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15500,
        15531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5312": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15500,
        15531
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2736"
    },
    "5315": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        15500,
        15549
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5316": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15500,
        15549
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5317": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15488,
        15549
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5318": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15488,
        15549
      ],
      "op": "POP",
      "path": "0"
    },
    "5319": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15455,
        15637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14E1"
    },
    "5322": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15455,
        15637
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5323": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15455,
        15637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5324": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15581,
        15626
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 65,
      "value": "0x14DE"
    },
    "5327": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15608,
        15624
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x3A35294400"
    },
    "5333": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15582,
        15602
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "5336": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15595,
        15602
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5337": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15582,
        15592
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5338": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15582,
        15602
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "5341": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        15582,
        15602
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5342": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15581,
        15626
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5343": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15569,
        15626
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5344": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15569,
        15626
      ],
      "op": "POP",
      "path": "0"
    },
    "5345": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15455,
        15637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5346": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15662
      ],
      "op": "DUP8",
      "path": "0",
      "statement": 66
    },
    "5347": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15663,
        15664
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5348": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5349": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5350": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5351": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "LT",
      "path": "0"
    },
    "5352": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F3"
    },
    "5355": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5356": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14F3"
    },
    "5359": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "5362": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        15652,
        15665
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5363": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5364": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5366": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "MUL",
      "path": "0"
    },
    "5367": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5369": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "ADD",
      "path": "0"
    },
    "5370": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "ADD",
      "path": "0"
    },
    "5371": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15652,
        15665
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5378": {
      "op": "SHL"
    },
    "5379": {
      "op": "SUB"
    },
    "5380": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15675
      ],
      "op": "AND",
      "path": "0"
    },
    "5381": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15675
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "5386": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15682
      ],
      "op": "DUP9",
      "path": "0"
    },
    "5387": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15683,
        15684
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5388": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5389": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5390": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5391": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "LT",
      "path": "0"
    },
    "5392": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151B"
    },
    "5395": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5396": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151B"
    },
    "5399": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "5402": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        15676,
        15685
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5403": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5404": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5406": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "MUL",
      "path": "0"
    },
    "5407": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5409": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "ADD",
      "path": "0"
    },
    "5410": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "ADD",
      "path": "0"
    },
    "5411": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15676,
        15685
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5412": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15687,
        15696
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5413": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5415": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5416": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5417": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5422": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "AND",
      "path": "0"
    },
    "5423": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "5425": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "SHL",
      "path": "0"
    },
    "5426": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5427": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5428": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5430": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "ADD",
      "path": "0"
    },
    "5431": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1555"
    },
    "5434": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5435": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5436": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5443": {
      "op": "SHL"
    },
    "5444": {
      "op": "SUB"
    },
    "5445": {
      "op": "SWAP3"
    },
    "5446": {
      "op": "SWAP1"
    },
    "5447": {
      "op": "SWAP3"
    },
    "5448": {
      "op": "AND"
    },
    "5449": {
      "op": "DUP3"
    },
    "5450": {
      "op": "MSTORE"
    },
    "5451": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5453": {
      "op": "DUP3"
    },
    "5454": {
      "op": "ADD"
    },
    "5455": {
      "op": "MSTORE"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5458": {
      "op": "ADD"
    },
    "5459": {
      "op": "SWAP1"
    },
    "5460": {
      "op": "JUMP"
    },
    "5461": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5462": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5464": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5466": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5467": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5468": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5469": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "SUB",
      "path": "0"
    },
    "5470": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5471": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5473": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5474": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "GAS",
      "path": "0"
    },
    "5475": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "CALL",
      "path": "0"
    },
    "5476": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5477": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5478": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5479": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1574"
    },
    "5482": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5483": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5484": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5486": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5487": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "5488": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5489": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5491": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5492": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5493": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "POP",
      "path": "0"
    },
    "5494": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "POP",
      "path": "0"
    },
    "5495": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "POP",
      "path": "0"
    },
    "5496": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "POP",
      "path": "0"
    },
    "5497": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5499": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5500": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "5501": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5503": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "NOT",
      "path": "0"
    },
    "5504": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "5506": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5507": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "ADD",
      "path": "0"
    },
    "5508": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "AND",
      "path": "0"
    },
    "5509": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5510": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "ADD",
      "path": "0"
    },
    "5511": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5512": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5514": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5515": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "POP",
      "path": "0"
    },
    "5516": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5517": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "ADD",
      "path": "0"
    },
    "5518": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5519": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1598"
    },
    "5522": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5523": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5524": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x314E"
    },
    "5527": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        15645,
        15697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5528": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5529": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15645,
        15697
      ],
      "op": "POP",
      "path": "0"
    },
    "5530": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15429,
        15707
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5531": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15061,
        15064
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 67
    },
    "5532": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15061,
        15064
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15A4"
    },
    "5535": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15061,
        15064
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5536": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15061,
        15064
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED1"
    },
    "5539": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "i",
      "offset": [
        15061,
        15064
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5540": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15061,
        15064
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5541": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15061,
        15064
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5542": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15061,
        15064
      ],
      "op": "POP",
      "path": "0"
    },
    "5543": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15061,
        15064
      ],
      "op": "POP",
      "path": "0"
    },
    "5544": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15041,
        15734
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13D2"
    },
    "5547": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15041,
        15734
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5548": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15041,
        15734
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5549": {
      "op": "POP"
    },
    "5550": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15764,
        15774
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 68,
      "value": "0xC"
    },
    "5552": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15764,
        15774
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5553": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15776,
        15791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "5555": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15776,
        15791
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5556": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15743,
        15797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5558": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15743,
        15797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5559": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15743,
        15797
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5560": {
      "op": "SWAP3"
    },
    "5561": {
      "op": "DUP4"
    },
    "5562": {
      "op": "MSTORE"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5565": {
      "op": "DUP4"
    },
    "5566": {
      "op": "ADD"
    },
    "5567": {
      "op": "SWAP2"
    },
    "5568": {
      "op": "SWAP1"
    },
    "5569": {
      "op": "SWAP2"
    },
    "5570": {
      "op": "MSTORE"
    },
    "5571": {
      "op": "DUP2"
    },
    "5572": {
      "op": "ADD"
    },
    "5573": {
      "op": "DUP6"
    },
    "5574": {
      "op": "SWAP1"
    },
    "5575": {
      "op": "MSTORE"
    },
    "5576": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15752,
        15762
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5577": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15752,
        15762
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5578": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15743,
        15797
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC32557ACCEB6AEB205C3115AC08A8DC54D82FB5EA08F2B7F1E6B794488E3851C"
    },
    "5611": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15743,
        15797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5614": {
      "op": "ADD"
    },
    "5615": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15743,
        15797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5617": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15743,
        15797
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5618": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15743,
        15797
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5619": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15743,
        15797
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5620": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15743,
        15797
      ],
      "op": "SUB",
      "path": "0"
    },
    "5621": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15743,
        15797
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5622": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15743,
        15797
      ],
      "op": "LOG2",
      "path": "0"
    },
    "5623": {
      "op": "POP"
    },
    "5624": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        15809,
        15818
      ],
      "op": "SWAP8",
      "path": "0",
      "statement": 69
    },
    "5625": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "offset": [
        14252,
        15827
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "5626": {
      "op": "POP"
    },
    "5627": {
      "op": "POP"
    },
    "5628": {
      "op": "POP"
    },
    "5629": {
      "op": "POP"
    },
    "5630": {
      "op": "POP"
    },
    "5631": {
      "op": "POP"
    },
    "5632": {
      "op": "POP"
    },
    "5633": {
      "fn": "ForgeMining.mintTokensArrayToOPENMUSTERASE",
      "jump": "o",
      "offset": [
        14252,
        15827
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5634": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24022,
        24270
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5635": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24141,
        24151
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 70
    },
    "5636": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24090,
        24102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5638": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24152
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5639": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5640": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24152
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5641": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24140
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "5643": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5645": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24152
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5646": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24152
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5648": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24152
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5649": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24152
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5650": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24152
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5651": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24164
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161C"
    },
    "5654": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5655": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24157,
        24163
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5656": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24156
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F6"
    },
    "5659": {
      "fn": "ForgeMining.transfer",
      "jump": "i",
      "offset": [
        24132,
        24164
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5660": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24132,
        24164
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5661": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24118,
        24128
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5662": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24129
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5664": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24129
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5665": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24129
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5666": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24129
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5667": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24117
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "5669": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24129
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5671": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24129
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5672": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24129
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5674": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24129
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5675": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24129
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5676": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24129
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5677": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24164
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5678": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24164
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5679": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24164
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5680": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24109,
        24164
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5687": {
      "op": "SHL"
    },
    "5688": {
      "op": "SUB"
    },
    "5689": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24183,
        24195
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 71
    },
    "5690": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24183,
        24195
      ],
      "op": "AND",
      "path": "0"
    },
    "5691": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24183,
        24195
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5692": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24183,
        24195
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5693": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24183,
        24195
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5694": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24183,
        24195
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5695": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24183,
        24207
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1648"
    },
    "5698": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24183,
        24207
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5699": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24200,
        24206
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5700": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24183,
        24199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2542"
    },
    "5703": {
      "fn": "ForgeMining.transfer",
      "jump": "i",
      "offset": [
        24183,
        24207
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5704": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24183,
        24207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5711": {
      "op": "SHL"
    },
    "5712": {
      "op": "SUB"
    },
    "5713": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24180
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5714": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24180
      ],
      "op": "AND",
      "path": "0"
    },
    "5715": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5717": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24180
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5718": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24180
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5719": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24180
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5720": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "5722": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5724": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24180
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5725": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5727": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5728": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24180
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5729": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24180
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5730": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24180
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5731": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24207
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5732": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24207
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5733": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24207
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5734": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24168,
        24207
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5735": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24217,
        24249
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 72
    },
    "5736": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24217,
        24249
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5737": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24226,
        24236
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5738": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24226,
        24236
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5741": {
      "op": "DUP1"
    },
    "5742": {
      "op": "MLOAD"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5745": {
      "op": "PUSH2",
      "value": "0x31F6"
    },
    "5748": {
      "op": "DUP4"
    },
    "5749": {
      "op": "CODECOPY"
    },
    "5750": {
      "op": "DUP2"
    },
    "5751": {
      "op": "MLOAD"
    },
    "5752": {
      "op": "SWAP2"
    },
    "5753": {
      "op": "MSTORE"
    },
    "5754": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24217,
        24249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5755": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24217,
        24249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA5F"
    },
    "5758": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24217,
        24249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5759": {
      "fn": "ForgeMining.transfer",
      "offset": [
        24242,
        24248
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5760": {
      "op": "DUP2"
    },
    "5761": {
      "op": "MSTORE"
    },
    "5762": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5764": {
      "op": "ADD"
    },
    "5765": {
      "op": "SWAP1"
    },
    "5766": {
      "op": "JUMP"
    },
    "5767": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5768": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9631,
        9646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5770": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9654,
        9676
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 73,
      "value": "0x1691"
    },
    "5773": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9654,
        9674
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2590"
    },
    "5776": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9654,
        9676
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5777": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9654,
        9676
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5778": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9707,
        9724
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 74,
      "value": "0x16"
    },
    "5780": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9707,
        9724
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5781": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9689,
        9704
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "5782": {
      "branch": 166,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9689,
        9724
      ],
      "op": "GT",
      "path": "0"
    },
    "5783": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9681,
        9750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16B2"
    },
    "5786": {
      "branch": 166,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9681,
        9750
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5787": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9681,
        9750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5789": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9681,
        9750
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5790": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5796": {
      "op": "SHL"
    },
    "5797": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9681,
        9750
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5798": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9681,
        9750
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5799": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9681,
        9750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5801": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9681,
        9750
      ],
      "op": "ADD",
      "path": "0"
    },
    "5802": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9681,
        9750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "5805": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9681,
        9750
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5806": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9681,
        9750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x311F"
    },
    "5809": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9681,
        9750
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5810": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9681,
        9750
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5811": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9808,
        9817
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5813": {
      "offset": [
        5961,
        5968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB40"
    },
    "5816": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9840,
        9857
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "5818": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9840,
        9857
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5819": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9822,
        9837
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "5820": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9822,
        9857
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16C5"
    },
    "5823": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9822,
        9857
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5824": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9822,
        9857
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5825": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9822,
        9857
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FFB"
    },
    "5828": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9822,
        9857
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5829": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9822,
        9857
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5830": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9821,
        9864
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16D1"
    },
    "5833": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9821,
        9864
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5834": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9861,
        9864
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "5837": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9821,
        9864
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "5840": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9821,
        9864
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5841": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9821,
        9864
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5842": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9820,
        9878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16DB"
    },
    "5845": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9820,
        9878
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5846": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9820,
        9878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5847": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9820,
        9878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "5850": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9820,
        9878
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5851": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9820,
        9878
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5852": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9808,
        9878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5853": {
      "op": "POP"
    },
    "5854": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9882,
        9892
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5856": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9905,
        9908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "5859": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9895,
        9902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16ED"
    },
    "5862": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9808,
        9878
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5863": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9899,
        9902
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "5865": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9895,
        9902
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "5868": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9895,
        9902
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5869": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9895,
        9902
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5870": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9895,
        9908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F7"
    },
    "5873": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9895,
        9908
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5874": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9895,
        9908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5875": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9895,
        9908
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "5878": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9895,
        9908
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5879": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9895,
        9908
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5880": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9882,
        9908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5881": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9882,
        9908
      ],
      "op": "POP",
      "path": "0"
    },
    "5882": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9912,
        9926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5884": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9945,
        9948
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A"
    },
    "5887": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9937,
        9942
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5888": {
      "branch": 167,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9937,
        9948
      ],
      "op": "LT",
      "path": "0"
    },
    "5889": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9934,
        10098
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5890": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9934,
        10098
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x173C"
    },
    "5893": {
      "branch": 167,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9934,
        10098
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5894": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10004,
        10027
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 75,
      "value": "0x1719"
    },
    "5897": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10023,
        10026
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "5900": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10005,
        10017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "5903": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10016,
        10017
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5904": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10005,
        10013
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x26F7F3C"
    },
    "5909": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10005,
        10017
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "5912": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10005,
        10017
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5913": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10004,
        10027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5914": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9966,
        10002
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x172B"
    },
    "5917": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9993,
        10001
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC0840"
    },
    "5921": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9979,
        9985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8C"
    },
    "5924": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9984,
        9985
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5926": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9979,
        9980
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5927": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9979,
        9985
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x303C"
    },
    "5930": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9979,
        9985
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5931": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9966,
        10002
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5932": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9966,
        10027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1735"
    },
    "5935": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9966,
        10027
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5936": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9966,
        10027
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5937": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9966,
        10027
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "5940": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9966,
        10027
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5941": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9966,
        10027
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5942": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9954,
        10027
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5943": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9954,
        10027
      ],
      "op": "POP",
      "path": "0"
    },
    "5944": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9934,
        10098
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1761"
    },
    "5947": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9934,
        10098
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5948": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9934,
        10098
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5949": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10054,
        10078
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 76,
      "value": "0x1750"
    },
    "5952": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10074,
        10077
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "5955": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10055,
        10068
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "5958": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10055,
        10056
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5959": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10059,
        10068
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "5964": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10055,
        10068
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "5967": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10055,
        10068
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5968": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10054,
        10078
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5969": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10054,
        10093
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x175E"
    },
    "5972": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10054,
        10093
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5973": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10082,
        10092
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD09DC300"
    },
    "5978": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10054,
        10093
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "5981": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10054,
        10093
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5982": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10054,
        10093
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5983": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10042,
        10093
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5984": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10042,
        10093
      ],
      "op": "POP",
      "path": "0"
    },
    "5985": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9934,
        10098
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5986": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10187
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 77,
      "value": "0x1799"
    },
    "5989": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10144,
        10186
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177A"
    },
    "5992": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10176,
        10185
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "5997": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10161,
        10170
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5998": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10145,
        10158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "6000": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10145,
        10158
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6001": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10145,
        10170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "6004": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10145,
        10170
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6005": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10145,
        10170
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6006": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10145,
        10170
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "6009": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10145,
        10170
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6010": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10144,
        10186
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6017": {
      "op": "SHL"
    },
    "6018": {
      "op": "SUB"
    },
    "6019": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10139
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6020": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10139
      ],
      "op": "AND",
      "path": "0"
    },
    "6021": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6023": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6024": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10139
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6025": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10139
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6026": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10131
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "6028": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6030": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10139
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6031": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10139
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6033": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6034": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10139
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6035": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10139
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6036": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10139
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6037": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2542"
    },
    "6040": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10123,
        10187
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6041": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10187
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6048": {
      "op": "SHL"
    },
    "6049": {
      "op": "SUB"
    },
    "6050": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10104,
        10120
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6051": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10104,
        10120
      ],
      "op": "AND",
      "path": "0"
    },
    "6052": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10104,
        10120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6054": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10104,
        10120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6055": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10104,
        10120
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6056": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10104,
        10120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6057": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10104,
        10112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "6059": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10104,
        10120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6061": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10104,
        10120
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6062": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10104,
        10120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6064": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10104,
        10120
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6065": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10104,
        10120
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6066": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10104,
        10187
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6067": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10250,
        10263
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 78,
      "value": "0x14"
    },
    "6069": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10250,
        10263
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6070": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10296
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17EF"
    },
    "6073": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10296
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6074": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10249,
        10295
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17CE"
    },
    "6077": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10249,
        10295
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6078": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10281,
        10294
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBEBC200"
    },
    "6083": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10281,
        10294
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6084": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10250,
        10275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "6087": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10250,
        10275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6088": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10266,
        10275
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6089": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10266,
        10275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6090": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10250,
        10275
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "6093": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10250,
        10275
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6094": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10249,
        10295
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6095": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10228,
        10243
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6097": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10228,
        10243
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6104": {
      "op": "SHL"
    },
    "6105": {
      "op": "SUB"
    },
    "6106": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10228,
        10243
      ],
      "op": "AND",
      "path": "0"
    },
    "6107": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6109": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6110": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10244
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6111": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10244
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6112": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "6114": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6116": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10244
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6117": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6119": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6120": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10244
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6121": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10244
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6122": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10244
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6123": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2542"
    },
    "6126": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10219,
        10296
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6127": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10219,
        10296
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6128": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10200,
        10215
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "6130": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10200,
        10215
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6131": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6137": {
      "op": "SHL"
    },
    "6138": {
      "op": "SUB"
    },
    "6139": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10200,
        10215
      ],
      "op": "AND",
      "path": "0"
    },
    "6140": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10191,
        10216
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6142": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10191,
        10216
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6143": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10191,
        10216
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6144": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10191,
        10216
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6145": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10191,
        10199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "6147": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10191,
        10216
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6149": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10191,
        10216
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6150": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10191,
        10216
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6152": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10191,
        10216
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6153": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10191,
        10216
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "6154": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10191,
        10296
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6155": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10333,
        10346
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 79,
      "value": "0x14"
    },
    "6157": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10333,
        10346
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6158": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10315,
        10375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x182F"
    },
    "6161": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10315,
        10375
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6162": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10332,
        10374
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1826"
    },
    "6165": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10332,
        10374
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6166": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10364,
        10373
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "6171": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10364,
        10373
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6172": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10333,
        10358
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "6175": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10333,
        10358
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6176": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10349,
        10358
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6177": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10349,
        10358
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6178": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10333,
        10358
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "6181": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10333,
        10358
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6182": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10332,
        10374
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6183": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10315,
        10327
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1B"
    },
    "6185": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10315,
        10327
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6186": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10315,
        10327
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6187": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10315,
        10331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2542"
    },
    "6190": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10315,
        10375
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6191": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10315,
        10375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6192": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10300,
        10312
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1B"
    },
    "6194": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10300,
        10375
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6195": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10399,
        10414
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 80
    },
    "6196": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10379,
        10396
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "6198": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10379,
        10414
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6199": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10422,
        10431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "6201": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10422,
        10431
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6202": {
      "branch": 168,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10422,
        10435
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6203": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10419,
        10658
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1997"
    },
    "6206": {
      "branch": 168,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10419,
        10658
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6207": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10452,
        10455
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC8"
    },
    "6209": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10444,
        10449
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6210": {
      "branch": 169,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10444,
        10455
      ],
      "op": "LT",
      "path": "0"
    },
    "6211": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10441,
        10654
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6212": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10441,
        10654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F7"
    },
    "6215": {
      "branch": 169,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10441,
        10654
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6216": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10469,
        10484
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 81,
      "value": "0x8"
    },
    "6218": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10469,
        10484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6219": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10528,
        10537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "6221": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10528,
        10537
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6222": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10516,
        10525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "6224": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10516,
        10525
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6231": {
      "op": "SHL"
    },
    "6232": {
      "op": "SUB"
    },
    "6233": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10469,
        10484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6234": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10469,
        10484
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6235": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10469,
        10484
      ],
      "op": "AND",
      "path": "0"
    },
    "6236": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10469,
        10484
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6237": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10494
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "6242": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10494
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6243": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10495,
        10501
      ],
      "op": "DUP9",
      "path": "0"
    },
    "6244": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10495,
        10501
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6245": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10503,
        10553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1882"
    },
    "6248": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10503,
        10553
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6249": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10543,
        10552
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "6254": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10543,
        10552
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6255": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10504,
        10525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1878"
    },
    "6258": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10504,
        10525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6259": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10504,
        10513
      ],
      "op": "DUP9",
      "path": "0"
    },
    "6260": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10504,
        10525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "6263": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10504,
        10525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6264": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10504,
        10525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6265": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10504,
        10537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "6268": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10504,
        10537
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6269": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10504,
        10537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6270": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10504,
        10537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "6273": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10504,
        10537
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6274": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10503,
        10553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6275": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6277": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6282": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6284": {
      "op": "SHL"
    },
    "6285": {
      "op": "SUB"
    },
    "6286": {
      "op": "NOT"
    },
    "6287": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "6289": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6290": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6291": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "SHL",
      "path": "0"
    },
    "6292": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "AND",
      "path": "0"
    },
    "6293": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6294": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6301": {
      "op": "SHL"
    },
    "6302": {
      "op": "SUB"
    },
    "6303": {
      "op": "SWAP1"
    },
    "6304": {
      "op": "SWAP3"
    },
    "6305": {
      "op": "AND"
    },
    "6306": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6308": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6309": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "ADD",
      "path": "0"
    },
    "6310": {
      "op": "MSTORE"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6313": {
      "op": "DUP3"
    },
    "6314": {
      "op": "ADD"
    },
    "6315": {
      "op": "MSTORE"
    },
    "6316": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6318": {
      "op": "ADD"
    },
    "6319": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6321": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6323": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6324": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6325": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6326": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "SUB",
      "path": "0"
    },
    "6327": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6328": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6330": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6331": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "GAS",
      "path": "0"
    },
    "6332": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "CALL",
      "path": "0"
    },
    "6333": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6334": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6335": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6336": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18CD"
    },
    "6339": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6340": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6341": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6343": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6344": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6345": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6346": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6348": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6349": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6350": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "POP",
      "path": "0"
    },
    "6351": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "POP",
      "path": "0"
    },
    "6352": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "POP",
      "path": "0"
    },
    "6353": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "POP",
      "path": "0"
    },
    "6354": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6356": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6357": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6358": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6360": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "NOT",
      "path": "0"
    },
    "6361": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6363": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6364": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "ADD",
      "path": "0"
    },
    "6365": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "AND",
      "path": "0"
    },
    "6366": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6367": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "ADD",
      "path": "0"
    },
    "6368": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6369": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6371": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6372": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "POP",
      "path": "0"
    },
    "6373": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6374": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "ADD",
      "path": "0"
    },
    "6375": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6376": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18F1"
    },
    "6379": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6380": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6381": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x314E"
    },
    "6384": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10462,
        10554
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6385": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6386": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10462,
        10554
      ],
      "op": "POP",
      "path": "0"
    },
    "6387": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10441,
        10654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1997"
    },
    "6390": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10441,
        10654
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6391": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10441,
        10654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6392": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10577,
        10592
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 82,
      "value": "0x8"
    },
    "6394": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10577,
        10592
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6395": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10629,
        10638
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "6397": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10629,
        10638
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6398": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10617,
        10626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "6400": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10617,
        10626
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6407": {
      "op": "SHL"
    },
    "6408": {
      "op": "SUB"
    },
    "6409": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10577,
        10592
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6410": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10577,
        10592
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6411": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10577,
        10592
      ],
      "op": "AND",
      "path": "0"
    },
    "6412": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10577,
        10592
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6413": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10602
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "6418": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10602
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6419": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10603,
        10609
      ],
      "op": "DUP9",
      "path": "0"
    },
    "6420": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10603,
        10609
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6421": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10611,
        10647
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1926"
    },
    "6424": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10611,
        10647
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6425": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10644,
        10646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "6427": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10644,
        10646
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6428": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10612,
        10626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1878"
    },
    "6431": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10612,
        10626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6432": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10612,
        10614
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x17"
    },
    "6434": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10612,
        10626
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "6437": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10612,
        10626
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6438": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10611,
        10647
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6439": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6441": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6446": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6448": {
      "op": "SHL"
    },
    "6449": {
      "op": "SUB"
    },
    "6450": {
      "op": "NOT"
    },
    "6451": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "6453": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6454": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6455": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "SHL",
      "path": "0"
    },
    "6456": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "AND",
      "path": "0"
    },
    "6457": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6458": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6465": {
      "op": "SHL"
    },
    "6466": {
      "op": "SUB"
    },
    "6467": {
      "op": "SWAP1"
    },
    "6468": {
      "op": "SWAP3"
    },
    "6469": {
      "op": "AND"
    },
    "6470": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6472": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6473": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "ADD",
      "path": "0"
    },
    "6474": {
      "op": "MSTORE"
    },
    "6475": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6477": {
      "op": "DUP3"
    },
    "6478": {
      "op": "ADD"
    },
    "6479": {
      "op": "MSTORE"
    },
    "6480": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6482": {
      "op": "ADD"
    },
    "6483": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6485": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6487": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6488": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6489": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6490": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "SUB",
      "path": "0"
    },
    "6491": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6492": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6494": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6495": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "GAS",
      "path": "0"
    },
    "6496": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "CALL",
      "path": "0"
    },
    "6497": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6498": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6499": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6500": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1971"
    },
    "6503": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6504": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6505": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6507": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6508": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6509": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6510": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6512": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6513": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6514": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "POP",
      "path": "0"
    },
    "6515": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "POP",
      "path": "0"
    },
    "6516": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "POP",
      "path": "0"
    },
    "6517": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "POP",
      "path": "0"
    },
    "6518": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6520": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6521": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6522": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6524": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "NOT",
      "path": "0"
    },
    "6525": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "6527": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6528": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "ADD",
      "path": "0"
    },
    "6529": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "AND",
      "path": "0"
    },
    "6530": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6531": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "ADD",
      "path": "0"
    },
    "6532": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6533": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6535": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6536": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "POP",
      "path": "0"
    },
    "6537": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6538": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "ADD",
      "path": "0"
    },
    "6539": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6540": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1995"
    },
    "6543": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6544": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6545": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x314E"
    },
    "6548": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10570,
        10648
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6549": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6550": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10570,
        10648
      ],
      "op": "POP",
      "path": "0"
    },
    "6551": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10441,
        10654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6552": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10672,
        10682
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 83
    },
    "6553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6559": {
      "op": "SHL"
    },
    "6560": {
      "op": "SUB"
    },
    "6561": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10667,
        10757
      ],
      "op": "AND",
      "path": "0"
    },
    "6562": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10667,
        10757
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D"
    },
    "6595": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10684,
        10726
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19D8"
    },
    "6598": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10716,
        10725
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "6603": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10701,
        10710
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6604": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10685,
        10698
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "6606": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10685,
        10698
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6607": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10685,
        10710
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "6610": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10685,
        10710
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6611": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10685,
        10710
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6612": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10685,
        10710
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "6615": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10685,
        10710
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6616": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10684,
        10726
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6617": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10728,
        10738
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "6619": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10728,
        10738
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6620": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10740,
        10755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "6622": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10740,
        10755
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6623": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10667,
        10757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6625": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10667,
        10757
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6626": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10667,
        10757
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6627": {
      "op": "SWAP4"
    },
    "6628": {
      "op": "DUP5"
    },
    "6629": {
      "op": "MSTORE"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6632": {
      "op": "DUP5"
    },
    "6633": {
      "op": "ADD"
    },
    "6634": {
      "op": "SWAP3"
    },
    "6635": {
      "op": "SWAP1"
    },
    "6636": {
      "op": "SWAP3"
    },
    "6637": {
      "op": "MSTORE"
    },
    "6638": {
      "op": "SWAP1"
    },
    "6639": {
      "op": "DUP3"
    },
    "6640": {
      "op": "ADD"
    },
    "6641": {
      "op": "MSTORE"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6644": {
      "op": "ADD"
    },
    "6645": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10667,
        10757
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6647": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10667,
        10757
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6648": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10667,
        10757
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6649": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10667,
        10757
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6650": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10667,
        10757
      ],
      "op": "SUB",
      "path": "0"
    },
    "6651": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10667,
        10757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6652": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10667,
        10757
      ],
      "op": "LOG2",
      "path": "0"
    },
    "6653": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10769,
        10778
      ],
      "op": "SWAP7",
      "path": "0",
      "statement": 84
    },
    "6654": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9545,
        10786
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "6655": {
      "op": "POP"
    },
    "6656": {
      "op": "POP"
    },
    "6657": {
      "op": "POP"
    },
    "6658": {
      "op": "POP"
    },
    "6659": {
      "op": "POP"
    },
    "6660": {
      "op": "POP"
    },
    "6661": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "o",
      "offset": [
        9545,
        10786
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6662": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6663": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15977,
        15989
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6665": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16025,
        16035
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 85
    },
    "6666": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16025,
        16042
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6667": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16045,
        16046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6669": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16025,
        16046
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A16"
    },
    "6672": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16025,
        16046
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6673": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16025,
        16046
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6674": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16025,
        16046
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "6677": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16025,
        16046
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6678": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16025,
        16046
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6679": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16008,
        16014
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6680": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16008,
        16021
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6681": {
      "branch": 170,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16008,
        16046
      ],
      "op": "EQ",
      "path": "0"
    },
    "6682": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16000,
        16111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A35"
    },
    "6685": {
      "branch": 170,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16000,
        16111
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6686": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16000,
        16111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6688": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16000,
        16111
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6689": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6695": {
      "op": "SHL"
    },
    "6696": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16000,
        16111
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6697": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16000,
        16111
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6698": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16000,
        16111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6700": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16000,
        16111
      ],
      "op": "ADD",
      "path": "0"
    },
    "6701": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16000,
        16111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "6704": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16000,
        16111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6705": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16000,
        16111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x316B"
    },
    "6708": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16000,
        16111
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6709": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16000,
        16111
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6710": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16115,
        16122
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6712": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16128,
        16472
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6713": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16144,
        16154
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6714": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16144,
        16161
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6715": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16140,
        16142
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6716": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16140,
        16161
      ],
      "op": "LT",
      "path": "0"
    },
    "6717": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16128,
        16472
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6718": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16128,
        16472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BF9"
    },
    "6721": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16128,
        16472
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6722": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16197,
        16201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A4C"
    },
    "6725": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16197,
        16199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6726": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16200,
        16201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6728": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16197,
        16201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "6731": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16197,
        16201
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6732": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16197,
        16201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6733": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16193,
        16202
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A57"
    },
    "6736": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16193,
        16202
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6737": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16193,
        16194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "6739": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16193,
        16202
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD0"
    },
    "6742": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16193,
        16202
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6743": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16193,
        16202
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6744": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16179,
        16189
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "6746": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16179,
        16189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6747": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16179,
        16203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A64"
    },
    "6750": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16179,
        16203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6751": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16179,
        16203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6752": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16179,
        16203
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C8"
    },
    "6755": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16179,
        16203
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6756": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16179,
        16203
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6757": {
      "branch": 171,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16179,
        16208
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6758": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16176,
        16226
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A6E"
    },
    "6761": {
      "branch": 171,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16176,
        16226
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6762": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16215,
        16220
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 86,
      "value": "0x1BF9"
    },
    "6765": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16215,
        16220
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6766": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16176,
        16226
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6767": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16264,
        16268
      ],
      "op": "ADDRESS",
      "path": "0",
      "statement": 87
    },
    "6768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6774": {
      "op": "SHL"
    },
    "6775": {
      "op": "SUB"
    },
    "6776": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16269
      ],
      "op": "AND",
      "path": "0"
    },
    "6777": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16248
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6778": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16249,
        16251
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6779": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6780": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6781": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6782": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "LT",
      "path": "0"
    },
    "6783": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A8A"
    },
    "6786": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6787": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A8A"
    },
    "6790": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "6793": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16238,
        16252
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6794": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6795": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6797": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "MUL",
      "path": "0"
    },
    "6798": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6800": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "ADD",
      "path": "0"
    },
    "6801": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "ADD",
      "path": "0"
    },
    "6802": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16252
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6809": {
      "op": "SHL"
    },
    "6810": {
      "op": "SUB"
    },
    "6811": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16269
      ],
      "op": "AND",
      "path": "0"
    },
    "6812": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16269
      ],
      "op": "EQ",
      "path": "0"
    },
    "6813": {
      "branch": 172,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16269
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6814": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16306
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6815": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16306
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6816": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16306
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1ADB"
    },
    "6819": {
      "branch": 172,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16306
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6820": {
      "op": "POP"
    },
    "6821": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16291,
        16306
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "6823": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16291,
        16306
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6824": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6825": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6832": {
      "op": "SHL"
    },
    "6833": {
      "op": "SUB"
    },
    "6834": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16291,
        16306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6835": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16291,
        16306
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6836": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16291,
        16306
      ],
      "op": "AND",
      "path": "0"
    },
    "6837": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16291,
        16306
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6838": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16283
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6839": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16283
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6840": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16284,
        16286
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6841": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16284,
        16286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6842": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6843": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "LT",
      "path": "0"
    },
    "6844": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC7"
    },
    "6847": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6848": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC7"
    },
    "6851": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "6854": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16273,
        16287
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6855": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6856": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6858": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "MUL",
      "path": "0"
    },
    "6859": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6861": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "ADD",
      "path": "0"
    },
    "6862": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "ADD",
      "path": "0"
    },
    "6863": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16287
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6864": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6866": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6868": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6870": {
      "op": "SHL"
    },
    "6871": {
      "op": "SUB"
    },
    "6872": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16306
      ],
      "op": "AND",
      "path": "0"
    },
    "6873": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16306
      ],
      "op": "EQ",
      "path": "0"
    },
    "6874": {
      "branch": 173,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16273,
        16306
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6875": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16238,
        16306
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6876": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16230,
        16337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B27"
    },
    "6879": {
      "branch": 173,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16230,
        16337
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6880": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16230,
        16337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6882": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16230,
        16337
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6883": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6887": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6889": {
      "op": "SHL"
    },
    "6890": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16230,
        16337
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6891": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16230,
        16337
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6894": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16230,
        16337
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "6896": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16230,
        16337
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6897": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16230,
        16337
      ],
      "op": "ADD",
      "path": "0"
    },
    "6898": {
      "op": "MSTORE"
    },
    "6899": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "6901": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6903": {
      "op": "DUP3"
    },
    "6904": {
      "op": "ADD"
    },
    "6905": {
      "op": "MSTORE"
    },
    "6906": {
      "op": "PUSH32",
      "value": "0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000"
    },
    "6939": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6941": {
      "op": "DUP3"
    },
    "6942": {
      "op": "ADD"
    },
    "6943": {
      "op": "MSTORE"
    },
    "6944": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6946": {
      "op": "ADD"
    },
    "6947": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16230,
        16337
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "6950": {
      "op": "JUMP"
    },
    "6951": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16230,
        16337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6952": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16346,
        16352
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6954": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16353,
        16357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B34"
    },
    "6957": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16353,
        16355
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6958": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16356,
        16357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6960": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16353,
        16357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "6963": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16353,
        16357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6964": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16353,
        16357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6965": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16346,
        16357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6966": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16346,
        16357
      ],
      "op": "POP",
      "path": "0"
    },
    "6967": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16342,
        16468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6968": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16362,
        16372
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6969": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16362,
        16379
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6970": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16359,
        16360
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6971": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16359,
        16379
      ],
      "op": "LT",
      "path": "0"
    },
    "6972": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16342,
        16468
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6973": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16342,
        16468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BE6"
    },
    "6976": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16342,
        16468
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6977": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16426
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 88
    },
    "6978": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16427,
        16429
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6979": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6980": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6981": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6982": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "LT",
      "path": "0"
    },
    "6983": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B52"
    },
    "6986": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6987": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B52"
    },
    "6990": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "6993": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16416,
        16430
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6994": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6995": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6997": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "MUL",
      "path": "0"
    },
    "6998": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7000": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "ADD",
      "path": "0"
    },
    "7001": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "ADD",
      "path": "0"
    },
    "7002": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16416,
        16430
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7009": {
      "op": "SHL"
    },
    "7010": {
      "op": "SUB"
    },
    "7011": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16430
      ],
      "op": "AND",
      "path": "0"
    },
    "7012": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16409
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7013": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16410,
        16411
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7014": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7015": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7016": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7017": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "LT",
      "path": "0"
    },
    "7018": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B75"
    },
    "7021": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7022": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B75"
    },
    "7025": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "7028": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16399,
        16412
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7029": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7030": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7032": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "MUL",
      "path": "0"
    },
    "7033": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7035": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "ADD",
      "path": "0"
    },
    "7036": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "ADD",
      "path": "0"
    },
    "7037": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16412
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7044": {
      "op": "SHL"
    },
    "7045": {
      "op": "SUB"
    },
    "7046": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16430
      ],
      "op": "AND",
      "path": "0"
    },
    "7047": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16430
      ],
      "op": "EQ",
      "path": "0"
    },
    "7048": {
      "branch": 174,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16399,
        16430
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7049": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16391,
        16462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BD4"
    },
    "7052": {
      "branch": 174,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16391,
        16462
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7053": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16391,
        16462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7055": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16391,
        16462
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7056": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7060": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7062": {
      "op": "SHL"
    },
    "7063": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16391,
        16462
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7064": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16391,
        16462
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7067": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16391,
        16462
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7069": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16391,
        16462
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7070": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16391,
        16462
      ],
      "op": "ADD",
      "path": "0"
    },
    "7071": {
      "op": "MSTORE"
    },
    "7072": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "7074": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7076": {
      "op": "DUP3"
    },
    "7077": {
      "op": "ADD"
    },
    "7078": {
      "op": "MSTORE"
    },
    "7079": {
      "op": "PUSH32",
      "value": "0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000"
    },
    "7112": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7114": {
      "op": "DUP3"
    },
    "7115": {
      "op": "ADD"
    },
    "7116": {
      "op": "MSTORE"
    },
    "7117": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7119": {
      "op": "ADD"
    },
    "7120": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16391,
        16462
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "7123": {
      "op": "JUMP"
    },
    "7124": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16391,
        16462
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7125": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16381,
        16384
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 89
    },
    "7126": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16381,
        16384
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BDE"
    },
    "7129": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16381,
        16384
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7130": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16381,
        16384
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED1"
    },
    "7133": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16381,
        16384
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7134": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16381,
        16384
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7135": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16381,
        16384
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7136": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16381,
        16384
      ],
      "op": "POP",
      "path": "0"
    },
    "7137": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16381,
        16384
      ],
      "op": "POP",
      "path": "0"
    },
    "7138": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16342,
        16468
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B37"
    },
    "7141": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16342,
        16468
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7142": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16342,
        16468
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7143": {
      "op": "POP"
    },
    "7144": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16163,
        16167
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 90
    },
    "7145": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16163,
        16167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BF1"
    },
    "7148": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16163,
        16167
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7149": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16163,
        16167
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED1"
    },
    "7152": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16163,
        16167
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7153": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16163,
        16167
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7154": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16163,
        16167
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7155": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16163,
        16167
      ],
      "op": "POP",
      "path": "0"
    },
    "7156": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16163,
        16167
      ],
      "op": "POP",
      "path": "0"
    },
    "7157": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16128,
        16472
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A38"
    },
    "7160": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16128,
        16472
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7161": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16128,
        16472
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7162": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16478,
        16493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7164": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16496,
        16537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C20"
    },
    "7167": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16503,
        16508
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7168": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16509,
        16525
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7169": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16533
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7170": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16534,
        16535
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7172": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7173": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7174": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7175": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "LT",
      "path": "0"
    },
    "7176": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C13"
    },
    "7179": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7180": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C13"
    },
    "7183": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "7186": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16527,
        16536
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7187": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7188": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7190": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "MUL",
      "path": "0"
    },
    "7191": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7193": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "ADD",
      "path": "0"
    },
    "7194": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "ADD",
      "path": "0"
    },
    "7195": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16527,
        16536
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7196": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16496,
        16502
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20EC"
    },
    "7199": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16496,
        16537
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7200": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16496,
        16537
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7201": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16478,
        16537
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7202": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16478,
        16537
      ],
      "op": "POP",
      "path": "0"
    },
    "7203": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16559,
        16560
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 91,
      "value": "0x0"
    },
    "7205": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16549,
        16556
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7206": {
      "branch": 175,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16549,
        16560
      ],
      "op": "GT",
      "path": "0"
    },
    "7207": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16541,
        16575
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C5F"
    },
    "7210": {
      "branch": 175,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16541,
        16575
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7211": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16541,
        16575
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7213": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16541,
        16575
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7214": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7218": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7220": {
      "op": "SHL"
    },
    "7221": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16541,
        16575
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7222": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16541,
        16575
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7225": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16541,
        16575
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7227": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16541,
        16575
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7228": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16541,
        16575
      ],
      "op": "ADD",
      "path": "0"
    },
    "7229": {
      "op": "MSTORE"
    },
    "7230": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7234": {
      "op": "DUP3"
    },
    "7235": {
      "op": "ADD"
    },
    "7236": {
      "op": "MSTORE"
    },
    "7237": {
      "op": "PUSH10",
      "value": "0x6D696E74206973737565"
    },
    "7248": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "7250": {
      "op": "SHL"
    },
    "7251": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7253": {
      "op": "DUP3"
    },
    "7254": {
      "op": "ADD"
    },
    "7255": {
      "op": "MSTORE"
    },
    "7256": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7258": {
      "op": "ADD"
    },
    "7259": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16541,
        16575
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "7262": {
      "op": "JUMP"
    },
    "7263": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16541,
        16575
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7264": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16579,
        16596
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7266": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16600,
        16618
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7267": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16626,
        16632
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7269": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16622,
        17297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7270": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16638,
        16640
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7271": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16636,
        16637
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7272": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16636,
        16640
      ],
      "op": "LT",
      "path": "0"
    },
    "7273": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16622,
        17297
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7274": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16622,
        17297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E39"
    },
    "7277": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16622,
        17297
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7278": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16928,
        16931
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C78"
    },
    "7281": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16928,
        16929
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7282": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16930,
        16931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "7284": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16928,
        16931
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "7287": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16928,
        16931
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7288": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16928,
        16931
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7289": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16924,
        16932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C83"
    },
    "7292": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16924,
        16932
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7293": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16924,
        16925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7295": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16924,
        16932
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD0"
    },
    "7298": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16924,
        16932
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7299": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16924,
        16932
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7300": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16910,
        16920
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "7302": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16910,
        16920
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7303": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16910,
        16933
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C90"
    },
    "7306": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16910,
        16933
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7307": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16910,
        16933
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7308": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16910,
        16933
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C8"
    },
    "7311": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16910,
        16933
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7312": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16910,
        16933
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7313": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16907,
        17287
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E27"
    },
    "7316": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16907,
        17287
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7317": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16975
      ],
      "op": "DUP8",
      "path": "0",
      "statement": 92
    },
    "7318": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16976,
        16977
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7319": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7320": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7321": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7322": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "LT",
      "path": "0"
    },
    "7323": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CA6"
    },
    "7326": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7327": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CA6"
    },
    "7330": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "7333": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16965,
        16978
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7334": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7335": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7337": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7338": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7339": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "MUL",
      "path": "0"
    },
    "7340": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7341": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7342": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7343": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "ADD",
      "path": "0"
    },
    "7344": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "ADD",
      "path": "0"
    },
    "7345": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16965,
        16978
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7346": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7348": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7349": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "7354": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7356": {
      "op": "SHL"
    },
    "7357": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7358": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7359": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16998,
        17002
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "7360": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7362": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7363": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "ADD",
      "path": "0"
    },
    "7364": {
      "op": "MSTORE"
    },
    "7365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7371": {
      "op": "SHL"
    },
    "7372": {
      "op": "SUB"
    },
    "7373": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        16989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7374": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        16989
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7375": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        16989
      ],
      "op": "AND",
      "path": "0"
    },
    "7376": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        16989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7377": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        16989
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "7382": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        16989
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7385": {
      "op": "ADD"
    },
    "7386": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7388": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7390": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7391": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7392": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7393": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "SUB",
      "path": "0"
    },
    "7394": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7395": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7396": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "GAS",
      "path": "0"
    },
    "7397": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "7398": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7399": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7400": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7401": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CF6"
    },
    "7404": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7405": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7406": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7408": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7409": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7410": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7411": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7413": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7414": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7415": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "POP",
      "path": "0"
    },
    "7416": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "POP",
      "path": "0"
    },
    "7417": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "POP",
      "path": "0"
    },
    "7418": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "POP",
      "path": "0"
    },
    "7419": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7421": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7422": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7423": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7425": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "NOT",
      "path": "0"
    },
    "7426": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7428": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7429": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "ADD",
      "path": "0"
    },
    "7430": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "AND",
      "path": "0"
    },
    "7431": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7432": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "ADD",
      "path": "0"
    },
    "7433": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7434": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7436": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7437": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "POP",
      "path": "0"
    },
    "7438": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7439": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "ADD",
      "path": "0"
    },
    "7440": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7441": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1A"
    },
    "7444": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7445": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7446": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31DC"
    },
    "7449": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16958,
        17004
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7450": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16958,
        17004
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7451": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16945,
        17004
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7452": {
      "op": "POP"
    },
    "7453": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17013,
        17028
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7454": {
      "branch": 176,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17013,
        17028
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7455": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17010,
        17221
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D6E"
    },
    "7458": {
      "branch": 176,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17010,
        17221
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7459": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17040,
        17045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D2D"
    },
    "7462": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17044,
        17045
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "7464": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17040,
        17041
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7465": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17040,
        17045
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C8"
    },
    "7468": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        17040,
        17045
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7469": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17040,
        17045
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7470": {
      "branch": 177,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17040,
        17050
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7471": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17040,
        17060
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7472": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17040,
        17060
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7473": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17040,
        17060
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D39"
    },
    "7476": {
      "branch": 177,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17040,
        17060
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7477": {
      "op": "POP"
    },
    "7478": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17054,
        17060
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7479": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17054,
        17060
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7480": {
      "branch": 178,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17054,
        17060
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7481": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17040,
        17060
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7482": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17036,
        17215
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7483": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17036,
        17215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D58"
    },
    "7486": {
      "branch": 178,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17036,
        17215
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7487": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17081,
        17130
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 93,
      "value": "0x1D51"
    },
    "7490": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17113,
        17129
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x3A35294400"
    },
    "7496": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17082,
        17102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14BE"
    },
    "7499": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17095,
        17102
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7500": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17082,
        17092
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7501": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17082,
        17102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "7504": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        17082,
        17102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7505": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17081,
        17130
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7506": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17069,
        17130
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7507": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17069,
        17130
      ],
      "op": "POP",
      "path": "0"
    },
    "7508": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17036,
        17215
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D6E"
    },
    "7511": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17036,
        17215
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7512": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17036,
        17215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7513": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17162,
        17207
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 94,
      "value": "0x1D6B"
    },
    "7516": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17189,
        17205
      ],
      "op": "PUSH5",
      "path": "0",
      "value": "0x3A35294400"
    },
    "7522": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17163,
        17183
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "7525": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17176,
        17183
      ],
      "op": "DUP7",
      "path": "0"
    },
    "7526": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17163,
        17173
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7527": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17163,
        17183
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "7530": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        17163,
        17183
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7531": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17162,
        17207
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7532": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17150,
        17207
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7533": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17150,
        17207
      ],
      "op": "POP",
      "path": "0"
    },
    "7534": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17036,
        17215
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7535": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17246
      ],
      "op": "DUP8",
      "path": "0",
      "statement": 95
    },
    "7536": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17247,
        17248
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7537": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7538": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7539": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7540": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "LT",
      "path": "0"
    },
    "7541": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D80"
    },
    "7544": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7545": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D80"
    },
    "7548": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "7551": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        17236,
        17249
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7552": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7553": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7555": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "MUL",
      "path": "0"
    },
    "7556": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7558": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "ADD",
      "path": "0"
    },
    "7559": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "ADD",
      "path": "0"
    },
    "7560": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17236,
        17249
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7565": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7567": {
      "op": "SHL"
    },
    "7568": {
      "op": "SUB"
    },
    "7569": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17259
      ],
      "op": "AND",
      "path": "0"
    },
    "7570": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17259
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "7575": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17266
      ],
      "op": "DUP9",
      "path": "0"
    },
    "7576": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17267,
        17268
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7577": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7578": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7579": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7580": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "LT",
      "path": "0"
    },
    "7581": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA8"
    },
    "7584": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7585": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA8"
    },
    "7588": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EBB"
    },
    "7591": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        17260,
        17269
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7592": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7593": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7595": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "MUL",
      "path": "0"
    },
    "7596": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7598": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "ADD",
      "path": "0"
    },
    "7599": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "ADD",
      "path": "0"
    },
    "7600": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17260,
        17269
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7601": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17271,
        17280
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7602": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7604": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7605": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7606": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "7611": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "AND",
      "path": "0"
    },
    "7612": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "7614": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "SHL",
      "path": "0"
    },
    "7615": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7616": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7617": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7619": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "ADD",
      "path": "0"
    },
    "7620": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DE2"
    },
    "7623": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "7624": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7625": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7632": {
      "op": "SHL"
    },
    "7633": {
      "op": "SUB"
    },
    "7634": {
      "op": "SWAP3"
    },
    "7635": {
      "op": "SWAP1"
    },
    "7636": {
      "op": "SWAP3"
    },
    "7637": {
      "op": "AND"
    },
    "7638": {
      "op": "DUP3"
    },
    "7639": {
      "op": "MSTORE"
    },
    "7640": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7642": {
      "op": "DUP3"
    },
    "7643": {
      "op": "ADD"
    },
    "7644": {
      "op": "MSTORE"
    },
    "7645": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7647": {
      "op": "ADD"
    },
    "7648": {
      "op": "SWAP1"
    },
    "7649": {
      "op": "JUMP"
    },
    "7650": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7651": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "7653": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7655": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7656": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7657": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7658": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "SUB",
      "path": "0"
    },
    "7659": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7660": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7662": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7663": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "GAS",
      "path": "0"
    },
    "7664": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "CALL",
      "path": "0"
    },
    "7665": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7666": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7667": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7668": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E01"
    },
    "7671": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7672": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7673": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7675": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7676": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "7677": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7678": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7680": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "REVERT",
      "path": "0"
    },
    "7681": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7682": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "POP",
      "path": "0"
    },
    "7683": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "POP",
      "path": "0"
    },
    "7684": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "POP",
      "path": "0"
    },
    "7685": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "POP",
      "path": "0"
    },
    "7686": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7688": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7689": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "7690": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7692": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "NOT",
      "path": "0"
    },
    "7693": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "7695": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7696": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "ADD",
      "path": "0"
    },
    "7697": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "AND",
      "path": "0"
    },
    "7698": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7699": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "ADD",
      "path": "0"
    },
    "7700": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7701": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7703": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7704": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "POP",
      "path": "0"
    },
    "7705": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7706": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "ADD",
      "path": "0"
    },
    "7707": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7708": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E25"
    },
    "7711": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7712": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7713": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x314E"
    },
    "7716": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        17229,
        17281
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7717": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7718": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17229,
        17281
      ],
      "op": "POP",
      "path": "0"
    },
    "7719": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16907,
        17287
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7720": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16642,
        16645
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 96
    },
    "7721": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16642,
        16645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E31"
    },
    "7724": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16642,
        16645
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7725": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16642,
        16645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2ED1"
    },
    "7728": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        16642,
        16645
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7729": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16642,
        16645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7730": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16642,
        16645
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7731": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16642,
        16645
      ],
      "op": "POP",
      "path": "0"
    },
    "7732": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16642,
        16645
      ],
      "op": "POP",
      "path": "0"
    },
    "7733": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16622,
        17297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C65"
    },
    "7736": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16622,
        17297
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7737": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        16622,
        17297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7738": {
      "op": "POP"
    },
    "7739": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17336,
        17346
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 97,
      "value": "0xC"
    },
    "7741": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17336,
        17346
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7742": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17348,
        17363
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "7744": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17348,
        17363
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7745": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17315,
        17369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7747": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17315,
        17369
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7748": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17315,
        17369
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7749": {
      "op": "SWAP3"
    },
    "7750": {
      "op": "DUP4"
    },
    "7751": {
      "op": "MSTORE"
    },
    "7752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7754": {
      "op": "DUP4"
    },
    "7755": {
      "op": "ADD"
    },
    "7756": {
      "op": "SWAP2"
    },
    "7757": {
      "op": "SWAP1"
    },
    "7758": {
      "op": "SWAP2"
    },
    "7759": {
      "op": "MSTORE"
    },
    "7760": {
      "op": "DUP2"
    },
    "7761": {
      "op": "ADD"
    },
    "7762": {
      "op": "DUP6"
    },
    "7763": {
      "op": "SWAP1"
    },
    "7764": {
      "op": "MSTORE"
    },
    "7765": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17324,
        17334
      ],
      "op": "CALLER",
      "path": "0"
    },
    "7766": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17324,
        17334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7767": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17315,
        17369
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xC32557ACCEB6AEB205C3115AC08A8DC54D82FB5EA08F2B7F1E6B794488E3851C"
    },
    "7800": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17315,
        17369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7801": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7803": {
      "op": "ADD"
    },
    "7804": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17315,
        17369
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7806": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17315,
        17369
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7807": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17315,
        17369
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7808": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17315,
        17369
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7809": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17315,
        17369
      ],
      "op": "SUB",
      "path": "0"
    },
    "7810": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17315,
        17369
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7811": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17315,
        17369
      ],
      "op": "LOG2",
      "path": "0"
    },
    "7812": {
      "op": "POP"
    },
    "7813": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17381,
        17388
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 98
    },
    "7814": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        17381,
        17388
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "7815": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        15839,
        17396
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "7816": {
      "op": "POP"
    },
    "7817": {
      "op": "POP"
    },
    "7818": {
      "op": "POP"
    },
    "7819": {
      "op": "POP"
    },
    "7820": {
      "op": "POP"
    },
    "7821": {
      "op": "POP"
    },
    "7822": {
      "op": "POP"
    },
    "7823": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "o",
      "offset": [
        15839,
        17396
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7824": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10788,
        11900
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7825": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10869,
        10881
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7827": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10902,
        10909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x22"
    },
    "7829": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10902,
        10909
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7830": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10884,
        10899
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "7831": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10884,
        10909
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EA0"
    },
    "7834": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10884,
        10909
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7835": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10884,
        10909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7836": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10884,
        10909
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FFB"
    },
    "7839": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10884,
        10909
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7840": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10884,
        10909
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7841": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10869,
        10909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7842": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10869,
        10909
      ],
      "op": "POP",
      "path": "0"
    },
    "7843": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10914,
        10932
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7845": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10948,
        10957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "7847": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10948,
        10957
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7848": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10935,
        10945
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "7850": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10935,
        10945
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7851": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10935,
        10957
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EB4"
    },
    "7854": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10935,
        10957
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7855": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10935,
        10957
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7856": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10935,
        10957
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FFB"
    },
    "7859": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10935,
        10957
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7860": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10935,
        10957
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7861": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10914,
        10957
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7862": {
      "op": "POP"
    },
    "7863": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10978,
        10998
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7865": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11001,
        11018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EC2"
    },
    "7868": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10914,
        10957
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7869": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11001,
        11005
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7870": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11001,
        11018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "7873": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11001,
        11018
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7874": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11001,
        11018
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7875": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10978,
        11018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7876": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10978,
        11018
      ],
      "op": "POP",
      "path": "0"
    },
    "7877": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11039,
        11085
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 99,
      "value": "0x1ED6"
    },
    "7880": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11074,
        11083
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "7882": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11074,
        11083
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7883": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11071,
        11072
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7885": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11071,
        11083
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC66"
    },
    "7888": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11071,
        11083
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7889": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11071,
        11083
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7890": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11071,
        11083
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD0"
    },
    "7893": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11071,
        11083
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7894": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11039,
        11085
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7895": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11023,
        11036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "7897": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11023,
        11085
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7898": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11089,
        11098
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7900": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11101,
        11142
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1EED"
    },
    "7903": {
      "offset": [
        5961,
        5968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB40"
    },
    "7906": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11102,
        11120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14BE"
    },
    "7909": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11102,
        11114
      ],
      "op": "DUP5",
      "path": "0"
    },
    "7910": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11117,
        11120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "7913": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11102,
        11120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "7916": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11102,
        11120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7917": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11101,
        11142
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7918": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11153,
        11159
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 100,
      "value": "0x4"
    },
    "7920": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11153,
        11163
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7921": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11153,
        11163
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7922": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11153,
        11163
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "7923": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11089,
        11142
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7924": {
      "op": "POP"
    },
    "7925": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11167,
        11180
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7927": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11193,
        11196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "7930": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11183,
        11190
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F04"
    },
    "7933": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11089,
        11142
      ],
      "op": "DUP4",
      "path": "0"
    },
    "7934": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11187,
        11190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "7936": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11183,
        11190
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "7939": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11183,
        11190
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7940": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11183,
        11190
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7941": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11183,
        11196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F0E"
    },
    "7944": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11183,
        11196
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "7945": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11183,
        11196
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7946": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11183,
        11196
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "7949": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11183,
        11196
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7950": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11183,
        11196
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7951": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11167,
        11196
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7952": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11167,
        11196
      ],
      "op": "POP",
      "path": "0"
    },
    "7953": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11200,
        11217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "7955": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11233,
        11236
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC8"
    },
    "7957": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11225,
        11230
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7958": {
      "branch": 179,
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11225,
        11236
      ],
      "op": "LT",
      "path": "0"
    },
    "7959": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11222,
        11359
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "7960": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11222,
        11359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F52"
    },
    "7963": {
      "branch": 179,
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11222,
        11359
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7964": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11291,
        11314
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 101,
      "value": "0x1F2F"
    },
    "7967": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11310,
        11313
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "7970": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11292,
        11304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "7973": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11303,
        11304
      ],
      "op": "DUP6",
      "path": "0"
    },
    "7974": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11292,
        11300
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x26F7F3C"
    },
    "7979": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11292,
        11304
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "7982": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11292,
        11304
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7983": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11291,
        11314
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7984": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11254,
        11288
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F41"
    },
    "7987": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11281,
        11287
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC0840"
    },
    "7991": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11267,
        11273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8C"
    },
    "7994": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11272,
        11273
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "7996": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11267,
        11268
      ],
      "op": "DUP8",
      "path": "0"
    },
    "7997": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11267,
        11273
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x303C"
    },
    "8000": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11267,
        11273
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8001": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11254,
        11288
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8002": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11254,
        11314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F4B"
    },
    "8005": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11254,
        11314
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8006": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11254,
        11314
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8007": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11254,
        11314
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "8010": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11254,
        11314
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8011": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11254,
        11314
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8012": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11242,
        11314
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8013": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11242,
        11314
      ],
      "op": "POP",
      "path": "0"
    },
    "8014": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11222,
        11359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F59"
    },
    "8017": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11222,
        11359
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8018": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11222,
        11359
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8019": {
      "op": "POP"
    },
    "8020": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11344,
        11353
      ],
      "op": "PUSH4",
      "path": "0",
      "statement": 102,
      "value": "0xDB58580"
    },
    "8025": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11222,
        11359
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8026": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11379,
        11448
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 103,
      "value": "0x1F7D"
    },
    "8029": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11434,
        11447
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBEBC200"
    },
    "8034": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11419,
        11428
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "8036": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11419,
        11428
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8037": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11407,
        11416
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "8039": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11407,
        11416
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8040": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11395,
        11404
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8041": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11381,
        11391
      ],
      "op": "DUP10",
      "path": "0"
    },
    "8042": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11380,
        11404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F73"
    },
    "8045": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11380,
        11404
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8046": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11380,
        11404
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8047": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11380,
        11404
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8050": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11380,
        11404
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8051": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11380,
        11404
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8052": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11380,
        11416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1878"
    },
    "8055": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11380,
        11416
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8056": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11380,
        11416
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8057": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11380,
        11416
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8060": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11380,
        11416
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8061": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11379,
        11448
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8062": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11370,
        11376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "8064": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11370,
        11448
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8065": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11529,
        11553
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "8067": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11529,
        11553
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8068": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11517,
        11526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "8070": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11517,
        11526
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8071": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11555,
        11556
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8073": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11555,
        11556
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8074": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11517,
        11553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F92"
    },
    "8077": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11517,
        11553
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8078": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11517,
        11553
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8081": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11517,
        11553
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8082": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11517,
        11553
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8083": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11507,
        11554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F9D"
    },
    "8086": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11507,
        11554
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8087": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11507,
        11513
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3C"
    },
    "8089": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11507,
        11554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8092": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11507,
        11554
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8093": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11507,
        11554
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8094": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11507,
        11556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FA7"
    },
    "8097": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11507,
        11556
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8098": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11507,
        11556
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8099": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11507,
        11556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "8102": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11507,
        11556
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8103": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11507,
        11556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8104": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11462,
        11477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "8106": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11462,
        11477
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8107": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8109": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8110": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "8115": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8117": {
      "op": "SHL"
    },
    "8118": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8119": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8120": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11497,
        11501
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "8121": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8123": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8124": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "ADD",
      "path": "0"
    },
    "8125": {
      "op": "MSTORE"
    },
    "8126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8132": {
      "op": "SHL"
    },
    "8133": {
      "op": "SUB"
    },
    "8134": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11462,
        11477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8135": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11462,
        11477
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8136": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11462,
        11477
      ],
      "op": "AND",
      "path": "0"
    },
    "8137": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11462,
        11477
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8138": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11488
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "8143": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11488
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8144": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8146": {
      "op": "ADD"
    },
    "8147": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8149": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8151": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8152": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8153": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8154": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "SUB",
      "path": "0"
    },
    "8155": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8156": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8157": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "GAS",
      "path": "0"
    },
    "8158": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "8159": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8160": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8161": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8162": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1FEF"
    },
    "8165": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8166": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8167": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8169": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8170": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "8171": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8172": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8174": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8175": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8176": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "POP",
      "path": "0"
    },
    "8177": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "POP",
      "path": "0"
    },
    "8178": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "POP",
      "path": "0"
    },
    "8179": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "POP",
      "path": "0"
    },
    "8180": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8182": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8183": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8184": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8186": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "NOT",
      "path": "0"
    },
    "8187": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8189": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8190": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "ADD",
      "path": "0"
    },
    "8191": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "AND",
      "path": "0"
    },
    "8192": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8193": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "ADD",
      "path": "0"
    },
    "8194": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8195": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8197": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8198": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "POP",
      "path": "0"
    },
    "8199": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8200": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "ADD",
      "path": "0"
    },
    "8201": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8202": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2013"
    },
    "8205": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8206": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8207": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31DC"
    },
    "8210": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11455,
        11503
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8211": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11503
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8212": {
      "branch": 180,
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11455,
        11557
      ],
      "op": "GT",
      "path": "0"
    },
    "8213": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11452,
        11824
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8214": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11452,
        11824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20D4"
    },
    "8217": {
      "branch": 180,
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11452,
        11824
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8218": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11651,
        11666
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 104,
      "value": "0x8"
    },
    "8220": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11651,
        11666
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8221": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11677,
        11692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "8223": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11677,
        11692
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8224": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11734,
        11743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "8226": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11734,
        11743
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8227": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11722,
        11731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "8229": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11722,
        11731
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8232": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8236": {
      "op": "SHL"
    },
    "8237": {
      "op": "SUB"
    },
    "8238": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11651,
        11666
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8239": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11651,
        11666
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8240": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11651,
        11666
      ],
      "op": "AND",
      "path": "0"
    },
    "8241": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11651,
        11666
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8242": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11676
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "8247": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11676
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8248": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11677,
        11692
      ],
      "op": "AND",
      "path": "0"
    },
    "8249": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11677,
        11692
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8250": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11694,
        11763
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x204E"
    },
    "8253": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11694,
        11763
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8254": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11749,
        11762
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBEBC200"
    },
    "8259": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11749,
        11762
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8260": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11734,
        11743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8261": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11695,
        11719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F73"
    },
    "8264": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11710,
        11719
      ],
      "op": "DUP9",
      "path": "0"
    },
    "8265": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11696,
        11706
      ],
      "op": "DUP14",
      "path": "0"
    },
    "8266": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11695,
        11719
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8269": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11695,
        11719
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8270": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11694,
        11763
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8271": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8273": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8278": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8280": {
      "op": "SHL"
    },
    "8281": {
      "op": "SUB"
    },
    "8282": {
      "op": "NOT"
    },
    "8283": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "8285": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8286": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8287": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "SHL",
      "path": "0"
    },
    "8288": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "AND",
      "path": "0"
    },
    "8289": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8290": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8295": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8297": {
      "op": "SHL"
    },
    "8298": {
      "op": "SUB"
    },
    "8299": {
      "op": "SWAP1"
    },
    "8300": {
      "op": "SWAP3"
    },
    "8301": {
      "op": "AND"
    },
    "8302": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8304": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8305": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "ADD",
      "path": "0"
    },
    "8306": {
      "op": "MSTORE"
    },
    "8307": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8309": {
      "op": "DUP3"
    },
    "8310": {
      "op": "ADD"
    },
    "8311": {
      "op": "MSTORE"
    },
    "8312": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8314": {
      "op": "ADD"
    },
    "8315": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8317": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8319": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8320": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8321": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8322": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "SUB",
      "path": "0"
    },
    "8323": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8324": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8326": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "DUP8",
      "path": "0"
    },
    "8327": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "GAS",
      "path": "0"
    },
    "8328": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "CALL",
      "path": "0"
    },
    "8329": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8330": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8331": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8332": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2099"
    },
    "8335": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8336": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8337": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8339": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8340": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "8341": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8342": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8344": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8345": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8346": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "POP",
      "path": "0"
    },
    "8347": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "POP",
      "path": "0"
    },
    "8348": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "POP",
      "path": "0"
    },
    "8349": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "POP",
      "path": "0"
    },
    "8350": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8352": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8353": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8354": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8356": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "NOT",
      "path": "0"
    },
    "8357": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "8359": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8360": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "ADD",
      "path": "0"
    },
    "8361": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "AND",
      "path": "0"
    },
    "8362": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8363": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "ADD",
      "path": "0"
    },
    "8364": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8365": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8367": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8368": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "POP",
      "path": "0"
    },
    "8369": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8370": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "ADD",
      "path": "0"
    },
    "8371": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8372": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20BD"
    },
    "8375": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8376": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8377": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x314E"
    },
    "8380": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11644,
        11764
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8381": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11644,
        11764
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8382": {
      "op": "POP"
    },
    "8383": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11785,
        11789
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 105,
      "value": "0x1F"
    },
    "8385": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11785,
        11789
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8386": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11781,
        11789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20CC"
    },
    "8389": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11781,
        11789
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8390": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11781,
        11782
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8392": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11781,
        11789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8395": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        11781,
        11789
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8396": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11781,
        11789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8397": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11769,
        11778
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "8399": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11769,
        11789
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8400": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11452,
        11824
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20DA"
    },
    "8403": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11452,
        11824
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8404": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11452,
        11824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8405": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11818,
        11819
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 106,
      "value": "0x0"
    },
    "8407": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11806,
        11815
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "8409": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11806,
        11819
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8410": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11452,
        11824
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8411": {
      "op": "POP"
    },
    "8412": {
      "op": "POP"
    },
    "8413": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11839,
        11849
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 107,
      "value": "0xC"
    },
    "8415": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11839,
        11849
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8416": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11827,
        11836
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x15"
    },
    "8418": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11827,
        11849
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8419": {
      "op": "POP"
    },
    "8420": {
      "op": "POP"
    },
    "8421": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11881,
        11896
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 108
    },
    "8422": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11871,
        11878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x22"
    },
    "8424": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11871,
        11896
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8425": {
      "op": "POP"
    },
    "8426": {
      "op": "POP"
    },
    "8427": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "o",
      "offset": [
        10788,
        11900
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8428": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8429": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12427,
        12439
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8431": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12446,
        12460
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8432": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12491,
        12506
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "8434": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12491,
        12506
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8435": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12508,
        12518
      ],
      "op": "CALLER",
      "path": "0"
    },
    "8436": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12520,
        12525
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8437": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8439": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8440": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8442": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "ADD",
      "path": "0"
    },
    "8443": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2106"
    },
    "8446": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8447": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8448": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8449": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8450": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3061"
    },
    "8453": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12474,
        12526
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8454": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8455": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8457": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8458": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8460": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8461": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8462": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "SUB",
      "path": "0"
    },
    "8463": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "SUB",
      "path": "0"
    },
    "8464": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8465": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8466": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8467": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8469": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12474,
        12526
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8470": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12464,
        12527
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8471": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12464,
        12527
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8472": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12464,
        12527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8473": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12464,
        12527
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8475": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12464,
        12527
      ],
      "op": "ADD",
      "path": "0"
    },
    "8476": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12464,
        12527
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8477": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12446,
        12527
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8478": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12446,
        12527
      ],
      "op": "POP",
      "path": "0"
    },
    "8479": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12599,
        12615
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 109
    },
    "8480": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12589,
        12595
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8481": {
      "branch": 181,
      "fn": "ForgeMining.mintTo",
      "offset": [
        12589,
        12615
      ],
      "op": "EQ",
      "path": "0"
    },
    "8482": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12581,
        12666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x213D"
    },
    "8485": {
      "branch": 181,
      "fn": "ForgeMining.mintTo",
      "offset": [
        12581,
        12666
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8486": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12581,
        12666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8488": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12581,
        12666
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8489": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8493": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8495": {
      "op": "SHL"
    },
    "8496": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12581,
        12666
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8497": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12581,
        12666
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8498": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12581,
        12666
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8500": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12581,
        12666
      ],
      "op": "ADD",
      "path": "0"
    },
    "8501": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12581,
        12666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "8504": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12581,
        12666
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8505": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12581,
        12666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3089"
    },
    "8508": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12581,
        12666
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8509": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12581,
        12666
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8510": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12744,
        12756
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 110,
      "value": "0x10"
    },
    "8512": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12744,
        12756
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8513": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12726,
        12756
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8514": {
      "branch": 182,
      "fn": "ForgeMining.mintTo",
      "offset": [
        12726,
        12756
      ],
      "op": "LT",
      "path": "0"
    },
    "8515": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12718,
        12801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215E"
    },
    "8518": {
      "branch": 182,
      "fn": "ForgeMining.mintTo",
      "offset": [
        12718,
        12801
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8519": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12718,
        12801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8521": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12718,
        12801
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8522": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8526": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8528": {
      "op": "SHL"
    },
    "8529": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12718,
        12801
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8530": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12718,
        12801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8531": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12718,
        12801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8533": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12718,
        12801
      ],
      "op": "ADD",
      "path": "0"
    },
    "8534": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12718,
        12801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "8537": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12718,
        12801
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8538": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12718,
        12801
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30D7"
    },
    "8541": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12718,
        12801
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8542": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12718,
        12801
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8543": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12805,
        12827
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 111,
      "value": "0x2166"
    },
    "8546": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12805,
        12825
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2590"
    },
    "8549": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12805,
        12827
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8550": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12805,
        12827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8551": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12858,
        12875
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 112,
      "value": "0x16"
    },
    "8553": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12858,
        12875
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8554": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12840,
        12855
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "8555": {
      "branch": 183,
      "fn": "ForgeMining.mintTo",
      "offset": [
        12840,
        12875
      ],
      "op": "GT",
      "path": "0"
    },
    "8556": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12832,
        12901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2187"
    },
    "8559": {
      "branch": 183,
      "fn": "ForgeMining.mintTo",
      "offset": [
        12832,
        12901
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8560": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12832,
        12901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8562": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12832,
        12901
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8563": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8567": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8569": {
      "op": "SHL"
    },
    "8570": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12832,
        12901
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8571": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12832,
        12901
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8572": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12832,
        12901
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8574": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12832,
        12901
      ],
      "op": "ADD",
      "path": "0"
    },
    "8575": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12832,
        12901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "8578": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12832,
        12901
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8579": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12832,
        12901
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x311F"
    },
    "8582": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12832,
        12901
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8583": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12832,
        12901
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8584": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12959,
        12968
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8586": {
      "offset": [
        5961,
        5968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB40"
    },
    "8589": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12991,
        13008
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "8591": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12991,
        13008
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8592": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12973,
        12988
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "8593": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12973,
        13008
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x219A"
    },
    "8596": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12973,
        13008
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8597": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12973,
        13008
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8598": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12973,
        13008
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FFB"
    },
    "8601": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12973,
        13008
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8602": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12973,
        13008
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8603": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12972,
        13015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21A6"
    },
    "8606": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12972,
        13015
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8607": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13012,
        13015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "8610": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12972,
        13015
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8613": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12972,
        13015
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8614": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12972,
        13015
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8615": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12971,
        13029
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21B0"
    },
    "8618": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12971,
        13029
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8619": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12971,
        13029
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8620": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12971,
        13029
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "8623": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12971,
        13029
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8624": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12971,
        13029
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8625": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12959,
        13029
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8626": {
      "op": "POP"
    },
    "8627": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13033,
        13043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8629": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13056,
        13059
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "8632": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13046,
        13053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21C2"
    },
    "8635": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12959,
        13029
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8636": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13050,
        13053
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "8638": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13046,
        13053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8641": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13046,
        13053
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8642": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13046,
        13053
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8643": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13046,
        13059
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21CC"
    },
    "8646": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13046,
        13059
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8647": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13046,
        13059
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8648": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13046,
        13059
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "8651": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13046,
        13059
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8652": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13046,
        13059
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8653": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13033,
        13059
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8654": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13033,
        13059
      ],
      "op": "POP",
      "path": "0"
    },
    "8655": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13063,
        13077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8657": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13096,
        13099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A"
    },
    "8660": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13088,
        13093
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8661": {
      "branch": 184,
      "fn": "ForgeMining.mintTo",
      "offset": [
        13088,
        13099
      ],
      "op": "LT",
      "path": "0"
    },
    "8662": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13085,
        13248
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8663": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13085,
        13248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2211"
    },
    "8666": {
      "branch": 184,
      "fn": "ForgeMining.mintTo",
      "offset": [
        13085,
        13248
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8667": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13155,
        13178
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 113,
      "value": "0x21EE"
    },
    "8670": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13174,
        13177
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "8673": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13156,
        13168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "8676": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13167,
        13168
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8677": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13156,
        13164
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x26F7F3C"
    },
    "8682": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13156,
        13168
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8685": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13156,
        13168
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8686": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13155,
        13178
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8687": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13117,
        13153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2200"
    },
    "8690": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13144,
        13152
      ],
      "op": "PUSH3",
      "path": "0",
      "value": "0xC0840"
    },
    "8694": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13130,
        13136
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8C"
    },
    "8697": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13135,
        13136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "8699": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13130,
        13131
      ],
      "op": "DUP8",
      "path": "0"
    },
    "8700": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13130,
        13136
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x303C"
    },
    "8703": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13130,
        13136
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8704": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13117,
        13153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8705": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13117,
        13178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x220A"
    },
    "8708": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13117,
        13178
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8709": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13117,
        13178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8710": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13117,
        13178
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "8713": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13117,
        13178
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8714": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13117,
        13178
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8715": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13105,
        13178
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8716": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13105,
        13178
      ],
      "op": "POP",
      "path": "0"
    },
    "8717": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13085,
        13248
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2236"
    },
    "8720": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13085,
        13248
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8721": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13085,
        13248
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8722": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13205,
        13229
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 114,
      "value": "0x2225"
    },
    "8725": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13225,
        13228
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "8728": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13206,
        13219
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "8731": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13206,
        13207
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8732": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13210,
        13219
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "8737": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13206,
        13219
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8740": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13206,
        13219
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8741": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13205,
        13229
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8742": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13205,
        13243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2233"
    },
    "8745": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13205,
        13243
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8746": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13233,
        13242
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x14DC9380"
    },
    "8751": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13205,
        13243
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "8754": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13205,
        13243
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8755": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13205,
        13243
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8756": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13193,
        13243
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8757": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13193,
        13243
      ],
      "op": "POP",
      "path": "0"
    },
    "8758": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13085,
        13248
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8759": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13337
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 115,
      "value": "0x226E"
    },
    "8762": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13294,
        13336
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x224F"
    },
    "8765": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13326,
        13335
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "8770": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13311,
        13320
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8771": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13295,
        13308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "8773": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13295,
        13308
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8774": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13295,
        13320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "8777": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13295,
        13320
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8778": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13295,
        13320
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8779": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13295,
        13320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8782": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13295,
        13320
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8783": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13294,
        13336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8790": {
      "op": "SHL"
    },
    "8791": {
      "op": "SUB"
    },
    "8792": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13289
      ],
      "op": "DUP9",
      "path": "0"
    },
    "8793": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13289
      ],
      "op": "AND",
      "path": "0"
    },
    "8794": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8796": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8797": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8798": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8799": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13281
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "8801": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8803": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8804": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8806": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8807": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13289
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8808": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13289
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8809": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8810": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13293
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2542"
    },
    "8813": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13273,
        13337
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8814": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13273,
        13337
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8821": {
      "op": "SHL"
    },
    "8822": {
      "op": "SUB"
    },
    "8823": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13254,
        13270
      ],
      "op": "DUP8",
      "path": "0"
    },
    "8824": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13254,
        13270
      ],
      "op": "AND",
      "path": "0"
    },
    "8825": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13254,
        13270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8827": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13254,
        13270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8828": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13254,
        13270
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8829": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13254,
        13270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8830": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13254,
        13262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "8832": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13254,
        13270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8834": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13254,
        13270
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8835": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13254,
        13270
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8837": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13254,
        13270
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8838": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13254,
        13270
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8839": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13254,
        13337
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8840": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13400,
        13413
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 116,
      "value": "0x14"
    },
    "8842": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13400,
        13413
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8843": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13369,
        13446
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22A3"
    },
    "8846": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13369,
        13446
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8847": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13399,
        13445
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17CE"
    },
    "8850": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13399,
        13445
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8851": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13431,
        13444
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBEBC200"
    },
    "8856": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13431,
        13444
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8857": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13400,
        13425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "8860": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13400,
        13425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8861": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13416,
        13425
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8862": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13416,
        13425
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8863": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13400,
        13425
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8866": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13400,
        13425
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8867": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13369,
        13446
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8868": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13350,
        13365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "8870": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13350,
        13365
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8877": {
      "op": "SHL"
    },
    "8878": {
      "op": "SUB"
    },
    "8879": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13350,
        13365
      ],
      "op": "AND",
      "path": "0"
    },
    "8880": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13341,
        13366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8882": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13341,
        13366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8883": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13341,
        13366
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8884": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13341,
        13366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8885": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13341,
        13349
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1C"
    },
    "8887": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13341,
        13366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8889": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13341,
        13366
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8890": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13341,
        13366
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8892": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13341,
        13366
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8893": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13341,
        13366
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "8894": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13341,
        13446
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8895": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13488,
        13501
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 117,
      "value": "0x14"
    },
    "8897": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13488,
        13501
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8898": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13470,
        13530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22DA"
    },
    "8901": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13470,
        13530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8902": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13487,
        13529
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1826"
    },
    "8905": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13487,
        13529
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8906": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13519,
        13528
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "8911": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13519,
        13528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8912": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13488,
        13513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "8915": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13488,
        13513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8916": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13504,
        13513
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8917": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13504,
        13513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8918": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13488,
        13513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8921": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13488,
        13513
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8922": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13470,
        13530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8923": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13455,
        13467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1B"
    },
    "8925": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13455,
        13530
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8926": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13554,
        13569
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 118
    },
    "8927": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13534,
        13551
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x16"
    },
    "8929": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13534,
        13569
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8930": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13577,
        13586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "8932": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13577,
        13586
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8933": {
      "branch": 185,
      "fn": "ForgeMining.mintTo",
      "offset": [
        13577,
        13590
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8934": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13574,
        13813
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2438"
    },
    "8937": {
      "branch": 185,
      "fn": "ForgeMining.mintTo",
      "offset": [
        13574,
        13813
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8938": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13607,
        13610
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC8"
    },
    "8940": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13599,
        13604
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8941": {
      "branch": 186,
      "fn": "ForgeMining.mintTo",
      "offset": [
        13599,
        13610
      ],
      "op": "LT",
      "path": "0"
    },
    "8942": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13596,
        13809
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8943": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13596,
        13809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2398"
    },
    "8946": {
      "branch": 186,
      "fn": "ForgeMining.mintTo",
      "offset": [
        13596,
        13809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8947": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13624,
        13639
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 119,
      "value": "0x8"
    },
    "8949": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13624,
        13639
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8950": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13683,
        13692
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "8952": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13683,
        13692
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8953": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13671,
        13680
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "8955": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13671,
        13680
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8962": {
      "op": "SHL"
    },
    "8963": {
      "op": "SUB"
    },
    "8964": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13624,
        13639
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8965": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13624,
        13639
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8966": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13624,
        13639
      ],
      "op": "AND",
      "path": "0"
    },
    "8967": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13624,
        13639
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8968": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13649
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "8973": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13649
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8974": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13650,
        13656
      ],
      "op": "DUP10",
      "path": "0"
    },
    "8975": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13650,
        13656
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8976": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13658,
        13708
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2323"
    },
    "8979": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13658,
        13708
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8980": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13698,
        13707
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "8985": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13698,
        13707
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8986": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13659,
        13680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1878"
    },
    "8989": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13659,
        13680
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8990": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13659,
        13668
      ],
      "op": "DUP9",
      "path": "0"
    },
    "8991": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13659,
        13680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "8994": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13659,
        13680
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8995": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13658,
        13708
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8996": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8998": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9003": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9005": {
      "op": "SHL"
    },
    "9006": {
      "op": "SUB"
    },
    "9007": {
      "op": "NOT"
    },
    "9008": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "9010": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9011": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9012": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "SHL",
      "path": "0"
    },
    "9013": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "AND",
      "path": "0"
    },
    "9014": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9015": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9022": {
      "op": "SHL"
    },
    "9023": {
      "op": "SUB"
    },
    "9024": {
      "op": "SWAP1"
    },
    "9025": {
      "op": "SWAP3"
    },
    "9026": {
      "op": "AND"
    },
    "9027": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9029": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9030": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "ADD",
      "path": "0"
    },
    "9031": {
      "op": "MSTORE"
    },
    "9032": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9034": {
      "op": "DUP3"
    },
    "9035": {
      "op": "ADD"
    },
    "9036": {
      "op": "MSTORE"
    },
    "9037": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9039": {
      "op": "ADD"
    },
    "9040": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9042": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9044": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9045": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9046": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9047": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "SUB",
      "path": "0"
    },
    "9048": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9049": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9051": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "DUP8",
      "path": "0"
    },
    "9052": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "GAS",
      "path": "0"
    },
    "9053": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "CALL",
      "path": "0"
    },
    "9054": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9055": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9056": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9057": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x236E"
    },
    "9060": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9061": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9062": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9064": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9065": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "9066": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9067": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9069": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9070": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9071": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "POP",
      "path": "0"
    },
    "9072": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "POP",
      "path": "0"
    },
    "9073": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "POP",
      "path": "0"
    },
    "9074": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "POP",
      "path": "0"
    },
    "9075": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9077": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9078": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9079": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9081": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "NOT",
      "path": "0"
    },
    "9082": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9084": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9085": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "ADD",
      "path": "0"
    },
    "9086": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "AND",
      "path": "0"
    },
    "9087": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9088": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "ADD",
      "path": "0"
    },
    "9089": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9090": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9092": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9093": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "POP",
      "path": "0"
    },
    "9094": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9095": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "ADD",
      "path": "0"
    },
    "9096": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9097": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2392"
    },
    "9100": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9101": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9102": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x314E"
    },
    "9105": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13617,
        13709
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9106": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9107": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13617,
        13709
      ],
      "op": "POP",
      "path": "0"
    },
    "9108": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13596,
        13809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2438"
    },
    "9111": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13596,
        13809
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9112": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13596,
        13809
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9113": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13732,
        13747
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 120,
      "value": "0x8"
    },
    "9115": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13732,
        13747
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9116": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13784,
        13793
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1E"
    },
    "9118": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13784,
        13793
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9119": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13772,
        13781
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "9121": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13772,
        13781
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9122": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9126": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9128": {
      "op": "SHL"
    },
    "9129": {
      "op": "SUB"
    },
    "9130": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13732,
        13747
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9131": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13732,
        13747
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9132": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13732,
        13747
      ],
      "op": "AND",
      "path": "0"
    },
    "9133": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13732,
        13747
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9134": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13757
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "9139": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13757
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9140": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13758,
        13764
      ],
      "op": "DUP10",
      "path": "0"
    },
    "9141": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13758,
        13764
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9142": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13766,
        13802
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23C7"
    },
    "9145": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13766,
        13802
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9146": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13799,
        13801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9148": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13799,
        13801
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9149": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13767,
        13781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1878"
    },
    "9152": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13767,
        13781
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9153": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13767,
        13769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x17"
    },
    "9155": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13767,
        13781
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "9158": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13767,
        13781
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9159": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13766,
        13802
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9160": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9162": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9167": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9169": {
      "op": "SHL"
    },
    "9170": {
      "op": "SUB"
    },
    "9171": {
      "op": "NOT"
    },
    "9172": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "9174": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9175": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9176": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "SHL",
      "path": "0"
    },
    "9177": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "AND",
      "path": "0"
    },
    "9178": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9179": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9186": {
      "op": "SHL"
    },
    "9187": {
      "op": "SUB"
    },
    "9188": {
      "op": "SWAP1"
    },
    "9189": {
      "op": "SWAP3"
    },
    "9190": {
      "op": "AND"
    },
    "9191": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9193": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9194": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "ADD",
      "path": "0"
    },
    "9195": {
      "op": "MSTORE"
    },
    "9196": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9198": {
      "op": "DUP3"
    },
    "9199": {
      "op": "ADD"
    },
    "9200": {
      "op": "MSTORE"
    },
    "9201": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9203": {
      "op": "ADD"
    },
    "9204": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9206": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9208": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9209": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9210": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9211": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "SUB",
      "path": "0"
    },
    "9212": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9213": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9215": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "DUP8",
      "path": "0"
    },
    "9216": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "GAS",
      "path": "0"
    },
    "9217": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "CALL",
      "path": "0"
    },
    "9218": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9219": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9220": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9221": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2412"
    },
    "9224": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9225": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9226": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9228": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9229": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "9230": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9231": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9233": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9234": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9235": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "POP",
      "path": "0"
    },
    "9236": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "POP",
      "path": "0"
    },
    "9237": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "POP",
      "path": "0"
    },
    "9238": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "POP",
      "path": "0"
    },
    "9239": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9241": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9242": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9243": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9245": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "NOT",
      "path": "0"
    },
    "9246": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9248": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9249": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "ADD",
      "path": "0"
    },
    "9250": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "AND",
      "path": "0"
    },
    "9251": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9252": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "ADD",
      "path": "0"
    },
    "9253": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9254": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9256": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9257": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "POP",
      "path": "0"
    },
    "9258": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9259": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "ADD",
      "path": "0"
    },
    "9260": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9261": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2436"
    },
    "9264": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9265": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9266": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x314E"
    },
    "9269": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13725,
        13803
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9270": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9271": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13725,
        13803
      ],
      "op": "POP",
      "path": "0"
    },
    "9272": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13596,
        13809
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9273": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13827,
        13837
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 121
    },
    "9274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9280": {
      "op": "SHL"
    },
    "9281": {
      "op": "SUB"
    },
    "9282": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13822,
        13912
      ],
      "op": "AND",
      "path": "0"
    },
    "9283": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13822,
        13912
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D"
    },
    "9316": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13839,
        13881
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2479"
    },
    "9319": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13871,
        13880
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5F5E100"
    },
    "9324": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13856,
        13865
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9325": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13840,
        13853
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x14"
    },
    "9327": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13840,
        13853
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9328": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13840,
        13865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "9331": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13840,
        13865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9332": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13840,
        13865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9333": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13840,
        13865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "9336": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        13840,
        13865
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9337": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13839,
        13881
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9338": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13883,
        13893
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9340": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13883,
        13893
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9341": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13895,
        13910
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "9343": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13895,
        13910
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9344": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13822,
        13912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9346": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13822,
        13912
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9347": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13822,
        13912
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9348": {
      "op": "SWAP4"
    },
    "9349": {
      "op": "DUP5"
    },
    "9350": {
      "op": "MSTORE"
    },
    "9351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9353": {
      "op": "DUP5"
    },
    "9354": {
      "op": "ADD"
    },
    "9355": {
      "op": "SWAP3"
    },
    "9356": {
      "op": "SWAP1"
    },
    "9357": {
      "op": "SWAP3"
    },
    "9358": {
      "op": "MSTORE"
    },
    "9359": {
      "op": "SWAP1"
    },
    "9360": {
      "op": "DUP3"
    },
    "9361": {
      "op": "ADD"
    },
    "9362": {
      "op": "MSTORE"
    },
    "9363": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9365": {
      "op": "ADD"
    },
    "9366": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13822,
        13912
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9368": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13822,
        13912
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9369": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13822,
        13912
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9370": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13822,
        13912
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9371": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13822,
        13912
      ],
      "op": "SUB",
      "path": "0"
    },
    "9372": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13822,
        13912
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9373": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13822,
        13912
      ],
      "op": "LOG2",
      "path": "0"
    },
    "9374": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        13924,
        13933
      ],
      "op": "SWAP8",
      "path": "0",
      "statement": 122
    },
    "9375": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12337,
        13938
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "9376": {
      "op": "POP"
    },
    "9377": {
      "op": "POP"
    },
    "9378": {
      "op": "POP"
    },
    "9379": {
      "op": "POP"
    },
    "9380": {
      "op": "POP"
    },
    "9381": {
      "op": "POP"
    },
    "9382": {
      "op": "POP"
    },
    "9383": {
      "fn": "ForgeMining.mintTo",
      "jump": "o",
      "offset": [
        12337,
        13938
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9384": {
      "fn": "SafeMath2.div",
      "offset": [
        4276,
        4412
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9385": {
      "fn": "SafeMath2.div",
      "offset": [
        4334,
        4341
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9387": {
      "branch": 187,
      "fn": "SafeMath2.div",
      "offset": [
        4361,
        4367
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 123
    },
    "9388": {
      "fn": "SafeMath2.div",
      "offset": [
        4353,
        4383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24E5"
    },
    "9391": {
      "branch": 187,
      "fn": "SafeMath2.div",
      "offset": [
        4353,
        4383
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9392": {
      "fn": "SafeMath2.div",
      "offset": [
        4353,
        4383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9394": {
      "fn": "SafeMath2.div",
      "offset": [
        4353,
        4383
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9395": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9399": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9401": {
      "op": "SHL"
    },
    "9402": {
      "fn": "SafeMath2.div",
      "offset": [
        4353,
        4383
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9403": {
      "fn": "SafeMath2.div",
      "offset": [
        4353,
        4383
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9406": {
      "fn": "SafeMath2.div",
      "offset": [
        4353,
        4383
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9408": {
      "fn": "SafeMath2.div",
      "offset": [
        4353,
        4383
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9409": {
      "fn": "SafeMath2.div",
      "offset": [
        4353,
        4383
      ],
      "op": "ADD",
      "path": "0"
    },
    "9410": {
      "op": "MSTORE"
    },
    "9411": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "9413": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9415": {
      "op": "DUP3"
    },
    "9416": {
      "op": "ADD"
    },
    "9417": {
      "op": "MSTORE"
    },
    "9418": {
      "op": "PUSH11",
      "value": "0x446976206279207A65726F"
    },
    "9430": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "9432": {
      "op": "SHL"
    },
    "9433": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9435": {
      "op": "DUP3"
    },
    "9436": {
      "op": "ADD"
    },
    "9437": {
      "op": "MSTORE"
    },
    "9438": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9440": {
      "op": "ADD"
    },
    "9441": {
      "fn": "SafeMath2.div",
      "offset": [
        4353,
        4383
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "9444": {
      "op": "JUMP"
    },
    "9445": {
      "fn": "SafeMath2.div",
      "offset": [
        4353,
        4383
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9446": {
      "fn": "SafeMath2.div",
      "offset": [
        4400,
        4405
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 124,
      "value": "0x24EF"
    },
    "9449": {
      "fn": "SafeMath2.div",
      "offset": [
        4404,
        4405
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9450": {
      "fn": "SafeMath2.div",
      "offset": [
        4400,
        4401
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9451": {
      "fn": "SafeMath2.div",
      "offset": [
        4400,
        4405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "9454": {
      "fn": "SafeMath2.div",
      "jump": "i",
      "offset": [
        4400,
        4405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9455": {
      "fn": "SafeMath2.div",
      "offset": [
        4400,
        4405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9456": {
      "fn": "SafeMath2.div",
      "offset": [
        4393,
        4405
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "9457": {
      "fn": "SafeMath2.div",
      "offset": [
        4276,
        4412
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9458": {
      "op": "POP"
    },
    "9459": {
      "op": "POP"
    },
    "9460": {
      "op": "POP"
    },
    "9461": {
      "fn": "SafeMath2.div",
      "jump": "o",
      "offset": [
        4276,
        4412
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9462": {
      "fn": "SafeMath2.sub",
      "offset": [
        3905,
        4043
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9463": {
      "fn": "SafeMath2.sub",
      "offset": [
        3963,
        3970
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9465": {
      "fn": "SafeMath2.sub",
      "offset": [
        3995,
        3996
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 125
    },
    "9466": {
      "fn": "SafeMath2.sub",
      "offset": [
        3990,
        3991
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9467": {
      "fn": "SafeMath2.sub",
      "offset": [
        3990,
        3996
      ],
      "op": "LT",
      "path": "0"
    },
    "9468": {
      "branch": 188,
      "fn": "SafeMath2.sub",
      "offset": [
        3990,
        3996
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9469": {
      "fn": "SafeMath2.sub",
      "offset": [
        3982,
        4014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2538"
    },
    "9472": {
      "branch": 188,
      "fn": "SafeMath2.sub",
      "offset": [
        3982,
        4014
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9473": {
      "fn": "SafeMath2.sub",
      "offset": [
        3982,
        4014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9475": {
      "fn": "SafeMath2.sub",
      "offset": [
        3982,
        4014
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9476": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9480": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9482": {
      "op": "SHL"
    },
    "9483": {
      "fn": "SafeMath2.sub",
      "offset": [
        3982,
        4014
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9484": {
      "fn": "SafeMath2.sub",
      "offset": [
        3982,
        4014
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9487": {
      "fn": "SafeMath2.sub",
      "offset": [
        3982,
        4014
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9489": {
      "fn": "SafeMath2.sub",
      "offset": [
        3982,
        4014
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9490": {
      "fn": "SafeMath2.sub",
      "offset": [
        3982,
        4014
      ],
      "op": "ADD",
      "path": "0"
    },
    "9491": {
      "op": "MSTORE"
    },
    "9492": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "9494": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9496": {
      "op": "DUP3"
    },
    "9497": {
      "op": "ADD"
    },
    "9498": {
      "op": "MSTORE"
    },
    "9499": {
      "op": "PUSH13",
      "value": "0x53756220756E646572666C6F77"
    },
    "9513": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "9515": {
      "op": "SHL"
    },
    "9516": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9518": {
      "op": "DUP3"
    },
    "9519": {
      "op": "ADD"
    },
    "9520": {
      "op": "MSTORE"
    },
    "9521": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9523": {
      "op": "ADD"
    },
    "9524": {
      "fn": "SafeMath2.sub",
      "offset": [
        3982,
        4014
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "9527": {
      "op": "JUMP"
    },
    "9528": {
      "fn": "SafeMath2.sub",
      "offset": [
        3982,
        4014
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9529": {
      "fn": "SafeMath2.sub",
      "offset": [
        4031,
        4036
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 126,
      "value": "0x24EF"
    },
    "9532": {
      "fn": "SafeMath2.sub",
      "offset": [
        4035,
        4036
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9533": {
      "fn": "SafeMath2.sub",
      "offset": [
        4031,
        4032
      ],
      "op": "DUP5",
      "path": "0"
    },
    "9534": {
      "fn": "SafeMath2.sub",
      "offset": [
        4031,
        4036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FFB"
    },
    "9537": {
      "fn": "SafeMath2.sub",
      "jump": "i",
      "offset": [
        4031,
        4036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9538": {
      "fn": "SafeMath2.add",
      "offset": [
        3739,
        3899
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9539": {
      "fn": "SafeMath2.add",
      "offset": [
        3797,
        3804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9541": {
      "fn": "SafeMath2.add",
      "offset": [
        3797,
        3804
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9542": {
      "fn": "SafeMath2.add",
      "offset": [
        3828,
        3833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x254F"
    },
    "9545": {
      "fn": "SafeMath2.add",
      "offset": [
        3832,
        3833
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9546": {
      "fn": "SafeMath2.add",
      "offset": [
        3828,
        3829
      ],
      "op": "DUP6",
      "path": "0"
    },
    "9547": {
      "fn": "SafeMath2.add",
      "offset": [
        3828,
        3833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "9550": {
      "fn": "SafeMath2.add",
      "jump": "i",
      "offset": [
        3828,
        3833
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9551": {
      "fn": "SafeMath2.add",
      "offset": [
        3828,
        3833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9552": {
      "fn": "SafeMath2.add",
      "offset": [
        3816,
        3833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9553": {
      "fn": "SafeMath2.add",
      "offset": [
        3816,
        3833
      ],
      "op": "POP",
      "path": "0"
    },
    "9554": {
      "fn": "SafeMath2.add",
      "offset": [
        3856,
        3857
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 127
    },
    "9555": {
      "fn": "SafeMath2.add",
      "offset": [
        3851,
        3852
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9556": {
      "fn": "SafeMath2.add",
      "offset": [
        3851,
        3857
      ],
      "op": "LT",
      "path": "0"
    },
    "9557": {
      "branch": 189,
      "fn": "SafeMath2.add",
      "offset": [
        3851,
        3857
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9558": {
      "fn": "SafeMath2.add",
      "offset": [
        3843,
        3874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24EF"
    },
    "9561": {
      "branch": 189,
      "fn": "SafeMath2.add",
      "offset": [
        3843,
        3874
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9562": {
      "fn": "SafeMath2.add",
      "offset": [
        3843,
        3874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9564": {
      "fn": "SafeMath2.add",
      "offset": [
        3843,
        3874
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9565": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9569": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9571": {
      "op": "SHL"
    },
    "9572": {
      "fn": "SafeMath2.add",
      "offset": [
        3843,
        3874
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9573": {
      "fn": "SafeMath2.add",
      "offset": [
        3843,
        3874
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9576": {
      "fn": "SafeMath2.add",
      "offset": [
        3843,
        3874
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9578": {
      "fn": "SafeMath2.add",
      "offset": [
        3843,
        3874
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9579": {
      "fn": "SafeMath2.add",
      "offset": [
        3843,
        3874
      ],
      "op": "ADD",
      "path": "0"
    },
    "9580": {
      "op": "MSTORE"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "9583": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9585": {
      "op": "DUP3"
    },
    "9586": {
      "op": "ADD"
    },
    "9587": {
      "op": "MSTORE"
    },
    "9588": {
      "op": "PUSH12",
      "value": "0x416464206F766572666C6F77"
    },
    "9601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9603": {
      "op": "SHL"
    },
    "9604": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9606": {
      "op": "DUP3"
    },
    "9607": {
      "op": "ADD"
    },
    "9608": {
      "op": "MSTORE"
    },
    "9609": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9611": {
      "op": "ADD"
    },
    "9612": {
      "fn": "SafeMath2.add",
      "offset": [
        3843,
        3874
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "9615": {
      "op": "JUMP"
    },
    "9616": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        18887,
        20200
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9617": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19216,
        19231
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "9619": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19216,
        19231
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9620": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19201,
        19213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1B"
    },
    "9622": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19201,
        19213
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9623": {
      "branch": 190,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19201,
        19231
      ],
      "op": "GT",
      "path": "0"
    },
    "9624": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19201,
        19249
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9625": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19201,
        19249
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9626": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19201,
        19249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25A5"
    },
    "9629": {
      "branch": 190,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19201,
        19249
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9630": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19201,
        19249
      ],
      "op": "POP",
      "path": "0"
    },
    "9631": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19247,
        19249
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x27"
    },
    "9633": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19235,
        19244
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "9635": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19235,
        19244
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9636": {
      "branch": 191,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19235,
        19249
      ],
      "op": "LT",
      "path": "0"
    },
    "9637": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19201,
        19249
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9638": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19197,
        19341
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9639": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19197,
        19341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25D9"
    },
    "9642": {
      "branch": 191,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19197,
        19341
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9643": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19270,
        19279
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 128,
      "value": "0x12"
    },
    "9645": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19270,
        19279
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9646": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19270,
        19283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25B8"
    },
    "9649": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19270,
        19283
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9650": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19282,
        19283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "9652": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19270,
        19283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "9655": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19270,
        19283
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9656": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19270,
        19283
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9657": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19258,
        19267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "9659": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19258,
        19283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9660": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19258,
        19283
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9661": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19258,
        19283
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9662": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19303,
        19336
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 129,
      "value": "0x25D5"
    },
    "9665": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19303,
        19336
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9666": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19321,
        19335
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25CC"
    },
    "9669": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19321,
        19335
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9670": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19321,
        19322
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "9672": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19321,
        19335
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD0"
    },
    "9675": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19321,
        19335
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9676": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19321,
        19335
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9677": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19303,
        19315
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "9679": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19303,
        19315
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9680": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19303,
        19315
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9681": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19303,
        19320
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A3"
    },
    "9684": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19303,
        19336
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9685": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19303,
        19336
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9686": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19288,
        19300
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "9688": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19288,
        19336
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9689": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19197,
        19341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9690": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19513,
        19523
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 130,
      "value": "0xC"
    },
    "9692": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19513,
        19523
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9693": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19513,
        19530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25E7"
    },
    "9696": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19513,
        19530
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9697": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19528,
        19529
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "9699": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19513,
        19527
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2542"
    },
    "9702": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19513,
        19530
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9703": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19513,
        19530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9704": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19500,
        19510
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9706": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19500,
        19530
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9707": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19624,
        19648
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "9709": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19624,
        19648
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9710": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19624,
        19652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25F9"
    },
    "9713": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19624,
        19652
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9714": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19651,
        19652
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9716": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19651,
        19652
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9717": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19624,
        19652
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "9720": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19624,
        19652
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9721": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19624,
        19652
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9722": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19609,
        19619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9724": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19609,
        19619
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9725": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19608,
        19653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2606"
    },
    "9728": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19608,
        19653
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9729": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19608,
        19653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9730": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19608,
        19653
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C8"
    },
    "9733": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19608,
        19653
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9734": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19608,
        19653
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9735": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19605,
        20147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2725"
    },
    "9738": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19605,
        20147
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9739": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19667,
        19682
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 131,
      "value": "0x2612"
    },
    "9742": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19667,
        19680
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E90"
    },
    "9745": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19667,
        19682
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9746": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19667,
        19682
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9747": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19720,
        19757
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 132,
      "value": "0x2638"
    },
    "9750": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19742,
        19751
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x12"
    },
    "9752": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19742,
        19751
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9753": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19754,
        19755
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "9755": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19742,
        19755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2624"
    },
    "9758": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19742,
        19755
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9759": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19742,
        19755
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9760": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19742,
        19755
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "9763": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19742,
        19755
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9764": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19742,
        19755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9765": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19738,
        19756
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x262F"
    },
    "9768": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19738,
        19756
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9769": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19738,
        19739
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "9771": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19738,
        19756
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FD0"
    },
    "9774": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19738,
        19756
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9775": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19738,
        19756
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9776": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19720,
        19732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9778": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19720,
        19732
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9779": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19720,
        19732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9780": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19720,
        19736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A8"
    },
    "9783": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19720,
        19757
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9784": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19720,
        19757
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9785": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19705,
        19717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "9787": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19705,
        19717
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9788": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19705,
        19757
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2645"
    },
    "9791": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19705,
        19757
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9792": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19705,
        19757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9793": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19705,
        19757
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FFB"
    },
    "9796": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19705,
        19757
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9797": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19705,
        19757
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9798": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19687,
        19702
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x13"
    },
    "9800": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19687,
        19757
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9801": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19780,
        19804
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "9803": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19780,
        19804
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9804": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19767,
        19777
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC"
    },
    "9806": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19767,
        19777
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9807": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19767,
        19804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2658"
    },
    "9810": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19767,
        19804
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9811": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19780,
        19804
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9812": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19767,
        19804
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C8"
    },
    "9815": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19767,
        19804
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9816": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19767,
        19804
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9817": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19763,
        20143
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2725"
    },
    "9820": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19763,
        20143
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9821": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19876,
        19885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "9823": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19876,
        19885
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9824": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19832,
        19847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "9826": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19832,
        19847
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9827": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9829": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9830": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "9835": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9837": {
      "op": "SHL"
    },
    "9838": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9839": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9840": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19867,
        19871
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "9841": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "9843": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9844": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "ADD",
      "path": "0"
    },
    "9845": {
      "op": "MSTORE"
    },
    "9846": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19890,
        19895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E20"
    },
    "9849": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19890,
        19895
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "9850": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19876,
        19885
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9857": {
      "op": "SHL"
    },
    "9858": {
      "op": "SUB"
    },
    "9859": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19832,
        19847
      ],
      "op": "AND",
      "path": "0"
    },
    "9860": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19832,
        19847
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9861": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19858
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "9866": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19858
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9867": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9869": {
      "op": "ADD"
    },
    "9870": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "9872": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9874": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9875": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9876": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "DUP4",
      "path": "0"
    },
    "9877": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "SUB",
      "path": "0"
    },
    "9878": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9879": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "DUP7",
      "path": "0"
    },
    "9880": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "GAS",
      "path": "0"
    },
    "9881": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "9882": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9883": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9884": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9885": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26AA"
    },
    "9888": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9889": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9890": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9892": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9893": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "9894": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9895": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "9897": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "REVERT",
      "path": "0"
    },
    "9898": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9899": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "POP",
      "path": "0"
    },
    "9900": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "POP",
      "path": "0"
    },
    "9901": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "POP",
      "path": "0"
    },
    "9902": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "POP",
      "path": "0"
    },
    "9903": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9905": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "9906": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "9907": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9909": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "NOT",
      "path": "0"
    },
    "9910": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "9912": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9913": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "ADD",
      "path": "0"
    },
    "9914": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "AND",
      "path": "0"
    },
    "9915": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "DUP3",
      "path": "0"
    },
    "9916": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "ADD",
      "path": "0"
    },
    "9917": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "DUP1",
      "path": "0"
    },
    "9918": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "9920": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "9921": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "POP",
      "path": "0"
    },
    "9922": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "DUP2",
      "path": "0"
    },
    "9923": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "ADD",
      "path": "0"
    },
    "9924": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9925": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26CE"
    },
    "9928": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9929": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9930": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31DC"
    },
    "9933": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19825,
        19873
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9934": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19873
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9935": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26D8"
    },
    "9938": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19885
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "9939": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19885
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9940": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "9943": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19825,
        19885
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9944": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19825,
        19885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9945": {
      "branch": 192,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19823,
        19895
      ],
      "op": "GT",
      "path": "0"
    },
    "9946": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19820,
        20111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x270B"
    },
    "9949": {
      "branch": 192,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19820,
        20111
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9950": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19998,
        20007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1A"
    },
    "9952": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19998,
        20007
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9953": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19979,
        19988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "9955": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19979,
        19988
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9956": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19979,
        19995
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26EE"
    },
    "9959": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19979,
        19995
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9960": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19993,
        19994
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "9962": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19979,
        19992
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A8"
    },
    "9965": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        19979,
        19995
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9966": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19979,
        19995
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9967": {
      "branch": 193,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19979,
        20007
      ],
      "op": "GT",
      "path": "0"
    },
    "9968": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19976,
        20058
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "9969": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19976,
        20058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2706"
    },
    "9972": {
      "branch": 193,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19976,
        20058
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "9973": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20034,
        20043
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 133,
      "value": "0x19"
    },
    "9975": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20034,
        20043
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9976": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20034,
        20050
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2702"
    },
    "9979": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20034,
        20050
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "9980": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20048,
        20049
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "9982": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20034,
        20047
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A8"
    },
    "9985": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        20034,
        20050
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9986": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20034,
        20050
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9987": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20022,
        20031
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "9989": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20022,
        20050
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "9990": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19976,
        20058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9991": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19820,
        20111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x271D"
    },
    "9994": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19820,
        20111
      ],
      "op": "JUMP",
      "path": "0"
    },
    "9995": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19820,
        20111
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "9996": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20087,
        20096
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 134,
      "value": "0x19"
    },
    "9998": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20087,
        20096
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "9999": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20087,
        20104
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2719"
    },
    "10002": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20087,
        20104
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10003": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20102,
        20103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "10005": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20087,
        20101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A3"
    },
    "10008": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        20087,
        20104
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10009": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20087,
        20104
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10010": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20075,
        20084
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x19"
    },
    "10012": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20075,
        20104
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10013": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        19820,
        20111
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10014": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20116,
        20137
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 135,
      "value": "0x2725"
    },
    "10017": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20116,
        20135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2808"
    },
    "10020": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        20116,
        20137
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10021": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20116,
        20137
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10022": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20179,
        20195
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 136,
      "value": "0x2730"
    },
    "10025": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20194,
        20195
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "10027": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20179,
        20191
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "10028": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20179,
        20195
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FFB"
    },
    "10031": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        20179,
        20195
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10032": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20179,
        20195
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10033": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20169,
        20196
      ],
      "op": "BLOCKHASH",
      "path": "0"
    },
    "10034": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20151,
        20166
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x11"
    },
    "10036": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        20151,
        20196
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10037": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "o",
      "offset": [
        18887,
        20200
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10038": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4418,
        4642
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10039": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4481,
        4488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10041": {
      "branch": 194,
      "fn": "SafeMath2.divRound",
      "offset": [
        4508,
        4514
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 137
    },
    "10042": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4500,
        4530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2773"
    },
    "10045": {
      "branch": 194,
      "fn": "SafeMath2.divRound",
      "offset": [
        4500,
        4530
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10046": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4500,
        4530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10048": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4500,
        4530
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10049": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10053": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10055": {
      "op": "SHL"
    },
    "10056": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4500,
        4530
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10057": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4500,
        4530
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10058": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10060": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4500,
        4530
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10062": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4500,
        4530
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10063": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4500,
        4530
      ],
      "op": "ADD",
      "path": "0"
    },
    "10064": {
      "op": "MSTORE"
    },
    "10065": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10069": {
      "op": "DUP3"
    },
    "10070": {
      "op": "ADD"
    },
    "10071": {
      "op": "MSTORE"
    },
    "10072": {
      "op": "PUSH11",
      "value": "0x446976206279207A65726F"
    },
    "10084": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "10086": {
      "op": "SHL"
    },
    "10087": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10089": {
      "op": "DUP3"
    },
    "10090": {
      "op": "ADD"
    },
    "10091": {
      "op": "MSTORE"
    },
    "10092": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10094": {
      "op": "ADD"
    },
    "10095": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4500,
        4530
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "10098": {
      "op": "JUMP"
    },
    "10099": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4500,
        4530
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10100": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4540,
        4549
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10102": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4552,
        4557
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x277F"
    },
    "10105": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4556,
        4557
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10106": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4552,
        4553
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10107": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4552,
        4557
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "10110": {
      "fn": "SafeMath2.divRound",
      "jump": "i",
      "offset": [
        4552,
        4557
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10111": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4552,
        4557
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10112": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4540,
        4557
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10113": {
      "op": "POP"
    },
    "10114": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4571,
        4576
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x278B"
    },
    "10117": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4575,
        4576
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10118": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4571,
        4572
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10119": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4571,
        4576
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31C8"
    },
    "10122": {
      "fn": "SafeMath2.divRound",
      "jump": "i",
      "offset": [
        4571,
        4576
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10123": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4571,
        4576
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10124": {
      "branch": 195,
      "fn": "SafeMath2.divRound",
      "offset": [
        4571,
        4581
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10125": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4567,
        4617
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24EF"
    },
    "10128": {
      "branch": 195,
      "fn": "SafeMath2.divRound",
      "offset": [
        4567,
        4617
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10129": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4601,
        4606
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 138,
      "value": "0x279B"
    },
    "10132": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4601,
        4602
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10133": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4605,
        4606
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "10135": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4601,
        4606
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EA3"
    },
    "10138": {
      "fn": "SafeMath2.divRound",
      "jump": "i",
      "offset": [
        4601,
        4606
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10139": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4601,
        4606
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10140": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4597,
        4606
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "10141": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4418,
        4642
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "10142": {
      "op": "POP"
    },
    "10143": {
      "op": "POP"
    },
    "10144": {
      "op": "POP"
    },
    "10145": {
      "op": "POP"
    },
    "10146": {
      "fn": "SafeMath2.divRound",
      "jump": "o",
      "offset": [
        4418,
        4642
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10147": {
      "fn": "SafeMath2.mult",
      "offset": [
        4049,
        4270
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10148": {
      "fn": "SafeMath2.mult",
      "offset": [
        4108,
        4115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10150": {
      "branch": 196,
      "fn": "SafeMath2.mult",
      "offset": [
        4131,
        4137
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10151": {
      "fn": "SafeMath2.mult",
      "offset": [
        4127,
        4172
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27B2"
    },
    "10154": {
      "branch": 196,
      "fn": "SafeMath2.mult",
      "offset": [
        4127,
        4172
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10155": {
      "op": "POP"
    },
    "10156": {
      "fn": "SafeMath2.mult",
      "offset": [
        4160,
        4161
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 139,
      "value": "0x0"
    },
    "10158": {
      "fn": "SafeMath2.mult",
      "offset": [
        4153,
        4161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6B"
    },
    "10161": {
      "fn": "SafeMath2.mult",
      "offset": [
        4153,
        4161
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10162": {
      "fn": "SafeMath2.mult",
      "offset": [
        4127,
        4172
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10163": {
      "fn": "SafeMath2.mult",
      "offset": [
        4182,
        4191
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10165": {
      "fn": "SafeMath2.mult",
      "offset": [
        4194,
        4199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27BE"
    },
    "10168": {
      "fn": "SafeMath2.mult",
      "offset": [
        4198,
        4199
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10169": {
      "fn": "SafeMath2.mult",
      "offset": [
        4194,
        4195
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10170": {
      "fn": "SafeMath2.mult",
      "offset": [
        4194,
        4199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "10173": {
      "fn": "SafeMath2.mult",
      "jump": "i",
      "offset": [
        4194,
        4199
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10174": {
      "fn": "SafeMath2.mult",
      "offset": [
        4194,
        4199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10175": {
      "fn": "SafeMath2.mult",
      "offset": [
        4182,
        4199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10176": {
      "op": "POP"
    },
    "10177": {
      "fn": "SafeMath2.mult",
      "offset": [
        4226,
        4227
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 140
    },
    "10178": {
      "fn": "SafeMath2.mult",
      "offset": [
        4217,
        4222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27CB"
    },
    "10181": {
      "fn": "SafeMath2.mult",
      "offset": [
        4221,
        4222
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10182": {
      "fn": "SafeMath2.mult",
      "offset": [
        4182,
        4199
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10183": {
      "fn": "SafeMath2.mult",
      "offset": [
        4217,
        4222
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3028"
    },
    "10186": {
      "fn": "SafeMath2.mult",
      "jump": "i",
      "offset": [
        4217,
        4222
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10187": {
      "fn": "SafeMath2.mult",
      "offset": [
        4217,
        4222
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10188": {
      "branch": 197,
      "fn": "SafeMath2.mult",
      "offset": [
        4217,
        4227
      ],
      "op": "EQ",
      "path": "0"
    },
    "10189": {
      "fn": "SafeMath2.mult",
      "offset": [
        4209,
        4245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24EF"
    },
    "10192": {
      "branch": 197,
      "fn": "SafeMath2.mult",
      "offset": [
        4209,
        4245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10193": {
      "fn": "SafeMath2.mult",
      "offset": [
        4209,
        4245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "10195": {
      "fn": "SafeMath2.mult",
      "offset": [
        4209,
        4245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "10196": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "10200": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "10202": {
      "op": "SHL"
    },
    "10203": {
      "fn": "SafeMath2.mult",
      "offset": [
        4209,
        4245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10204": {
      "fn": "SafeMath2.mult",
      "offset": [
        4209,
        4245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "10205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10207": {
      "fn": "SafeMath2.mult",
      "offset": [
        4209,
        4245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "10209": {
      "fn": "SafeMath2.mult",
      "offset": [
        4209,
        4245
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10210": {
      "fn": "SafeMath2.mult",
      "offset": [
        4209,
        4245
      ],
      "op": "ADD",
      "path": "0"
    },
    "10211": {
      "op": "MSTORE"
    },
    "10212": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "10214": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10216": {
      "op": "DUP3"
    },
    "10217": {
      "op": "ADD"
    },
    "10218": {
      "op": "MSTORE"
    },
    "10219": {
      "op": "PUSH13",
      "value": "0x4D756C74206F766572666C6F77"
    },
    "10233": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "10235": {
      "op": "SHL"
    },
    "10236": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10238": {
      "op": "DUP3"
    },
    "10239": {
      "op": "ADD"
    },
    "10240": {
      "op": "MSTORE"
    },
    "10241": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "10243": {
      "op": "ADD"
    },
    "10244": {
      "fn": "SafeMath2.mult",
      "offset": [
        4209,
        4245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC6"
    },
    "10247": {
      "op": "JUMP"
    },
    "10248": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20204,
        21604
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10249": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20348,
        20378
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "10251": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20348,
        20378
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10252": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20271,
        20286
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "10253": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20271,
        20286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10254": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20248,
        20268
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10256": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20248,
        20268
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10257": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20333,
        20378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x281A"
    },
    "10260": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20333,
        20378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10261": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20271,
        20286
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10262": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20333,
        20378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FFB"
    },
    "10265": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        20333,
        20378
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10266": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20333,
        20378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10267": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20290,
        20378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10268": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20290,
        20378
      ],
      "op": "POP",
      "path": "0"
    },
    "10269": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20383,
        20407
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10271": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20424,
        20448
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD"
    },
    "10273": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20424,
        20448
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10274": {
      "offset": [
        5961,
        5968
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB40"
    },
    "10277": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20410,
        20448
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x282E"
    },
    "10280": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20410,
        20448
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10281": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20410,
        20448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10282": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20410,
        20448
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FDC"
    },
    "10285": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        20410,
        20448
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10286": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20410,
        20448
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10287": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20383,
        20448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10288": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20383,
        20448
      ],
      "op": "POP",
      "path": "0"
    },
    "10289": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20589,
        20608
      ],
      "op": "DUP1",
      "path": "0"
    },
    "10290": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20551,
        20586
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10291": {
      "branch": 198,
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20551,
        20608
      ],
      "op": "LT",
      "path": "0"
    },
    "10292": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20547,
        21311
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10293": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20547,
        21311
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28A3"
    },
    "10296": {
      "branch": 198,
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20547,
        21311
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10297": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20618,
        20639
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10299": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20642,
        20716
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2849"
    },
    "10302": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20679,
        20714
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10303": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20643,
        20672
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "10306": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20643,
        20662
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10307": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20668,
        20671
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "10309": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20643,
        20667
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A3"
    },
    "10312": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        20643,
        20672
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10313": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20642,
        20716
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10314": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20728,
        20729
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 141,
      "value": "0x1"
    },
    "10316": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20721,
        20725
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10318": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20721,
        20729
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10319": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20618,
        20716
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10320": {
      "op": "POP"
    },
    "10321": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20734,
        20761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10323": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20764,
        20809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2869"
    },
    "10326": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20804,
        20808
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E8"
    },
    "10329": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20764,
        20789
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2863"
    },
    "10332": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20618,
        20716
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10333": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20785,
        20788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "10335": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20764,
        20784
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F6"
    },
    "10338": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        20764,
        20789
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10339": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20764,
        20789
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10340": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20764,
        20803
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10341": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20764,
        20803
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2931"
    },
    "10344": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        20764,
        20809
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10345": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20764,
        20809
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10346": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20734,
        20809
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10347": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20734,
        20809
      ],
      "op": "POP",
      "path": "0"
    },
    "10348": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20850,
        20919
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 142,
      "value": "0x2898"
    },
    "10351": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20918
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x288F"
    },
    "10354": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20895,
        20917
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10355": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2889"
    },
    "10358": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20884,
        20888
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D0"
    },
    "10361": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20879
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "10363": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20879
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10364": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20883
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A8"
    },
    "10367": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20883
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10368": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20889
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10369": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10370": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20889
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "10375": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20889
      ],
      "op": "AND",
      "path": "0"
    },
    "10376": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        20867,
        20889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10377": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10378": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20894
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10379": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20894
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A3"
    },
    "10382": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        20867,
        20918
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10383": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20867,
        20918
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10384": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20850,
        20862
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "10386": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20850,
        20862
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10387": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20850,
        20862
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10388": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20850,
        20866
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F6"
    },
    "10391": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        20850,
        20919
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10392": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20850,
        20919
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10393": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20835,
        20847
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "10395": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20835,
        20919
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10396": {
      "op": "POP"
    },
    "10397": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20547,
        21311
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28FD"
    },
    "10400": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20547,
        21311
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10401": {
      "op": "POP"
    },
    "10402": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20547,
        21311
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10403": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20547,
        21311
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10404": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20951,
        20974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10406": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20977,
        21051
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28B4"
    },
    "10409": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21030,
        21049
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10410": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20978,
        21023
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC7D"
    },
    "10413": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20978,
        21013
      ],
      "op": "DUP6",
      "path": "0"
    },
    "10414": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21019,
        21022
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "10416": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20978,
        21018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A3"
    },
    "10419": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        20978,
        21023
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10420": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20977,
        21051
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10421": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21063,
        21064
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 143,
      "value": "0x2"
    },
    "10423": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21056,
        21060
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "10425": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21056,
        21064
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10426": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20951,
        21051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10427": {
      "op": "POP"
    },
    "10428": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21069,
        21098
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10430": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21101,
        21148
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28CE"
    },
    "10433": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21143,
        21147
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E8"
    },
    "10436": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21101,
        21128
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2863"
    },
    "10439": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20951,
        21051
      ],
      "op": "DUP5",
      "path": "0"
    },
    "10440": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21124,
        21127
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "10442": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21101,
        21123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24F6"
    },
    "10445": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        21101,
        21128
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10446": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21101,
        21148
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10447": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21069,
        21148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10448": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21069,
        21148
      ],
      "op": "POP",
      "path": "0"
    },
    "10449": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21216,
        21287
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 144,
      "value": "0x28F7"
    },
    "10452": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21233,
        21286
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28EE"
    },
    "10455": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21261,
        21285
      ],
      "op": "DUP3",
      "path": "0"
    },
    "10456": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21233,
        21255
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2889"
    },
    "10459": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21250,
        21254
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E8"
    },
    "10462": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21233,
        21245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "10464": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21233,
        21245
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10465": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21233,
        21249
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24A8"
    },
    "10468": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21233,
        21249
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10469": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21233,
        21255
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10470": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21233,
        21255
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10471": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21233,
        21255
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "10476": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21233,
        21255
      ],
      "op": "AND",
      "path": "0"
    },
    "10477": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        21233,
        21255
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10478": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21233,
        21286
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10479": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21216,
        21228
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "10481": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21216,
        21228
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10482": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21216,
        21228
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10483": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21216,
        21232
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2542"
    },
    "10486": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        21216,
        21287
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10487": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21216,
        21287
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10488": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21201,
        21213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "10490": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21201,
        21287
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10491": {
      "op": "POP"
    },
    "10492": {
      "op": "POP"
    },
    "10493": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20547,
        21311
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10494": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21315,
        21345
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 145,
      "value": "0xB"
    },
    "10496": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21315,
        21360
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10497": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21315,
        21360
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10498": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21315,
        21360
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10499": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21396,
        21408
      ],
      "op": "NUMBER",
      "path": "0",
      "statement": 146
    },
    "10500": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21364,
        21393
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x23"
    },
    "10502": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21364,
        21408
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10503": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21430,
        21445
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE"
    },
    "10505": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21430,
        21445
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10506": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21415,
        21427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "10508": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21415,
        21427
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10509": {
      "branch": 199,
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21415,
        21445
      ],
      "op": "LT",
      "path": "0"
    },
    "10510": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21412,
        21506
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10511": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21412,
        21506
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2919"
    },
    "10514": {
      "branch": 199,
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21412,
        21506
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10515": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21486,
        21501
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 147,
      "value": "0xE"
    },
    "10517": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21486,
        21501
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10518": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21471,
        21483
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "10520": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21471,
        21501
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10521": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21412,
        21506
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10522": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21527,
        21542
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "10524": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21527,
        21542
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10525": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21512,
        21524
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "10527": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21512,
        21524
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10528": {
      "branch": 200,
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21512,
        21542
      ],
      "op": "GT",
      "path": "0"
    },
    "10529": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21509,
        21598
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10530": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21509,
        21598
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x292C"
    },
    "10533": {
      "branch": 200,
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21509,
        21598
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10534": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21578,
        21593
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 148,
      "value": "0xF"
    },
    "10536": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21578,
        21593
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "10537": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21563,
        21575
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x10"
    },
    "10539": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21563,
        21593
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "10540": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        21509,
        21598
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10541": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20244,
        21604
      ],
      "op": "POP",
      "path": "0"
    },
    "10542": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20244,
        21604
      ],
      "op": "POP",
      "path": "0"
    },
    "10543": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        20244,
        21604
      ],
      "op": "POP",
      "path": "0"
    },
    "10544": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "o",
      "offset": [
        20204,
        21604
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10545": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4763,
        4889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10546": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4825,
        4831
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "10548": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4851,
        4852
      ],
      "op": "DUP2",
      "path": "0"
    },
    "10549": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4847,
        4848
      ],
      "op": "DUP4",
      "path": "0"
    },
    "10550": {
      "branch": 201,
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4847,
        4852
      ],
      "op": "GT",
      "path": "0"
    },
    "10551": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4844,
        4862
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "10552": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4844,
        4862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2942"
    },
    "10555": {
      "branch": 201,
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4844,
        4862
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "10556": {
      "op": "POP"
    },
    "10557": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4861,
        4862
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 149
    },
    "10558": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4854,
        4862
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA6B"
    },
    "10561": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4854,
        4862
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10562": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4844,
        4862
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "10563": {
      "op": "POP"
    },
    "10564": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4880,
        4881
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 150
    },
    "10565": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4880,
        4881
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "10566": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4763,
        4889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "10567": {
      "op": "POP"
    },
    "10568": {
      "fn": "ExtendedMath2.limitLessThan",
      "jump": "o",
      "offset": [
        4763,
        4889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "10569": {
      "op": "JUMPDEST"
    },
    "10570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10572": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10574": {
      "op": "DUP1"
    },
    "10575": {
      "op": "DUP4"
    },
    "10576": {
      "op": "MSTORE"
    },
    "10577": {
      "op": "DUP4"
    },
    "10578": {
      "op": "MLOAD"
    },
    "10579": {
      "op": "DUP1"
    },
    "10580": {
      "op": "DUP3"
    },
    "10581": {
      "op": "DUP6"
    },
    "10582": {
      "op": "ADD"
    },
    "10583": {
      "op": "MSTORE"
    },
    "10584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10586": {
      "op": "JUMPDEST"
    },
    "10587": {
      "op": "DUP2"
    },
    "10588": {
      "op": "DUP2"
    },
    "10589": {
      "op": "LT"
    },
    "10590": {
      "op": "ISZERO"
    },
    "10591": {
      "op": "PUSH2",
      "value": "0x2976"
    },
    "10594": {
      "op": "JUMPI"
    },
    "10595": {
      "op": "DUP6"
    },
    "10596": {
      "op": "DUP2"
    },
    "10597": {
      "op": "ADD"
    },
    "10598": {
      "op": "DUP4"
    },
    "10599": {
      "op": "ADD"
    },
    "10600": {
      "op": "MLOAD"
    },
    "10601": {
      "op": "DUP6"
    },
    "10602": {
      "op": "DUP3"
    },
    "10603": {
      "op": "ADD"
    },
    "10604": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10606": {
      "op": "ADD"
    },
    "10607": {
      "op": "MSTORE"
    },
    "10608": {
      "op": "DUP3"
    },
    "10609": {
      "op": "ADD"
    },
    "10610": {
      "op": "PUSH2",
      "value": "0x295A"
    },
    "10613": {
      "op": "JUMP"
    },
    "10614": {
      "op": "JUMPDEST"
    },
    "10615": {
      "op": "DUP2"
    },
    "10616": {
      "op": "DUP2"
    },
    "10617": {
      "op": "GT"
    },
    "10618": {
      "op": "ISZERO"
    },
    "10619": {
      "op": "PUSH2",
      "value": "0x2988"
    },
    "10622": {
      "op": "JUMPI"
    },
    "10623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10625": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10627": {
      "op": "DUP4"
    },
    "10628": {
      "op": "DUP8"
    },
    "10629": {
      "op": "ADD"
    },
    "10630": {
      "op": "ADD"
    },
    "10631": {
      "op": "MSTORE"
    },
    "10632": {
      "op": "JUMPDEST"
    },
    "10633": {
      "op": "POP"
    },
    "10634": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10636": {
      "op": "ADD"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10639": {
      "op": "NOT"
    },
    "10640": {
      "op": "AND"
    },
    "10641": {
      "op": "SWAP3"
    },
    "10642": {
      "op": "SWAP1"
    },
    "10643": {
      "op": "SWAP3"
    },
    "10644": {
      "op": "ADD"
    },
    "10645": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10647": {
      "op": "ADD"
    },
    "10648": {
      "op": "SWAP4"
    },
    "10649": {
      "op": "SWAP3"
    },
    "10650": {
      "op": "POP"
    },
    "10651": {
      "op": "POP"
    },
    "10652": {
      "op": "POP"
    },
    "10653": {
      "jump": "o",
      "op": "JUMP"
    },
    "10654": {
      "op": "JUMPDEST"
    },
    "10655": {
      "op": "DUP1"
    },
    "10656": {
      "op": "CALLDATALOAD"
    },
    "10657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10663": {
      "op": "SHL"
    },
    "10664": {
      "op": "SUB"
    },
    "10665": {
      "op": "DUP2"
    },
    "10666": {
      "op": "AND"
    },
    "10667": {
      "op": "DUP2"
    },
    "10668": {
      "op": "EQ"
    },
    "10669": {
      "op": "PUSH2",
      "value": "0x29B5"
    },
    "10672": {
      "op": "JUMPI"
    },
    "10673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10675": {
      "op": "DUP1"
    },
    "10676": {
      "op": "REVERT"
    },
    "10677": {
      "op": "JUMPDEST"
    },
    "10678": {
      "op": "SWAP2"
    },
    "10679": {
      "op": "SWAP1"
    },
    "10680": {
      "op": "POP"
    },
    "10681": {
      "jump": "o",
      "op": "JUMP"
    },
    "10682": {
      "op": "JUMPDEST"
    },
    "10683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10685": {
      "op": "DUP1"
    },
    "10686": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10688": {
      "op": "DUP4"
    },
    "10689": {
      "op": "DUP6"
    },
    "10690": {
      "op": "SUB"
    },
    "10691": {
      "op": "SLT"
    },
    "10692": {
      "op": "ISZERO"
    },
    "10693": {
      "op": "PUSH2",
      "value": "0x29CD"
    },
    "10696": {
      "op": "JUMPI"
    },
    "10697": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10699": {
      "op": "DUP1"
    },
    "10700": {
      "op": "REVERT"
    },
    "10701": {
      "op": "JUMPDEST"
    },
    "10702": {
      "op": "PUSH2",
      "value": "0x29D6"
    },
    "10705": {
      "op": "DUP4"
    },
    "10706": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "10709": {
      "jump": "i",
      "op": "JUMP"
    },
    "10710": {
      "op": "JUMPDEST"
    },
    "10711": {
      "op": "SWAP5"
    },
    "10712": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10714": {
      "op": "SWAP4"
    },
    "10715": {
      "op": "SWAP1"
    },
    "10716": {
      "op": "SWAP4"
    },
    "10717": {
      "op": "ADD"
    },
    "10718": {
      "op": "CALLDATALOAD"
    },
    "10719": {
      "op": "SWAP4"
    },
    "10720": {
      "op": "POP"
    },
    "10721": {
      "op": "POP"
    },
    "10722": {
      "op": "POP"
    },
    "10723": {
      "jump": "o",
      "op": "JUMP"
    },
    "10724": {
      "op": "JUMPDEST"
    },
    "10725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10727": {
      "op": "DUP1"
    },
    "10728": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10730": {
      "op": "DUP4"
    },
    "10731": {
      "op": "DUP6"
    },
    "10732": {
      "op": "SUB"
    },
    "10733": {
      "op": "SLT"
    },
    "10734": {
      "op": "ISZERO"
    },
    "10735": {
      "op": "PUSH2",
      "value": "0x29F7"
    },
    "10738": {
      "op": "JUMPI"
    },
    "10739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10741": {
      "op": "DUP1"
    },
    "10742": {
      "op": "REVERT"
    },
    "10743": {
      "op": "JUMPDEST"
    },
    "10744": {
      "op": "POP"
    },
    "10745": {
      "op": "POP"
    },
    "10746": {
      "op": "DUP1"
    },
    "10747": {
      "op": "CALLDATALOAD"
    },
    "10748": {
      "op": "SWAP3"
    },
    "10749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10751": {
      "op": "SWAP1"
    },
    "10752": {
      "op": "SWAP2"
    },
    "10753": {
      "op": "ADD"
    },
    "10754": {
      "op": "CALLDATALOAD"
    },
    "10755": {
      "op": "SWAP2"
    },
    "10756": {
      "op": "POP"
    },
    "10757": {
      "jump": "o",
      "op": "JUMP"
    },
    "10758": {
      "op": "JUMPDEST"
    },
    "10759": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10764": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10766": {
      "op": "SHL"
    },
    "10767": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10769": {
      "op": "MSTORE"
    },
    "10770": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "10772": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10774": {
      "op": "MSTORE"
    },
    "10775": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10779": {
      "op": "REVERT"
    },
    "10780": {
      "op": "JUMPDEST"
    },
    "10781": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10783": {
      "op": "MLOAD"
    },
    "10784": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10786": {
      "op": "DUP3"
    },
    "10787": {
      "op": "ADD"
    },
    "10788": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10790": {
      "op": "NOT"
    },
    "10791": {
      "op": "AND"
    },
    "10792": {
      "op": "DUP2"
    },
    "10793": {
      "op": "ADD"
    },
    "10794": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10803": {
      "op": "DUP2"
    },
    "10804": {
      "op": "GT"
    },
    "10805": {
      "op": "DUP3"
    },
    "10806": {
      "op": "DUP3"
    },
    "10807": {
      "op": "LT"
    },
    "10808": {
      "op": "OR"
    },
    "10809": {
      "op": "ISZERO"
    },
    "10810": {
      "op": "PUSH2",
      "value": "0x2A45"
    },
    "10813": {
      "op": "JUMPI"
    },
    "10814": {
      "op": "PUSH2",
      "value": "0x2A45"
    },
    "10817": {
      "op": "PUSH2",
      "value": "0x2A06"
    },
    "10820": {
      "jump": "i",
      "op": "JUMP"
    },
    "10821": {
      "op": "JUMPDEST"
    },
    "10822": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10824": {
      "op": "MSTORE"
    },
    "10825": {
      "op": "SWAP2"
    },
    "10826": {
      "op": "SWAP1"
    },
    "10827": {
      "op": "POP"
    },
    "10828": {
      "jump": "o",
      "op": "JUMP"
    },
    "10829": {
      "op": "JUMPDEST"
    },
    "10830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10832": {
      "op": "DUP3"
    },
    "10833": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10835": {
      "op": "DUP4"
    },
    "10836": {
      "op": "ADD"
    },
    "10837": {
      "op": "SLT"
    },
    "10838": {
      "op": "PUSH2",
      "value": "0x2A5E"
    },
    "10841": {
      "op": "JUMPI"
    },
    "10842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10844": {
      "op": "DUP1"
    },
    "10845": {
      "op": "REVERT"
    },
    "10846": {
      "op": "JUMPDEST"
    },
    "10847": {
      "op": "DUP2"
    },
    "10848": {
      "op": "CALLDATALOAD"
    },
    "10849": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10851": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10860": {
      "op": "DUP3"
    },
    "10861": {
      "op": "GT"
    },
    "10862": {
      "op": "ISZERO"
    },
    "10863": {
      "op": "PUSH2",
      "value": "0x2A7A"
    },
    "10866": {
      "op": "JUMPI"
    },
    "10867": {
      "op": "PUSH2",
      "value": "0x2A7A"
    },
    "10870": {
      "op": "PUSH2",
      "value": "0x2A06"
    },
    "10873": {
      "jump": "i",
      "op": "JUMP"
    },
    "10874": {
      "op": "JUMPDEST"
    },
    "10875": {
      "op": "DUP2"
    },
    "10876": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "10878": {
      "op": "SHL"
    },
    "10879": {
      "op": "PUSH2",
      "value": "0x2A89"
    },
    "10882": {
      "op": "DUP3"
    },
    "10883": {
      "op": "DUP3"
    },
    "10884": {
      "op": "ADD"
    },
    "10885": {
      "op": "PUSH2",
      "value": "0x2A1C"
    },
    "10888": {
      "jump": "i",
      "op": "JUMP"
    },
    "10889": {
      "op": "JUMPDEST"
    },
    "10890": {
      "op": "SWAP3"
    },
    "10891": {
      "op": "DUP4"
    },
    "10892": {
      "op": "MSTORE"
    },
    "10893": {
      "op": "DUP5"
    },
    "10894": {
      "op": "DUP2"
    },
    "10895": {
      "op": "ADD"
    },
    "10896": {
      "op": "DUP3"
    },
    "10897": {
      "op": "ADD"
    },
    "10898": {
      "op": "SWAP3"
    },
    "10899": {
      "op": "DUP3"
    },
    "10900": {
      "op": "DUP2"
    },
    "10901": {
      "op": "ADD"
    },
    "10902": {
      "op": "SWAP1"
    },
    "10903": {
      "op": "DUP8"
    },
    "10904": {
      "op": "DUP6"
    },
    "10905": {
      "op": "GT"
    },
    "10906": {
      "op": "ISZERO"
    },
    "10907": {
      "op": "PUSH2",
      "value": "0x2AA3"
    },
    "10910": {
      "op": "JUMPI"
    },
    "10911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10913": {
      "op": "DUP1"
    },
    "10914": {
      "op": "REVERT"
    },
    "10915": {
      "op": "JUMPDEST"
    },
    "10916": {
      "op": "DUP4"
    },
    "10917": {
      "op": "DUP8"
    },
    "10918": {
      "op": "ADD"
    },
    "10919": {
      "op": "SWAP3"
    },
    "10920": {
      "op": "POP"
    },
    "10921": {
      "op": "JUMPDEST"
    },
    "10922": {
      "op": "DUP5"
    },
    "10923": {
      "op": "DUP4"
    },
    "10924": {
      "op": "LT"
    },
    "10925": {
      "op": "ISZERO"
    },
    "10926": {
      "op": "PUSH2",
      "value": "0x2AC9"
    },
    "10929": {
      "op": "JUMPI"
    },
    "10930": {
      "op": "PUSH2",
      "value": "0x2ABA"
    },
    "10933": {
      "op": "DUP4"
    },
    "10934": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "10937": {
      "jump": "i",
      "op": "JUMP"
    },
    "10938": {
      "op": "JUMPDEST"
    },
    "10939": {
      "op": "DUP3"
    },
    "10940": {
      "op": "MSTORE"
    },
    "10941": {
      "op": "SWAP2"
    },
    "10942": {
      "op": "DUP4"
    },
    "10943": {
      "op": "ADD"
    },
    "10944": {
      "op": "SWAP2"
    },
    "10945": {
      "op": "SWAP1"
    },
    "10946": {
      "op": "DUP4"
    },
    "10947": {
      "op": "ADD"
    },
    "10948": {
      "op": "SWAP1"
    },
    "10949": {
      "op": "PUSH2",
      "value": "0x2AA9"
    },
    "10952": {
      "op": "JUMP"
    },
    "10953": {
      "op": "JUMPDEST"
    },
    "10954": {
      "op": "SWAP8"
    },
    "10955": {
      "op": "SWAP7"
    },
    "10956": {
      "op": "POP"
    },
    "10957": {
      "op": "POP"
    },
    "10958": {
      "op": "POP"
    },
    "10959": {
      "op": "POP"
    },
    "10960": {
      "op": "POP"
    },
    "10961": {
      "op": "POP"
    },
    "10962": {
      "op": "POP"
    },
    "10963": {
      "jump": "o",
      "op": "JUMP"
    },
    "10964": {
      "op": "JUMPDEST"
    },
    "10965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10967": {
      "op": "DUP1"
    },
    "10968": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10970": {
      "op": "DUP1"
    },
    "10971": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10973": {
      "op": "DUP6"
    },
    "10974": {
      "op": "DUP8"
    },
    "10975": {
      "op": "SUB"
    },
    "10976": {
      "op": "SLT"
    },
    "10977": {
      "op": "ISZERO"
    },
    "10978": {
      "op": "PUSH2",
      "value": "0x2AEA"
    },
    "10981": {
      "op": "JUMPI"
    },
    "10982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10984": {
      "op": "DUP1"
    },
    "10985": {
      "op": "REVERT"
    },
    "10986": {
      "op": "JUMPDEST"
    },
    "10987": {
      "op": "DUP5"
    },
    "10988": {
      "op": "CALLDATALOAD"
    },
    "10989": {
      "op": "SWAP4"
    },
    "10990": {
      "op": "POP"
    },
    "10991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10993": {
      "op": "DUP6"
    },
    "10994": {
      "op": "ADD"
    },
    "10995": {
      "op": "CALLDATALOAD"
    },
    "10996": {
      "op": "SWAP3"
    },
    "10997": {
      "op": "POP"
    },
    "10998": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11000": {
      "op": "DUP6"
    },
    "11001": {
      "op": "ADD"
    },
    "11002": {
      "op": "CALLDATALOAD"
    },
    "11003": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11012": {
      "op": "DUP2"
    },
    "11013": {
      "op": "GT"
    },
    "11014": {
      "op": "ISZERO"
    },
    "11015": {
      "op": "PUSH2",
      "value": "0x2B0F"
    },
    "11018": {
      "op": "JUMPI"
    },
    "11019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11021": {
      "op": "DUP1"
    },
    "11022": {
      "op": "REVERT"
    },
    "11023": {
      "op": "JUMPDEST"
    },
    "11024": {
      "op": "PUSH2",
      "value": "0x2B1B"
    },
    "11027": {
      "op": "DUP8"
    },
    "11028": {
      "op": "DUP3"
    },
    "11029": {
      "op": "DUP9"
    },
    "11030": {
      "op": "ADD"
    },
    "11031": {
      "op": "PUSH2",
      "value": "0x2A4D"
    },
    "11034": {
      "jump": "i",
      "op": "JUMP"
    },
    "11035": {
      "op": "JUMPDEST"
    },
    "11036": {
      "op": "SWAP3"
    },
    "11037": {
      "op": "POP"
    },
    "11038": {
      "op": "POP"
    },
    "11039": {
      "op": "PUSH2",
      "value": "0x2B2A"
    },
    "11042": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11044": {
      "op": "DUP7"
    },
    "11045": {
      "op": "ADD"
    },
    "11046": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "11049": {
      "jump": "i",
      "op": "JUMP"
    },
    "11050": {
      "op": "JUMPDEST"
    },
    "11051": {
      "op": "SWAP1"
    },
    "11052": {
      "op": "POP"
    },
    "11053": {
      "op": "SWAP3"
    },
    "11054": {
      "op": "SWAP6"
    },
    "11055": {
      "op": "SWAP2"
    },
    "11056": {
      "op": "SWAP5"
    },
    "11057": {
      "op": "POP"
    },
    "11058": {
      "op": "SWAP3"
    },
    "11059": {
      "op": "POP"
    },
    "11060": {
      "jump": "o",
      "op": "JUMP"
    },
    "11061": {
      "op": "JUMPDEST"
    },
    "11062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11064": {
      "op": "DUP1"
    },
    "11065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11067": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11069": {
      "op": "DUP5"
    },
    "11070": {
      "op": "DUP7"
    },
    "11071": {
      "op": "SUB"
    },
    "11072": {
      "op": "SLT"
    },
    "11073": {
      "op": "ISZERO"
    },
    "11074": {
      "op": "PUSH2",
      "value": "0x2B4A"
    },
    "11077": {
      "op": "JUMPI"
    },
    "11078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11080": {
      "op": "DUP1"
    },
    "11081": {
      "op": "REVERT"
    },
    "11082": {
      "op": "JUMPDEST"
    },
    "11083": {
      "op": "PUSH2",
      "value": "0x2B53"
    },
    "11086": {
      "op": "DUP5"
    },
    "11087": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "11090": {
      "jump": "i",
      "op": "JUMP"
    },
    "11091": {
      "op": "JUMPDEST"
    },
    "11092": {
      "op": "SWAP3"
    },
    "11093": {
      "op": "POP"
    },
    "11094": {
      "op": "PUSH2",
      "value": "0x2B61"
    },
    "11097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11099": {
      "op": "DUP6"
    },
    "11100": {
      "op": "ADD"
    },
    "11101": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "11104": {
      "jump": "i",
      "op": "JUMP"
    },
    "11105": {
      "op": "JUMPDEST"
    },
    "11106": {
      "op": "SWAP2"
    },
    "11107": {
      "op": "POP"
    },
    "11108": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11110": {
      "op": "DUP5"
    },
    "11111": {
      "op": "ADD"
    },
    "11112": {
      "op": "CALLDATALOAD"
    },
    "11113": {
      "op": "SWAP1"
    },
    "11114": {
      "op": "POP"
    },
    "11115": {
      "op": "SWAP3"
    },
    "11116": {
      "op": "POP"
    },
    "11117": {
      "op": "SWAP3"
    },
    "11118": {
      "op": "POP"
    },
    "11119": {
      "op": "SWAP3"
    },
    "11120": {
      "jump": "o",
      "op": "JUMP"
    },
    "11121": {
      "op": "JUMPDEST"
    },
    "11122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11124": {
      "op": "DUP1"
    },
    "11125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11127": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11129": {
      "op": "DUP5"
    },
    "11130": {
      "op": "DUP7"
    },
    "11131": {
      "op": "SUB"
    },
    "11132": {
      "op": "SLT"
    },
    "11133": {
      "op": "ISZERO"
    },
    "11134": {
      "op": "PUSH2",
      "value": "0x2B86"
    },
    "11137": {
      "op": "JUMPI"
    },
    "11138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11140": {
      "op": "DUP1"
    },
    "11141": {
      "op": "REVERT"
    },
    "11142": {
      "op": "JUMPDEST"
    },
    "11143": {
      "op": "PUSH2",
      "value": "0x2B8F"
    },
    "11146": {
      "op": "DUP5"
    },
    "11147": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "11150": {
      "jump": "i",
      "op": "JUMP"
    },
    "11151": {
      "op": "JUMPDEST"
    },
    "11152": {
      "op": "SWAP3"
    },
    "11153": {
      "op": "POP"
    },
    "11154": {
      "op": "PUSH2",
      "value": "0x2B9D"
    },
    "11157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11159": {
      "op": "DUP6"
    },
    "11160": {
      "op": "ADD"
    },
    "11161": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "11164": {
      "jump": "i",
      "op": "JUMP"
    },
    "11165": {
      "op": "JUMPDEST"
    },
    "11166": {
      "op": "SWAP2"
    },
    "11167": {
      "op": "POP"
    },
    "11168": {
      "op": "PUSH2",
      "value": "0x2BAB"
    },
    "11171": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11173": {
      "op": "DUP6"
    },
    "11174": {
      "op": "ADD"
    },
    "11175": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "11178": {
      "jump": "i",
      "op": "JUMP"
    },
    "11179": {
      "op": "JUMPDEST"
    },
    "11180": {
      "op": "SWAP1"
    },
    "11181": {
      "op": "POP"
    },
    "11182": {
      "op": "SWAP3"
    },
    "11183": {
      "op": "POP"
    },
    "11184": {
      "op": "SWAP3"
    },
    "11185": {
      "op": "POP"
    },
    "11186": {
      "op": "SWAP3"
    },
    "11187": {
      "jump": "o",
      "op": "JUMP"
    },
    "11188": {
      "op": "JUMPDEST"
    },
    "11189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11191": {
      "op": "DUP1"
    },
    "11192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11194": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11196": {
      "op": "DUP5"
    },
    "11197": {
      "op": "DUP7"
    },
    "11198": {
      "op": "SUB"
    },
    "11199": {
      "op": "SLT"
    },
    "11200": {
      "op": "ISZERO"
    },
    "11201": {
      "op": "PUSH2",
      "value": "0x2BC9"
    },
    "11204": {
      "op": "JUMPI"
    },
    "11205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11207": {
      "op": "DUP1"
    },
    "11208": {
      "op": "REVERT"
    },
    "11209": {
      "op": "JUMPDEST"
    },
    "11210": {
      "op": "POP"
    },
    "11211": {
      "op": "POP"
    },
    "11212": {
      "op": "DUP2"
    },
    "11213": {
      "op": "CALLDATALOAD"
    },
    "11214": {
      "op": "SWAP4"
    },
    "11215": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11217": {
      "op": "DUP4"
    },
    "11218": {
      "op": "ADD"
    },
    "11219": {
      "op": "CALLDATALOAD"
    },
    "11220": {
      "op": "SWAP4"
    },
    "11221": {
      "op": "POP"
    },
    "11222": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11224": {
      "op": "SWAP1"
    },
    "11225": {
      "op": "SWAP3"
    },
    "11226": {
      "op": "ADD"
    },
    "11227": {
      "op": "CALLDATALOAD"
    },
    "11228": {
      "op": "SWAP2"
    },
    "11229": {
      "op": "SWAP1"
    },
    "11230": {
      "op": "POP"
    },
    "11231": {
      "jump": "o",
      "op": "JUMP"
    },
    "11232": {
      "op": "JUMPDEST"
    },
    "11233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11237": {
      "op": "DUP3"
    },
    "11238": {
      "op": "DUP5"
    },
    "11239": {
      "op": "SUB"
    },
    "11240": {
      "op": "SLT"
    },
    "11241": {
      "op": "ISZERO"
    },
    "11242": {
      "op": "PUSH2",
      "value": "0x2BF2"
    },
    "11245": {
      "op": "JUMPI"
    },
    "11246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11248": {
      "op": "DUP1"
    },
    "11249": {
      "op": "REVERT"
    },
    "11250": {
      "op": "JUMPDEST"
    },
    "11251": {
      "op": "PUSH2",
      "value": "0x24EF"
    },
    "11254": {
      "op": "DUP3"
    },
    "11255": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "11258": {
      "jump": "i",
      "op": "JUMP"
    },
    "11259": {
      "op": "JUMPDEST"
    },
    "11260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11262": {
      "op": "DUP1"
    },
    "11263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11265": {
      "op": "DUP1"
    },
    "11266": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11268": {
      "op": "DUP6"
    },
    "11269": {
      "op": "DUP8"
    },
    "11270": {
      "op": "SUB"
    },
    "11271": {
      "op": "SLT"
    },
    "11272": {
      "op": "ISZERO"
    },
    "11273": {
      "op": "PUSH2",
      "value": "0x2C11"
    },
    "11276": {
      "op": "JUMPI"
    },
    "11277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11279": {
      "op": "DUP1"
    },
    "11280": {
      "op": "REVERT"
    },
    "11281": {
      "op": "JUMPDEST"
    },
    "11282": {
      "op": "POP"
    },
    "11283": {
      "op": "POP"
    },
    "11284": {
      "op": "DUP3"
    },
    "11285": {
      "op": "CALLDATALOAD"
    },
    "11286": {
      "op": "SWAP5"
    },
    "11287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11289": {
      "op": "DUP5"
    },
    "11290": {
      "op": "ADD"
    },
    "11291": {
      "op": "CALLDATALOAD"
    },
    "11292": {
      "op": "SWAP5"
    },
    "11293": {
      "op": "POP"
    },
    "11294": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11296": {
      "op": "DUP5"
    },
    "11297": {
      "op": "ADD"
    },
    "11298": {
      "op": "CALLDATALOAD"
    },
    "11299": {
      "op": "SWAP4"
    },
    "11300": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11302": {
      "op": "ADD"
    },
    "11303": {
      "op": "CALLDATALOAD"
    },
    "11304": {
      "op": "SWAP3"
    },
    "11305": {
      "op": "POP"
    },
    "11306": {
      "op": "SWAP1"
    },
    "11307": {
      "op": "POP"
    },
    "11308": {
      "jump": "o",
      "op": "JUMP"
    },
    "11309": {
      "op": "JUMPDEST"
    },
    "11310": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11312": {
      "op": "DUP1"
    },
    "11313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11315": {
      "op": "DUP1"
    },
    "11316": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11318": {
      "op": "DUP6"
    },
    "11319": {
      "op": "DUP8"
    },
    "11320": {
      "op": "SUB"
    },
    "11321": {
      "op": "SLT"
    },
    "11322": {
      "op": "ISZERO"
    },
    "11323": {
      "op": "PUSH2",
      "value": "0x2C43"
    },
    "11326": {
      "op": "JUMPI"
    },
    "11327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11329": {
      "op": "DUP1"
    },
    "11330": {
      "op": "REVERT"
    },
    "11331": {
      "op": "JUMPDEST"
    },
    "11332": {
      "op": "PUSH2",
      "value": "0x2C4C"
    },
    "11335": {
      "op": "DUP6"
    },
    "11336": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "11339": {
      "jump": "i",
      "op": "JUMP"
    },
    "11340": {
      "op": "JUMPDEST"
    },
    "11341": {
      "op": "SWAP4"
    },
    "11342": {
      "op": "POP"
    },
    "11343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11345": {
      "op": "DUP1"
    },
    "11346": {
      "op": "DUP7"
    },
    "11347": {
      "op": "ADD"
    },
    "11348": {
      "op": "CALLDATALOAD"
    },
    "11349": {
      "op": "SWAP4"
    },
    "11350": {
      "op": "POP"
    },
    "11351": {
      "op": "PUSH2",
      "value": "0x2C62"
    },
    "11354": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11356": {
      "op": "DUP8"
    },
    "11357": {
      "op": "ADD"
    },
    "11358": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "11361": {
      "jump": "i",
      "op": "JUMP"
    },
    "11362": {
      "op": "JUMPDEST"
    },
    "11363": {
      "op": "SWAP3"
    },
    "11364": {
      "op": "POP"
    },
    "11365": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11367": {
      "op": "DUP7"
    },
    "11368": {
      "op": "ADD"
    },
    "11369": {
      "op": "CALLDATALOAD"
    },
    "11370": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11379": {
      "op": "DUP1"
    },
    "11380": {
      "op": "DUP3"
    },
    "11381": {
      "op": "GT"
    },
    "11382": {
      "op": "ISZERO"
    },
    "11383": {
      "op": "PUSH2",
      "value": "0x2C7F"
    },
    "11386": {
      "op": "JUMPI"
    },
    "11387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11389": {
      "op": "DUP1"
    },
    "11390": {
      "op": "REVERT"
    },
    "11391": {
      "op": "JUMPDEST"
    },
    "11392": {
      "op": "DUP2"
    },
    "11393": {
      "op": "DUP9"
    },
    "11394": {
      "op": "ADD"
    },
    "11395": {
      "op": "SWAP2"
    },
    "11396": {
      "op": "POP"
    },
    "11397": {
      "op": "DUP9"
    },
    "11398": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11400": {
      "op": "DUP4"
    },
    "11401": {
      "op": "ADD"
    },
    "11402": {
      "op": "SLT"
    },
    "11403": {
      "op": "PUSH2",
      "value": "0x2C93"
    },
    "11406": {
      "op": "JUMPI"
    },
    "11407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11409": {
      "op": "DUP1"
    },
    "11410": {
      "op": "REVERT"
    },
    "11411": {
      "op": "JUMPDEST"
    },
    "11412": {
      "op": "DUP2"
    },
    "11413": {
      "op": "CALLDATALOAD"
    },
    "11414": {
      "op": "DUP2"
    },
    "11415": {
      "op": "DUP2"
    },
    "11416": {
      "op": "GT"
    },
    "11417": {
      "op": "ISZERO"
    },
    "11418": {
      "op": "PUSH2",
      "value": "0x2CA5"
    },
    "11421": {
      "op": "JUMPI"
    },
    "11422": {
      "op": "PUSH2",
      "value": "0x2CA5"
    },
    "11425": {
      "op": "PUSH2",
      "value": "0x2A06"
    },
    "11428": {
      "jump": "i",
      "op": "JUMP"
    },
    "11429": {
      "op": "JUMPDEST"
    },
    "11430": {
      "op": "PUSH2",
      "value": "0x2CB7"
    },
    "11433": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11435": {
      "op": "DUP3"
    },
    "11436": {
      "op": "ADD"
    },
    "11437": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11439": {
      "op": "NOT"
    },
    "11440": {
      "op": "AND"
    },
    "11441": {
      "op": "DUP6"
    },
    "11442": {
      "op": "ADD"
    },
    "11443": {
      "op": "PUSH2",
      "value": "0x2A1C"
    },
    "11446": {
      "jump": "i",
      "op": "JUMP"
    },
    "11447": {
      "op": "JUMPDEST"
    },
    "11448": {
      "op": "SWAP2"
    },
    "11449": {
      "op": "POP"
    },
    "11450": {
      "op": "DUP1"
    },
    "11451": {
      "op": "DUP3"
    },
    "11452": {
      "op": "MSTORE"
    },
    "11453": {
      "op": "DUP10"
    },
    "11454": {
      "op": "DUP5"
    },
    "11455": {
      "op": "DUP3"
    },
    "11456": {
      "op": "DUP6"
    },
    "11457": {
      "op": "ADD"
    },
    "11458": {
      "op": "ADD"
    },
    "11459": {
      "op": "GT"
    },
    "11460": {
      "op": "ISZERO"
    },
    "11461": {
      "op": "PUSH2",
      "value": "0x2CCD"
    },
    "11464": {
      "op": "JUMPI"
    },
    "11465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11467": {
      "op": "DUP1"
    },
    "11468": {
      "op": "REVERT"
    },
    "11469": {
      "op": "JUMPDEST"
    },
    "11470": {
      "op": "DUP1"
    },
    "11471": {
      "op": "DUP5"
    },
    "11472": {
      "op": "DUP5"
    },
    "11473": {
      "op": "ADD"
    },
    "11474": {
      "op": "DUP6"
    },
    "11475": {
      "op": "DUP5"
    },
    "11476": {
      "op": "ADD"
    },
    "11477": {
      "op": "CALLDATACOPY"
    },
    "11478": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11480": {
      "op": "DUP5"
    },
    "11481": {
      "op": "DUP3"
    },
    "11482": {
      "op": "DUP5"
    },
    "11483": {
      "op": "ADD"
    },
    "11484": {
      "op": "ADD"
    },
    "11485": {
      "op": "MSTORE"
    },
    "11486": {
      "op": "POP"
    },
    "11487": {
      "op": "DUP1"
    },
    "11488": {
      "op": "SWAP4"
    },
    "11489": {
      "op": "POP"
    },
    "11490": {
      "op": "POP"
    },
    "11491": {
      "op": "POP"
    },
    "11492": {
      "op": "POP"
    },
    "11493": {
      "op": "SWAP3"
    },
    "11494": {
      "op": "SWAP6"
    },
    "11495": {
      "op": "SWAP2"
    },
    "11496": {
      "op": "SWAP5"
    },
    "11497": {
      "op": "POP"
    },
    "11498": {
      "op": "SWAP3"
    },
    "11499": {
      "op": "POP"
    },
    "11500": {
      "jump": "o",
      "op": "JUMP"
    },
    "11501": {
      "op": "JUMPDEST"
    },
    "11502": {
      "op": "DUP1"
    },
    "11503": {
      "op": "ISZERO"
    },
    "11504": {
      "op": "ISZERO"
    },
    "11505": {
      "op": "DUP2"
    },
    "11506": {
      "op": "EQ"
    },
    "11507": {
      "op": "PUSH2",
      "value": "0x2CFB"
    },
    "11510": {
      "op": "JUMPI"
    },
    "11511": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11513": {
      "op": "DUP1"
    },
    "11514": {
      "op": "REVERT"
    },
    "11515": {
      "op": "JUMPDEST"
    },
    "11516": {
      "op": "POP"
    },
    "11517": {
      "jump": "o",
      "op": "JUMP"
    },
    "11518": {
      "op": "JUMPDEST"
    },
    "11519": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11521": {
      "op": "DUP1"
    },
    "11522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11524": {
      "op": "DUP1"
    },
    "11525": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11527": {
      "op": "DUP6"
    },
    "11528": {
      "op": "DUP8"
    },
    "11529": {
      "op": "SUB"
    },
    "11530": {
      "op": "SLT"
    },
    "11531": {
      "op": "ISZERO"
    },
    "11532": {
      "op": "PUSH2",
      "value": "0x2D14"
    },
    "11535": {
      "op": "JUMPI"
    },
    "11536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11538": {
      "op": "DUP1"
    },
    "11539": {
      "op": "REVERT"
    },
    "11540": {
      "op": "JUMPDEST"
    },
    "11541": {
      "op": "DUP5"
    },
    "11542": {
      "op": "CALLDATALOAD"
    },
    "11543": {
      "op": "PUSH2",
      "value": "0x2D1F"
    },
    "11546": {
      "op": "DUP2"
    },
    "11547": {
      "op": "PUSH2",
      "value": "0x2CED"
    },
    "11550": {
      "jump": "i",
      "op": "JUMP"
    },
    "11551": {
      "op": "JUMPDEST"
    },
    "11552": {
      "op": "SWAP4"
    },
    "11553": {
      "op": "POP"
    },
    "11554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11556": {
      "op": "DUP6"
    },
    "11557": {
      "op": "ADD"
    },
    "11558": {
      "op": "CALLDATALOAD"
    },
    "11559": {
      "op": "PUSH2",
      "value": "0x2D2F"
    },
    "11562": {
      "op": "DUP2"
    },
    "11563": {
      "op": "PUSH2",
      "value": "0x2CED"
    },
    "11566": {
      "jump": "i",
      "op": "JUMP"
    },
    "11567": {
      "op": "JUMPDEST"
    },
    "11568": {
      "op": "SWAP3"
    },
    "11569": {
      "op": "POP"
    },
    "11570": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11572": {
      "op": "DUP6"
    },
    "11573": {
      "op": "ADD"
    },
    "11574": {
      "op": "CALLDATALOAD"
    },
    "11575": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11584": {
      "op": "DUP1"
    },
    "11585": {
      "op": "DUP3"
    },
    "11586": {
      "op": "GT"
    },
    "11587": {
      "op": "ISZERO"
    },
    "11588": {
      "op": "PUSH2",
      "value": "0x2D4C"
    },
    "11591": {
      "op": "JUMPI"
    },
    "11592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11594": {
      "op": "DUP1"
    },
    "11595": {
      "op": "REVERT"
    },
    "11596": {
      "op": "JUMPDEST"
    },
    "11597": {
      "op": "PUSH2",
      "value": "0x2D58"
    },
    "11600": {
      "op": "DUP9"
    },
    "11601": {
      "op": "DUP4"
    },
    "11602": {
      "op": "DUP10"
    },
    "11603": {
      "op": "ADD"
    },
    "11604": {
      "op": "PUSH2",
      "value": "0x2A4D"
    },
    "11607": {
      "jump": "i",
      "op": "JUMP"
    },
    "11608": {
      "op": "JUMPDEST"
    },
    "11609": {
      "op": "SWAP4"
    },
    "11610": {
      "op": "POP"
    },
    "11611": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11613": {
      "op": "DUP8"
    },
    "11614": {
      "op": "ADD"
    },
    "11615": {
      "op": "CALLDATALOAD"
    },
    "11616": {
      "op": "SWAP2"
    },
    "11617": {
      "op": "POP"
    },
    "11618": {
      "op": "DUP1"
    },
    "11619": {
      "op": "DUP3"
    },
    "11620": {
      "op": "GT"
    },
    "11621": {
      "op": "ISZERO"
    },
    "11622": {
      "op": "PUSH2",
      "value": "0x2D6E"
    },
    "11625": {
      "op": "JUMPI"
    },
    "11626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11628": {
      "op": "DUP1"
    },
    "11629": {
      "op": "REVERT"
    },
    "11630": {
      "op": "JUMPDEST"
    },
    "11631": {
      "op": "POP"
    },
    "11632": {
      "op": "PUSH2",
      "value": "0x2D7B"
    },
    "11635": {
      "op": "DUP8"
    },
    "11636": {
      "op": "DUP3"
    },
    "11637": {
      "op": "DUP9"
    },
    "11638": {
      "op": "ADD"
    },
    "11639": {
      "op": "PUSH2",
      "value": "0x2A4D"
    },
    "11642": {
      "jump": "i",
      "op": "JUMP"
    },
    "11643": {
      "op": "JUMPDEST"
    },
    "11644": {
      "op": "SWAP2"
    },
    "11645": {
      "op": "POP"
    },
    "11646": {
      "op": "POP"
    },
    "11647": {
      "op": "SWAP3"
    },
    "11648": {
      "op": "SWAP6"
    },
    "11649": {
      "op": "SWAP2"
    },
    "11650": {
      "op": "SWAP5"
    },
    "11651": {
      "op": "POP"
    },
    "11652": {
      "op": "SWAP3"
    },
    "11653": {
      "op": "POP"
    },
    "11654": {
      "jump": "o",
      "op": "JUMP"
    },
    "11655": {
      "op": "JUMPDEST"
    },
    "11656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11658": {
      "op": "DUP1"
    },
    "11659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11661": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11663": {
      "op": "DUP5"
    },
    "11664": {
      "op": "DUP7"
    },
    "11665": {
      "op": "SUB"
    },
    "11666": {
      "op": "SLT"
    },
    "11667": {
      "op": "ISZERO"
    },
    "11668": {
      "op": "PUSH2",
      "value": "0x2D9C"
    },
    "11671": {
      "op": "JUMPI"
    },
    "11672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11674": {
      "op": "DUP1"
    },
    "11675": {
      "op": "REVERT"
    },
    "11676": {
      "op": "JUMPDEST"
    },
    "11677": {
      "op": "DUP4"
    },
    "11678": {
      "op": "CALLDATALOAD"
    },
    "11679": {
      "op": "PUSH2",
      "value": "0x2DA7"
    },
    "11682": {
      "op": "DUP2"
    },
    "11683": {
      "op": "PUSH2",
      "value": "0x2CED"
    },
    "11686": {
      "jump": "i",
      "op": "JUMP"
    },
    "11687": {
      "op": "JUMPDEST"
    },
    "11688": {
      "op": "SWAP3"
    },
    "11689": {
      "op": "POP"
    },
    "11690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11692": {
      "op": "DUP5"
    },
    "11693": {
      "op": "ADD"
    },
    "11694": {
      "op": "CALLDATALOAD"
    },
    "11695": {
      "op": "PUSH2",
      "value": "0x2B9D"
    },
    "11698": {
      "op": "DUP2"
    },
    "11699": {
      "op": "PUSH2",
      "value": "0x2CED"
    },
    "11702": {
      "jump": "i",
      "op": "JUMP"
    },
    "11703": {
      "op": "JUMPDEST"
    },
    "11704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11706": {
      "op": "DUP1"
    },
    "11707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11709": {
      "op": "DUP1"
    },
    "11710": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "11712": {
      "op": "DUP6"
    },
    "11713": {
      "op": "DUP8"
    },
    "11714": {
      "op": "SUB"
    },
    "11715": {
      "op": "SLT"
    },
    "11716": {
      "op": "ISZERO"
    },
    "11717": {
      "op": "PUSH2",
      "value": "0x2DCD"
    },
    "11720": {
      "op": "JUMPI"
    },
    "11721": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11723": {
      "op": "DUP1"
    },
    "11724": {
      "op": "REVERT"
    },
    "11725": {
      "op": "JUMPDEST"
    },
    "11726": {
      "op": "DUP5"
    },
    "11727": {
      "op": "CALLDATALOAD"
    },
    "11728": {
      "op": "SWAP4"
    },
    "11729": {
      "op": "POP"
    },
    "11730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11732": {
      "op": "DUP6"
    },
    "11733": {
      "op": "ADD"
    },
    "11734": {
      "op": "CALLDATALOAD"
    },
    "11735": {
      "op": "SWAP3"
    },
    "11736": {
      "op": "POP"
    },
    "11737": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11739": {
      "op": "DUP6"
    },
    "11740": {
      "op": "ADD"
    },
    "11741": {
      "op": "CALLDATALOAD"
    },
    "11742": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11751": {
      "op": "DUP1"
    },
    "11752": {
      "op": "DUP3"
    },
    "11753": {
      "op": "GT"
    },
    "11754": {
      "op": "ISZERO"
    },
    "11755": {
      "op": "PUSH2",
      "value": "0x2D4C"
    },
    "11758": {
      "op": "JUMPI"
    },
    "11759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11761": {
      "op": "DUP1"
    },
    "11762": {
      "op": "REVERT"
    },
    "11763": {
      "op": "JUMPDEST"
    },
    "11764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11766": {
      "op": "DUP1"
    },
    "11767": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11769": {
      "op": "DUP4"
    },
    "11770": {
      "op": "DUP6"
    },
    "11771": {
      "op": "SUB"
    },
    "11772": {
      "op": "SLT"
    },
    "11773": {
      "op": "ISZERO"
    },
    "11774": {
      "op": "PUSH2",
      "value": "0x2E06"
    },
    "11777": {
      "op": "JUMPI"
    },
    "11778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11780": {
      "op": "DUP1"
    },
    "11781": {
      "op": "REVERT"
    },
    "11782": {
      "op": "JUMPDEST"
    },
    "11783": {
      "op": "PUSH2",
      "value": "0x2E0F"
    },
    "11786": {
      "op": "DUP4"
    },
    "11787": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "11790": {
      "jump": "i",
      "op": "JUMP"
    },
    "11791": {
      "op": "JUMPDEST"
    },
    "11792": {
      "op": "SWAP2"
    },
    "11793": {
      "op": "POP"
    },
    "11794": {
      "op": "PUSH2",
      "value": "0x2E1D"
    },
    "11797": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11799": {
      "op": "DUP5"
    },
    "11800": {
      "op": "ADD"
    },
    "11801": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "11804": {
      "jump": "i",
      "op": "JUMP"
    },
    "11805": {
      "op": "JUMPDEST"
    },
    "11806": {
      "op": "SWAP1"
    },
    "11807": {
      "op": "POP"
    },
    "11808": {
      "op": "SWAP3"
    },
    "11809": {
      "op": "POP"
    },
    "11810": {
      "op": "SWAP3"
    },
    "11811": {
      "op": "SWAP1"
    },
    "11812": {
      "op": "POP"
    },
    "11813": {
      "jump": "o",
      "op": "JUMP"
    },
    "11814": {
      "op": "JUMPDEST"
    },
    "11815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11817": {
      "op": "DUP1"
    },
    "11818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11820": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11822": {
      "op": "DUP5"
    },
    "11823": {
      "op": "DUP7"
    },
    "11824": {
      "op": "SUB"
    },
    "11825": {
      "op": "SLT"
    },
    "11826": {
      "op": "ISZERO"
    },
    "11827": {
      "op": "PUSH2",
      "value": "0x2E3B"
    },
    "11830": {
      "op": "JUMPI"
    },
    "11831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11833": {
      "op": "DUP1"
    },
    "11834": {
      "op": "REVERT"
    },
    "11835": {
      "op": "JUMPDEST"
    },
    "11836": {
      "op": "DUP4"
    },
    "11837": {
      "op": "CALLDATALOAD"
    },
    "11838": {
      "op": "SWAP3"
    },
    "11839": {
      "op": "POP"
    },
    "11840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11842": {
      "op": "DUP5"
    },
    "11843": {
      "op": "ADD"
    },
    "11844": {
      "op": "CALLDATALOAD"
    },
    "11845": {
      "op": "SWAP2"
    },
    "11846": {
      "op": "POP"
    },
    "11847": {
      "op": "PUSH2",
      "value": "0x2BAB"
    },
    "11850": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11852": {
      "op": "DUP6"
    },
    "11853": {
      "op": "ADD"
    },
    "11854": {
      "op": "PUSH2",
      "value": "0x299E"
    },
    "11857": {
      "jump": "i",
      "op": "JUMP"
    },
    "11858": {
      "op": "JUMPDEST"
    },
    "11859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11861": {
      "op": "DUP2"
    },
    "11862": {
      "op": "DUP2"
    },
    "11863": {
      "op": "SHR"
    },
    "11864": {
      "op": "SWAP1"
    },
    "11865": {
      "op": "DUP3"
    },
    "11866": {
      "op": "AND"
    },
    "11867": {
      "op": "DUP1"
    },
    "11868": {
      "op": "PUSH2",
      "value": "0x2E66"
    },
    "11871": {
      "op": "JUMPI"
    },
    "11872": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11874": {
      "op": "DUP3"
    },
    "11875": {
      "op": "AND"
    },
    "11876": {
      "op": "SWAP2"
    },
    "11877": {
      "op": "POP"
    },
    "11878": {
      "op": "JUMPDEST"
    },
    "11879": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11881": {
      "op": "DUP3"
    },
    "11882": {
      "op": "LT"
    },
    "11883": {
      "op": "DUP2"
    },
    "11884": {
      "op": "EQ"
    },
    "11885": {
      "op": "ISZERO"
    },
    "11886": {
      "op": "PUSH2",
      "value": "0x2E87"
    },
    "11889": {
      "op": "JUMPI"
    },
    "11890": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11895": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11897": {
      "op": "SHL"
    },
    "11898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11900": {
      "op": "MSTORE"
    },
    "11901": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11903": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11905": {
      "op": "MSTORE"
    },
    "11906": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11908": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11910": {
      "op": "REVERT"
    },
    "11911": {
      "op": "JUMPDEST"
    },
    "11912": {
      "op": "POP"
    },
    "11913": {
      "op": "SWAP2"
    },
    "11914": {
      "op": "SWAP1"
    },
    "11915": {
      "op": "POP"
    },
    "11916": {
      "jump": "o",
      "op": "JUMP"
    },
    "11917": {
      "op": "JUMPDEST"
    },
    "11918": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11923": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11925": {
      "op": "SHL"
    },
    "11926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11928": {
      "op": "MSTORE"
    },
    "11929": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11931": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11933": {
      "op": "MSTORE"
    },
    "11934": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11938": {
      "op": "REVERT"
    },
    "11939": {
      "op": "JUMPDEST"
    },
    "11940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11942": {
      "op": "DUP3"
    },
    "11943": {
      "op": "NOT"
    },
    "11944": {
      "op": "DUP3"
    },
    "11945": {
      "op": "GT"
    },
    "11946": {
      "op": "ISZERO"
    },
    "11947": {
      "op": "PUSH2",
      "value": "0x2EB6"
    },
    "11950": {
      "op": "JUMPI"
    },
    "11951": {
      "op": "PUSH2",
      "value": "0x2EB6"
    },
    "11954": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "11957": {
      "jump": "i",
      "op": "JUMP"
    },
    "11958": {
      "op": "JUMPDEST"
    },
    "11959": {
      "op": "POP"
    },
    "11960": {
      "op": "ADD"
    },
    "11961": {
      "op": "SWAP1"
    },
    "11962": {
      "jump": "o",
      "op": "JUMP"
    },
    "11963": {
      "op": "JUMPDEST"
    },
    "11964": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11969": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11971": {
      "op": "SHL"
    },
    "11972": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11974": {
      "op": "MSTORE"
    },
    "11975": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11977": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11979": {
      "op": "MSTORE"
    },
    "11980": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11982": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11984": {
      "op": "REVERT"
    },
    "11985": {
      "op": "JUMPDEST"
    },
    "11986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11990": {
      "op": "NOT"
    },
    "11991": {
      "op": "DUP3"
    },
    "11992": {
      "op": "EQ"
    },
    "11993": {
      "op": "ISZERO"
    },
    "11994": {
      "op": "PUSH2",
      "value": "0x2EE5"
    },
    "11997": {
      "op": "JUMPI"
    },
    "11998": {
      "op": "PUSH2",
      "value": "0x2EE5"
    },
    "12001": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "12004": {
      "jump": "i",
      "op": "JUMP"
    },
    "12005": {
      "op": "JUMPDEST"
    },
    "12006": {
      "op": "POP"
    },
    "12007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12009": {
      "op": "ADD"
    },
    "12010": {
      "op": "SWAP1"
    },
    "12011": {
      "jump": "o",
      "op": "JUMP"
    },
    "12012": {
      "op": "JUMPDEST"
    },
    "12013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12015": {
      "op": "DUP2"
    },
    "12016": {
      "op": "DUP2"
    },
    "12017": {
      "op": "JUMPDEST"
    },
    "12018": {
      "op": "DUP1"
    },
    "12019": {
      "op": "DUP6"
    },
    "12020": {
      "op": "GT"
    },
    "12021": {
      "op": "ISZERO"
    },
    "12022": {
      "op": "PUSH2",
      "value": "0x2F27"
    },
    "12025": {
      "op": "JUMPI"
    },
    "12026": {
      "op": "DUP2"
    },
    "12027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12029": {
      "op": "NOT"
    },
    "12030": {
      "op": "DIV"
    },
    "12031": {
      "op": "DUP3"
    },
    "12032": {
      "op": "GT"
    },
    "12033": {
      "op": "ISZERO"
    },
    "12034": {
      "op": "PUSH2",
      "value": "0x2F0D"
    },
    "12037": {
      "op": "JUMPI"
    },
    "12038": {
      "op": "PUSH2",
      "value": "0x2F0D"
    },
    "12041": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "12044": {
      "jump": "i",
      "op": "JUMP"
    },
    "12045": {
      "op": "JUMPDEST"
    },
    "12046": {
      "op": "DUP1"
    },
    "12047": {
      "op": "DUP6"
    },
    "12048": {
      "op": "AND"
    },
    "12049": {
      "op": "ISZERO"
    },
    "12050": {
      "op": "PUSH2",
      "value": "0x2F1A"
    },
    "12053": {
      "op": "JUMPI"
    },
    "12054": {
      "op": "SWAP2"
    },
    "12055": {
      "op": "DUP2"
    },
    "12056": {
      "op": "MUL"
    },
    "12057": {
      "op": "SWAP2"
    },
    "12058": {
      "op": "JUMPDEST"
    },
    "12059": {
      "op": "SWAP4"
    },
    "12060": {
      "op": "DUP5"
    },
    "12061": {
      "op": "SHR"
    },
    "12062": {
      "op": "SWAP4"
    },
    "12063": {
      "op": "SWAP1"
    },
    "12064": {
      "op": "DUP1"
    },
    "12065": {
      "op": "MUL"
    },
    "12066": {
      "op": "SWAP1"
    },
    "12067": {
      "op": "PUSH2",
      "value": "0x2EF1"
    },
    "12070": {
      "op": "JUMP"
    },
    "12071": {
      "op": "JUMPDEST"
    },
    "12072": {
      "op": "POP"
    },
    "12073": {
      "op": "SWAP3"
    },
    "12074": {
      "op": "POP"
    },
    "12075": {
      "op": "SWAP3"
    },
    "12076": {
      "op": "SWAP1"
    },
    "12077": {
      "op": "POP"
    },
    "12078": {
      "jump": "o",
      "op": "JUMP"
    },
    "12079": {
      "op": "JUMPDEST"
    },
    "12080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12082": {
      "op": "DUP3"
    },
    "12083": {
      "op": "PUSH2",
      "value": "0x2F3E"
    },
    "12086": {
      "op": "JUMPI"
    },
    "12087": {
      "op": "POP"
    },
    "12088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12090": {
      "op": "PUSH2",
      "value": "0xA6B"
    },
    "12093": {
      "op": "JUMP"
    },
    "12094": {
      "op": "JUMPDEST"
    },
    "12095": {
      "op": "DUP2"
    },
    "12096": {
      "op": "PUSH2",
      "value": "0x2F4B"
    },
    "12099": {
      "op": "JUMPI"
    },
    "12100": {
      "op": "POP"
    },
    "12101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12103": {
      "op": "PUSH2",
      "value": "0xA6B"
    },
    "12106": {
      "op": "JUMP"
    },
    "12107": {
      "op": "JUMPDEST"
    },
    "12108": {
      "op": "DUP2"
    },
    "12109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12111": {
      "op": "DUP2"
    },
    "12112": {
      "op": "EQ"
    },
    "12113": {
      "op": "PUSH2",
      "value": "0x2F61"
    },
    "12116": {
      "op": "JUMPI"
    },
    "12117": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "12119": {
      "op": "DUP2"
    },
    "12120": {
      "op": "EQ"
    },
    "12121": {
      "op": "PUSH2",
      "value": "0x2F6B"
    },
    "12124": {
      "op": "JUMPI"
    },
    "12125": {
      "op": "PUSH2",
      "value": "0x2F87"
    },
    "12128": {
      "op": "JUMP"
    },
    "12129": {
      "op": "JUMPDEST"
    },
    "12130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12132": {
      "op": "SWAP2"
    },
    "12133": {
      "op": "POP"
    },
    "12134": {
      "op": "POP"
    },
    "12135": {
      "op": "PUSH2",
      "value": "0xA6B"
    },
    "12138": {
      "op": "JUMP"
    },
    "12139": {
      "op": "JUMPDEST"
    },
    "12140": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12142": {
      "op": "DUP5"
    },
    "12143": {
      "op": "GT"
    },
    "12144": {
      "op": "ISZERO"
    },
    "12145": {
      "op": "PUSH2",
      "value": "0x2F7C"
    },
    "12148": {
      "op": "JUMPI"
    },
    "12149": {
      "op": "PUSH2",
      "value": "0x2F7C"
    },
    "12152": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "12155": {
      "jump": "i",
      "op": "JUMP"
    },
    "12156": {
      "op": "JUMPDEST"
    },
    "12157": {
      "op": "POP"
    },
    "12158": {
      "op": "POP"
    },
    "12159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12161": {
      "op": "DUP3"
    },
    "12162": {
      "op": "SHL"
    },
    "12163": {
      "op": "PUSH2",
      "value": "0xA6B"
    },
    "12166": {
      "op": "JUMP"
    },
    "12167": {
      "op": "JUMPDEST"
    },
    "12168": {
      "op": "POP"
    },
    "12169": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12171": {
      "op": "DUP4"
    },
    "12172": {
      "op": "LT"
    },
    "12173": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "12176": {
      "op": "DUP4"
    },
    "12177": {
      "op": "LT"
    },
    "12178": {
      "op": "AND"
    },
    "12179": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "12181": {
      "op": "DUP5"
    },
    "12182": {
      "op": "LT"
    },
    "12183": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "12185": {
      "op": "DUP5"
    },
    "12186": {
      "op": "LT"
    },
    "12187": {
      "op": "AND"
    },
    "12188": {
      "op": "OR"
    },
    "12189": {
      "op": "ISZERO"
    },
    "12190": {
      "op": "PUSH2",
      "value": "0x2FAA"
    },
    "12193": {
      "op": "JUMPI"
    },
    "12194": {
      "op": "POP"
    },
    "12195": {
      "op": "DUP2"
    },
    "12196": {
      "op": "DUP2"
    },
    "12197": {
      "op": "EXP"
    },
    "12198": {
      "op": "PUSH2",
      "value": "0xA6B"
    },
    "12201": {
      "op": "JUMP"
    },
    "12202": {
      "op": "JUMPDEST"
    },
    "12203": {
      "op": "PUSH2",
      "value": "0x2FB4"
    },
    "12206": {
      "op": "DUP4"
    },
    "12207": {
      "op": "DUP4"
    },
    "12208": {
      "op": "PUSH2",
      "value": "0x2EEC"
    },
    "12211": {
      "jump": "i",
      "op": "JUMP"
    },
    "12212": {
      "op": "JUMPDEST"
    },
    "12213": {
      "op": "DUP1"
    },
    "12214": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12216": {
      "op": "NOT"
    },
    "12217": {
      "op": "DIV"
    },
    "12218": {
      "op": "DUP3"
    },
    "12219": {
      "op": "GT"
    },
    "12220": {
      "op": "ISZERO"
    },
    "12221": {
      "op": "PUSH2",
      "value": "0x2FC8"
    },
    "12224": {
      "op": "JUMPI"
    },
    "12225": {
      "op": "PUSH2",
      "value": "0x2FC8"
    },
    "12228": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "12231": {
      "jump": "i",
      "op": "JUMP"
    },
    "12232": {
      "op": "JUMPDEST"
    },
    "12233": {
      "op": "MUL"
    },
    "12234": {
      "op": "SWAP4"
    },
    "12235": {
      "op": "SWAP3"
    },
    "12236": {
      "op": "POP"
    },
    "12237": {
      "op": "POP"
    },
    "12238": {
      "op": "POP"
    },
    "12239": {
      "jump": "o",
      "op": "JUMP"
    },
    "12240": {
      "op": "JUMPDEST"
    },
    "12241": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12243": {
      "op": "PUSH2",
      "value": "0x24EF"
    },
    "12246": {
      "op": "DUP4"
    },
    "12247": {
      "op": "DUP4"
    },
    "12248": {
      "op": "PUSH2",
      "value": "0x2F2F"
    },
    "12251": {
      "jump": "i",
      "op": "JUMP"
    },
    "12252": {
      "op": "JUMPDEST"
    },
    "12253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12255": {
      "op": "DUP2"
    },
    "12256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12258": {
      "op": "NOT"
    },
    "12259": {
      "op": "DIV"
    },
    "12260": {
      "op": "DUP4"
    },
    "12261": {
      "op": "GT"
    },
    "12262": {
      "op": "DUP3"
    },
    "12263": {
      "op": "ISZERO"
    },
    "12264": {
      "op": "ISZERO"
    },
    "12265": {
      "op": "AND"
    },
    "12266": {
      "op": "ISZERO"
    },
    "12267": {
      "op": "PUSH2",
      "value": "0x2FF6"
    },
    "12270": {
      "op": "JUMPI"
    },
    "12271": {
      "op": "PUSH2",
      "value": "0x2FF6"
    },
    "12274": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "12277": {
      "jump": "i",
      "op": "JUMP"
    },
    "12278": {
      "op": "JUMPDEST"
    },
    "12279": {
      "op": "POP"
    },
    "12280": {
      "op": "MUL"
    },
    "12281": {
      "op": "SWAP1"
    },
    "12282": {
      "jump": "o",
      "op": "JUMP"
    },
    "12283": {
      "op": "JUMPDEST"
    },
    "12284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12286": {
      "op": "DUP3"
    },
    "12287": {
      "op": "DUP3"
    },
    "12288": {
      "op": "LT"
    },
    "12289": {
      "op": "ISZERO"
    },
    "12290": {
      "op": "PUSH2",
      "value": "0x300D"
    },
    "12293": {
      "op": "JUMPI"
    },
    "12294": {
      "op": "PUSH2",
      "value": "0x300D"
    },
    "12297": {
      "op": "PUSH2",
      "value": "0x2E8D"
    },
    "12300": {
      "jump": "i",
      "op": "JUMP"
    },
    "12301": {
      "op": "JUMPDEST"
    },
    "12302": {
      "op": "POP"
    },
    "12303": {
      "op": "SUB"
    },
    "12304": {
      "op": "SWAP1"
    },
    "12305": {
      "jump": "o",
      "op": "JUMP"
    },
    "12306": {
      "op": "JUMPDEST"
    },
    "12307": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12312": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12314": {
      "op": "SHL"
    },
    "12315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12317": {
      "op": "MSTORE"
    },
    "12318": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "12320": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12322": {
      "op": "MSTORE"
    },
    "12323": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12327": {
      "op": "REVERT"
    },
    "12328": {
      "op": "JUMPDEST"
    },
    "12329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12331": {
      "op": "DUP3"
    },
    "12332": {
      "op": "PUSH2",
      "value": "0x3037"
    },
    "12335": {
      "op": "JUMPI"
    },
    "12336": {
      "op": "PUSH2",
      "value": "0x3037"
    },
    "12339": {
      "op": "PUSH2",
      "value": "0x3012"
    },
    "12342": {
      "jump": "i",
      "op": "JUMP"
    },
    "12343": {
      "op": "JUMPDEST"
    },
    "12344": {
      "op": "POP"
    },
    "12345": {
      "op": "DIV"
    },
    "12346": {
      "op": "SWAP1"
    },
    "12347": {
      "jump": "o",
      "op": "JUMP"
    },
    "12348": {
      "op": "JUMPDEST"
    },
    "12349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12351": {
      "op": "PUSH2",
      "value": "0x24EF"
    },
    "12354": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "12356": {
      "op": "DUP5"
    },
    "12357": {
      "op": "AND"
    },
    "12358": {
      "op": "DUP4"
    },
    "12359": {
      "op": "PUSH2",
      "value": "0x2F2F"
    },
    "12362": {
      "jump": "i",
      "op": "JUMP"
    },
    "12363": {
      "op": "JUMPDEST"
    },
    "12364": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "12369": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "12371": {
      "op": "SHL"
    },
    "12372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12374": {
      "op": "MSTORE"
    },
    "12375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "12377": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "12379": {
      "op": "MSTORE"
    },
    "12380": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "12382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12384": {
      "op": "REVERT"
    },
    "12385": {
      "op": "JUMPDEST"
    },
    "12386": {
      "op": "SWAP3"
    },
    "12387": {
      "op": "DUP4"
    },
    "12388": {
      "op": "MSTORE"
    },
    "12389": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12391": {
      "op": "SWAP2"
    },
    "12392": {
      "op": "SWAP1"
    },
    "12393": {
      "op": "SWAP2"
    },
    "12394": {
      "op": "SHL"
    },
    "12395": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "12408": {
      "op": "NOT"
    },
    "12409": {
      "op": "AND"
    },
    "12410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12412": {
      "op": "DUP4"
    },
    "12413": {
      "op": "ADD"
    },
    "12414": {
      "op": "MSTORE"
    },
    "12415": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "12417": {
      "op": "DUP3"
    },
    "12418": {
      "op": "ADD"
    },
    "12419": {
      "op": "MSTORE"
    },
    "12420": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "12422": {
      "op": "ADD"
    },
    "12423": {
      "op": "SWAP1"
    },
    "12424": {
      "jump": "o",
      "op": "JUMP"
    },
    "12425": {
      "op": "JUMPDEST"
    },
    "12426": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12428": {
      "op": "DUP1"
    },
    "12429": {
      "op": "DUP3"
    },
    "12430": {
      "op": "MSTORE"
    },
    "12431": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "12433": {
      "op": "SWAP1"
    },
    "12434": {
      "op": "DUP3"
    },
    "12435": {
      "op": "ADD"
    },
    "12436": {
      "op": "MSTORE"
    },
    "12437": {
      "op": "PUSH32",
      "value": "0x4F6C64206368616C6C656E67655F646967657374206F722077726F6E67206368"
    },
    "12470": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12472": {
      "op": "DUP3"
    },
    "12473": {
      "op": "ADD"
    },
    "12474": {
      "op": "MSTORE"
    },
    "12475": {
      "op": "PUSH14",
      "value": "0x185B1B195B99D957D91A59D95CDD"
    },
    "12490": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "12492": {
      "op": "SHL"
    },
    "12493": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12495": {
      "op": "DUP3"
    },
    "12496": {
      "op": "ADD"
    },
    "12497": {
      "op": "MSTORE"
    },
    "12498": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12500": {
      "op": "ADD"
    },
    "12501": {
      "op": "SWAP1"
    },
    "12502": {
      "jump": "o",
      "op": "JUMP"
    },
    "12503": {
      "op": "JUMPDEST"
    },
    "12504": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12506": {
      "op": "DUP1"
    },
    "12507": {
      "op": "DUP3"
    },
    "12508": {
      "op": "MSTORE"
    },
    "12509": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "12511": {
      "op": "SWAP1"
    },
    "12512": {
      "op": "DUP3"
    },
    "12513": {
      "op": "ADD"
    },
    "12514": {
      "op": "MSTORE"
    },
    "12515": {
      "op": "PUSH32",
      "value": "0x446967657374206D75737420626520736D616C6C6572207468616E206D696E69"
    },
    "12548": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12550": {
      "op": "DUP3"
    },
    "12551": {
      "op": "ADD"
    },
    "12552": {
      "op": "MSTORE"
    },
    "12553": {
      "op": "PUSH8",
      "value": "0x1B99D5185C99D95D"
    },
    "12562": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "12564": {
      "op": "SHL"
    },
    "12565": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12567": {
      "op": "DUP3"
    },
    "12568": {
      "op": "ADD"
    },
    "12569": {
      "op": "MSTORE"
    },
    "12570": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12572": {
      "op": "ADD"
    },
    "12573": {
      "op": "SWAP1"
    },
    "12574": {
      "jump": "o",
      "op": "JUMP"
    },
    "12575": {
      "op": "JUMPDEST"
    },
    "12576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12578": {
      "op": "DUP1"
    },
    "12579": {
      "op": "DUP3"
    },
    "12580": {
      "op": "MSTORE"
    },
    "12581": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "12583": {
      "op": "SWAP1"
    },
    "12584": {
      "op": "DUP3"
    },
    "12585": {
      "op": "ADD"
    },
    "12586": {
      "op": "MSTORE"
    },
    "12587": {
      "op": "PUSH21",
      "value": "0x4E6F2073616D65207365636F6E6420736F6C766573"
    },
    "12609": {
      "op": "PUSH1",
      "value": "0x58"
    },
    "12611": {
      "op": "SHL"
    },
    "12612": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12614": {
      "op": "DUP3"
    },
    "12615": {
      "op": "ADD"
    },
    "12616": {
      "op": "MSTORE"
    },
    "12617": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12619": {
      "op": "ADD"
    },
    "12620": {
      "op": "SWAP1"
    },
    "12621": {
      "jump": "o",
      "op": "JUMP"
    },
    "12622": {
      "op": "JUMPDEST"
    },
    "12623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12625": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12627": {
      "op": "DUP3"
    },
    "12628": {
      "op": "DUP5"
    },
    "12629": {
      "op": "SUB"
    },
    "12630": {
      "op": "SLT"
    },
    "12631": {
      "op": "ISZERO"
    },
    "12632": {
      "op": "PUSH2",
      "value": "0x3160"
    },
    "12635": {
      "op": "JUMPI"
    },
    "12636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12638": {
      "op": "DUP1"
    },
    "12639": {
      "op": "REVERT"
    },
    "12640": {
      "op": "JUMPDEST"
    },
    "12641": {
      "op": "DUP2"
    },
    "12642": {
      "op": "MLOAD"
    },
    "12643": {
      "op": "PUSH2",
      "value": "0x24EF"
    },
    "12646": {
      "op": "DUP2"
    },
    "12647": {
      "op": "PUSH2",
      "value": "0x2CED"
    },
    "12650": {
      "jump": "i",
      "op": "JUMP"
    },
    "12651": {
      "op": "JUMPDEST"
    },
    "12652": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12654": {
      "op": "DUP1"
    },
    "12655": {
      "op": "DUP3"
    },
    "12656": {
      "op": "MSTORE"
    },
    "12657": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "12659": {
      "op": "SWAP1"
    },
    "12660": {
      "op": "DUP3"
    },
    "12661": {
      "op": "ADD"
    },
    "12662": {
      "op": "MSTORE"
    },
    "12663": {
      "op": "PUSH32",
      "value": "0x536F204D696E74546F2068617320746F20686176652073616D65206E756D6265"
    },
    "12696": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "12698": {
      "op": "DUP3"
    },
    "12699": {
      "op": "ADD"
    },
    "12700": {
      "op": "MSTORE"
    },
    "12701": {
      "op": "PUSH32",
      "value": "0x72206F66206164647265737373657320617320457874726146756E6473000000"
    },
    "12734": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "12736": {
      "op": "DUP3"
    },
    "12737": {
      "op": "ADD"
    },
    "12738": {
      "op": "MSTORE"
    },
    "12739": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "12741": {
      "op": "ADD"
    },
    "12742": {
      "op": "SWAP1"
    },
    "12743": {
      "jump": "o",
      "op": "JUMP"
    },
    "12744": {
      "op": "JUMPDEST"
    },
    "12745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12747": {
      "op": "DUP3"
    },
    "12748": {
      "op": "PUSH2",
      "value": "0x31D7"
    },
    "12751": {
      "op": "JUMPI"
    },
    "12752": {
      "op": "PUSH2",
      "value": "0x31D7"
    },
    "12755": {
      "op": "PUSH2",
      "value": "0x3012"
    },
    "12758": {
      "jump": "i",
      "op": "JUMP"
    },
    "12759": {
      "op": "JUMPDEST"
    },
    "12760": {
      "op": "POP"
    },
    "12761": {
      "op": "MOD"
    },
    "12762": {
      "op": "SWAP1"
    },
    "12763": {
      "jump": "o",
      "op": "JUMP"
    },
    "12764": {
      "op": "JUMPDEST"
    },
    "12765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "12769": {
      "op": "DUP3"
    },
    "12770": {
      "op": "DUP5"
    },
    "12771": {
      "op": "SUB"
    },
    "12772": {
      "op": "SLT"
    },
    "12773": {
      "op": "ISZERO"
    },
    "12774": {
      "op": "PUSH2",
      "value": "0x31EE"
    },
    "12777": {
      "op": "JUMPI"
    },
    "12778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "12780": {
      "op": "DUP1"
    },
    "12781": {
      "op": "REVERT"
    },
    "12782": {
      "op": "JUMPDEST"
    },
    "12783": {
      "op": "POP"
    },
    "12784": {
      "op": "MLOAD"
    },
    "12785": {
      "op": "SWAP2"
    },
    "12786": {
      "op": "SWAP1"
    },
    "12787": {
      "op": "POP"
    },
    "12788": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e638f79b99382a259bcfa794c05ff63a01bbffdb",
  "source": "// Forge - Proof of Work Mining Contract\n// MUST REMOVE AOPENMINT\n// Distrubtion of Forge Token is as follows:\n// 25% of Forge Token is Auctioned in the ForgeAuctions Contract which distributes tokens to users who use 0xBitcoin to buy tokens in fair price. Each auction lasts ~3 days. Using the Auctions contract\n// +\n// 25% of Forge Token is distributed as Liquidiy Pool rewards in the ForgeRewards Contract which distributes tokens to users who deposit the SpiritSwap Liquidity Pool tokens into the LPRewards contract.\n// +\n// 50% of Forge Token is distributed using ForgeMining Contract(this Contract) which distributes tokens to users by using GPUs/FPGAs to solve a complicated problem to gain tokens!  Uses this contract\n//\n// = 100% Of the Token is distributed to the users! No dev fee or premine!\n//\n// All distributions happen fairly using Bitcoins model of distribution for over 100+ years, on-chain, decentralized, trustless, ownerless contracts!\n//   The harder it is mined the less tokens that are awarded.\n// Network: Polygon Chain \n// ChainID = 89\n//\n//\n// Name: Forge\n// Symbol: Frg\n// Decimals: 18 \n//\n// Total supply: 42,000,001.000000000000000000\n//   =\n// 21,000,000 Mined over 100+ years using Bitcoins Distrubtion halvings every 4 years. Uses Proof-oF-Work to distribute the tokens. Public Miner is available.  Uses this contract.\n//   +\n// 10,500,000 Auctioned over 100+ years into 4 day auctions split fairly among all buyers. ALL 0xBitcoin proceeds go into THIS contract which it fairly distributes to miners.  Uses the ForgeAuctions contract\n//   +\n// 10,500,000 tokens goes to Liquidity Providers of the token over 100+ year using Bitcoins distribution!  Helps prevent LP losses!  Uses the ForgeRewards Contract\n//\n//  =\n//\n// 42,000,001 Tokens is the max Supply\n//      \n// 66% of the 0xBitcoin Token from this contract goes to the Miner to pay for the transaction cost and if the token grows enough earn 0xBitcoin per mint!!\n// 33% of the 0xBitcoin TOken from this contract goes to the Liquidity Providers via ForgeRewards Contract.  Helps prevent Impermant Loss! Larger Liquidity!\n//\n// No premine, dev cut, or advantage taken at launch. Public miner available at launch.  100% of the token is given away fairly over 100+ years using Bitcoins model!\n//\n// Send this contract any ERC20 token and it will become instantly mineable and able to distribute using proof-of-work for 1 year!!!!\n//\n//Viva la Mineables!!! Send this contract any ERC20 complient token (Wrapped NFTs incoming!) and we will fairly to miners and Holders(\n//  Each Mint prints (1/10000) of any ERC20.\n//pThirdDifficulty allows for the difficulty to be cut in a third.  So difficulty 10,000 becomes 3,333.  Costs 333 Fantom  Makes mining 3x easier\n//* 1 tokens in LP are burned to create the LP pool.\n//\n// Credits: 0xBitcoin, Vether, Synethix\n\n\npragma solidity ^0.8.0;\n\ncontract Ownable {\n    address public owner;\n\n    event TransferOwnership(address _from, address _to);\n\n    constructor() public {\n        owner = msg.sender;\n        emit TransferOwnership(address(0), msg.sender);\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"only owner\");\n        _;\n    }\n\n    function setOwner(address _owner) internal onlyOwner {\n        emit TransferOwnership(owner, _owner);\n        owner = _owner;\n    }\n}\n\n\n\n\nlibrary IsContract {\n    function isContract(address _addr) internal view returns (bool) {\n        bytes32 codehash;\n        /* solium-disable-next-line */\n        assembly { codehash := extcodehash(_addr) }\n        return codehash != bytes32(0) && codehash != bytes32(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470);\n    }\n}\n\n// File: contracts/utils/SafeMath.sol\n\nlibrary SafeMath2 {\n    function add(uint256 x, uint256 y) internal pure returns (uint256) {\n        uint256 z = x + y;\n        require(z >= x, \"Add overflow\");\n        return z;\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(x >= y, \"Sub underflow\");\n        return x - y;\n    }\n\n    function mult(uint256 x, uint256 y) internal pure returns (uint256) {\n        if (x == 0) {\n            return 0;\n        }\n\n        uint256 z = x * y;\n        require(z / x == y, \"Mult overflow\");\n        return z;\n    }\n\n    function div(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(y != 0, \"Div by zero\");\n        return x / y;\n    }\n\n    function divRound(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(y != 0, \"Div by zero\");\n        uint256 r = x / y;\n        if (x % y != 0) {\n            r = r + 1;\n        }\n\n        return r;\n    }\n}\n\n// File: contracts/utils/Math.sol\n\nlibrary ExtendedMath2 {\n\n\n    //return the smaller of the two inputs (a or b)\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\n\n        if(a > b) return b;\n\n        return a;\n\n    }\n}\n\n// File: contracts/interfaces/IERC20.sol\n\ninterface IERC20 {\n\tfunction totalSupply() external view returns (uint256);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    function transfer(address _to, uint _value) external returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\n    function allowance(address _owner, address _spender) external view returns (uint256 remaining);\n    function approve(address _spender, uint256 _value) external returns (bool success);\n    function balanceOf(address _owner) external view returns (uint256 balance);\n    \n}\n\n\n// File: contracts/commons/AddressMinHeap.sol\n\n\n\nabstract contract ApproveAndCallFallBack {\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) virtual public;\n}\n\n\n//Main contract\n\ncontract ForgeMining is Ownable, IERC20, ApproveAndCallFallBack {\n\tuint constant public targetTime = 60 * 48;\n\tuint256 public testx;\n\tuint256 public  testnum;\n\tuint256 public testden;\n    uint256 public testxx;\n    uint256 public testxy;\n// SUPPORTING CONTRACTS\n    address public AddressAuction;\n    address public AddressLPReward;\n    address public AddressZeroXBTC;\n//Events\n    using SafeMath2 for uint256;\n    using ExtendedMath2 for uint;\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\n    event MegaMint(address indexed from, uint epochCount, bytes32 newChallengeNumber, uint NumberOfTokensMinted);\n\n// Managment events\n    uint256 override public totalSupply = 42000001000000000000000000;\n    bytes32 private constant BALANCE_KEY = keccak256(\"balance\");\n\n    //BITCOIN INITALIZE Start\n\t\n    uint _totalSupply = 21000000000000000000000000;\n    uint public latestDifficultyPeriodStarted2 = block.timestamp;\n    uint public epochCount = 0;//number of 'blocks' mined\n\n    uint public _BLOCKS_PER_READJUSTMENT = 256;\n\n    //a little number\n    uint public  _MINIMUM_TARGET = 2**16;\n    \n    uint public  _MAXIMUM_TARGET = 2**234;\n    uint public miningTarget = _MAXIMUM_TARGET.div(200000000000*25);  //1000 million difficulty to start until i enable mining\n    \n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\n    uint public rewardEra = 0;\n    uint public maxSupplyForEra = (_totalSupply - _totalSupply.div( 2**(rewardEra + 1)));\n    uint public reward_amount = (100 * 10**uint(decimals) ).div( 2**rewardEra );\n    //Stuff for Functions\n    uint oldecount = 0;\n    uint public previousBlockTime = block.timestamp;\n    uint oneEthUnit =    1000000000000000000;\n    uint one8unit   =              100000000;\n    uint public Token2Per=           1000000;\n    uint Token2Min=                       88;\n    uint public tokensMinted;\n    mapping(address => uint) balances;\n    mapping(address => mapping(address => uint)) allowed;\n    //mapping(address => uint) Token_balances;\n    uint give0xBTC = 0;\n    uint give = 1;\n    // metadata\n    string public name = \"Forge\";\n    string public constant symbol = \"Forge\";\n    uint8 public constant decimals = 18;\n    uint public totalLifetimes = 0;\n\n    uint256 lastrun = block.timestamp;\n    uint public latestDifficultyPeriodStarted = block.number;\n    bool inited = false;\n    function zinit(address AuctionAddress2, address LPGuild2, address _ZeroXBTCAddress) public onlyOwner{\n        uint x = 21000000000000000000000000 / (2* (2 ** totalLifetimes)); //half supply for LP Mine and Burn\n        // Only init once\n        assert(!inited);\n        inited = true;\n\t\n    \trewardEra = 0;\n\ttokensMinted = 0;\n    \tminingTarget = _MAXIMUM_TARGET.div(30005); //5000000 = 31gh/s @ 7 min for FPGA mining\n        latestDifficultyPeriodStarted2 = block.timestamp;\n    \t_startNewMiningEpoch();\n\t\n        // Init contract variables and mint\n        balances[AuctionAddress2] = x;\n\t\n        emit Transfer(address(0), AuctionAddress2, x);\n\t\n    \tAddressAuction = AuctionAddress2;\n        AddressLPReward = payable(LPGuild2);\n        AddressZeroXBTC = _ZeroXBTCAddress;\n\t\n        oldecount = epochCount;\n\t\n        // mint 1 token to setup LPs\n        balances[msg.sender] = 1000000000000000000;\n\t\n        emit Transfer(address(0), msg.sender, 1000000000000000000);\n     \n    }\n\n\n\n\t///\n\t// Managment\n\t///\n\t//MUST REMOVE MUST REMOVE\n\n\n\tfunction zinit2(address AuctionAddress2, address LPGuild2, address _ZeroXBTCAddress) public onlyOwner{\n\n\t\t\tAddressAuction = AuctionAddress2;\n\t\t\tAddressLPReward = payable(LPGuild2);\n\t\t\tAddressZeroXBTC = _ZeroXBTCAddress;\n\n\t\t}\n\n\n\tfunction AOpenMint(bool nonce, bool challenge_digest, address mintTo) public returns (uint256 success) {\n\n\n\t\t_startNewMiningEpoch();\n\n\t\trequire(block.timestamp > previousBlockTime, \"No same second solves\");\n\n\t\t//uint diff = block.timestamp - previousBlockTime;\n\t\tuint256 x = ((block.timestamp - previousBlockTime) * 888) / targetTime;\n\t\tuint ratio = x * 100 / 888;\n\t\tuint totalOwed = 0;\n\t\tif(ratio < 314){\n\t\t\ttotalOwed = (61001200 * (x ** 2 )).div(888 ** 2)+ (40861500 * x).div(888);\n\t\t}else {\n\t\t\ttotalOwed = (x * 100000000).div(888) + (3500000000);\n\t\t} \n\n\n\t\tbalances[mintTo] = balances[mintTo].add((reward_amount * totalOwed).div(100000000));\n\t\tbalances[AddressLPReward] = balances[AddressLPReward].add((reward_amount * totalOwed).div(100000000 * 2));\n\t\ttokensMinted = tokensMinted.add((reward_amount * totalOwed).div(100000000));\n\t\tpreviousBlockTime = block.timestamp;\n\n\t\tif(give0xBTC > 0){\n\t\t\tif(ratio < 200){\n\t\t\t\tIERC20(AddressZeroXBTC).transfer(mintTo, (totalOwed * Token2Per * give0xBTC).div(100000000));\n\t\t\t}else{\n\t\t\t\tIERC20(AddressZeroXBTC).transfer(mintTo, (23 * Token2Per * give0xBTC).div(10));\n\t\t\t}\n\t\t}\n\n\t\temit Mint(msg.sender, (reward_amount * totalOwed).div(100000000), epochCount, challengeNumber );\n\n\t\treturn totalOwed;\n\n    }\n\tfunction ARewardSender() public {\n\t\t//runs every _BLOCKS_PER_READJUSTMENT / 4\n\n\t\tuint256 runs = block.timestamp - lastrun;\n\n\t\tuint256 epochsPast = epochCount - oldecount; //actually epoch\n\t\tuint256 runsperepoch = runs / epochsPast;\n\n\t\treward_amount = (100 * 10**uint(decimals)).div( 2**rewardEra );\n\t\tuint256 x = (runsperepoch * 888).divRound(targetTime);\n        \ttestxx = x;\n\t\tuint256 ratio = x * 100 / 888;\n\t\tuint256 totalOwed;\n\t\t if(ratio < 200){\n\t\t\ttotalOwed = (61001200 * (x ** 2 )).div(888**2) + (40861500 * x).div(888) ;\n\t\t }else {\n\t\t\ttotalOwed = (230000000);\n\t\t} \n        \ttestxy = ((epochsPast) * totalOwed * Token2Per * give0xBTC).div(2 * 100000000);\n\t\tif(IERC20(AddressZeroXBTC).balanceOf(address(this)) > (30 * 2 * (Token2Per * _BLOCKS_PER_READJUSTMENT)/4)) // at least enough blocks to rerun this function for both LPRewards and Users\n\t\t{\n\t\t\tIERC20(AddressZeroXBTC).transfer(AddressLPReward, ((epochsPast) * totalOwed * Token2Per * give0xBTC).div(2 * 100000000));\n\t\t\tgive0xBTC = 1 * give;\n\t\t}\n\t\telse{\n\t\t\tgive0xBTC = 0;\n\t\t}\n\t\toldecount = epochCount; //actually epoch\n\n\t\tlastrun = block.timestamp;\n\t}\n\n\n\t//Mints to the payee Forge, 0xBitcoin always to the sender. Making it the heaviest currency in here.\n\t//\n\t//function mint(bool nonce, bool challenge_digest) public returns (bool success) {\n\tfunction mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\n\t\tmintTo(nonce, challenge_digest, msg.sender);\n\t}\n\n\n\t//function mintTo(bool nonce, bool challenge_digest,  address mintTo) public returns (bool success) {\n\tfunction mintTo(uint256 nonce, bytes32 challenge_digest,  address mintTo) public returns (uint256 owed) {\n\n\t\tbytes32 digest =  keccak256(abi.encodePacked(challengeNumber, msg.sender, nonce));\n\n\t\t//the challenge digest must match the expected\n\t\trequire(digest == challenge_digest, \"Old challenge_digest or wrong challenge_digest\");\n\n\t\t//the digest must be smaller than the target\n\t\trequire(uint256(digest) < miningTarget, \"Digest must be smaller than miningTarget\");\n\t\t_startNewMiningEpoch();\n\n\t\trequire(block.timestamp > previousBlockTime, \"No same second solves\");\n\n\t\t//uint diff = block.timestamp - previousBlockTime;\n\t\tuint256 x = ((block.timestamp - previousBlockTime) * 888) / targetTime;\n\t\tuint ratio = x * 100 / 888;\n\t\tuint totalOwed = 0;\n\t\tif(ratio < 314){\n\t\t\ttotalOwed = (61001200 * (x ** 2 )).div(888 ** 2)+ (40861500 * x).div(888);\n\t\t}else {\n\t\t\ttotalOwed = (x * 100000000).div(888) + (350000000);\n\t\t} \n\n\n\t\tbalances[mintTo] = balances[mintTo].add((reward_amount * totalOwed).div(100000000));\n\t\tbalances[AddressLPReward] = balances[AddressLPReward].add((reward_amount * totalOwed).div(100000000 * 2));\n\t\t\t\t\n\t\ttokensMinted = tokensMinted.add((reward_amount * totalOwed).div(100000000));\n\t\tpreviousBlockTime = block.timestamp;\n\n\t\tif(give0xBTC > 0){\n\t\t\tif(ratio < 200){\n\t\t\t\tIERC20(AddressZeroXBTC).transfer(mintTo, (totalOwed * Token2Per * give0xBTC).div(100000000));\n\t\t\t}else{\n\t\t\t\tIERC20(AddressZeroXBTC).transfer(mintTo, (23 * Token2Per * give0xBTC).div(10));\n\t\t\t}\n\t\t}\n\n\t\temit Mint(msg.sender, (reward_amount * totalOwed).div(100000000), epochCount, challengeNumber );\n\n\t\treturn totalOwed;\n\n\t}\n\n\n\t//First address for mintSend(Forge + 0xBitcoin), Second address+ for other tokens\n\t// REPALCE WITH LINE BELOW in production\n\t//function mintTokensArrayTo(bool nonce, bool challenge_digest, address[] memory ExtraFunds, address[] memory MintTo) public returns (bool success) {\n\t//testnet function MUSAT REMOVE\n\n\tfunction mintTokensArrayToOPENMUSTERASE(bool nonce, bool challenge_digest, address[] memory ExtraFunds, address[] memory MintTo) public returns (uint256 owed) {\n\n\t\trequire(MintTo.length == ExtraFunds.length + 1,\"So MintTo has to have same number of addressses as ExtraFunds\");\n\t\tuint xy=0;\n\t\tfor(xy = 0; xy< ExtraFunds.length; xy++)\n\t\t{\n\t\t\tif(epochCount % (2**(xy+1)) != 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trequire(ExtraFunds[xy] != address(this) && ExtraFunds[xy] != AddressZeroXBTC, \"No base printing of tokens\");\n\t\t\tfor(uint y=xy+1; y< ExtraFunds.length; y++){\n\t\t\t\trequire(ExtraFunds[y] != ExtraFunds[xy], \"No printing The same tokens\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tuint256 totalIN = AOpenMint(nonce,challenge_digest, MintTo[0]);\n\t\trequire(totalIN > 0, \"mint issue\");\n\t\tuint256 totalOwed;\n\t\tuint256 TotalOwned;\n\t\tfor(uint x=0; x<xy; x++)\n\t\t{\n\t\t\t//epoch count must evenly dividable by 2^n in order to get extra mints. \n\t\t\t//ex. epoch 2 = 1 extramint, epoch 4 = 2 extra, epoch 8 = 3 extra mints, epoch 16 = 4 extra mints w/ a divRound for the 4th mint(allows small balance token minting aka NFTs)\n\t\t\tif(epochCount % (2**(x+1)) == 0){\n\t\t\t\tTotalOwned = IERC20(ExtraFunds[x]).balanceOf(address(this));\n\t\t\t\tif(TotalOwned != 0){\n\t\t\t\t\tif( x % 3 == 0 && x != 0){\n\t\t\t\t\t\ttotalOwed = (TotalOwned * totalIN).divRound(100000000 * 2500);\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttotalOwed = (TotalOwned * totalIN).div(100000000 * 2500 );\n\t\t\t\t    }\n\t\t\t    IERC20(ExtraFunds[x]).transfer(MintTo[x], totalOwed);\n\t\t\t    }\n            \t\t}\n        \t}\n\n\t\temit MegaMint(msg.sender, epochCount, challengeNumber, xy );\n\n\t\treturn totalOwed;\n\n    \t}\n    \n    \n\tfunction mintTokensArrayTo(uint256 nonce, bytes32 challenge_digest, address[] memory ExtraFunds, address[] memory MintTo) public returns (uint256 owed) {\n\n\t\t\n\n\t\trequire(MintTo.length == ExtraFunds.length + 1,\"So MintTo has to have same number of addressses as ExtraFunds\");\n\t\tuint xy=0;\n\t\tfor(xy = 0; xy< ExtraFunds.length; xy++)\n\t\t{\n\t\t\tif(epochCount % (2**(xy+1)) != 0){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trequire(ExtraFunds[xy] != address(this) && ExtraFunds[xy] != AddressZeroXBTC, \"No base printing of tokens\");\n\t\t\tfor(uint y=xy+1; y< ExtraFunds.length; y++){\n\t\t\t\trequire(ExtraFunds[y] != ExtraFunds[xy], \"No printing The same tokens\");\n\t\t\t}\n\t\t}\n\t\t\n\t\tuint256 totalOd = mintTo(nonce,challenge_digest, MintTo[0]);\n\t\trequire(totalOd > 0, \"mint issue\");\n\t\tuint256 totalOwed;\n\t\tuint256 TotalOwned;\n\t\tfor(uint x=0; x<xy; x++)\n\t\t{\n\t\t\t//epoch count must evenly dividable by 2^n in order to get extra mints. \n\t\t\t//ex. epoch 2 = 1 extramint, epoch 4 = 2 extra, epoch 8 = 3 extra mints, epoch 16 = 4 extra mints w/ a divRound for the 4th mint(allows small balance token minting aka NFTs)\n\t\t\tif(epochCount % (2**(x+1)) == 0){\n\t\t\t\tTotalOwned = IERC20(ExtraFunds[x]).balanceOf(address(this));\n\t\t\t\tif(TotalOwned != 0){\n\t\t\t\t\tif( x % 3 == 0 && x != 0){\n\t\t\t\t\t\ttotalOwed = (TotalOwned * totalOd).divRound(100000000 * 2500);\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttotalOwed = (TotalOwned * totalOd).div(100000000 * 2500 );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t    IERC20(ExtraFunds[x]).transfer(MintTo[x], totalOwed);\n\t\t\t}\n        }\n        \t\n\t\temit MegaMint(msg.sender, epochCount, challengeNumber, xy );\n\n\t\treturn totalOd;\n\n    }\n\n\n\tfunction mintTokensSameAddress(uint256 nonce, bytes32 challenge_digest, address[] memory ExtraFunds, address MintTo) public returns (bool success) {\n\t\taddress[] memory dd = new address[](ExtraFunds.length + 1); \n\n\t\tfor(uint x=0; x< (ExtraFunds.length + 1); x++)\n\t\t{\n\t\t\tdd[x] = MintTo;\n\t\t}\n\t\t\n\t\tmintTokensArrayTo(nonce, challenge_digest, ExtraFunds, dd);\n\n\t\treturn true;\n\t}\n\n\n\tfunction empty_mintTo(uint256 nonce, bytes32 challenge_digest) public returns (uint256 owed) {\n\n\t\tbytes32 digest =  keccak256(abi.encodePacked(challengeNumber, msg.sender, nonce));\n\n\t\t//the challenge digest must match the expected\n\t\trequire(digest == challenge_digest, \"Old challenge_digest or wrong challenge_digest\");\n\n\t\t//the digest must be smaller than the target\n\t\trequire(uint256(digest) < miningTarget, \"Digest must be smaller than miningTarget\");\n\t\t_startNewMiningEpoch();\n\n\t\trequire(block.timestamp > previousBlockTime, \"No same second solves\");\n\n\t\tpreviousBlockTime = block.timestamp;\n\n\n\t\temit Mint(msg.sender, 0, epochCount, challengeNumber );\n\n\t\treturn 0;\n\t\t\t   \n\t}\n\n\n\tfunction test(\tuint256 _testx,\tuint256 _testthisblk, uint256 _testlastblk ) public {\n\n\t\tuint256 x = ((_testthisblk - _testlastblk) * 888) / targetTime;\n\t\ttestden = x;\n\t\tuint ratio = x * 100 / 888;\n\t\tuint totalOwed = 0;\n\t\t\n\t\tif(ratio < 314){\n\t\t\ttotalOwed = (( 61001200 * (x ** 2 )).div(888 ** 2)+ (40861500 * x).div(888) -  291036);\n\t\t}else {\n\t\t\ttotalOwed = (x * 100000000).div(888) + (350000000);\n\t\t} \n\t\ttestx = totalOwed;\t\n\t}\n\n\n\tfunction _startNewMiningEpoch() internal {\n\n\n\t\t//if max supply for the era will be exceeded next reward round then enter the new era before that happens\n\n\t\t//40 is the final reward era, almost all tokens minted\n\t\t//once the final era is reached, more tokens will not be given out because the assert function\n\t\tif( tokensMinted > maxSupplyForEra && rewardEra < 39)\n\t\t{\n\t\t\trewardEra = rewardEra + 1;\n\t\t\tminingTarget = miningTarget.mult(2 ** rewardEra);\n\t\t}\n\n\t\t//set the next minted supply at which the era will change\n\t\t// total supply of MINED tokens is 21000000000000000000000000  because of 16 decimal places\n\n\t\tepochCount = epochCount.add(1);\n\n\t\t//every so often, readjust difficulty. Dont readjust when deploying\n\t\tif((epochCount) % (_BLOCKS_PER_READJUSTMENT / 4) == 0)\n\t\t{\n\t\t\tARewardSender();\n\t\t\tmaxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\n\n\t\t\tif((epochCount % _BLOCKS_PER_READJUSTMENT== 0))\n\t\t\t{\n\t\t\t\tif(( IERC20(AddressZeroXBTC).balanceOf(address(this)) / Token2Per) <= 20000) //chosen to give keep 250 days payouts in reserve at current payout\n\t\t\t\t{\n\t\t\t\t\tif(Token2Per.div(2) > Token2Min)\n\t\t\t\t\t{\n\t\t\t\t\t\tToken2Per = Token2Per.div(2);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tToken2Per = Token2Per.mult(3);\n\t\t\t\t}\n\t\t\t\t_reAdjustDifficulty();\n\t\t\t}\n\t\t}\n\n\t\tchallengeNumber = blockhash(block.number - 1);\n\t}\n\n\n\tfunction _reAdjustDifficulty() internal {\n\t\tuint256 blktimestamp = block.timestamp;\n\t\tuint ethBlocksSinceLastDifficultyPeriod2 = blktimestamp - latestDifficultyPeriodStarted2;\n\n\t\tuint adjusDiffTargetTime = targetTime *  _BLOCKS_PER_READJUSTMENT; //36 min per block 60 sec * 12\n\n\t\t//if there were less eth blocks passed in time than expected\n\t\tif( ethBlocksSinceLastDifficultyPeriod2 < adjusDiffTargetTime )\n\t\t{\n\t\t\tuint excess_block_pct = (adjusDiffTargetTime.mult(100)).div( ethBlocksSinceLastDifficultyPeriod2 );\n\t\t\tgive = 1;\n\t\t\tuint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\n\t\t\t//make it harder \n\t\t\tminingTarget = miningTarget.sub(miningTarget.div(2000).mult(excess_block_pct_extra));   //by up to 50 %\n\t\t}else{\n\t\t\tuint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod2.mult(100)).div( adjusDiffTargetTime );\n\t\t\tgive = 2;\n\t\t\tuint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\n\t\t\t//make it easier\n\t\t\tminingTarget = miningTarget.add(miningTarget.div(1000).mult(shortage_block_pct_extra));   //by up to 100 %\n\t\t}\n\n\t\tlatestDifficultyPeriodStarted2 = blktimestamp;\n\t\tlatestDifficultyPeriodStarted = block.number;\n\t\tif(miningTarget < _MINIMUM_TARGET) //very difficult\n\t\t{\n\t\t\tminingTarget = _MINIMUM_TARGET;\n\t\t}\n\t\tif(miningTarget > _MAXIMUM_TARGET) //very easy\n\t\t{\n\t\t\tminingTarget = _MAXIMUM_TARGET;\n\t\t}\n\t\t\n\t}\n\n\n\t\t//42 m coins total\n\t\t// = \n\t\t//21 million proof of work\n\t\t// + \n\t\t//10.5 million proof of burn\n\t\t// +\n\t\t//10.5 million rewards for Liquidity Providers\n\n\n\t//help debug mining software\n\tfunction checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\n\t\tbytes32 digest = bytes32(keccak256(abi.encodePacked(challenge_number,msg.sender,nonce)));\n\t\tif(uint256(digest) > testTarget) revert();\n\n\t\treturn (digest == challenge_digest);\n\t}\n\n\n\t//this is a recent ethereum block hash, used to prevent pre-mining future blocks\n\tfunction getChallengeNumber() public view returns (bytes32) {\n\n\t\treturn challengeNumber;\n\n\t}\n\n\n\t//the number of zeroes the digest of the PoW solution requires.  Auto adjusts\n\tfunction getMiningDifficulty() public view returns (uint) {\n\n\t\treturn _MAXIMUM_TARGET.div(miningTarget);\n\t}\n\n\n\tfunction getMiningTarget() public view returns (uint) {\n\n\t\treturn miningTarget;\n\n\t}\n\n\n\tfunction getMiningMinted() public view returns (uint) {\n\n\t\treturn tokensMinted;\n\n\t}\n\n\n\t//21m coins total\n\t//reward begins at 150 and is cut in half every reward era (as tokens are mined)\n\tfunction getMiningReward() public view returns (uint) {\n\t\t//once we get half way thru the coins, only get 25 per block\n\t\t//every reward era, the reward amount halves.\n\n\t\treturn (100 * 10**uint(decimals) ).div( 2**rewardEra ) ;\n\n\t\t}\n\n\n\tfunction getEpoch() public view returns (uint) {\n\n\t\treturn epochCount ;\n\n\t}\n\n\n\t//help debug mining software\n\tfunction getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\n\n\t\tbytes32 digest =  keccak256(abi.encodePacked(challengeNumber, msg.sender, nonce));\n\n\t\treturn digest;\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Get the token balance for account `tokenOwner`\n\n\t\t// ------------------------------------------------------------------------\n\n\tfunction balanceOf(address tokenOwner) public override view returns (uint balance) {\n\n\t\treturn balances[tokenOwner];\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Transfer the balance from token owner's account to `to` account\n\n\t\t// - Owner's account must have sufficient balance to transfer\n\n\t\t// - 0 value transfers are allowed\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction transfer(address to, uint tokens) public override returns (bool success) {\n\n\t\tbalances[msg.sender] = balances[msg.sender].sub(tokens);\n\t\tbalances[to] = balances[to].add(tokens);\n\n\t\temit Transfer(msg.sender, to, tokens);\n\n\t\treturn true;\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n\t\t// from the token owner's account\n\n\t\t//\n\n\t\t// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n\n\t\t// recommends that there are no checks for the approval double-spend attack\n\n\t\t// as this should be implemented in user interfaces\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction approve(address spender, uint tokens) public override returns (bool success) {\n\n\t\tallowed[msg.sender][spender] = tokens;\n\n\t\temit Approval(msg.sender, spender, tokens);\n\n\t\treturn true;\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Transfer `tokens` from the `from` account to the `to` account\n\n\t\t//\n\n\t\t// The calling account must already have sufficient tokens approve(...)-d\n\n\t\t// for spending from the `from` account and\n\n\t\t// - From account must have sufficient balance to transfer\n\n\t\t// - Spender must have sufficient allowance to transfer\n\n\t\t// - 0 value transfers are allowed\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction transferFrom(address from, address to, uint tokens) public override returns (bool success) {\n\n\t\tbalances[from] = balances[from].sub(tokens);\n\t\tallowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n\t\tbalances[to] = balances[to].add(tokens);\n\n\t\temit Transfer(from, to, tokens);\n\n\t\treturn true;\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Returns the amount of tokens approved by the owner that can be\n\n\t\t// transferred to the spender's account\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction allowance(address tokenOwner, address spender) public override view returns (uint remaining) {\n\n\t\treturn allowed[tokenOwner][spender];\n\n\t}\n\n\n\t\t// ------------------------------------------------------------------------\n\n\t\t// Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n\t\t// from the token owner's account. The `spender` contract function\n\n\t\t// `receiveApproval(...)` is then executed\n\n\t\t// ------------------------------------------------------------------------\n\n\n\tfunction receiveApproval(address from, uint256 tokens, address token, bytes memory data) public override{\n\n\t\trequire(token == address(this));\n\t\tIERC20(address(this)).transfer(from, tokens);  \n\t}\n\n\n\t  //Do not allow ETH to enter\n\treceive() external payable {\n\n\t\trevert();\n\t}\n\n\n\tfallback() external payable {\n\n\t\trevert();\n\t}\n\n\n}\n",
  "sourceMap": "5860:21039:0:-:0;;;6585:26;6547:64;;6735:26;6715:46;;6812:15;6767:60;;6858:1;6833:26;;6931:3;6892:42;;6994:5;6963:36;;-1:-1:-1;;;7010:37:0;;7080:36;7100:15;7080;;:19;;;;;;:36;;;;:::i;:::-;7053:63;;7296:1;7272:25;;7349:37;7371:9;;7383:1;7371:13;;;;:::i;:::-;7367:18;;:1;:18;:::i;:::-;7349:12;;:16;;;;;;:37;;;;:::i;:::-;7334:12;;:52;;;;:::i;:::-;7303:84;;7421:47;7457:9;;7454:1;:12;;;;:::i;:::-;7428:18;8106:2;7428;:18;:::i;:::-;7422:24;;:3;:24;:::i;:::-;7421:31;;;;;;:47;;;;:::i;:::-;7393:75;;7517:1;7500:18;;;;7556:15;7524:47;;7598:19;7577:40;;7654:9;7623:40;;7702:7;7669:40;;7753:2;7715:40;;7935:18;;7971:1;7959:13;;7994:28;;;;;;;;;;;;;-1:-1:-1;;;7994:28:0;;;;;;;;;;;:::i;:::-;-1:-1:-1;8143:1:0;8114:30;;8169:15;8151:33;;8234:12;8190:56;;8252:19;;;-1:-1:-1;;8252:19:0;;;5860:21039;;;;;;;;;-1:-1:-1;3007:5:0;:18;;-1:-1:-1;;;;;;3007:18:0;3015:10;3007:18;;;;;3040:41;;;2168:34:1;;;2233:2;2218:18;;2211:43;;;;3040:41:0;;2103:18:1;3040:41:0;;;;;;;5860:21039;;4276:136;4334:7;4361:6;4353:30;;;;-1:-1:-1;;;4353:30:0;;2467:2:1;4353:30:0;;;2449:21:1;2506:2;2486:18;;;2479:30;-1:-1:-1;;;2525:18:1;;;2518:41;2576:18;;4353:30:0;;;;;;;;4400:5;4404:1;4400;:5;:::i;:::-;4393:12;;4276:136;;;;;:::o;5860:21039::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5860:21039:0;;;-1:-1:-1;5860:21039:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:128;186:3;217:1;213:6;210:1;207:13;204:39;;;223:18;;:::i;:::-;-1:-1:-1;259:9:1;;146:128::o;279:422::-;368:1;411:5;368:1;425:270;446:7;436:8;433:21;425:270;;;505:4;501:1;497:6;493:17;487:4;484:27;481:53;;;514:18;;:::i;:::-;564:7;554:8;550:22;547:55;;;584:16;;;;547:55;663:22;;;;623:15;;;;425:270;;;429:3;279:422;;;;;:::o;706:806::-;755:5;785:8;775:80;;-1:-1:-1;826:1:1;840:5;;775:80;874:4;864:76;;-1:-1:-1;911:1:1;925:5;;864:76;956:4;974:1;969:59;;;;1042:1;1037:130;;;;949:218;;969:59;999:1;990:10;;1013:5;;;1037:130;1074:3;1064:8;1061:17;1058:43;;;1081:18;;:::i;:::-;-1:-1:-1;;1137:1:1;1123:16;;1152:5;;949:218;;1251:2;1241:8;1238:16;1232:3;1226:4;1223:13;1219:36;1213:2;1203:8;1200:16;1195:2;1189:4;1186:12;1182:35;1179:77;1176:159;;;-1:-1:-1;1288:19:1;;;1320:5;;1176:159;1367:34;1392:8;1386:4;1367:34;:::i;:::-;1437:6;1433:1;1429:6;1425:19;1416:7;1413:32;1410:58;;;1448:18;;:::i;:::-;1486:20;;706:806;-1:-1:-1;;;706:806:1:o;1517:131::-;1577:5;1606:36;1633:8;1627:4;1606:36;:::i;1653:125::-;1693:4;1721:1;1718;1715:8;1712:34;;;1726:18;;:::i;:::-;-1:-1:-1;1763:9:1;;1653:125::o;1783:168::-;1823:7;1889:1;1885;1881:6;1877:14;1874:1;1871:21;1866:1;1859:9;1852:17;1848:45;1845:71;;;1896:18;;:::i;:::-;-1:-1:-1;1936:9:1;;1783:168::o;2605:217::-;2645:1;2671;2661:132;;2715:10;2710:3;2706:20;2703:1;2696:31;2750:4;2747:1;2740:15;2778:4;2775:1;2768:15;2661:132;-1:-1:-1;2807:9:1;;2605:217::o;2827:380::-;2906:1;2902:12;;;;2949;;;2970:61;;3024:4;3016:6;3012:17;3002:27;;2970:61;3077:2;3069:6;3066:14;3046:18;3043:38;3040:161;;;3123:10;3118:3;3114:20;3111:1;3104:31;3158:4;3155:1;3148:15;3186:4;3183:1;3176:15;3040:161;;2827:380;;;:::o;:::-;5860:21039:0;;;;;;",
  "sourcePath": "contracts/ProofOfWork.sol",
  "type": "contract"
}