{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "epochCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newChallengeNumber",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "NumberOfTokensMinted",
          "type": "uint256"
        }
      ],
      "name": "MegaMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "epochCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newChallengeNumber",
          "type": "bytes32"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "TransferOwnership",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "nonce",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "challenge_digest",
          "type": "bool"
        }
      ],
      "name": "AOpenMint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ARewardSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AddressAuction",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AddressLPReward",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AddressZeroXBTC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ChallengeForEpoch",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "EpochForChallenge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Token2Per",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_BLOCKS_PER_READJUSTMENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_MAXIMUM_TARGET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_MINIMUM_TARGET",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "challengeNumber",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_number",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "testTarget",
          "type": "uint256"
        }
      ],
      "name": "checkMintSolution",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epochCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getChallengeNumber",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningDifficulty",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningReward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMiningTarget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_number",
          "type": "bytes32"
        }
      ],
      "name": "getMintDigest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "digesttest",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestDifficultyPeriodStarted2",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupplyForEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "miningTarget",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "mintTo",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "ExtraFunds",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "MintTo",
          "type": "address[]"
        }
      ],
      "name": "mintTokensArrayTo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "challenge_digest",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "ExtraFunds",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "MintTo",
          "type": "address"
        }
      ],
      "name": "mintTokensSameAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "receiveApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardEra",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reward_amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "solutionForChallenge",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensMinted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLifetimes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "zFIRST",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "AuctionAddress2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "LPGuild2",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ZeroXBTCAddress",
          "type": "address"
        }
      ],
      "name": "zinit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "2": "contracts/mining.sol"
  },
  "ast": {
    "absolutePath": "contracts/mining.sol",
    "exportedSymbols": {
      "ApproveAndCallFallBack": [
        5060
      ],
      "ExtendedMath2": [
        4981
      ],
      "ForgeMining": [
        6670
      ],
      "IERC20": [
        5048
      ],
      "IsContract": [
        4822
      ],
      "Ownable": [
        4795
      ],
      "SafeMath2": [
        4962
      ]
    },
    "id": 6671,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4739,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "2784:23:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4795,
        "linearizedBaseContracts": [
          4795
        ],
        "name": "Ownable",
        "nameLocation": "2818:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 4741,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "2847:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 4795,
            "src": "2832:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4740,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2832:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 4747,
            "name": "TransferOwnership",
            "nameLocation": "2865:17:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4743,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2891:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4747,
                  "src": "2883:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2883:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4745,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2906:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4747,
                  "src": "2898:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2898:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2882:28:2"
            },
            "src": "2859:52:2"
          },
          {
            "body": {
              "id": 4764,
              "nodeType": "Block",
              "src": "2938:91:2",
              "statements": [
                {
                  "expression": {
                    "id": 4753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4750,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4741,
                      "src": "2948:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4751,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2956:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2956:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2948:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4754,
                  "nodeType": "ExpressionStatement",
                  "src": "2948:18:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3007:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2999:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4756,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2999:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2999:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4760,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3011:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3011:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4755,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4747,
                      "src": "2981:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2981:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4763,
                  "nodeType": "EmitStatement",
                  "src": "2976:46:2"
                }
              ]
            },
            "id": 4765,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2928:2:2"
            },
            "returnParameters": {
              "id": 4749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2938:0:2"
            },
            "scope": 4795,
            "src": "2917:112:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4776,
              "nodeType": "Block",
              "src": "3056:70:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4768,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3074:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3074:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4770,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4741,
                          "src": "3088:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3074:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f776e6572",
                        "id": 4772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3095:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367",
                          "typeString": "literal_string \"only owner\""
                        },
                        "value": "only owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae2932905fc5bb055d2e7b29311075afd0dbf688106cf649cb515d342f4c7367",
                          "typeString": "literal_string \"only owner\""
                        }
                      ],
                      "id": 4767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3066:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3066:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4774,
                  "nodeType": "ExpressionStatement",
                  "src": "3066:42:2"
                },
                {
                  "id": 4775,
                  "nodeType": "PlaceholderStatement",
                  "src": "3118:1:2"
                }
              ]
            },
            "id": 4777,
            "name": "onlyOwner",
            "nameLocation": "3044:9:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3053:2:2"
            },
            "src": "3035:91:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4793,
              "nodeType": "Block",
              "src": "3185:78:2",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4785,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4741,
                        "src": "3218:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4786,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4779,
                        "src": "3225:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4784,
                      "name": "TransferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4747,
                      "src": "3200:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 4787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3200:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4788,
                  "nodeType": "EmitStatement",
                  "src": "3195:37:2"
                },
                {
                  "expression": {
                    "id": 4791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4789,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4741,
                      "src": "3242:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4790,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4779,
                      "src": "3250:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3242:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4792,
                  "nodeType": "ExpressionStatement",
                  "src": "3242:14:2"
                }
              ]
            },
            "id": 4794,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4782,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4781,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4777,
                  "src": "3175:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3175:9:2"
              }
            ],
            "name": "setOwner",
            "nameLocation": "3141:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4779,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3158:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4794,
                  "src": "3150:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3150:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3149:16:2"
            },
            "returnParameters": {
              "id": 4783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3185:0:2"
            },
            "scope": 4795,
            "src": "3132:131:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 6671,
        "src": "2809:456:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IsContract",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 4822,
        "linearizedBaseContracts": [
          4822
        ],
        "name": "IsContract",
        "nameLocation": "3278:10:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4820,
              "nodeType": "Block",
              "src": "3359:254:2",
              "statements": [
                {
                  "assignments": [
                    4803
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4803,
                      "mutability": "mutable",
                      "name": "codehash",
                      "nameLocation": "3377:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 4820,
                      "src": "3369:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 4802,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3369:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4804,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3369:16:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3443:34:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3445:30:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "_addr",
                              "nodeType": "YulIdentifier",
                              "src": "3469:5:2"
                            }
                          ],
                          "functionName": {
                            "name": "extcodehash",
                            "nodeType": "YulIdentifier",
                            "src": "3457:11:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3457:18:2"
                        },
                        "variableNames": [
                          {
                            "name": "codehash",
                            "nodeType": "YulIdentifier",
                            "src": "3445:8:2"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 4797,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3469:5:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4803,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3445:8:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 4805,
                  "nodeType": "InlineAssembly",
                  "src": "3434:43:2"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 4811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4806,
                        "name": "codehash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4803,
                        "src": "3493:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3513:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3505:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 4807,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3505:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3505:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "3493:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 4817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4812,
                        "name": "codehash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4803,
                        "src": "3519:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
                            "id": 4815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3539:66:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                              "typeString": "int_const 8947...(69 digits omitted)...1552"
                            },
                            "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                              "typeString": "int_const 8947...(69 digits omitted)...1552"
                            }
                          ],
                          "id": 4814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3531:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 4813,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "3531:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3531:75:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "3519:87:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3493:113:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4801,
                  "id": 4819,
                  "nodeType": "Return",
                  "src": "3486:120:2"
                }
              ]
            },
            "id": 4821,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "3304:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4797,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "3323:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4821,
                  "src": "3315:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3314:15:2"
            },
            "returnParameters": {
              "id": 4801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4800,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4821,
                  "src": "3353:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4799,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3353:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3352:6:2"
            },
            "scope": 4822,
            "src": "3295:318:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 6671,
        "src": "3270:345:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SafeMath2",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 4962,
        "linearizedBaseContracts": [
          4962
        ],
        "name": "SafeMath2",
        "nameLocation": "3664:9:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4846,
              "nodeType": "Block",
              "src": "3747:93:2",
              "statements": [
                {
                  "assignments": [
                    4832
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4832,
                      "mutability": "mutable",
                      "name": "z",
                      "nameLocation": "3765:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 4846,
                      "src": "3757:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4831,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3757:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4836,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4833,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4824,
                      "src": "3769:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 4834,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4826,
                      "src": "3773:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3769:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3757:17:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4838,
                          "name": "z",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4832,
                          "src": "3792:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4839,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4824,
                          "src": "3797:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3792:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464206f766572666c6f77",
                        "id": 4841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3800:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa4a09cb808b49d829bef87085c3bdc390724305970e1b52e94e95f1f37478fe",
                          "typeString": "literal_string \"Add overflow\""
                        },
                        "value": "Add overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa4a09cb808b49d829bef87085c3bdc390724305970e1b52e94e95f1f37478fe",
                          "typeString": "literal_string \"Add overflow\""
                        }
                      ],
                      "id": 4837,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3784:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3784:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4843,
                  "nodeType": "ExpressionStatement",
                  "src": "3784:31:2"
                },
                {
                  "expression": {
                    "id": 4844,
                    "name": "z",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4832,
                    "src": "3832:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4830,
                  "id": 4845,
                  "nodeType": "Return",
                  "src": "3825:8:2"
                }
              ]
            },
            "id": 4847,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "add",
            "nameLocation": "3689:3:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4824,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "3701:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4847,
                  "src": "3693:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3693:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4826,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "3712:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4847,
                  "src": "3704:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3704:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3692:22:2"
            },
            "returnParameters": {
              "id": 4830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4829,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4847,
                  "src": "3738:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3738:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3737:9:2"
            },
            "scope": 4962,
            "src": "3680:160:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4867,
              "nodeType": "Block",
              "src": "3913:71:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4857,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4849,
                          "src": "3931:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4858,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4851,
                          "src": "3936:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3931:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53756220756e646572666c6f77",
                        "id": 4860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3939:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38ce778462b9331943eef0c96f2f8f9c93c4fa53b734e13373f568799ccb49b6",
                          "typeString": "literal_string \"Sub underflow\""
                        },
                        "value": "Sub underflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38ce778462b9331943eef0c96f2f8f9c93c4fa53b734e13373f568799ccb49b6",
                          "typeString": "literal_string \"Sub underflow\""
                        }
                      ],
                      "id": 4856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3923:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3923:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4862,
                  "nodeType": "ExpressionStatement",
                  "src": "3923:32:2"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4863,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4849,
                      "src": "3972:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 4864,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4851,
                      "src": "3976:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3972:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4855,
                  "id": 4866,
                  "nodeType": "Return",
                  "src": "3965:12:2"
                }
              ]
            },
            "id": 4868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sub",
            "nameLocation": "3855:3:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4849,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "3867:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4868,
                  "src": "3859:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3859:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4851,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "3878:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4868,
                  "src": "3870:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3870:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3858:22:2"
            },
            "returnParameters": {
              "id": 4855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4854,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4868,
                  "src": "3904:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3904:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3903:9:2"
            },
            "scope": 4962,
            "src": "3846:138:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4901,
              "nodeType": "Block",
              "src": "4058:153:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4877,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4870,
                      "src": "4072:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4077:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4072:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4883,
                  "nodeType": "IfStatement",
                  "src": "4068:45:2",
                  "trueBody": {
                    "id": 4882,
                    "nodeType": "Block",
                    "src": "4080:33:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 4880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4101:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 4876,
                        "id": 4881,
                        "nodeType": "Return",
                        "src": "4094:8:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4885
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4885,
                      "mutability": "mutable",
                      "name": "z",
                      "nameLocation": "4131:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 4901,
                      "src": "4123:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4884,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4123:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4889,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4886,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4870,
                      "src": "4135:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 4887,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4872,
                      "src": "4139:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4135:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4123:17:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4891,
                            "name": "z",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4885,
                            "src": "4158:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 4892,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4870,
                            "src": "4162:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4158:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4894,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4872,
                          "src": "4167:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4158:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d756c74206f766572666c6f77",
                        "id": 4896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4170:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b61ec05faf532e28d1c13e4d3a4852aac2e272b3ad86065ccd5cc169d88f0376",
                          "typeString": "literal_string \"Mult overflow\""
                        },
                        "value": "Mult overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b61ec05faf532e28d1c13e4d3a4852aac2e272b3ad86065ccd5cc169d88f0376",
                          "typeString": "literal_string \"Mult overflow\""
                        }
                      ],
                      "id": 4890,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4150:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4150:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4898,
                  "nodeType": "ExpressionStatement",
                  "src": "4150:36:2"
                },
                {
                  "expression": {
                    "id": 4899,
                    "name": "z",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4885,
                    "src": "4203:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4876,
                  "id": 4900,
                  "nodeType": "Return",
                  "src": "4196:8:2"
                }
              ]
            },
            "id": 4902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mult",
            "nameLocation": "3999:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4870,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4012:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4902,
                  "src": "4004:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4004:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4872,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4023:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4902,
                  "src": "4015:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4015:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4003:22:2"
            },
            "returnParameters": {
              "id": 4876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4875,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4902,
                  "src": "4049:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4874,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4049:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4048:9:2"
            },
            "scope": 4962,
            "src": "3990:221:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4922,
              "nodeType": "Block",
              "src": "4284:69:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4912,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4906,
                          "src": "4302:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4307:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4302:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446976206279207a65726f",
                        "id": 4915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4310:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        },
                        "value": "Div by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        }
                      ],
                      "id": 4911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4294:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4294:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4917,
                  "nodeType": "ExpressionStatement",
                  "src": "4294:30:2"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4918,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4904,
                      "src": "4341:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 4919,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4906,
                      "src": "4345:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4341:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4910,
                  "id": 4921,
                  "nodeType": "Return",
                  "src": "4334:12:2"
                }
              ]
            },
            "id": 4923,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "div",
            "nameLocation": "4226:3:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4904,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4238:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4923,
                  "src": "4230:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4230:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4906,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4249:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4923,
                  "src": "4241:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4241:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4229:22:2"
            },
            "returnParameters": {
              "id": 4910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4909,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4923,
                  "src": "4275:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4275:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4274:9:2"
            },
            "scope": 4962,
            "src": "4217:136:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4960,
              "nodeType": "Block",
              "src": "4431:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4933,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4927,
                          "src": "4449:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4454:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4449:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446976206279207a65726f",
                        "id": 4936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4457:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        },
                        "value": "Div by zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a7f51907c74e418af6cebdc14ae272c7abcc5e6b9224b924998b72880e82df1",
                          "typeString": "literal_string \"Div by zero\""
                        }
                      ],
                      "id": 4932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4441:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4441:30:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4938,
                  "nodeType": "ExpressionStatement",
                  "src": "4441:30:2"
                },
                {
                  "assignments": [
                    4940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4940,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "4489:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 4960,
                      "src": "4481:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4939,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4481:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4944,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4941,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4925,
                      "src": "4493:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 4942,
                      "name": "y",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4927,
                      "src": "4497:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4493:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4481:17:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 4945,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4925,
                        "src": "4512:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "id": 4946,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4927,
                        "src": "4516:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4512:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4521:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4512:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4957,
                  "nodeType": "IfStatement",
                  "src": "4508:50:2",
                  "trueBody": {
                    "id": 4956,
                    "nodeType": "Block",
                    "src": "4524:34:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 4954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4950,
                            "name": "r",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4940,
                            "src": "4538:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4951,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4940,
                              "src": "4542:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 4952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4546:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4542:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4538:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4955,
                        "nodeType": "ExpressionStatement",
                        "src": "4538:9:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4958,
                    "name": "r",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4940,
                    "src": "4575:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4931,
                  "id": 4959,
                  "nodeType": "Return",
                  "src": "4568:8:2"
                }
              ]
            },
            "id": 4961,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "divRound",
            "nameLocation": "4368:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4925,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4385:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4961,
                  "src": "4377:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4377:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4927,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4396:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4961,
                  "src": "4388:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4926,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4388:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4376:22:2"
            },
            "returnParameters": {
              "id": 4931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4930,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4961,
                  "src": "4422:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4422:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4421:9:2"
            },
            "scope": 4962,
            "src": "4359:224:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 6671,
        "src": "3656:929:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ExtendedMath2",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 4981,
        "linearizedBaseContracts": [
          4981
        ],
        "name": "ExtendedMath2",
        "nameLocation": "4630:13:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4979,
              "nodeType": "Block",
              "src": "4774:56:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4971,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4964,
                      "src": "4788:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 4972,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4966,
                      "src": "4792:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4788:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4976,
                  "nodeType": "IfStatement",
                  "src": "4785:18:2",
                  "trueBody": {
                    "expression": {
                      "id": 4974,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4966,
                      "src": "4802:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 4970,
                    "id": 4975,
                    "nodeType": "Return",
                    "src": "4795:8:2"
                  }
                },
                {
                  "expression": {
                    "id": 4977,
                    "name": "a",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4964,
                    "src": "4821:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4970,
                  "id": 4978,
                  "nodeType": "Return",
                  "src": "4814:8:2"
                }
              ]
            },
            "id": 4980,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "limitLessThan",
            "nameLocation": "4713:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4964,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "4732:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4980,
                  "src": "4727:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4963,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4727:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4966,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "4740:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4980,
                  "src": "4735:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4965,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4735:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4726:16:2"
            },
            "returnParameters": {
              "id": 4970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4969,
                  "mutability": "mutable",
                  "name": "c",
                  "nameLocation": "4771:1:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4980,
                  "src": "4766:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4968,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4766:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4765:8:2"
            },
            "scope": 4981,
            "src": "4704:126:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 6671,
        "src": "4622:210:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 5048,
        "linearizedBaseContracts": [
          5048
        ],
        "name": "IERC20",
        "nameLocation": "4886:6:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "18160ddd",
            "id": 4986,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "4905:11:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4916:2:2"
            },
            "returnParameters": {
              "id": 4985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4984,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4986,
                  "src": "4942:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4983,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4942:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4941:9:2"
            },
            "scope": 5048,
            "src": "4896:55:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 4994,
            "name": "Transfer",
            "nameLocation": "4962:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4988,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "4987:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4994,
                  "src": "4971:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4971:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4990,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5010:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4994,
                  "src": "4994:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4994:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4992,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5023:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 4994,
                  "src": "5015:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5015:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4970:60:2"
            },
            "src": "4956:75:2"
          },
          {
            "anonymous": false,
            "id": 5002,
            "name": "Approval",
            "nameLocation": "5042:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4996,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5067:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5002,
                  "src": "5051:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5051:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4998,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "5091:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5002,
                  "src": "5075:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5075:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5000,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5109:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5002,
                  "src": "5101:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5101:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5050:66:2"
            },
            "src": "5036:81:2"
          },
          {
            "functionSelector": "a9059cbb",
            "id": 5011,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "5131:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5004,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5148:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5011,
                  "src": "5140:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5140:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5006,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5158:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5011,
                  "src": "5153:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5005,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5153:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5139:26:2"
            },
            "returnParameters": {
              "id": 5010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5009,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5189:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5011,
                  "src": "5184:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5008,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5184:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5183:14:2"
            },
            "scope": 5048,
            "src": "5122:76:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 5022,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5212:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5013,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5233:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5022,
                  "src": "5225:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5225:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5015,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5248:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5022,
                  "src": "5240:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5240:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5017,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5261:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5022,
                  "src": "5253:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5253:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5224:44:2"
            },
            "returnParameters": {
              "id": 5021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5020,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5292:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5022,
                  "src": "5287:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5019,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5287:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5286:14:2"
            },
            "scope": 5048,
            "src": "5203:98:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "dd62ed3e",
            "id": 5031,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "5315:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5024,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5333:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5031,
                  "src": "5325:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5325:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5026,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "5349:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5031,
                  "src": "5341:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5341:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5324:34:2"
            },
            "returnParameters": {
              "id": 5030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5029,
                  "mutability": "mutable",
                  "name": "remaining",
                  "nameLocation": "5390:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5031,
                  "src": "5382:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5382:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5381:19:2"
            },
            "scope": 5048,
            "src": "5306:95:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 5040,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "5415:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5033,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "5431:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5040,
                  "src": "5423:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5423:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5035,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "5449:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5040,
                  "src": "5441:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5441:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5422:34:2"
            },
            "returnParameters": {
              "id": 5039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5038,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "5480:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5040,
                  "src": "5475:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5037,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5475:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5474:14:2"
            },
            "scope": 5048,
            "src": "5406:83:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "70a08231",
            "id": 5047,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "5503:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5042,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5521:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5047,
                  "src": "5513:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5513:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5512:16:2"
            },
            "returnParameters": {
              "id": 5046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5045,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "5560:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5047,
                  "src": "5552:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5044,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5552:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5551:17:2"
            },
            "scope": 5048,
            "src": "5494:75:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6671,
        "src": "4876:700:2",
        "usedErrors": []
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "ApproveAndCallFallBack",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": false,
        "id": 5060,
        "linearizedBaseContracts": [
          5060
        ],
        "name": "ApproveAndCallFallBack",
        "nameLocation": "5646:22:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "8f4ffcb1",
            "id": 5059,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nameLocation": "5684:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5050,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5708:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5059,
                  "src": "5700:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5700:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5052,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "5722:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5059,
                  "src": "5714:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5714:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5054,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "5738:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5059,
                  "src": "5730:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5730:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5056,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5758:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5059,
                  "src": "5745:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5055,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5745:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5699:64:2"
            },
            "returnParameters": {
              "id": 5058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5778:0:2"
            },
            "scope": 5060,
            "src": "5675:104:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 6671,
        "src": "5628:153:2",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5061,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4795,
              "src": "5825:7:2"
            },
            "id": 5062,
            "nodeType": "InheritanceSpecifier",
            "src": "5825:7:2"
          },
          {
            "baseName": {
              "id": 5063,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5048,
              "src": "5834:6:2"
            },
            "id": 5064,
            "nodeType": "InheritanceSpecifier",
            "src": "5834:6:2"
          },
          {
            "baseName": {
              "id": 5065,
              "name": "ApproveAndCallFallBack",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5060,
              "src": "5842:22:2"
            },
            "id": 5066,
            "nodeType": "InheritanceSpecifier",
            "src": "5842:22:2"
          }
        ],
        "canonicalName": "ForgeMining",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6670,
        "linearizedBaseContracts": [
          6670,
          5060,
          5048,
          4795
        ],
        "name": "ForgeMining",
        "nameLocation": "5810:11:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "45d8a232",
            "id": 5071,
            "mutability": "constant",
            "name": "targetTime",
            "nameLocation": "5889:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "5868:41:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5067,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "5868:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_2160_by_1",
                "typeString": "int_const 2160"
              },
              "id": 5070,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "3336",
                "id": 5068,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5902:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_36_by_1",
                  "typeString": "int_const 36"
                },
                "value": "36"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3630",
                "id": 5069,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "5907:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_60_by_1",
                  "typeString": "int_const 60"
                },
                "value": "60"
              },
              "src": "5902:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2160_by_1",
                "typeString": "int_const 2160"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "94b939ef",
            "id": 5073,
            "mutability": "mutable",
            "name": "AddressAuction",
            "nameLocation": "5970:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "5955:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5072,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "5955:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2f104e0c",
            "id": 5075,
            "mutability": "mutable",
            "name": "AddressLPReward",
            "nameLocation": "6005:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "5990:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5074,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "5990:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "510de094",
            "id": 5077,
            "mutability": "mutable",
            "name": "AddressZeroXBTC",
            "nameLocation": "6041:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "6026:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5076,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6026:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5080,
            "libraryName": {
              "id": 5078,
              "name": "SafeMath2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4962,
              "src": "6077:9:2"
            },
            "nodeType": "UsingForDirective",
            "src": "6071:28:2",
            "typeName": {
              "id": 5079,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6091:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 5083,
            "libraryName": {
              "id": 5081,
              "name": "ExtendedMath2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4981,
              "src": "6110:13:2"
            },
            "nodeType": "UsingForDirective",
            "src": "6104:29:2",
            "typeName": {
              "id": 5082,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6128:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "id": 5093,
            "name": "Mint",
            "nameLocation": "6144:4:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5085,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6165:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5093,
                  "src": "6149:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6149:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5087,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward_amount",
                  "nameLocation": "6176:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5093,
                  "src": "6171:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5086,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6171:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5089,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "epochCount",
                  "nameLocation": "6196:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5093,
                  "src": "6191:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5088,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6191:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5091,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newChallengeNumber",
                  "nameLocation": "6216:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5093,
                  "src": "6208:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5090,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6208:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6148:87:2"
            },
            "src": "6138:98:2"
          },
          {
            "anonymous": false,
            "id": 5105,
            "name": "MegaMint",
            "nameLocation": "6247:8:2",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5095,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6272:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5105,
                  "src": "6256:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6256:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5097,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward_amount",
                  "nameLocation": "6283:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5105,
                  "src": "6278:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5096,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6278:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5099,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "epochCount",
                  "nameLocation": "6303:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5105,
                  "src": "6298:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5098,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6298:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5101,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newChallengeNumber",
                  "nameLocation": "6323:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5105,
                  "src": "6315:26:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5100,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6315:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "NumberOfTokensMinted",
                  "nameLocation": "6348:20:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5105,
                  "src": "6343:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5102,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6343:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6255:114:2"
            },
            "src": "6241:129:2"
          },
          {
            "baseFunctions": [
              4986
            ],
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 5109,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "6420:11:2",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 5107,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6404:8:2"
            },
            "scope": 6670,
            "src": "6396:64:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5106,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6396:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3432303030303031303030303030303030303030303030303030",
              "id": 5108,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6434:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_42000001000000000000000000_by_1",
                "typeString": "int_const 42000001000000000000000000"
              },
              "value": "42000001000000000000000000"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 5114,
            "mutability": "constant",
            "name": "BALANCE_KEY",
            "nameLocation": "6491:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "6466:59:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5110,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "6466:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "62616c616e6365",
                  "id": 5112,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "6515:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                    "typeString": "literal_string \"balance\""
                  },
                  "value": "balance"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_ea06f38f7e4f15e87567361213c28f235cccdaa1d7fd34c9db1dfe9489c6a091",
                    "typeString": "literal_string \"balance\""
                  }
                ],
                "id": 5111,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "6505:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 5113,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "6505:20:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5117,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "6569:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "6564:46:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5115,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6564:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3231303030303030303030303030303030303030303030303030",
              "id": 5116,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6584:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                "typeString": "int_const 21000000000000000000000000"
              },
              "value": "21000000000000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "e932012b",
            "id": 5121,
            "mutability": "mutable",
            "name": "latestDifficultyPeriodStarted2",
            "nameLocation": "6628:30:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "6616:60:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5118,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6616:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 5119,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "6661:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 5120,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "6661:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "829965cc",
            "id": 5124,
            "mutability": "mutable",
            "name": "epochCount",
            "nameLocation": "6694:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "6682:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5122,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6682:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 5123,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6707:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b5ade81b",
            "id": 5127,
            "mutability": "mutable",
            "name": "_BLOCKS_PER_READJUSTMENT",
            "nameLocation": "6753:24:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "6741:42:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5125,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6741:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "323536",
              "id": 5126,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "6780:3:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_256_by_1",
                "typeString": "int_const 256"
              },
              "value": "256"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dc6e9cf9",
            "id": 5132,
            "mutability": "mutable",
            "name": "_MINIMUM_TARGET",
            "nameLocation": "6825:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "6812:36:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5128,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6812:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_65536_by_1",
                "typeString": "int_const 65536"
              },
              "id": 5131,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "32",
                "id": 5129,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6843:1:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "3136",
                "id": 5130,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6846:2:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_16_by_1",
                  "typeString": "int_const 16"
                },
                "value": "16"
              },
              "src": "6843:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_65536_by_1",
                "typeString": "int_const 65536"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "87a2a9d6",
            "id": 5137,
            "mutability": "mutable",
            "name": "_MAXIMUM_TARGET",
            "nameLocation": "6872:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "6859:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5133,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6859:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                "typeString": "int_const 2760...(63 digits omitted)...7184"
              },
              "id": 5136,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "32",
                "id": 5134,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6890:1:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_2_by_1",
                  "typeString": "int_const 2"
                },
                "value": "2"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "hexValue": "323334",
                "id": 5135,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6893:3:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_234_by_1",
                  "typeString": "int_const 234"
                },
                "value": "234"
              },
              "src": "6890:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_27606985387162255149739023449108101809804435888681546220650096895197184_by_1",
                "typeString": "int_const 2760...(63 digits omitted)...7184"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a769d35",
            "id": 5145,
            "mutability": "mutable",
            "name": "miningTarget",
            "nameLocation": "6914:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "6902:63:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5138,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "6902:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_rational_5000000000000_by_1",
                    "typeString": "int_const 5000000000000"
                  },
                  "id": 5143,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "323030303030303030303030",
                    "id": 5141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6949:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_200000000000_by_1",
                      "typeString": "int_const 200000000000"
                    },
                    "value": "200000000000"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "hexValue": "3235",
                    "id": 5142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6962:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_25_by_1",
                      "typeString": "int_const 25"
                    },
                    "value": "25"
                  },
                  "src": "6949:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_5000000000000_by_1",
                    "typeString": "int_const 5000000000000"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_5000000000000_by_1",
                    "typeString": "int_const 5000000000000"
                  }
                ],
                "expression": {
                  "id": 5139,
                  "name": "_MAXIMUM_TARGET",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5137,
                  "src": "6929:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 5140,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "div",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 4923,
                "src": "6929:19:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                }
              },
              "id": 5144,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "6929:36:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8ae0368b",
            "id": 5147,
            "mutability": "mutable",
            "name": "challengeNumber",
            "nameLocation": "7049:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7034:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 5146,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "7034:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d38bf7a",
            "id": 5150,
            "mutability": "mutable",
            "name": "rewardEra",
            "nameLocation": "7133:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7121:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5148,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7121:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 5149,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7145:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4fa972e1",
            "id": 5164,
            "mutability": "mutable",
            "name": "maxSupplyForEra",
            "nameLocation": "7164:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7152:84:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5151,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7152:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "components": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 5162,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "lValueRequested": false,
                  "leftExpression": {
                    "id": 5152,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5117,
                    "src": "7183:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "-",
                  "rightExpression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 5155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7216:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5156,
                                "name": "rewardEra",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5150,
                                "src": "7220:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 5157,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7232:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "7220:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 5159,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7219:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7216:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5153,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5117,
                        "src": "7198:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4923,
                      "src": "7198:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7198:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "src": "7183:52:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "id": 5163,
              "isConstant": false,
              "isInlineArray": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "7182:54:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2381a60e",
            "id": 5180,
            "mutability": "mutable",
            "name": "reward_amount",
            "nameLocation": "7254:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7242:75:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5165,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7242:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "arguments": [
                {
                  "commonType": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "id": 5178,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "32",
                    "id": 5176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7303:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "**",
                  "rightExpression": {
                    "id": 5177,
                    "name": "rewardEra",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5150,
                    "src": "7306:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "src": "7303:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                ],
                "expression": {
                  "components": [
                    {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "313530",
                        "id": 5166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7271:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_150_by_1",
                          "typeString": "int_const 150"
                        },
                        "value": "150"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 5167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7277:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 5170,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5238,
                              "src": "7286:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 5169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7281:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 5168,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7281:4:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7281:14:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7277:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7271:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  ],
                  "id": 5174,
                  "isConstant": false,
                  "isInlineArray": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "TupleExpression",
                  "src": "7270:27:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 5175,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "div",
                "nodeType": "MemberAccess",
                "referencedDeclaration": 4923,
                "src": "7270:31:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                }
              },
              "id": 5179,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "7270:47:2",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5183,
            "mutability": "mutable",
            "name": "oldecount",
            "nameLocation": "7354:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7349:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5181,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7349:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 5182,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7366:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5187,
            "mutability": "mutable",
            "name": "previousBlockTime",
            "nameLocation": "7378:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7373:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5184,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7373:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 5185,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "7398:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 5186,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "7398:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5190,
            "mutability": "mutable",
            "name": "oneEthUnit",
            "nameLocation": "7424:10:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7419:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5188,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7419:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030303030303030303030",
              "id": 5189,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7440:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1000000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5193,
            "mutability": "mutable",
            "name": "one8unit",
            "nameLocation": "7470:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7465:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5191,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7465:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "313030303030303030",
              "id": 5192,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7496:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000_by_1",
                "typeString": "int_const 100000000"
              },
              "value": "100000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a68eb88e",
            "id": 5196,
            "mutability": "mutable",
            "name": "Token2Per",
            "nameLocation": "7523:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7511:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5194,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7511:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33303030303030",
              "id": 5195,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7544:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000000_by_1",
                "typeString": "int_const 3000000"
              },
              "value": "3000000"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5199,
            "mutability": "mutable",
            "name": "Token2Min",
            "nameLocation": "7562:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7557:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5197,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7557:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3130",
              "id": 5198,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7595:2:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "a70a8d23",
            "id": 5203,
            "mutability": "mutable",
            "name": "solutionForChallenge",
            "nameLocation": "7638:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7603:55:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
              "typeString": "mapping(bytes32 => bytes32)"
            },
            "typeName": {
              "id": 5202,
              "keyType": {
                "id": 5200,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "7611:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "7603:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                "typeString": "mapping(bytes32 => bytes32)"
              },
              "valueType": {
                "id": 5201,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "7622:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "669753a7",
            "id": 5207,
            "mutability": "mutable",
            "name": "EpochForChallenge",
            "nameLocation": "7696:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7664:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
              "typeString": "mapping(bytes32 => uint256)"
            },
            "typeName": {
              "id": 5206,
              "keyType": {
                "id": 5204,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "7672:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "7664:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
                "typeString": "mapping(bytes32 => uint256)"
              },
              "valueType": {
                "id": 5205,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "7683:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "90dc1ca3",
            "id": 5211,
            "mutability": "mutable",
            "name": "ChallengeForEpoch",
            "nameLocation": "7751:17:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7719:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
              "typeString": "mapping(uint256 => bytes32)"
            },
            "typeName": {
              "id": 5210,
              "keyType": {
                "id": 5208,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "7727:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "7719:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                "typeString": "mapping(uint256 => bytes32)"
              },
              "valueType": {
                "id": 5209,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "7735:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6de9f32b",
            "id": 5213,
            "mutability": "mutable",
            "name": "tokensMinted",
            "nameLocation": "7786:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7774:24:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5212,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7774:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5217,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "7829:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7804:33:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 5216,
              "keyType": {
                "id": 5214,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7812:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7804:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 5215,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "7823:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5223,
            "mutability": "mutable",
            "name": "allowed",
            "nameLocation": "7888:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7843:52:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 5222,
              "keyType": {
                "id": 5218,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "7851:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "7843:44:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 5221,
                "keyType": {
                  "id": 5219,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7870:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "7862:24:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 5220,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "7881:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5226,
            "mutability": "mutable",
            "name": "give0xBTC",
            "nameLocation": "7953:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7948:18:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5224,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7948:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 5225,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7965:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5229,
            "mutability": "mutable",
            "name": "give",
            "nameLocation": "7977:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "7972:13:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5227,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "7972:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 5228,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7984:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 5232,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "8021:4:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "8007:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 5230,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "8007:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "466f726765",
              "id": 5231,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8028:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_77767363ea794e1f1e9d0ebf67829596c5727d1b2aaffa7d888f58bfc8506a01",
                "typeString": "literal_string \"Forge\""
              },
              "value": "Forge"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "95d89b41",
            "id": 5235,
            "mutability": "constant",
            "name": "symbol",
            "nameLocation": "8064:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "8041:37:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 5233,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "8041:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "466765",
              "id": 5234,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8073:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_72bec6dc7612e67bf7079e1aafff1c2a41926b63891e6f06ea7f150ceb5d4b49",
                "typeString": "literal_string \"Fge\""
              },
              "value": "Fge"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "313ce567",
            "id": 5238,
            "mutability": "constant",
            "name": "decimals",
            "nameLocation": "8106:8:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "8084:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 5236,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "8084:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "3138",
              "id": 5237,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8117:2:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8a5550f6",
            "id": 5241,
            "mutability": "mutable",
            "name": "totalLifetimes",
            "nameLocation": "8137:14:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "8125:30:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5239,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "8125:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 5240,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8154:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 5244,
            "mutability": "mutable",
            "name": "inited",
            "nameLocation": "8168:6:2",
            "nodeType": "VariableDeclaration",
            "scope": 6670,
            "src": "8163:19:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 5242,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "8163:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 5243,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "8177:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5345,
              "nodeType": "Block",
              "src": "8288:983:2",
              "statements": [
                {
                  "assignments": [
                    5256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5256,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "8303:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 5345,
                      "src": "8298:6:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5255,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8298:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5266,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3231303030303030303030303030303030303030303030303030",
                      "id": 5257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8307:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_21000000000000000000000000_by_1",
                        "typeString": "int_const 21000000000000000000000000"
                      },
                      "value": "21000000000000000000000000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 5258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8337:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 5259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8341:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "id": 5260,
                                  "name": "totalLifetimes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5241,
                                  "src": "8346:14:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8341:19:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 5262,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8340:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8337:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5264,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8336:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8307:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8298:64:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8440:7:2",
                        "subExpression": {
                          "id": 5268,
                          "name": "inited",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5244,
                          "src": "8441:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5267,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "8433:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8433:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5271,
                  "nodeType": "ExpressionStatement",
                  "src": "8433:15:2"
                },
                {
                  "expression": {
                    "id": 5274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5272,
                      "name": "inited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5244,
                      "src": "8458:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 5273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8467:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8458:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5275,
                  "nodeType": "ExpressionStatement",
                  "src": "8458:13:2"
                },
                {
                  "expression": {
                    "id": 5278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5276,
                      "name": "rewardEra",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5150,
                      "src": "8480:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 5277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8492:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8480:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5279,
                  "nodeType": "ExpressionStatement",
                  "src": "8480:13:2"
                },
                {
                  "expression": {
                    "id": 5282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5280,
                      "name": "tokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5213,
                      "src": "8496:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 5281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8511:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8496:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5283,
                  "nodeType": "ExpressionStatement",
                  "src": "8496:16:2"
                },
                {
                  "expression": {
                    "id": 5289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5284,
                      "name": "miningTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5145,
                      "src": "8589:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31303031",
                          "id": 5287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8624:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          },
                          "value": "1001"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1001_by_1",
                            "typeString": "int_const 1001"
                          }
                        ],
                        "expression": {
                          "id": 5285,
                          "name": "_MAXIMUM_TARGET",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5137,
                          "src": "8604:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4923,
                        "src": "8604:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8604:25:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8589:40:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5290,
                  "nodeType": "ExpressionStatement",
                  "src": "8589:40:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5291,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6210,
                      "src": "8766:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8766:22:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5293,
                  "nodeType": "ExpressionStatement",
                  "src": "8766:22:2"
                },
                {
                  "expression": {
                    "id": 5298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5294,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5217,
                        "src": "8854:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5296,
                      "indexExpression": {
                        "id": 5295,
                        "name": "AuctionAddress2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5246,
                        "src": "8863:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8854:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5297,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5256,
                      "src": "8882:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8854:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5299,
                  "nodeType": "ExpressionStatement",
                  "src": "8854:29:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8915:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8907:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5301,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8907:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8907:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5305,
                        "name": "AuctionAddress2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5246,
                        "src": "8919:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5306,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5256,
                        "src": "8936:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5300,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4994,
                      "src": "8898:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8898:40:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5308,
                  "nodeType": "EmitStatement",
                  "src": "8893:45:2"
                },
                {
                  "expression": {
                    "id": 5311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5309,
                      "name": "AddressAuction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5073,
                      "src": "8945:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5310,
                      "name": "AuctionAddress2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5246,
                      "src": "8962:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8945:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5312,
                  "nodeType": "ExpressionStatement",
                  "src": "8945:32:2"
                },
                {
                  "expression": {
                    "id": 5318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5313,
                      "name": "AddressLPReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5075,
                      "src": "8989:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5316,
                          "name": "LPGuild2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5248,
                          "src": "9015:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 5315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9007:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 5314,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9007:8:2",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 5317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9007:17:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8989:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5319,
                  "nodeType": "ExpressionStatement",
                  "src": "8989:35:2"
                },
                {
                  "expression": {
                    "id": 5322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5320,
                      "name": "AddressZeroXBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5077,
                      "src": "9034:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5321,
                      "name": "_ZeroXBTCAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5250,
                      "src": "9052:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9034:34:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5323,
                  "nodeType": "ExpressionStatement",
                  "src": "9034:34:2"
                },
                {
                  "expression": {
                    "id": 5326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5324,
                      "name": "oldecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5183,
                      "src": "9078:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5325,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5124,
                      "src": "9090:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9078:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5327,
                  "nodeType": "ExpressionStatement",
                  "src": "9078:22:2"
                },
                {
                  "expression": {
                    "id": 5333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5328,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5217,
                        "src": "9147:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5331,
                      "indexExpression": {
                        "expression": {
                          "id": 5329,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9156:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9156:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9147:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030303030303030",
                      "id": 5332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9170:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000_by_1",
                        "typeString": "int_const 100000000"
                      },
                      "value": "100000000"
                    },
                    "src": "9147:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5334,
                  "nodeType": "ExpressionStatement",
                  "src": "9147:32:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9211:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9203:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5336,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9203:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9203:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5340,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9215:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9215:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030303030303030",
                        "id": 5342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9227:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000_by_1",
                          "typeString": "int_const 100000000"
                        },
                        "value": "100000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000_by_1",
                          "typeString": "int_const 100000000"
                        }
                      ],
                      "id": 5335,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4994,
                      "src": "9194:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9194:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5344,
                  "nodeType": "EmitStatement",
                  "src": "9189:48:2"
                }
              ]
            },
            "functionSelector": "64e46726",
            "id": 5346,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5253,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5252,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4777,
                  "src": "8279:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "8279:9:2"
              }
            ],
            "name": "zinit",
            "nameLocation": "8197:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5246,
                  "mutability": "mutable",
                  "name": "AuctionAddress2",
                  "nameLocation": "8211:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5346,
                  "src": "8203:23:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8203:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5248,
                  "mutability": "mutable",
                  "name": "LPGuild2",
                  "nameLocation": "8236:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5346,
                  "src": "8228:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8228:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5250,
                  "mutability": "mutable",
                  "name": "_ZeroXBTCAddress",
                  "nameLocation": "8254:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5346,
                  "src": "8246:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8246:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8202:69:2"
            },
            "returnParameters": {
              "id": 5254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8288:0:2"
            },
            "scope": 6670,
            "src": "8188:1083:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5377,
              "nodeType": "Block",
              "src": "9440:126:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9457:7:2",
                        "subExpression": {
                          "id": 5352,
                          "name": "inited",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5244,
                          "src": "9458:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5351,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "9450:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9450:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5355,
                  "nodeType": "ExpressionStatement",
                  "src": "9450:15:2"
                },
                {
                  "expression": {
                    "id": 5363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5356,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5217,
                        "src": "9475:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5359,
                      "indexExpression": {
                        "expression": {
                          "id": 5357,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9484:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9484:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9475:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 5362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 5360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9498:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "hexValue": "3138",
                        "id": 5361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9504:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "9498:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "9475:31:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5364,
                  "nodeType": "ExpressionStatement",
                  "src": "9475:31:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 5368,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9538:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 5367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9530:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 5366,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9530:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9530:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5370,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9542:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9542:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 5374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 5372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9554:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3138",
                          "id": 5373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9560:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "9554:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 5365,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4994,
                      "src": "9521:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 5375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9521:42:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5376,
                  "nodeType": "EmitStatement",
                  "src": "9516:47:2"
                }
              ]
            },
            "functionSelector": "11b1225f",
            "id": 5378,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5349,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5348,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4777,
                  "src": "9431:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "9431:9:2"
              }
            ],
            "name": "zFIRST",
            "nameLocation": "9415:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9421:2:2"
            },
            "returnParameters": {
              "id": 5350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9440:0:2"
            },
            "scope": 6670,
            "src": "9406:160:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5506,
              "nodeType": "Block",
              "src": "9677:793:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5387,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6210,
                      "src": "9690:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9690:22:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5389,
                  "nodeType": "ExpressionStatement",
                  "src": "9690:22:2"
                },
                {
                  "assignments": [
                    5391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5391,
                      "mutability": "mutable",
                      "name": "diff",
                      "nameLocation": "9729:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 5506,
                      "src": "9724:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5390,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9724:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5396,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5392,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9736:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 5393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "9736:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 5394,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5187,
                      "src": "9754:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9736:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9724:47:2"
                },
                {
                  "assignments": [
                    5398
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5398,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "9784:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 5506,
                      "src": "9779:6:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5397,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9779:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5400,
                  "initialValue": {
                    "hexValue": "34",
                    "id": 5399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9788:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    },
                    "value": "4"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9779:10:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5401,
                      "name": "diff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5391,
                      "src": "9800:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 5402,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5071,
                      "src": "9808:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9800:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5429,
                  "nodeType": "IfStatement",
                  "src": "9797:139:2",
                  "trueBody": {
                    "id": 5428,
                    "nodeType": "Block",
                    "src": "9826:110:2",
                    "statements": [
                      {
                        "body": {
                          "id": 5426,
                          "nodeType": "Block",
                          "src": "9857:71:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 5414,
                                  "name": "diff",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5391,
                                  "src": "9869:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "33",
                                      "id": 5420,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "9898:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      },
                                      "value": "3"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      }
                                    ],
                                    "expression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 5417,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 5415,
                                            "name": "targetTime",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5071,
                                            "src": "9878:10:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 5416,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5398,
                                            "src": "9891:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "9878:14:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 5418,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "9877:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 5419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4923,
                                    "src": "9877:20:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 5421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9877:23:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9869:31:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 5425,
                              "nodeType": "IfStatement",
                              "src": "9866:61:2",
                              "trueBody": {
                                "id": 5424,
                                "nodeType": "Block",
                                "src": "9901:26:2",
                                "statements": [
                                  {
                                    "id": 5423,
                                    "nodeType": "Break",
                                    "src": "9912:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5408,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5398,
                            "src": "9846:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 5409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9849:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "9846:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5427,
                        "initializationExpression": {
                          "expression": {
                            "id": 5406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 5404,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5398,
                              "src": "9839:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "34",
                              "id": 5405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9843:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "9839:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5407,
                          "nodeType": "ExpressionStatement",
                          "src": "9839:5:2"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 5412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9853:3:2",
                            "subExpression": {
                              "id": 5411,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5398,
                              "src": "9853:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5413,
                          "nodeType": "ExpressionStatement",
                          "src": "9853:3:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "9835:93:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5431,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "9954:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 5506,
                      "src": "9949:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5430,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9949:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5439,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 5437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9987:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5432,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5398,
                              "src": "9964:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 5433,
                              "name": "reward_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5180,
                              "src": "9968:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9964:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 5435,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9963:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4923,
                      "src": "9963:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9963:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9949:40:2"
                },
                {
                  "expression": {
                    "id": 5451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5440,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5217,
                        "src": "9999:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5443,
                      "indexExpression": {
                        "expression": {
                          "id": 5441,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10008:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10008:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9999:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5449,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5431,
                          "src": "10047:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 5444,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5217,
                            "src": "10022:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5447,
                          "indexExpression": {
                            "expression": {
                              "id": 5445,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10031:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10031:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10022:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4847,
                        "src": "10022:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10022:32:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9999:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5452,
                  "nodeType": "ExpressionStatement",
                  "src": "9999:55:2"
                },
                {
                  "expression": {
                    "id": 5466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5453,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5217,
                        "src": "10065:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5455,
                      "indexExpression": {
                        "id": 5454,
                        "name": "AddressLPReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5075,
                        "src": "10074:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10065:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 5463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10136:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "id": 5460,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5431,
                                  "src": "10124:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 5461,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10123:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4923,
                            "src": "10123:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10123:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 5456,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5217,
                            "src": "10093:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5458,
                          "indexExpression": {
                            "id": 5457,
                            "name": "AddressLPReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5075,
                            "src": "10102:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10093:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4847,
                        "src": "10093:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10093:46:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10065:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5467,
                  "nodeType": "ExpressionStatement",
                  "src": "10065:74:2"
                },
                {
                  "expression": {
                    "id": 5473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5468,
                      "name": "tokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5213,
                      "src": "10149:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5471,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5431,
                          "src": "10181:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 5469,
                          "name": "tokensMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5213,
                          "src": "10164:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4847,
                        "src": "10164:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10164:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10149:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5474,
                  "nodeType": "ExpressionStatement",
                  "src": "10149:39:2"
                },
                {
                  "expression": {
                    "id": 5478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5475,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5187,
                      "src": "10202:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5476,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10222:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 5477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10222:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10202:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5479,
                  "nodeType": "ExpressionStatement",
                  "src": "10202:35:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5480,
                      "name": "give0xBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5226,
                      "src": "10254:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10266:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10254:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5495,
                  "nodeType": "IfStatement",
                  "src": "10251:110:2",
                  "trueBody": {
                    "id": 5494,
                    "nodeType": "Block",
                    "src": "10268:93:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 5487,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10315:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10315:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5489,
                                "name": "Token2Per",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5196,
                                "src": "10327:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 5490,
                                "name": "give0xBTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5226,
                                "src": "10337:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10327:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5484,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5077,
                                  "src": "10289:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5483,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5048,
                                "src": "10282:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$5048_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10282:23:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5048",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5011,
                            "src": "10282:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 5492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10282:65:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5493,
                        "nodeType": "ExpressionStatement",
                        "src": "10282:65:2"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5497,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10383:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10383:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5499,
                        "name": "reward_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5180,
                        "src": "10395:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5500,
                        "name": "epochCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5124,
                        "src": "10410:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5501,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5147,
                        "src": "10422:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 5496,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5093,
                      "src": "10378:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 5502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10378:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5503,
                  "nodeType": "EmitStatement",
                  "src": "10373:66:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 5504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10459:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5386,
                  "id": 5505,
                  "nodeType": "Return",
                  "src": "10452:11:2"
                }
              ]
            },
            "functionSelector": "0d56d6e1",
            "id": 5507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "AOpenMint",
            "nameLocation": "9602:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5380,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "9617:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5507,
                  "src": "9612:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5379,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9612:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5382,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "9629:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5507,
                  "src": "9624:21:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5381,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9624:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9611:35:2"
            },
            "returnParameters": {
              "id": 5386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5385,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "9668:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5507,
                  "src": "9663:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5384,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9663:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9662:14:2"
            },
            "scope": 6670,
            "src": "9593:877:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5583,
              "nodeType": "Block",
              "src": "10505:593:2",
              "statements": [
                {
                  "assignments": [
                    5511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5511,
                      "mutability": "mutable",
                      "name": "epochsPast",
                      "nameLocation": "10565:10:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 5583,
                      "src": "10557:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10557:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5515,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5512,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5124,
                      "src": "10578:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 5513,
                      "name": "oldecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5183,
                      "src": "10591:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10578:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10557:43:2"
                },
                {
                  "expression": {
                    "id": 5531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5516,
                      "name": "reward_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5180,
                      "src": "10623:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 5527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10671:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 5528,
                            "name": "rewardEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5150,
                            "src": "10674:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10671:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "313530",
                                "id": 5517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10640:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_150_by_1",
                                  "typeString": "int_const 150"
                                },
                                "value": "150"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 5518,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10646:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 5521,
                                      "name": "decimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5238,
                                      "src": "10655:8:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 5520,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10650:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 5519,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10650:4:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 5522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10650:14:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10646:18:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10640:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 5525,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "10639:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4923,
                        "src": "10639:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10639:46:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10623:62:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5532,
                  "nodeType": "ExpressionStatement",
                  "src": "10623:62:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 5539,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "10737:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeMining_$6670",
                                "typeString": "contract ForgeMining"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ForgeMining_$6670",
                                "typeString": "contract ForgeMining"
                              }
                            ],
                            "id": 5538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10729:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5537,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10729:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10729:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 5534,
                              "name": "AddressZeroXBTC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5077,
                              "src": "10702:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5533,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5048,
                            "src": "10695:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$5048_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 5535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10695:23:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$5048",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 5536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5047,
                        "src": "10695:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 5541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10695:48:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "36",
                              "id": 5542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10747:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6_by_1",
                                "typeString": "int_const 6"
                              },
                              "value": "6"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5545,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 5543,
                                    "name": "Token2Per",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5196,
                                    "src": "10752:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 5544,
                                    "name": "_BLOCKS_PER_READJUSTMENT",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5127,
                                    "src": "10764:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10752:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 5546,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10751:38:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10747:42:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "34",
                            "id": 5548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10790:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "10747:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 5550,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10746:46:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10695:97:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5577,
                    "nodeType": "Block",
                    "src": "11021:30:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 5575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5573,
                            "name": "give0xBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5226,
                            "src": "11031:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 5574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11043:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11031:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5576,
                        "nodeType": "ExpressionStatement",
                        "src": "11031:13:2"
                      }
                    ]
                  },
                  "id": 5578,
                  "nodeType": "IfStatement",
                  "src": "10692:359:2",
                  "trueBody": {
                    "id": 5572,
                    "nodeType": "Block",
                    "src": "10876:136:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 5556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5552,
                            "name": "give0xBTC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5226,
                            "src": "10886:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31",
                              "id": 5553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10898:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 5554,
                              "name": "give",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5229,
                              "src": "10902:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10898:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10886:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5557,
                        "nodeType": "ExpressionStatement",
                        "src": "10886:20:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5562,
                              "name": "AddressLPReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5075,
                              "src": "10949:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5568,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 5566,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "id": 5563,
                                          "name": "epochsPast",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5511,
                                          "src": "10968:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 5564,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "10967:12:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 5565,
                                      "name": "Token2Per",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5196,
                                      "src": "10982:9:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "10967:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 5567,
                                    "name": "give0xBTC",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5226,
                                    "src": "10994:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10967:36:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 5569,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10966:38:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5559,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5077,
                                  "src": "10923:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5558,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5048,
                                "src": "10916:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$5048_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10916:23:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5048",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5011,
                            "src": "10916:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 5570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10916:89:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5571,
                        "nodeType": "ExpressionStatement",
                        "src": "10916:89:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 5581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5579,
                      "name": "oldecount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5183,
                      "src": "11056:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5580,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5124,
                      "src": "11068:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11056:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5582,
                  "nodeType": "ExpressionStatement",
                  "src": "11056:22:2"
                }
              ]
            },
            "functionSelector": "d0856d16",
            "id": 5584,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ARewardSender",
            "nameLocation": "10482:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10495:2:2"
            },
            "returnParameters": {
              "id": 5509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10505:0:2"
            },
            "scope": 6670,
            "src": "10473:625:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5600,
              "nodeType": "Block",
              "src": "11373:52:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5594,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5586,
                        "src": "11386:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5595,
                        "name": "challenge_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5588,
                        "src": "11393:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 5596,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11411:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11411:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5593,
                      "name": "mintTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5764,
                      "src": "11379:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,bytes32,address) returns (bool)"
                      }
                    },
                    "id": 5598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11379:43:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5599,
                  "nodeType": "ExpressionStatement",
                  "src": "11379:43:2"
                }
              ]
            },
            "functionSelector": "1801fbe5",
            "id": 5601,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "11297:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5586,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "11310:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5601,
                  "src": "11302:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11302:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5588,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "11325:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5601,
                  "src": "11317:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5587,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11317:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11301:41:2"
            },
            "returnParameters": {
              "id": 5592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5591,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "11364:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5601,
                  "src": "11359:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5590,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11359:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11358:14:2"
            },
            "scope": 6670,
            "src": "11288:137:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5763,
              "nodeType": "Block",
              "src": "11633:1221:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5615,
                        "name": "reward_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5180,
                        "src": "11659:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 5612,
                        "name": "tokensMinted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5213,
                        "src": "11642:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4847,
                      "src": "11642:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11642:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5617,
                  "nodeType": "ExpressionStatement",
                  "src": "11642:31:2"
                },
                {
                  "assignments": [
                    5619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5619,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "11695:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 5763,
                      "src": "11687:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5618,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11687:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5629,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5623,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5147,
                            "src": "11732:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 5624,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "11749:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "11749:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5626,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5603,
                            "src": "11761:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 5621,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11715:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "11715:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 5627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11715:52:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5620,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11705:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 5628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11705:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11687:81:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 5633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5631,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5619,
                          "src": "11850:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5632,
                          "name": "challenge_digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5605,
                          "src": "11860:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "11850:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6c64206368616c6c656e67655f646967657374206f722077726f6e67206368616c6c656e67655f646967657374",
                        "id": 5634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11878:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        },
                        "value": "Old challenge_digest or wrong challenge_digest"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e16a086860587c7ac8f48c630d99f66e4d48fdd5cc4e616007adca69524ec63",
                          "typeString": "literal_string \"Old challenge_digest or wrong challenge_digest\""
                        }
                      ],
                      "id": 5630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11842:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11842:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5636,
                  "nodeType": "ExpressionStatement",
                  "src": "11842:85:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 5640,
                              "name": "digest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5619,
                              "src": "12015:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 5639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12007:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 5638,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12007:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12007:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 5642,
                          "name": "miningTarget",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5145,
                          "src": "12025:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12007:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446967657374206d75737420626520736d616c6c6572207468616e206d696e696e67546172676574",
                        "id": 5644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12039:42:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        },
                        "value": "Digest must be smaller than miningTarget"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35c6494e53b49c65dcddb3e779f50c01dd21f8bbd3af60264e33463259bb0a8e",
                          "typeString": "literal_string \"Digest must be smaller than miningTarget\""
                        }
                      ],
                      "id": 5637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11999:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11999:83:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5646,
                  "nodeType": "ExpressionStatement",
                  "src": "11999:83:2"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5647,
                      "name": "_startNewMiningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6210,
                      "src": "12090:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12090:22:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5649,
                  "nodeType": "ExpressionStatement",
                  "src": "12090:22:2"
                },
                {
                  "assignments": [
                    5651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5651,
                      "mutability": "mutable",
                      "name": "diff",
                      "nameLocation": "12129:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 5763,
                      "src": "12124:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5650,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12124:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5656,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5652,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "12136:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 5653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "12136:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 5654,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5187,
                      "src": "12154:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12136:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12124:47:2"
                },
                {
                  "assignments": [
                    5658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5658,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "12184:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 5763,
                      "src": "12179:6:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5657,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12179:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5660,
                  "initialValue": {
                    "hexValue": "34",
                    "id": 5659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12188:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    },
                    "value": "4"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12179:10:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5661,
                      "name": "diff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5651,
                      "src": "12200:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 5662,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5071,
                      "src": "12208:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12200:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5689,
                  "nodeType": "IfStatement",
                  "src": "12197:139:2",
                  "trueBody": {
                    "id": 5688,
                    "nodeType": "Block",
                    "src": "12226:110:2",
                    "statements": [
                      {
                        "body": {
                          "id": 5686,
                          "nodeType": "Block",
                          "src": "12257:71:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 5674,
                                  "name": "diff",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5651,
                                  "src": "12269:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "33",
                                      "id": 5680,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12298:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      },
                                      "value": "3"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      }
                                    ],
                                    "expression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 5677,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 5675,
                                            "name": "targetTime",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5071,
                                            "src": "12278:10:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 5676,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5658,
                                            "src": "12291:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "12278:14:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 5678,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "12277:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 5679,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4923,
                                    "src": "12277:20:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 5681,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12277:23:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12269:31:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 5685,
                              "nodeType": "IfStatement",
                              "src": "12266:61:2",
                              "trueBody": {
                                "id": 5684,
                                "nodeType": "Block",
                                "src": "12301:26:2",
                                "statements": [
                                  {
                                    "id": 5683,
                                    "nodeType": "Break",
                                    "src": "12312:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5668,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5658,
                            "src": "12246:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 5669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12249:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "12246:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5687,
                        "initializationExpression": {
                          "expression": {
                            "id": 5666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 5664,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5658,
                              "src": "12239:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "34",
                              "id": 5665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12243:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "12239:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5667,
                          "nodeType": "ExpressionStatement",
                          "src": "12239:5:2"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 5672,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "12253:3:2",
                            "subExpression": {
                              "id": 5671,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5658,
                              "src": "12253:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5673,
                          "nodeType": "ExpressionStatement",
                          "src": "12253:3:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "12235:93:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5691
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5691,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "12354:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 5763,
                      "src": "12349:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5690,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "12349:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5699,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "34",
                        "id": 5697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12387:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5692,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5658,
                              "src": "12364:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 5693,
                              "name": "reward_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5180,
                              "src": "12368:13:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12364:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 5695,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "12363:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 5696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4923,
                      "src": "12363:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 5698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12363:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12349:40:2"
                },
                {
                  "expression": {
                    "id": 5709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5700,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5217,
                        "src": "12399:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5702,
                      "indexExpression": {
                        "id": 5701,
                        "name": "mintTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5607,
                        "src": "12408:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12399:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5707,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5691,
                          "src": "12439:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 5703,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5217,
                            "src": "12418:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5705,
                          "indexExpression": {
                            "id": 5704,
                            "name": "mintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5607,
                            "src": "12427:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12418:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4847,
                        "src": "12418:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12418:28:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12399:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5710,
                  "nodeType": "ExpressionStatement",
                  "src": "12399:47:2"
                },
                {
                  "expression": {
                    "id": 5724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5711,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5217,
                        "src": "12457:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 5713,
                      "indexExpression": {
                        "id": 5712,
                        "name": "AddressLPReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5075,
                        "src": "12466:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12457:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "32",
                              "id": 5721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12528:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "id": 5718,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5691,
                                  "src": "12516:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 5719,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "12515:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 5720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4923,
                            "src": "12515:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 5722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12515:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 5714,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5217,
                            "src": "12485:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 5716,
                          "indexExpression": {
                            "id": 5715,
                            "name": "AddressLPReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5075,
                            "src": "12494:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12485:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4847,
                        "src": "12485:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12485:46:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12457:74:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5725,
                  "nodeType": "ExpressionStatement",
                  "src": "12457:74:2"
                },
                {
                  "expression": {
                    "id": 5731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5726,
                      "name": "tokensMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5213,
                      "src": "12541:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5729,
                          "name": "reward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5691,
                          "src": "12573:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 5727,
                          "name": "tokensMinted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5213,
                          "src": "12556:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4847,
                        "src": "12556:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12556:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12541:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5732,
                  "nodeType": "ExpressionStatement",
                  "src": "12541:39:2"
                },
                {
                  "expression": {
                    "id": 5736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5733,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5187,
                      "src": "12594:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5734,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "12614:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 5735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "12614:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12594:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5737,
                  "nodeType": "ExpressionStatement",
                  "src": "12594:35:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5738,
                      "name": "give0xBTC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5226,
                      "src": "12646:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12658:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12646:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5752,
                  "nodeType": "IfStatement",
                  "src": "12643:106:2",
                  "trueBody": {
                    "id": 5751,
                    "nodeType": "Block",
                    "src": "12660:89:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 5745,
                              "name": "mintTo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5607,
                              "src": "12707:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5746,
                                "name": "Token2Per",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5196,
                                "src": "12715:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 5747,
                                "name": "give0xBTC",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5226,
                                "src": "12725:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12715:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5742,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5077,
                                  "src": "12681:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5741,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5048,
                                "src": "12674:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$5048_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 5743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12674:23:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$5048",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 5744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5011,
                            "src": "12674:32:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 5749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12674:61:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5750,
                        "nodeType": "ExpressionStatement",
                        "src": "12674:61:2"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5754,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12771:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12771:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5756,
                        "name": "reward_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5180,
                        "src": "12783:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5757,
                        "name": "epochCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5124,
                        "src": "12798:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5758,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5147,
                        "src": "12810:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 5753,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5093,
                      "src": "12766:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes32)"
                      }
                    },
                    "id": 5759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12766:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5760,
                  "nodeType": "EmitStatement",
                  "src": "12761:66:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 5761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12847:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5611,
                  "id": 5762,
                  "nodeType": "Return",
                  "src": "12840:11:2"
                }
              ]
            },
            "functionSelector": "ddfbd8dd",
            "id": 5764,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTo",
            "nameLocation": "11538:6:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5603,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "11553:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5764,
                  "src": "11545:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11545:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5605,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "11568:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5764,
                  "src": "11560:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5604,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11560:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5607,
                  "mutability": "mutable",
                  "name": "mintTo",
                  "nameLocation": "11595:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5764,
                  "src": "11587:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11587:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11544:58:2"
            },
            "returnParameters": {
              "id": 5611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5610,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "11624:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 5764,
                  "src": "11619:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5609,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11619:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11618:14:2"
            },
            "scope": 6670,
            "src": "11529:1325:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6019,
              "nodeType": "Block",
              "src": "13281:1546:2",
              "statements": [
                {
                  "assignments": [
                    5780
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5780,
                      "mutability": "mutable",
                      "name": "xx",
                      "nameLocation": "13290:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 6019,
                      "src": "13285:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5779,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13285:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5782,
                  "initialValue": {
                    "hexValue": "34",
                    "id": 5781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "13295:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4_by_1",
                      "typeString": "int_const 4"
                    },
                    "value": "4"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13285:11:2"
                },
                {
                  "assignments": [
                    5784
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5784,
                      "mutability": "mutable",
                      "name": "diff",
                      "nameLocation": "13311:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 6019,
                      "src": "13306:9:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5783,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "13306:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5789,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5785,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "13318:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 5786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "13318:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 5787,
                      "name": "previousBlockTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5187,
                      "src": "13336:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13318:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13306:47:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5790,
                      "name": "diff",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5784,
                      "src": "13360:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 5791,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5071,
                      "src": "13368:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13360:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5818,
                  "nodeType": "IfStatement",
                  "src": "13357:132:2",
                  "trueBody": {
                    "id": 5817,
                    "nodeType": "Block",
                    "src": "13382:107:2",
                    "statements": [
                      {
                        "body": {
                          "id": 5815,
                          "nodeType": "Block",
                          "src": "13412:73:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 5803,
                                  "name": "diff",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5784,
                                  "src": "13420:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "33",
                                      "id": 5809,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13450:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      },
                                      "value": "3"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_3_by_1",
                                        "typeString": "int_const 3"
                                      }
                                    ],
                                    "expression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 5806,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 5804,
                                            "name": "targetTime",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5071,
                                            "src": "13429:10:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 5805,
                                            "name": "xx",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5780,
                                            "src": "13442:2:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "13429:15:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 5807,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "13428:17:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 5808,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "div",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4923,
                                    "src": "13428:21:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 5810,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13428:24:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "13420:32:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 5814,
                              "nodeType": "IfStatement",
                              "src": "13417:54:2",
                              "trueBody": {
                                "id": 5813,
                                "nodeType": "Block",
                                "src": "13453:18:2",
                                "statements": [
                                  {
                                    "id": 5812,
                                    "nodeType": "Break",
                                    "src": "13460:5:2"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5797,
                            "name": "xx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5780,
                            "src": "13399:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3130",
                            "id": 5798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13403:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "13399:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5816,
                        "initializationExpression": {
                          "expression": {
                            "id": 5795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 5793,
                              "name": "xx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5780,
                              "src": "13391:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "34",
                              "id": 5794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13396:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "13391:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5796,
                          "nodeType": "ExpressionStatement",
                          "src": "13391:6:2"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 5801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "13407:4:2",
                            "subExpression": {
                              "id": 5800,
                              "name": "xx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5780,
                              "src": "13407:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5802,
                          "nodeType": "ExpressionStatement",
                          "src": "13407:4:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "13387:98:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5820,
                            "name": "MintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5774,
                            "src": "13506:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 5821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "13506:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5822,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5771,
                              "src": "13523:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 5823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13523:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 5824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13543:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "13523:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13506:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536f204d696e74546f2068617320746f20686176652073616d65206e756d626572206f66206164647265737373657320617320457874726146756e6473",
                        "id": 5827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13545:63:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d25a4bf0584ffc01a5da6d1e61b00c89d1a5bf65ec38286ca5b25a245e58f2e",
                          "typeString": "literal_string \"So MintTo has to have same number of addressses as ExtraFunds\""
                        },
                        "value": "So MintTo has to have same number of addressses as ExtraFunds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d25a4bf0584ffc01a5da6d1e61b00c89d1a5bf65ec38286ca5b25a245e58f2e",
                          "typeString": "literal_string \"So MintTo has to have same number of addressses as ExtraFunds\""
                        }
                      ],
                      "id": 5819,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13498:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13498:111:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5829,
                  "nodeType": "ExpressionStatement",
                  "src": "13498:111:2"
                },
                {
                  "body": {
                    "id": 5887,
                    "nodeType": "Block",
                    "src": "13667:299:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 5855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 5849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 5842,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5771,
                                    "src": "13685:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 5844,
                                  "indexExpression": {
                                    "id": 5843,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5831,
                                    "src": "13696:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13685:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 5847,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "13710:4:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ForgeMining_$6670",
                                        "typeString": "contract ForgeMining"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_ForgeMining_$6670",
                                        "typeString": "contract ForgeMining"
                                      }
                                    ],
                                    "id": 5846,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13702:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 5845,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13702:7:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 5848,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13702:13:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "13685:30:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 5854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 5850,
                                    "name": "ExtraFunds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5771,
                                    "src": "13719:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 5852,
                                  "indexExpression": {
                                    "id": 5851,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5831,
                                    "src": "13730:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13719:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "id": 5853,
                                  "name": "AddressZeroXBTC",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5077,
                                  "src": "13736:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "13719:32:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "13685:66:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2062617365207072696e74696e67206f6620746f6b656e73",
                              "id": 5856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13753:28:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              },
                              "value": "No base printing of tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7fbf83ff7c0128c805dcfafa71369da517e238d9d918c4395572a0ba79026ba3",
                                "typeString": "literal_string \"No base printing of tokens\""
                              }
                            ],
                            "id": 5841,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13677:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13677:105:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5858,
                        "nodeType": "ExpressionStatement",
                        "src": "13677:105:2"
                      },
                      {
                        "body": {
                          "id": 5885,
                          "nodeType": "Block",
                          "src": "13845:113:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 5881,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "id": 5877,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 5871,
                                          "name": "ExtraFunds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5771,
                                          "src": "13871:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 5873,
                                        "indexExpression": {
                                          "id": 5872,
                                          "name": "y",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5860,
                                          "src": "13882:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "13871:13:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "baseExpression": {
                                          "id": 5874,
                                          "name": "ExtraFunds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5771,
                                          "src": "13888:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 5876,
                                        "indexExpression": {
                                          "id": 5875,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5831,
                                          "src": "13899:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "13888:13:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "13871:30:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 5880,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 5878,
                                        "name": "x",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5831,
                                        "src": "13905:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "id": 5879,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5860,
                                        "src": "13910:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "13905:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "13871:40:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "4e6f207072696e74696e67205468652073616d6520746f6b656e73",
                                    "id": 5882,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13913:29:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    },
                                    "value": "No printing The same tokens"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_ab52afbee130e4a17b44701ef535f2b9d639e4b8ccaf8189ab4532984423821d",
                                      "typeString": "literal_string \"No printing The same tokens\""
                                    }
                                  ],
                                  "id": 5870,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "13863:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 5883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13863:80:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5884,
                              "nodeType": "ExpressionStatement",
                              "src": "13863:80:2"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5863,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5860,
                            "src": "13819:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 5864,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5771,
                              "src": "13822:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 5865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "13822:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13819:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5886,
                        "initializationExpression": {
                          "assignments": [
                            5860
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 5860,
                              "mutability": "mutable",
                              "name": "y",
                              "nameLocation": "13814:1:2",
                              "nodeType": "VariableDeclaration",
                              "scope": 5886,
                              "src": "13809:6:2",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 5859,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "13809:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 5862,
                          "initialValue": {
                            "hexValue": "31",
                            "id": 5861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13816:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13809:8:2"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 5868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "13841:3:2",
                            "subExpression": {
                              "id": 5867,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5860,
                              "src": "13841:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 5869,
                          "nodeType": "ExpressionStatement",
                          "src": "13841:3:2"
                        },
                        "nodeType": "ForStatement",
                        "src": "13805:153:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5834,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5831,
                      "src": "13632:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 5835,
                        "name": "ExtraFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5771,
                        "src": "13635:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 5836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "13635:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13632:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5888,
                  "initializationExpression": {
                    "assignments": [
                      5831
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5831,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "13627:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 5888,
                        "src": "13622:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5830,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13622:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 5833,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 5832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13629:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "13622:8:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 5839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "13654:3:2",
                      "subExpression": {
                        "id": 5838,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5831,
                        "src": "13654:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5840,
                    "nodeType": "ExpressionStatement",
                    "src": "13654:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "13618:348:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5891,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5766,
                            "src": "13988:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5892,
                            "name": "challenge_digest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5768,
                            "src": "13994:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 5893,
                              "name": "MintTo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5774,
                              "src": "14012:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 5895,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 5894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14019:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "14012:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5890,
                          "name": "mintTo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5764,
                          "src": "13981:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint256,bytes32,address) returns (bool)"
                          }
                        },
                        "id": 5896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13981:41:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e74206973737565",
                        "id": 5897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14024:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        },
                        "value": "mint issue"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327947e4f6c246b8187f55ed40df89bf2fd8171198126a677df0316a2c74f725",
                          "typeString": "literal_string \"mint issue\""
                        }
                      ],
                      "id": 5889,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13973:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13973:64:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5899,
                  "nodeType": "ExpressionStatement",
                  "src": "13973:64:2"
                },
                {
                  "assignments": [
                    5901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5901,
                      "mutability": "mutable",
                      "name": "savex",
                      "nameLocation": "14054:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 6019,
                      "src": "14049:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5900,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "14049:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5903,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 5902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14060:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14049:12:2"
                },
                {
                  "body": {
                    "id": 6006,
                    "nodeType": "Block",
                    "src": "14111:609:2",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5915,
                              "name": "epochCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5124,
                              "src": "14154:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5921,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 5916,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14168:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5919,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 5917,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5905,
                                          "src": "14172:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 5918,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14174:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "14172:3:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 5920,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "14171:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14168:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 5922,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14167:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14154:23:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 5924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14181:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14154:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6005,
                        "nodeType": "IfStatement",
                        "src": "14151:549:2",
                        "trueBody": {
                          "id": 6004,
                          "nodeType": "Block",
                          "src": "14183:517:2",
                          "statements": [
                            {
                              "assignments": [
                                5927
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 5927,
                                  "mutability": "mutable",
                                  "name": "TotalOwned",
                                  "nameLocation": "14197:10:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 6004,
                                  "src": "14189:18:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 5926,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14189:7:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 5939,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 5936,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "14250:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ForgeMining_$6670",
                                          "typeString": "contract ForgeMining"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ForgeMining_$6670",
                                          "typeString": "contract ForgeMining"
                                        }
                                      ],
                                      "id": 5935,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "14242:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 5934,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "14242:7:2",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 5937,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14242:13:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 5929,
                                          "name": "ExtraFunds",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5771,
                                          "src": "14217:10:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 5931,
                                        "indexExpression": {
                                          "id": 5930,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5905,
                                          "src": "14228:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "14217:13:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 5928,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5048,
                                      "src": "14210:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$5048_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 5932,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14210:21:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$5048",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 5933,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 5047,
                                  "src": "14210:31:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 5938,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14210:46:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "14189:67:2"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 5942,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 5940,
                                  "name": "TotalOwned",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5927,
                                  "src": "14265:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 5941,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "14279:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "14265:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 5999,
                              "nodeType": "IfStatement",
                              "src": "14262:417:2",
                              "trueBody": {
                                "id": 5998,
                                "nodeType": "Block",
                                "src": "14286:393:2",
                                "statements": [
                                  {
                                    "assignments": [
                                      5944
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 5944,
                                        "mutability": "mutable",
                                        "name": "totalOwed",
                                        "nameLocation": "14304:9:2",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 5998,
                                        "src": "14296:17:2",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 5943,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "14296:7:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 5946,
                                    "initialValue": {
                                      "hexValue": "30",
                                      "id": 5945,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14316:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "14296:21:2"
                                  },
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "id": 5958,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5954,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 5952,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 5949,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 5947,
                                                  "name": "x",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 5905,
                                                  "src": "14332:1:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "+",
                                                "rightExpression": {
                                                  "hexValue": "31",
                                                  "id": 5948,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "14334:1:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1_by_1",
                                                    "typeString": "int_const 1"
                                                  },
                                                  "value": "1"
                                                },
                                                "src": "14332:3:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 5950,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "14331:5:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "33",
                                            "id": 5951,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "14339:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                          },
                                          "src": "14331:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 5953,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14344:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "14331:14:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "&&",
                                      "rightExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5957,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 5955,
                                          "name": "x",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5905,
                                          "src": "14349:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "!=",
                                        "rightExpression": {
                                          "hexValue": "30",
                                          "id": 5956,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "14354:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        },
                                        "src": "14349:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "14331:24:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 5984,
                                      "nodeType": "Block",
                                      "src": "14438:160:2",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 5982,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 5972,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5944,
                                              "src": "14452:9:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                    "typeString": "int_const 10000"
                                                  },
                                                  "id": 5980,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "34",
                                                    "id": 5978,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "14484:1:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_4_by_1",
                                                      "typeString": "int_const 4"
                                                    },
                                                    "value": "4"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 5979,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "14486:4:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "14484:6:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                    "typeString": "int_const 10000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                    "typeString": "int_const 10000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 5975,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 5973,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 5927,
                                                        "src": "14465:10:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 5974,
                                                        "name": "xx",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 5780,
                                                        "src": "14476:2:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "14465:13:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 5976,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "14464:15:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 5977,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 4923,
                                                "src": "14464:19:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 5981,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "14464:27:2",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "14452:39:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 5983,
                                          "nodeType": "ExpressionStatement",
                                          "src": "14452:39:2"
                                        }
                                      ]
                                    },
                                    "id": 5985,
                                    "nodeType": "IfStatement",
                                    "src": "14327:271:2",
                                    "trueBody": {
                                      "id": 5971,
                                      "nodeType": "Block",
                                      "src": "14356:69:2",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 5969,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 5959,
                                              "name": "totalOwed",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5944,
                                              "src": "14370:9:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "commonType": {
                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                    "typeString": "int_const 10000"
                                                  },
                                                  "id": 5967,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "leftExpression": {
                                                    "hexValue": "34",
                                                    "id": 5965,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "14407:1:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_4_by_1",
                                                      "typeString": "int_const 4"
                                                    },
                                                    "value": "4"
                                                  },
                                                  "nodeType": "BinaryOperation",
                                                  "operator": "*",
                                                  "rightExpression": {
                                                    "hexValue": "32353030",
                                                    "id": 5966,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "14409:4:2",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_rational_2500_by_1",
                                                      "typeString": "int_const 2500"
                                                    },
                                                    "value": "2500"
                                                  },
                                                  "src": "14407:6:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                    "typeString": "int_const 10000"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_10000_by_1",
                                                    "typeString": "int_const 10000"
                                                  }
                                                ],
                                                "expression": {
                                                  "components": [
                                                    {
                                                      "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      },
                                                      "id": 5962,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "leftExpression": {
                                                        "id": 5960,
                                                        "name": "TotalOwned",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 5927,
                                                        "src": "14383:10:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "nodeType": "BinaryOperation",
                                                      "operator": "*",
                                                      "rightExpression": {
                                                        "id": 5961,
                                                        "name": "xx",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 5780,
                                                        "src": "14394:2:2",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "src": "14383:13:2",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "id": 5963,
                                                  "isConstant": false,
                                                  "isInlineArray": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "TupleExpression",
                                                  "src": "14382:15:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 5964,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "divRound",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 4961,
                                                "src": "14382:24:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 5968,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "14382:32:2",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "14370:44:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 5970,
                                          "nodeType": "ExpressionStatement",
                                          "src": "14370:44:2"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 5992,
                                            "name": "MintTo",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5774,
                                            "src": "14642:6:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 5994,
                                          "indexExpression": {
                                            "id": 5993,
                                            "name": "x",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5905,
                                            "src": "14649:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "14642:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 5995,
                                          "name": "totalOwed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5944,
                                          "src": "14653:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "arguments": [
                                            {
                                              "baseExpression": {
                                                "id": 5987,
                                                "name": "ExtraFunds",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5771,
                                                "src": "14618:10:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                  "typeString": "address[] memory"
                                                }
                                              },
                                              "id": 5989,
                                              "indexExpression": {
                                                "id": 5988,
                                                "name": "x",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5905,
                                                "src": "14629:1:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "14618:13:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 5986,
                                            "name": "IERC20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5048,
                                            "src": "14611:6:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC20_$5048_$",
                                              "typeString": "type(contract IERC20)"
                                            }
                                          },
                                          "id": 5990,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14611:21:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$5048",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 5991,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 5011,
                                        "src": "14611:30:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 5996,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "14611:52:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 5997,
                                    "nodeType": "ExpressionStatement",
                                    "src": "14611:52:2"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 6002,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 6000,
                                  "name": "savex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5901,
                                  "src": "14684:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 6001,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5905,
                                  "src": "14692:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14684:9:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6003,
                              "nodeType": "ExpressionStatement",
                              "src": "14684:9:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5908,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5905,
                      "src": "14081:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 5909,
                        "name": "ExtraFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5771,
                        "src": "14083:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 5910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14083:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14081:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6007,
                  "initializationExpression": {
                    "assignments": [
                      5905
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 5905,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "14076:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 6007,
                        "src": "14071:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5904,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14071:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 5907,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 5906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14078:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14071:8:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 5913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14102:3:2",
                      "subExpression": {
                        "id": 5912,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5905,
                        "src": "14102:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5914,
                    "nodeType": "ExpressionStatement",
                    "src": "14102:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "14067:653:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6009,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14744:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14744:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6011,
                        "name": "reward_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5180,
                        "src": "14756:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6012,
                        "name": "epochCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5124,
                        "src": "14771:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6013,
                        "name": "challengeNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5147,
                        "src": "14783:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 6014,
                        "name": "savex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5901,
                        "src": "14800:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6008,
                      "name": "MegaMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5105,
                      "src": "14735:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes32,uint256)"
                      }
                    },
                    "id": 6015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14735:72:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6016,
                  "nodeType": "EmitStatement",
                  "src": "14730:77:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 6017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14820:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 5778,
                  "id": 6018,
                  "nodeType": "Return",
                  "src": "14813:11:2"
                }
              ]
            },
            "functionSelector": "c8a1465c",
            "id": 6020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokensArrayTo",
            "nameLocation": "13138:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5766,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "13164:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6020,
                  "src": "13156:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13156:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5768,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "13179:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6020,
                  "src": "13171:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5767,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13171:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5771,
                  "mutability": "mutable",
                  "name": "ExtraFunds",
                  "nameLocation": "13214:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6020,
                  "src": "13197:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5769,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13197:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5770,
                    "nodeType": "ArrayTypeName",
                    "src": "13197:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5774,
                  "mutability": "mutable",
                  "name": "MintTo",
                  "nameLocation": "13243:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6020,
                  "src": "13226:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5772,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "13226:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 5773,
                    "nodeType": "ArrayTypeName",
                    "src": "13226:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13155:95:2"
            },
            "returnParameters": {
              "id": 5778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5777,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "13272:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6020,
                  "src": "13267:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5776,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13267:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13266:14:2"
            },
            "scope": 6670,
            "src": "13129:1698:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6083,
              "nodeType": "Block",
              "src": "14982:282:2",
              "statements": [
                {
                  "assignments": [
                    6038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6038,
                      "mutability": "mutable",
                      "name": "dd",
                      "nameLocation": "15009:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 6083,
                      "src": "14992:19:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6036,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14992:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 6037,
                        "nodeType": "ArrayTypeName",
                        "src": "14992:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6047,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6042,
                            "name": "ExtraFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6027,
                            "src": "15028:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 6043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "15028:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 6044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15048:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15028:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "15014:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6039,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15018:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 6040,
                        "nodeType": "ArrayTypeName",
                        "src": "15018:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 6046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15014:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14992:58:2"
                },
                {
                  "assignments": [
                    6049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6049,
                      "mutability": "mutable",
                      "name": "y",
                      "nameLocation": "15066:1:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 6083,
                      "src": "15061:6:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6048,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "15061:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6051,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 6050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15068:1:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15061:8:2"
                },
                {
                  "body": {
                    "id": 6072,
                    "nodeType": "Block",
                    "src": "15134:39:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 6070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 6066,
                              "name": "dd",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6038,
                              "src": "15148:2:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 6068,
                            "indexExpression": {
                              "id": 6067,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6053,
                              "src": "15151:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "15148:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 6069,
                            "name": "MintTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6029,
                            "src": "15156:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15148:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 6071,
                        "nodeType": "ExpressionStatement",
                        "src": "15148:14:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6056,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6053,
                      "src": "15093:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6057,
                              "name": "ExtraFunds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6027,
                              "src": "15097:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 6058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "15097:17:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 6059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15117:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "15097:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 6061,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "15096:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15093:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6073,
                  "initializationExpression": {
                    "assignments": [
                      6053
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6053,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "15088:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 6073,
                        "src": "15083:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6052,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "15083:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6055,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15090:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "15083:8:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 6064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "15121:3:2",
                      "subExpression": {
                        "id": 6063,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6053,
                        "src": "15121:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6065,
                    "nodeType": "ExpressionStatement",
                    "src": "15121:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "15079:94:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6075,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6022,
                        "src": "15200:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6076,
                        "name": "challenge_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6024,
                        "src": "15207:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 6077,
                        "name": "ExtraFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6027,
                        "src": "15225:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 6078,
                        "name": "dd",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6038,
                        "src": "15237:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 6074,
                      "name": "mintTokensArrayTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6020,
                      "src": "15182:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (uint256,bytes32,address[] memory,address[] memory) returns (bool)"
                      }
                    },
                    "id": 6079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15182:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6080,
                  "nodeType": "ExpressionStatement",
                  "src": "15182:58:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 6081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "15257:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6033,
                  "id": 6082,
                  "nodeType": "Return",
                  "src": "15250:11:2"
                }
              ]
            },
            "functionSelector": "1fccb33c",
            "id": 6084,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintTokensSameAddress",
            "nameLocation": "14844:21:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6022,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "14874:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6084,
                  "src": "14866:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14866:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6024,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "14889:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6084,
                  "src": "14881:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6023,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14881:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6027,
                  "mutability": "mutable",
                  "name": "ExtraFunds",
                  "nameLocation": "14924:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6084,
                  "src": "14907:27:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6025,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "14907:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6026,
                    "nodeType": "ArrayTypeName",
                    "src": "14907:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6029,
                  "mutability": "mutable",
                  "name": "MintTo",
                  "nameLocation": "14944:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6084,
                  "src": "14936:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14936:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14865:86:2"
            },
            "returnParameters": {
              "id": 6033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6032,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "14973:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6084,
                  "src": "14968:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6031,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14968:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14967:14:2"
            },
            "scope": 6670,
            "src": "14835:429:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6209,
              "nodeType": "Block",
              "src": "15309:1467:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "components": [
                              {
                                "id": 6089,
                                "name": "reward_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5180,
                                "src": "15625:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 6090,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15624:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 6087,
                            "name": "tokensMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5213,
                            "src": "15607:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 6088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4847,
                          "src": "15607:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 6091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15607:33:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "id": 6092,
                        "name": "maxSupplyForEra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5164,
                        "src": "15643:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "15607:51:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6094,
                        "name": "rewardEra",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5150,
                        "src": "15662:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "3339",
                        "id": 6095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15674:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_39_by_1",
                          "typeString": "int_const 39"
                        },
                        "value": "39"
                      },
                      "src": "15662:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15607:69:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6114,
                  "nodeType": "IfStatement",
                  "src": "15603:191:2",
                  "trueBody": {
                    "id": 6113,
                    "nodeType": "Block",
                    "src": "15684:110:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 6102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6098,
                            "name": "rewardEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5150,
                            "src": "15694:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 6099,
                              "name": "rewardEra",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5150,
                              "src": "15706:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 6100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15718:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "15706:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15694:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6103,
                        "nodeType": "ExpressionStatement",
                        "src": "15694:25:2"
                      },
                      {
                        "expression": {
                          "id": 6111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6104,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5145,
                            "src": "15729:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 6107,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15761:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "id": 6108,
                                  "name": "rewardEra",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5150,
                                  "src": "15766:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15761:14:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6105,
                                "name": "miningTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5145,
                                "src": "15744:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4923,
                              "src": "15744:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15744:32:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15729:47:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6112,
                        "nodeType": "ExpressionStatement",
                        "src": "15729:47:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 6120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6115,
                      "name": "epochCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5124,
                      "src": "15965:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 6118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15993:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 6116,
                          "name": "epochCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5124,
                          "src": "15978:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4847,
                        "src": "15978:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15978:17:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15965:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6121,
                  "nodeType": "ExpressionStatement",
                  "src": "15965:30:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "id": 6122,
                            "name": "epochCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5124,
                            "src": "16080:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6123,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "16079:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 6124,
                              "name": "_BLOCKS_PER_READJUSTMENT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5127,
                              "src": "16095:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "34",
                              "id": 6125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16122:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_4_by_1",
                                "typeString": "int_const 4"
                              },
                              "value": "4"
                            },
                            "src": "16095:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6127,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "16094:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "16079:45:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 6129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16128:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "16079:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6199,
                  "nodeType": "IfStatement",
                  "src": "16076:646:2",
                  "trueBody": {
                    "id": 6198,
                    "nodeType": "Block",
                    "src": "16135:587:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 6131,
                            "name": "ARewardSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5584,
                            "src": "16146:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 6132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16146:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6133,
                        "nodeType": "ExpressionStatement",
                        "src": "16146:15:2"
                      },
                      {
                        "expression": {
                          "id": 6146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6134,
                            "name": "maxSupplyForEra",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5164,
                            "src": "16165:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 6135,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5117,
                              "src": "16183:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 6143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "32",
                                    "id": 6138,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16216:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 6141,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 6139,
                                          "name": "rewardEra",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 5150,
                                          "src": "16220:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 6140,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "16232:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "16220:13:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 6142,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "16219:15:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "16216:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 6136,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5117,
                                  "src": "16198:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 6137,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4923,
                                "src": "16198:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 6144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16198:37:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16183:52:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16165:70:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6147,
                        "nodeType": "ExpressionStatement",
                        "src": "16165:70:2"
                      },
                      {
                        "condition": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 6148,
                                  "name": "epochCount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5124,
                                  "src": "16246:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "id": 6149,
                                  "name": "_BLOCKS_PER_READJUSTMENT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5127,
                                  "src": "16259:24:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16246:37:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 6151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16286:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "16246:41:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 6153,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16245:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6197,
                        "nodeType": "IfStatement",
                        "src": "16242:474:2",
                        "trueBody": {
                          "id": 6196,
                          "nodeType": "Block",
                          "src": "16294:422:2",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 6164,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "id": 6160,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "16352:4:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ForgeMining_$6670",
                                                  "typeString": "contract ForgeMining"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_ForgeMining_$6670",
                                                  "typeString": "contract ForgeMining"
                                                }
                                              ],
                                              "id": 6159,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "16344:7:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 6158,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "16344:7:2",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 6161,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16344:13:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 6155,
                                                "name": "AddressZeroXBTC",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 5077,
                                                "src": "16317:15:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 6154,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5048,
                                              "src": "16310:6:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$5048_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 6156,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "16310:23:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$5048",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 6157,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 5047,
                                          "src": "16310:33:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 6162,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "16310:48:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 6163,
                                        "name": "Token2Per",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5196,
                                        "src": "16361:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16310:60:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 6165,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "16308:63:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "hexValue": "3130303030",
                                  "id": 6166,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16375:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000_by_1",
                                    "typeString": "int_const 10000"
                                  },
                                  "value": "10000"
                                },
                                "src": "16308:72:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 6191,
                                "nodeType": "Block",
                                "src": "16613:56:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 6189,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 6184,
                                        "name": "Token2Per",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5196,
                                        "src": "16628:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "hexValue": "33",
                                            "id": 6187,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "16655:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            },
                                            "value": "3"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_3_by_1",
                                              "typeString": "int_const 3"
                                            }
                                          ],
                                          "expression": {
                                            "id": 6185,
                                            "name": "Token2Per",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5196,
                                            "src": "16640:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 6186,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "mult",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 4902,
                                          "src": "16640:14:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 6188,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "16640:17:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16628:29:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 6190,
                                    "nodeType": "ExpressionStatement",
                                    "src": "16628:29:2"
                                  }
                                ]
                              },
                              "id": 6192,
                              "nodeType": "IfStatement",
                              "src": "16305:364:2",
                              "trueBody": {
                                "id": 6183,
                                "nodeType": "Block",
                                "src": "16459:130:2",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 6173,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "32",
                                            "id": 6170,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "16491:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            },
                                            "value": "2"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_2_by_1",
                                              "typeString": "int_const 2"
                                            }
                                          ],
                                          "expression": {
                                            "id": 6168,
                                            "name": "Token2Per",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 5196,
                                            "src": "16477:9:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 6169,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "div",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 4923,
                                          "src": "16477:13:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                                          }
                                        },
                                        "id": 6171,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "16477:16:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "id": 6172,
                                        "name": "Token2Min",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5199,
                                        "src": "16496:9:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "16477:28:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 6182,
                                    "nodeType": "IfStatement",
                                    "src": "16474:104:2",
                                    "trueBody": {
                                      "id": 6181,
                                      "nodeType": "Block",
                                      "src": "16520:58:2",
                                      "statements": [
                                        {
                                          "expression": {
                                            "id": 6179,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftHandSide": {
                                              "id": 6174,
                                              "name": "Token2Per",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 5196,
                                              "src": "16535:9:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "Assignment",
                                            "operator": "=",
                                            "rightHandSide": {
                                              "arguments": [
                                                {
                                                  "hexValue": "32",
                                                  "id": 6177,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "kind": "number",
                                                  "lValueRequested": false,
                                                  "nodeType": "Literal",
                                                  "src": "16561:1:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_2_by_1",
                                                    "typeString": "int_const 2"
                                                  },
                                                  "value": "2"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_rational_2_by_1",
                                                    "typeString": "int_const 2"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 6175,
                                                  "name": "Token2Per",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 5196,
                                                  "src": "16547:9:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "id": 6176,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "div",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 4923,
                                                "src": "16547:13:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                                }
                                              },
                                              "id": 6178,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "16547:16:2",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "16535:28:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "id": 6180,
                                          "nodeType": "ExpressionStatement",
                                          "src": "16535:28:2"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 6193,
                                  "name": "_reAdjustDifficulty",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6339,
                                  "src": "16688:19:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 6194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16688:21:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 6195,
                              "nodeType": "ExpressionStatement",
                              "src": "16688:21:2"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 6207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6200,
                      "name": "challengeNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5147,
                      "src": "16728:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 6202,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "16756:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 6203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "16756:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 6204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16771:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "16756:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 6201,
                        "name": "blockhash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -5,
                        "src": "16746:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256) view returns (bytes32)"
                        }
                      },
                      "id": 6206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16746:27:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "16728:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 6208,
                  "nodeType": "ExpressionStatement",
                  "src": "16728:45:2"
                }
              ]
            },
            "id": 6210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_startNewMiningEpoch",
            "nameLocation": "15277:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15297:2:2"
            },
            "returnParameters": {
              "id": 6086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15309:0:2"
            },
            "scope": 6670,
            "src": "15268:1508:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6338,
              "nodeType": "Block",
              "src": "17001:1667:2",
              "statements": [
                {
                  "assignments": [
                    6214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6214,
                      "mutability": "mutable",
                      "name": "blktimestamp",
                      "nameLocation": "17020:12:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 6338,
                      "src": "17012:20:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6213,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17012:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6217,
                  "initialValue": {
                    "expression": {
                      "id": 6215,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "17035:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 6216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "17035:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17012:38:2"
                },
                {
                  "assignments": [
                    6219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6219,
                      "mutability": "mutable",
                      "name": "ethBlocksSinceLastDifficultyPeriod2",
                      "nameLocation": "17065:35:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 6338,
                      "src": "17060:40:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6218,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17060:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6223,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6220,
                      "name": "blktimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6214,
                      "src": "17103:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6221,
                      "name": "latestDifficultyPeriodStarted2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5121,
                      "src": "17118:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17103:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17060:88:2"
                },
                {
                  "assignments": [
                    6225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6225,
                      "mutability": "mutable",
                      "name": "epochsMined",
                      "nameLocation": "17164:11:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 6338,
                      "src": "17159:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6224,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17159:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6227,
                  "initialValue": {
                    "id": 6226,
                    "name": "_BLOCKS_PER_READJUSTMENT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5127,
                    "src": "17178:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17159:43:2"
                },
                {
                  "assignments": [
                    6229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6229,
                      "mutability": "mutable",
                      "name": "adjusDiffTargetTime",
                      "nameLocation": "17224:19:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 6338,
                      "src": "17219:24:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6228,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "17219:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6233,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6230,
                      "name": "targetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5071,
                      "src": "17246:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 6231,
                      "name": "epochsMined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6225,
                      "src": "17259:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17246:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17219:51:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6234,
                      "name": "ethBlocksSinceLastDifficultyPeriod2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6219,
                      "src": "17385:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6235,
                      "name": "adjusDiffTargetTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6229,
                      "src": "17423:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17385:57:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 6314,
                    "nodeType": "Block",
                    "src": "17968:396:2",
                    "statements": [
                      {
                        "assignments": [
                          6277
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6277,
                            "mutability": "mutable",
                            "name": "shortage_block_pct",
                            "nameLocation": "17985:18:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 6314,
                            "src": "17980:23:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 6276,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "17980:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6286,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 6284,
                              "name": "adjusDiffTargetTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6229,
                              "src": "18059:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "313030",
                                      "id": 6280,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18048:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "id": 6278,
                                      "name": "ethBlocksSinceLastDifficultyPeriod2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6219,
                                      "src": "18007:35:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 6279,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mult",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4902,
                                    "src": "18007:40:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 6281,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "18007:45:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 6282,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "18006:47:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4923,
                            "src": "18006:51:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18006:74:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17980:100:2"
                      },
                      {
                        "expression": {
                          "id": 6289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6287,
                            "name": "give",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5229,
                            "src": "18083:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "32",
                            "id": 6288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18090:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "18083:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6290,
                        "nodeType": "ExpressionStatement",
                        "src": "18083:8:2"
                      },
                      {
                        "assignments": [
                          6292
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6292,
                            "mutability": "mutable",
                            "name": "shortage_block_pct_extra",
                            "nameLocation": "18108:24:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 6314,
                            "src": "18103:29:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 6291,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "18103:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6300,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 6298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18177:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313030",
                                  "id": 6295,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "18158:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "id": 6293,
                                  "name": "shortage_block_pct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6277,
                                  "src": "18135:18:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 6294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4868,
                                "src": "18135:22:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 6296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "18135:27:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "limitLessThan",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4980,
                            "src": "18135:41:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18135:47:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18103:79:2"
                      },
                      {
                        "expression": {
                          "id": 6312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6301,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5145,
                            "src": "18249:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 6309,
                                    "name": "shortage_block_pct_extra",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6292,
                                    "src": "18309:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "32303030",
                                        "id": 6306,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "18298:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2000_by_1",
                                          "typeString": "int_const 2000"
                                        },
                                        "value": "2000"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_2000_by_1",
                                          "typeString": "int_const 2000"
                                        }
                                      ],
                                      "expression": {
                                        "id": 6304,
                                        "name": "miningTarget",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5145,
                                        "src": "18281:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 6305,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4923,
                                      "src": "18281:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 6307,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "18281:22:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 6308,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mult",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4902,
                                  "src": "18281:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 6310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18281:53:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6302,
                                "name": "miningTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5145,
                                "src": "18264:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4847,
                              "src": "18264:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18264:71:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18249:86:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6313,
                        "nodeType": "ExpressionStatement",
                        "src": "18249:86:2"
                      }
                    ]
                  },
                  "id": 6315,
                  "nodeType": "IfStatement",
                  "src": "17381:983:2",
                  "trueBody": {
                    "id": 6275,
                    "nodeType": "Block",
                    "src": "17453:511:2",
                    "statements": [
                      {
                        "assignments": [
                          6238
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6238,
                            "mutability": "mutable",
                            "name": "excess_block_pct",
                            "nameLocation": "17470:16:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 6275,
                            "src": "17465:21:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 6237,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "17465:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6247,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 6245,
                              "name": "ethBlocksSinceLastDifficultyPeriod2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6219,
                              "src": "17526:35:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "313030",
                                      "id": 6241,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17515:3:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      },
                                      "value": "100"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_100_by_1",
                                        "typeString": "int_const 100"
                                      }
                                    ],
                                    "expression": {
                                      "id": 6239,
                                      "name": "adjusDiffTargetTime",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6229,
                                      "src": "17490:19:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 6240,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mult",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4902,
                                    "src": "17490:24:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 6242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17490:29:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 6243,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "17489:31:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4923,
                            "src": "17489:35:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17489:74:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17465:98:2"
                      },
                      {
                        "expression": {
                          "id": 6250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6248,
                            "name": "give",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5229,
                            "src": "17566:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 6249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17573:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "17566:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6251,
                        "nodeType": "ExpressionStatement",
                        "src": "17566:8:2"
                      },
                      {
                        "assignments": [
                          6253
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 6253,
                            "mutability": "mutable",
                            "name": "excess_block_pct_extra",
                            "nameLocation": "17591:22:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 6275,
                            "src": "17586:27:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 6252,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "17586:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 6261,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31303030",
                              "id": 6259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17656:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "313030",
                                  "id": 6256,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17637:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  }
                                ],
                                "expression": {
                                  "id": 6254,
                                  "name": "excess_block_pct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6238,
                                  "src": "17616:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 6255,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4868,
                                "src": "17616:20:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 6257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17616:25:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "limitLessThan",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4980,
                            "src": "17616:39:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 6260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17616:45:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17586:75:2"
                      },
                      {
                        "expression": {
                          "id": 6273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6262,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5145,
                            "src": "17851:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 6270,
                                    "name": "excess_block_pct_extra",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6253,
                                    "src": "17911:22:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "32303030",
                                        "id": 6267,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "17900:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2000_by_1",
                                          "typeString": "int_const 2000"
                                        },
                                        "value": "2000"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_2000_by_1",
                                          "typeString": "int_const 2000"
                                        }
                                      ],
                                      "expression": {
                                        "id": 6265,
                                        "name": "miningTarget",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 5145,
                                        "src": "17883:12:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 6266,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "div",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 4923,
                                      "src": "17883:16:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 6268,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17883:22:2",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 6269,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mult",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4902,
                                  "src": "17883:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 6271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "17883:51:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6263,
                                "name": "miningTarget",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5145,
                                "src": "17866:12:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 6264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4868,
                              "src": "17866:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 6272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17866:69:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17851:84:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6274,
                        "nodeType": "ExpressionStatement",
                        "src": "17851:84:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 6318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6316,
                      "name": "latestDifficultyPeriodStarted2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5121,
                      "src": "18375:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6317,
                      "name": "blktimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6214,
                      "src": "18408:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18375:45:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6319,
                  "nodeType": "ExpressionStatement",
                  "src": "18375:45:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6320,
                      "name": "miningTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5145,
                      "src": "18434:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6321,
                      "name": "_MINIMUM_TARGET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5132,
                      "src": "18449:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18434:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6328,
                  "nodeType": "IfStatement",
                  "src": "18431:113:2",
                  "trueBody": {
                    "id": 6327,
                    "nodeType": "Block",
                    "src": "18491:53:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 6325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6323,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5145,
                            "src": "18503:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 6324,
                            "name": "_MINIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5132,
                            "src": "18518:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18503:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6326,
                        "nodeType": "ExpressionStatement",
                        "src": "18503:30:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6329,
                      "name": "miningTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5145,
                      "src": "18557:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 6330,
                      "name": "_MAXIMUM_TARGET",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5137,
                      "src": "18572:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18557:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6337,
                  "nodeType": "IfStatement",
                  "src": "18554:108:2",
                  "trueBody": {
                    "id": 6336,
                    "nodeType": "Block",
                    "src": "18609:53:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 6334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6332,
                            "name": "miningTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5145,
                            "src": "18621:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 6333,
                            "name": "_MAXIMUM_TARGET",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5137,
                            "src": "18636:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18621:30:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6335,
                        "nodeType": "ExpressionStatement",
                        "src": "18621:30:2"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 6339,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_reAdjustDifficulty",
            "nameLocation": "16970:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16989:2:2"
            },
            "returnParameters": {
              "id": 6212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17001:0:2"
            },
            "scope": 6670,
            "src": "16961:1707:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6382,
              "nodeType": "Block",
              "src": "19030:208:2",
              "statements": [
                {
                  "assignments": [
                    6353
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6353,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "19049:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 6382,
                      "src": "19041:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6352,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19041:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6366,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 6359,
                                "name": "challenge_number",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6345,
                                "src": "19093:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 6360,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "19110:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 6361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "19110:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 6362,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6341,
                                "src": "19121:5:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 6357,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "19076:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 6358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "19076:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 6363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19076:51:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 6356,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "19066:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 6364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19066:62:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 6355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "19058:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 6354,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19058:7:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 6365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19058:71:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19041:88:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 6369,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6353,
                          "src": "19151:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 6368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "19143:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 6367,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19143:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19143:15:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 6371,
                      "name": "testTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6347,
                      "src": "19161:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19143:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6376,
                  "nodeType": "IfStatement",
                  "src": "19140:41:2",
                  "trueBody": {
                    "expression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6373,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "19173:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 6374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19173:8:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 6375,
                    "nodeType": "ExpressionStatement",
                    "src": "19173:8:2"
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 6379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6377,
                          "name": "digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6353,
                          "src": "19200:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6378,
                          "name": "challenge_digest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6343,
                          "src": "19210:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "19200:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 6380,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "19199:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6351,
                  "id": 6381,
                  "nodeType": "Return",
                  "src": "19192:35:2"
                }
              ]
            },
            "functionSelector": "81269a56",
            "id": 6383,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkMintSolution",
            "nameLocation": "18893:17:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6341,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "18919:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6383,
                  "src": "18911:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18911:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6343,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "18934:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6383,
                  "src": "18926:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6342,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18926:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6345,
                  "mutability": "mutable",
                  "name": "challenge_number",
                  "nameLocation": "18960:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6383,
                  "src": "18952:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6344,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18952:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6347,
                  "mutability": "mutable",
                  "name": "testTarget",
                  "nameLocation": "18983:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6383,
                  "src": "18978:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6346,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "18978:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18910:84:2"
            },
            "returnParameters": {
              "id": 6351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6350,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "19021:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6383,
                  "src": "19016:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6349,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19016:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19015:14:2"
            },
            "scope": 6670,
            "src": "18884:354:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6390,
              "nodeType": "Block",
              "src": "19395:39:2",
              "statements": [
                {
                  "expression": {
                    "id": 6388,
                    "name": "challengeNumber",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5147,
                    "src": "19412:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 6387,
                  "id": 6389,
                  "nodeType": "Return",
                  "src": "19405:22:2"
                }
              ]
            },
            "functionSelector": "4ef37628",
            "id": 6391,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChallengeNumber",
            "nameLocation": "19344:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19362:2:2"
            },
            "returnParameters": {
              "id": 6387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6386,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6391,
                  "src": "19386:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6385,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19386:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19385:9:2"
            },
            "scope": 6670,
            "src": "19335:99:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6401,
              "nodeType": "Block",
              "src": "19581:57:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6398,
                        "name": "miningTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5145,
                        "src": "19618:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6396,
                        "name": "_MAXIMUM_TARGET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5137,
                        "src": "19598:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4923,
                      "src": "19598:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19598:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6395,
                  "id": 6400,
                  "nodeType": "Return",
                  "src": "19591:40:2"
                }
              ]
            },
            "functionSelector": "17da485f",
            "id": 6402,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningDifficulty",
            "nameLocation": "19532:19:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19551:2:2"
            },
            "returnParameters": {
              "id": 6395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6394,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6402,
                  "src": "19575:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6393,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19575:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19574:6:2"
            },
            "scope": 6670,
            "src": "19523:115:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6409,
              "nodeType": "Block",
              "src": "19698:34:2",
              "statements": [
                {
                  "expression": {
                    "id": 6407,
                    "name": "miningTarget",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5145,
                    "src": "19714:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6406,
                  "id": 6408,
                  "nodeType": "Return",
                  "src": "19707:19:2"
                }
              ]
            },
            "functionSelector": "32e99708",
            "id": 6410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningTarget",
            "nameLocation": "19653:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19668:2:2"
            },
            "returnParameters": {
              "id": 6406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6405,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6410,
                  "src": "19692:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6404,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19692:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19691:6:2"
            },
            "scope": 6670,
            "src": "19644:88:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6417,
              "nodeType": "Block",
              "src": "19795:34:2",
              "statements": [
                {
                  "expression": {
                    "id": 6415,
                    "name": "tokensMinted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5213,
                    "src": "19810:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6414,
                  "id": 6416,
                  "nodeType": "Return",
                  "src": "19803:19:2"
                }
              ]
            },
            "functionSelector": "c0abebe0",
            "id": 6418,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningMinted",
            "nameLocation": "19750:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19765:2:2"
            },
            "returnParameters": {
              "id": 6414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6413,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6418,
                  "src": "19789:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6412,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19789:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19788:6:2"
            },
            "scope": 6670,
            "src": "19741:88:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6438,
              "nodeType": "Block",
              "src": "19997:200:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 6433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20174:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "id": 6434,
                          "name": "rewardEra",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5150,
                          "src": "20177:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20174:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 6430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "313530",
                              "id": 6423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "20142:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_150_by_1",
                                "typeString": "int_const 150"
                              },
                              "value": "150"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 6424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20148:2:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 6427,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5238,
                                    "src": "20157:8:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 6426,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "20152:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 6425,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "20152:4:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 6428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20152:14:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "20148:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "20142:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 6431,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "20141:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 6432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4923,
                      "src": "20141:31:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 6436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20141:47:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6422,
                  "id": 6437,
                  "nodeType": "Return",
                  "src": "20134:54:2"
                }
              ]
            },
            "functionSelector": "490203a7",
            "id": 6439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMiningReward",
            "nameLocation": "19952:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19967:2:2"
            },
            "returnParameters": {
              "id": 6422,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6421,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6439,
                  "src": "19991:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6420,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "19991:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19990:6:2"
            },
            "scope": 6670,
            "src": "19943:254:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6446,
              "nodeType": "Block",
              "src": "20358:163:2",
              "statements": [
                {
                  "expression": {
                    "id": 6444,
                    "name": "epochCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5124,
                    "src": "20502:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6443,
                  "id": 6445,
                  "nodeType": "Return",
                  "src": "20495:17:2"
                }
              ]
            },
            "functionSelector": "757991a8",
            "id": 6447,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEpoch",
            "nameLocation": "20320:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20328:2:2"
            },
            "returnParameters": {
              "id": 6443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6442,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6447,
                  "src": "20352:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6441,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "20352:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20351:6:2"
            },
            "scope": 6670,
            "src": "20311:210:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6472,
              "nodeType": "Block",
              "src": "20695:130:2",
              "statements": [
                {
                  "assignments": [
                    6459
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6459,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "20718:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 6472,
                      "src": "20710:14:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6458,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "20710:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6469,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6463,
                            "name": "challengeNumber",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5147,
                            "src": "20755:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 6464,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "20772:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "20772:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 6466,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6449,
                            "src": "20784:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 6461,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "20738:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "20738:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20738:52:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6460,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "20728:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 6468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20728:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20710:81:2"
                },
                {
                  "expression": {
                    "id": 6470,
                    "name": "digest",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6459,
                    "src": "20809:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 6457,
                  "id": 6471,
                  "nodeType": "Return",
                  "src": "20802:13:2"
                }
              ]
            },
            "functionSelector": "97566aa0",
            "id": 6473,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMintDigest",
            "nameLocation": "20573:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6449,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "20595:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6473,
                  "src": "20587:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20587:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6451,
                  "mutability": "mutable",
                  "name": "challenge_digest",
                  "nameLocation": "20610:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6473,
                  "src": "20602:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6450,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20602:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6453,
                  "mutability": "mutable",
                  "name": "challenge_number",
                  "nameLocation": "20636:16:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6473,
                  "src": "20628:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6452,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20628:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20586:67:2"
            },
            "returnParameters": {
              "id": 6457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6456,
                  "mutability": "mutable",
                  "name": "digesttest",
                  "nameLocation": "20683:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6473,
                  "src": "20675:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6455,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "20675:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20674:20:2"
            },
            "scope": 6670,
            "src": "20564:261:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5047
            ],
            "body": {
              "id": 6485,
              "nodeType": "Block",
              "src": "21320:46:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 6481,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5217,
                      "src": "21338:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 6483,
                    "indexExpression": {
                      "id": 6482,
                      "name": "tokenOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6475,
                      "src": "21347:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "21338:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6480,
                  "id": 6484,
                  "nodeType": "Return",
                  "src": "21331:27:2"
                }
              ]
            },
            "functionSelector": "70a08231",
            "id": 6486,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "21246:9:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6477,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21283:8:2"
            },
            "parameters": {
              "id": 6476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6475,
                  "mutability": "mutable",
                  "name": "tokenOwner",
                  "nameLocation": "21264:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6486,
                  "src": "21256:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21256:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21255:20:2"
            },
            "returnParameters": {
              "id": 6480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6479,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "21311:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6486,
                  "src": "21306:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6478,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21306:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21305:14:2"
            },
            "scope": 6670,
            "src": "21237:129:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5011
            ],
            "body": {
              "id": 6529,
              "nodeType": "Block",
              "src": "21797:194:2",
              "statements": [
                {
                  "expression": {
                    "id": 6507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6496,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5217,
                        "src": "21808:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6499,
                      "indexExpression": {
                        "expression": {
                          "id": 6497,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "21817:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21817:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21808:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6505,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6490,
                          "src": "21856:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 6500,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5217,
                            "src": "21831:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 6503,
                          "indexExpression": {
                            "expression": {
                              "id": 6501,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "21840:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "21840:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21831:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4868,
                        "src": "21831:24:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21831:32:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21808:55:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6508,
                  "nodeType": "ExpressionStatement",
                  "src": "21808:55:2"
                },
                {
                  "expression": {
                    "id": 6518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6509,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5217,
                        "src": "21874:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6511,
                      "indexExpression": {
                        "id": 6510,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6488,
                        "src": "21883:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21874:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6516,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6490,
                          "src": "21906:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 6512,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5217,
                            "src": "21889:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 6514,
                          "indexExpression": {
                            "id": 6513,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6488,
                            "src": "21898:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21889:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4847,
                        "src": "21889:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21889:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21874:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6519,
                  "nodeType": "ExpressionStatement",
                  "src": "21874:39:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6521,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "21938:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21938:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6523,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6488,
                        "src": "21950:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6524,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6490,
                        "src": "21954:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6520,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4994,
                      "src": "21929:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21929:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6526,
                  "nodeType": "EmitStatement",
                  "src": "21924:37:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 6527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "21979:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6495,
                  "id": 6528,
                  "nodeType": "Return",
                  "src": "21972:11:2"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 6530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "21724:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6492,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21765:8:2"
            },
            "parameters": {
              "id": 6491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6488,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "21741:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6530,
                  "src": "21733:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21733:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6490,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "21750:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6530,
                  "src": "21745:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6489,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "21745:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21732:25:2"
            },
            "returnParameters": {
              "id": 6495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6494,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "21788:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6530,
                  "src": "21783:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6493,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21783:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21782:14:2"
            },
            "scope": 6670,
            "src": "21715:276:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5040
            ],
            "body": {
              "id": 6558,
              "nodeType": "Block",
              "src": "22591:131:2",
              "statements": [
                {
                  "expression": {
                    "id": 6547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6540,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5223,
                          "src": "22602:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 6544,
                        "indexExpression": {
                          "expression": {
                            "id": 6541,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "22610:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "22610:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "22602:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6545,
                      "indexExpression": {
                        "id": 6543,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6532,
                        "src": "22622:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "22602:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6546,
                      "name": "tokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6534,
                      "src": "22633:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22602:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6548,
                  "nodeType": "ExpressionStatement",
                  "src": "22602:37:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6550,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "22664:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "22664:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6552,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6532,
                        "src": "22676:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6553,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6534,
                        "src": "22685:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6549,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5002,
                      "src": "22655:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22655:37:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6555,
                  "nodeType": "EmitStatement",
                  "src": "22650:42:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 6556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "22710:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6539,
                  "id": 6557,
                  "nodeType": "Return",
                  "src": "22703:11:2"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 6559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "22514:7:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6536,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22559:8:2"
            },
            "parameters": {
              "id": 6535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6532,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "22530:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6559,
                  "src": "22522:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22522:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6534,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "22544:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6559,
                  "src": "22539:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6533,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "22539:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22521:30:2"
            },
            "returnParameters": {
              "id": 6539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6538,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "22582:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6559,
                  "src": "22577:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6537,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22577:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22576:14:2"
            },
            "scope": 6670,
            "src": "22505:217:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5022
            ],
            "body": {
              "id": 6618,
              "nodeType": "Block",
              "src": "23363:252:2",
              "statements": [
                {
                  "expression": {
                    "id": 6580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6571,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5217,
                        "src": "23374:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6573,
                      "indexExpression": {
                        "id": 6572,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6561,
                        "src": "23383:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23374:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6578,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6565,
                          "src": "23410:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 6574,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5217,
                            "src": "23391:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 6576,
                          "indexExpression": {
                            "id": 6575,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6561,
                            "src": "23400:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23391:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4868,
                        "src": "23391:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23391:26:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23374:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6581,
                  "nodeType": "ExpressionStatement",
                  "src": "23374:43:2"
                },
                {
                  "expression": {
                    "id": 6597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6582,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5223,
                          "src": "23428:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 6586,
                        "indexExpression": {
                          "id": 6583,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6561,
                          "src": "23436:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "23428:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6587,
                      "indexExpression": {
                        "expression": {
                          "id": 6584,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "23442:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "23442:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23428:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6595,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6565,
                          "src": "23486:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 6588,
                              "name": "allowed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5223,
                              "src": "23456:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 6590,
                            "indexExpression": {
                              "id": 6589,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6561,
                              "src": "23464:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "23456:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 6593,
                          "indexExpression": {
                            "expression": {
                              "id": 6591,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "23470:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 6592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "23470:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23456:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4868,
                        "src": "23456:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23456:37:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23428:65:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6598,
                  "nodeType": "ExpressionStatement",
                  "src": "23428:65:2"
                },
                {
                  "expression": {
                    "id": 6608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6599,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5217,
                        "src": "23504:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6601,
                      "indexExpression": {
                        "id": 6600,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6563,
                        "src": "23513:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "23504:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6606,
                          "name": "tokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6565,
                          "src": "23536:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "baseExpression": {
                            "id": 6602,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5217,
                            "src": "23519:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 6604,
                          "indexExpression": {
                            "id": 6603,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6563,
                            "src": "23528:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "23519:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4847,
                        "src": "23519:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 6607,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23519:24:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23504:39:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6609,
                  "nodeType": "ExpressionStatement",
                  "src": "23504:39:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6611,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6561,
                        "src": "23568:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6612,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6563,
                        "src": "23574:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6613,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6565,
                        "src": "23578:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6610,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4994,
                      "src": "23559:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23559:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6615,
                  "nodeType": "EmitStatement",
                  "src": "23554:31:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 6616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "23603:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 6570,
                  "id": 6617,
                  "nodeType": "Return",
                  "src": "23596:11:2"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 6619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "23272:12:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6567,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23331:8:2"
            },
            "parameters": {
              "id": 6566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6561,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "23293:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6619,
                  "src": "23285:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23285:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6563,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23307:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6619,
                  "src": "23299:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23299:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6565,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "23316:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6619,
                  "src": "23311:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6564,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "23311:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23284:39:2"
            },
            "returnParameters": {
              "id": 6570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6569,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "23354:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6619,
                  "src": "23349:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6568,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23349:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23348:14:2"
            },
            "scope": 6670,
            "src": "23263:352:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5031
            ],
            "body": {
              "id": 6635,
              "nodeType": "Block",
              "src": "24002:54:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 6629,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5223,
                        "src": "24020:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 6631,
                      "indexExpression": {
                        "id": 6630,
                        "name": "tokenOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6621,
                        "src": "24028:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "24020:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 6633,
                    "indexExpression": {
                      "id": 6632,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6623,
                      "src": "24040:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "24020:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6628,
                  "id": 6634,
                  "nodeType": "Return",
                  "src": "24013:35:2"
                }
              ]
            },
            "functionSelector": "dd62ed3e",
            "id": 6636,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "23909:9:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6625,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23963:8:2"
            },
            "parameters": {
              "id": 6624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6621,
                  "mutability": "mutable",
                  "name": "tokenOwner",
                  "nameLocation": "23927:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6636,
                  "src": "23919:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23919:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6623,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "23947:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6636,
                  "src": "23939:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23939:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23918:37:2"
            },
            "returnParameters": {
              "id": 6628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6627,
                  "mutability": "mutable",
                  "name": "remaining",
                  "nameLocation": "23991:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6636,
                  "src": "23986:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6626,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "23986:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23985:16:2"
            },
            "scope": 6670,
            "src": "23900:156:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5059
            ],
            "body": {
              "id": 6668,
              "nodeType": "Block",
              "src": "24526:108:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6649,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6642,
                          "src": "24542:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 6652,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "24559:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeMining_$6670",
                                "typeString": "contract ForgeMining"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ForgeMining_$6670",
                                "typeString": "contract ForgeMining"
                              }
                            ],
                            "id": 6651,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "24551:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6650,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "24551:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24551:13:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "24542:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6648,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "24534:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24534:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6656,
                  "nodeType": "ExpressionStatement",
                  "src": "24534:31:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6664,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6638,
                        "src": "24612:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6665,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6640,
                        "src": "24618:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 6660,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "24596:4:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ForgeMining_$6670",
                                  "typeString": "contract ForgeMining"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ForgeMining_$6670",
                                  "typeString": "contract ForgeMining"
                                }
                              ],
                              "id": 6659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "24588:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6658,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "24588:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24588:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6657,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5048,
                          "src": "24581:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$5048_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 6662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24581:21:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5048",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 6663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5011,
                      "src": "24581:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 6666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24581:44:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6667,
                  "nodeType": "ExpressionStatement",
                  "src": "24581:44:2"
                }
              ]
            },
            "functionSelector": "8f4ffcb1",
            "id": 6669,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveApproval",
            "nameLocation": "24431:15:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6646,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24518:8:2"
            },
            "parameters": {
              "id": 6645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6638,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "24455:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6669,
                  "src": "24447:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24447:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6640,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "24469:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6669,
                  "src": "24461:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24461:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6642,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "24485:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6669,
                  "src": "24477:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24477:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6644,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "24505:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 6669,
                  "src": "24492:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6643,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "24492:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24446:64:2"
            },
            "returnParameters": {
              "id": 6647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24526:0:2"
            },
            "scope": 6670,
            "src": "24422:212:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6671,
        "src": "5801:18853:2",
        "usedErrors": []
      }
    ],
    "src": "2784:21871:2"
  },
  "bytecode": "60806040526a22bdd89dce55b0116400006004556a115eec47f6cf7e3500000060055542600655600060075561010060085562010000600955600160ea1b600a556200006265048c27395000600a54620001cf60201b620018541790919060201c565b600b556000600d55620000a3600d5460016200007f9190620002e2565b6200008c906002620003fa565b600554620001cf60201b620018541790919060201c565b600554620000b2919062000408565b600e55620000f9600d546002620000ca9190620003fa565b620000d86012600a620003fa565b620000e590609662000422565b620001cf60201b620018541790919060201c565b600f556000601081905542601155670de0b6b3a76400006012556305f5e100601355622dc6c0601455600a601555601c556001601d5560408051808201909152600580825264466f72676560d81b60209092019182526200015d91601e9162000226565b506000601f556020805460ff191690553480156200017a57600080fd5b50600080546001600160a01b0319163390811782556040805192835260208301919091527f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c910160405180910390a1620004a4565b600081620002115760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b604482015260640160405180910390fd5b6200021d828462000444565b90505b92915050565b828054620002349062000467565b90600052602060002090601f016020900481019282620002585760008555620002a3565b82601f106200027357805160ff1916838001178555620002a3565b82800160010185558215620002a3579182015b82811115620002a357825182559160200191906001019062000286565b50620002b1929150620002b5565b5090565b5b80821115620002b15760008155600101620002b6565b634e487b7160e01b600052601160045260246000fd5b60008219821115620002f857620002f8620002cc565b500190565b600181815b808511156200033e578160001904821115620003225762000322620002cc565b808516156200033057918102915b93841c939080029062000302565b509250929050565b600082620003575750600162000220565b81620003665750600062000220565b81600181146200037f57600281146200038a57620003aa565b600191505062000220565b60ff8411156200039e576200039e620002cc565b50506001821b62000220565b5060208310610133831016604e8410600b8410161715620003cf575081810a62000220565b620003db8383620002fd565b8060001904821115620003f257620003f2620002cc565b029392505050565b60006200021d838362000346565b6000828210156200041d576200041d620002cc565b500390565b60008160001904831182151516156200043f576200043f620002cc565b500290565b6000826200046257634e487b7160e01b600052601260045260246000fd5b500490565b600181811c908216806200047c57607f821691505b602082108114156200049e57634e487b7160e01b600052602260045260246000fd5b50919050565b6124a380620004b46000396000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c8063757991a81161016757806397566aa0116100ce578063c8a1465c11610087578063c8a1465c1461056c578063d0856d161461057f578063dc6e9cf914610587578063dd62ed3e14610590578063ddfbd8dd146105c9578063e932012b146105dc57600080fd5b806397566aa01461050c578063a68eb88e1461051f578063a70a8d2314610528578063a9059cbb14610548578063b5ade81b1461055b578063c0abebe01461056457600080fd5b80638ae0368b116101205780638ae0368b146104885780638da5cb5b146104915780638f4ffcb1146104a457806390dc1ca3146104b757806394b939ef146104d757806395d89b41146104ea57600080fd5b8063757991a81461044957806381269a5614610451578063829965cc1461046457806387a2a9d61461046d5780638a5550f6146104765780638a769d351461047f57600080fd5b80632f104e0c1161020b5780634fa972e1116101c45780634fa972e1146103c8578063510de094146103d157806364e46726146103e4578063669753a7146103f75780636de9f32b1461041757806370a082311461042057600080fd5b80632f104e0c14610362578063313ce5671461038d57806332e99708146103a757806345d8a232146103af578063490203a7146103b85780634ef37628146103c057600080fd5b80631801fbe51161025d5780631801fbe51461030e57806318160ddd146103215780631fccb33c1461032a5780632381a60e1461033d57806323b872dd146103465780632d38bf7a1461035957600080fd5b806306fdde031461029a578063095ea7b3146102b85780630d56d6e1146102db57806311b1225f146102ee57806317da485f146102f8575b600080fd5b6102a26105e5565b6040516102af9190611cfe565b60405180910390f35b6102cb6102c6366004611d6f565b610673565b60405190151581526020016102af565b6102cb6102e9366004611daa565b6106e0565b6102f66108e0565b005b61030061097e565b6040519081526020016102af565b6102cb61031c366004611de3565b61099c565b61030060045481565b6102cb610338366004611ed3565b6109b0565b610300600f5481565b6102cb610354366004611f34565b610a75565b610300600d5481565b600254610375906001600160a01b031681565b6040516001600160a01b0390911681526020016102af565b610395601281565b60405160ff90911681526020016102af565b600b54610300565b61030061087081565b610300610b61565b600c54610300565b610300600e5481565b600354610375906001600160a01b031681565b6102f66103f2366004611f70565b610b8c565b610300610405366004611fb3565b60176020526000908152604090205481565b61030060195481565b61030061042e366004611fcc565b6001600160a01b03166000908152601a602052604090205490565b600754610300565b6102cb61045f366004611fe7565b610d0f565b61030060075481565b610300600a5481565b610300601f5481565b610300600b5481565b610300600c5481565b600054610375906001600160a01b031681565b6102f66104b2366004612019565b610d5a565b6103006104c5366004611fb3565b60186020526000908152604090205481565b600154610375906001600160a01b031681565b6102a26040518060400160405280600381526020016246676560e81b81525081565b61030061051a3660046120d9565b610de7565b61030060145481565b610300610536366004611fb3565b60166020526000908152604090205481565b6102cb610556366004611d6f565b610e22565b61030060085481565b601954610300565b6102cb61057a366004612105565b610ea7565b6102f66113c9565b61030060095481565b61030061059e36600461217c565b6001600160a01b039182166000908152601b6020908152604080832093909416825291909152205490565b6102cb6105d73660046121af565b611556565b61030060065481565b601e80546105f2906121db565b80601f016020809104026020016040519081016040528092919081815260200182805461061e906121db565b801561066b5780601f106106405761010080835404028352916020019161066b565b820191906000526020600020905b81548152906001019060200180831161064e57829003601f168201915b505050505081565b336000818152601b602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906106ce9086815260200190565b60405180910390a35060015b92915050565b60006106ea6118a2565b6000601154426106fa919061222c565b90506004610870821115610749575060045b600a8110156107495761072c600361072683610870612243565b90611854565b821161073757610749565b8061074181612262565b91505061070c565b600061075e6004600f54846107269190612243565b336000908152601a602052604090205490915061077b9082611a54565b336000908152601a60205260409020556107ba610799826002611854565b6002546001600160a01b03166000908152601a602052604090205490611a54565b6002546001600160a01b03166000908152601a60205260409020556019546107e29082611a54565b60195542601155601c541561088957600354601c546014546001600160a01b039092169163a9059cbb9133916108189190612243565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610863573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610887919061227d565b505b600f54600754600c546040805193845260208401929092529082015233907fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d9060600160405180910390a250600195945050505050565b6000546001600160a01b0316331461092c5760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b60448201526064015b60405180910390fd5b60205460ff161561093f5761093f61229a565b336000818152601a60209081526040808320670de0b6b3a764000090819055905190815260008051602061244e833981519152910160405180910390a3565b6000610997600b54600a5461185490919063ffffffff16565b905090565b60006109a9838333611556565b5092915050565b600080835160016109c191906122b0565b67ffffffffffffffff8111156109d9576109d9611e05565b604051908082528060200260200182016040528015610a02578160200160208202803683370190505b5090506000805b8551610a169060016122b0565b811015610a5a5784838281518110610a3057610a306122c8565b6001600160a01b039092166020928302919091019091015280610a5281612262565b915050610a09565b50610a6787878785610ea7565b506001979650505050505050565b6001600160a01b0383166000908152601a6020526040812054610a989083611aa2565b6001600160a01b0385166000908152601a6020908152604080832093909355601b815282822033835290522054610acf9083611aa2565b6001600160a01b038086166000908152601b602090815260408083203384528252808320949094559186168152601a9091522054610b0d9083611a54565b6001600160a01b038085166000818152601a6020526040908190209390935591519086169060008051602061244e83398151915290610b4f9086815260200190565b60405180910390a35060019392505050565b6000610997600d546002610b7591906123c2565b610b816012600a6123c2565b610726906096612243565b6000546001600160a01b03163314610bd35760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b6044820152606401610923565b6000601f546002610be491906123c2565b610bef906002612243565b610c04906a115eec47f6cf7e350000006123e4565b60205490915060ff1615610c1a57610c1a61229a565b6020805460ff191660011790556000600d819055601955600a54610c40906103e9611854565b600b55610c4b6118a2565b6001600160a01b0384166000818152601a602090815260408083208590555184815260008051602061244e833981519152910160405180910390a3600180546001600160a01b038087166001600160a01b031992831617909255600280548684169083161790556003805492851692909116919091179055600754601055336000818152601a60205260408082206305f5e10090819055905160008051602061244e83398151915291610d019190815260200190565b60405180910390a350505050565b600080833387604051602001610d27939291906123f8565b604051602081830303815290604052805190602001209050828160001c1115610d4f57600080fd5b909314949350505050565b6001600160a01b0382163014610d6f57600080fd5b60405163a9059cbb60e01b81526001600160a01b038516600482015260248101849052309063a9059cbb906044016020604051808303816000875af1158015610dbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de0919061227d565b5050505050565b600080600c543386604051602001610e01939291906123f8565b60408051808303601f19018152919052805160209091012095945050505050565b336000908152601a6020526040812054610e3c9083611aa2565b336000908152601a6020526040808220929092556001600160a01b03851681522054610e689083611a54565b6001600160a01b0384166000818152601a602052604090819020929092559051339060008051602061244e833981519152906106ce9086815260200190565b6011546000906004908290610ebc904261222c565b9050610870811115610f0457600491505b600a821015610f0457610ee7600361072684610870612243565b8111610ef257610f04565b81610efc81612262565b925050610ecd565b8451610f119060016122b0565b845114610f865760405162461bcd60e51b815260206004820152603d60248201527f536f204d696e74546f2068617320746f20686176652073616d65206e756d626560448201527f72206f66206164647265737373657320617320457874726146756e64730000006064820152608401610923565b60005b855181101561111a57306001600160a01b0316868281518110610fae57610fae6122c8565b60200260200101516001600160a01b031614158015610fff575060035486516001600160a01b0390911690879083908110610feb57610feb6122c8565b60200260200101516001600160a01b031614155b61104b5760405162461bcd60e51b815260206004820152601a60248201527f4e6f2062617365207072696e74696e67206f6620746f6b656e730000000000006044820152606401610923565b60015b865181101561110757868281518110611069576110696122c8565b60200260200101516001600160a01b031687828151811061108c5761108c6122c8565b60200260200101516001600160a01b03161415806110a957508082145b6110f55760405162461bcd60e51b815260206004820152601b60248201527f4e6f207072696e74696e67205468652073616d6520746f6b656e7300000000006044820152606401610923565b806110ff81612262565b91505061104e565b508061111281612262565b915050610f89565b50611140878786600081518110611133576111336122c8565b6020026020010151611556565b6111795760405162461bcd60e51b815260206004820152600a6024820152696d696e7420697373756560b01b6044820152606401610923565b6000805b8651811015611368576111918160016122b0565b61119c9060026123c2565b6007546111a99190612420565b6113565760008782815181106111c1576111c16122c8565b60209081029190910101516040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611211573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112359190612434565b90508015611351576000600361124c8460016122b0565b6112569190612420565b15801561126257508215155b156112845761127d6127106112778885612243565b90611aee565b9050611297565b6112946127106107268885612243565b90505b8883815181106112a9576112a96122c8565b60200260200101516001600160a01b031663a9059cbb8985815181106112d1576112d16122c8565b6020026020010151836040518363ffffffff1660e01b815260040161130b9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801561132a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134e919061227d565b50505b819250505b8061136081612262565b91505061117d565b50600f54600754600c54604080519384526020840192909252908201526060810182905233907f8d1274a08a1f38c385cc00828b937d1a29d4ce3a901ede97b42639d0c19ae2ae9060800160405180910390a2506001979650505050505050565b60006010546007546113db919061222c565b90506113ef600d546002610b7591906123c2565b600f5560085460145460049161140491612243565b61140f906006612243565b61141991906123e4565b6003546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015611461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114859190612434565b111561154757601d54611499906001612243565b601c8190556003546002546014546001600160a01b039283169363a9059cbb9390921691906114c89086612243565b6114d29190612243565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561151d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611541919061227d565b5061154d565b6000601c555b50600754601055565b600061156f600f54601954611a5490919063ffffffff16565b506000600c543386604051602001611589939291906123f8565b6040516020818303038152906040528051906020012090508381146116075760405162461bcd60e51b815260206004820152602e60248201527f4f6c64206368616c6c656e67655f646967657374206f722077726f6e6720636860448201526d185b1b195b99d957d91a59d95cdd60921b6064820152608401610923565b600b5481106116695760405162461bcd60e51b815260206004820152602860248201527f446967657374206d75737420626520736d616c6c6572207468616e206d696e696044820152671b99d5185c99d95d60c21b6064820152608401610923565b6116716118a2565b600060115442611681919061222c565b905060046108708211156116ca575060045b600a8110156116ca576116ad600361072683610870612243565b82116116b8576116ca565b806116c281612262565b915050611693565b60006116df6004600f54846107269190612243565b6001600160a01b0387166000908152601a60205260409020549091506117059082611a54565b6001600160a01b0387166000908152601a602052604090205561172c610799826002611854565b6002546001600160a01b03166000908152601a60205260409020556019546117549082611a54565b60195542601155601c54156117fb57600354601c546014546001600160a01b039092169163a9059cbb91899161178a9190612243565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156117d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f9919061227d565b505b600f54600754600c546040805193845260208401929092529082015233907fcf6fbb9dcea7d07263ab4f5c3a92f53af33dffc421d9d121e1c74b307e68189d9060600160405180910390a2506001979650505050505050565b6000816118915760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b6044820152606401610923565b61189b82846123e4565b9392505050565b600e54600f546019546118b491611a54565b1180156118c357506027600d54105b156118f757600d546118d69060016122b0565b600d8190556118f3906118ea9060026123c2565b600b5490611854565b600b555b600754611905906001611a54565b600755600854611917906004906123e4565b6007546119249190612420565b611a43576119306113c9565b611956600d54600161194291906122b0565b61194d9060026123c2565b60055490611854565b600554611963919061222c565b600e556008546007546119769190612420565b611a43576014546003546040516370a0823160e01b815230600482015261271092916001600160a01b0316906370a0823190602401602060405180830381865afa1580156119c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ec9190612434565b6119f691906123e4565b11611a2957601554601454611a0c906002611854565b1115611a2457601454611a20906002611854565b6014555b611a3b565b601454611a37906003611b5b565b6014555b611a43611bc0565b611a4e60014361222c565b40600c55565b600080611a6183856122b0565b90508381101561189b5760405162461bcd60e51b815260206004820152600c60248201526b416464206f766572666c6f7760a01b6044820152606401610923565b600081831015611ae45760405162461bcd60e51b815260206004820152600d60248201526c53756220756e646572666c6f7760981b6044820152606401610923565b61189b828461222c565b600081611b2b5760405162461bcd60e51b815260206004820152600b60248201526a446976206279207a65726f60a81b6044820152606401610923565b6000611b3783856123e4565b9050611b438385612420565b1561189b57611b538160016122b0565b949350505050565b600082611b6a575060006106da565b6000611b768385612243565b905082611b8385836123e4565b1461189b5760405162461bcd60e51b815260206004820152600d60248201526c4d756c74206f766572666c6f7760981b6044820152606401610923565b6006544290600090611bd2908361222c565b6008549091506000611be682610870612243565b905080831015611c5b576000611c0184610726846064611b5b565b6001601d5590506000611c216103e8611c1b846064611aa2565b90611ce6565b9050611c50611c4782611c416107d0600b5461185490919063ffffffff16565b90611b5b565b600b5490611aa2565b600b5550611cb59050565b6000611c6c82610726866064611b5b565b6002601d5590506000611c866103e8611c1b846064611aa2565b9050611caf611ca682611c416107d0600b5461185490919063ffffffff16565b600b5490611a54565b600b5550505b6006849055600954600b541015611ccd57600954600b555b600a54600b541115611ce057600a54600b555b50505050565b600081831115611cf75750806106da565b5090919050565b600060208083528351808285015260005b81811015611d2b57858101830151858201604001528201611d0f565b81811115611d3d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114611d6a57600080fd5b919050565b60008060408385031215611d8257600080fd5b611d8b83611d53565b946020939093013593505050565b8015158114611da757600080fd5b50565b60008060408385031215611dbd57600080fd5b8235611dc881611d99565b91506020830135611dd881611d99565b809150509250929050565b60008060408385031215611df657600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611e4457611e44611e05565b604052919050565b600082601f830112611e5d57600080fd5b8135602067ffffffffffffffff821115611e7957611e79611e05565b8160051b611e88828201611e1b565b9283528481018201928281019087851115611ea257600080fd5b83870192505b84831015611ec857611eb983611d53565b82529183019190830190611ea8565b979650505050505050565b60008060008060808587031215611ee957600080fd5b8435935060208501359250604085013567ffffffffffffffff811115611f0e57600080fd5b611f1a87828801611e4c565b925050611f2960608601611d53565b905092959194509250565b600080600060608486031215611f4957600080fd5b611f5284611d53565b9250611f6060208501611d53565b9150604084013590509250925092565b600080600060608486031215611f8557600080fd5b611f8e84611d53565b9250611f9c60208501611d53565b9150611faa60408501611d53565b90509250925092565b600060208284031215611fc557600080fd5b5035919050565b600060208284031215611fde57600080fd5b61189b82611d53565b60008060008060808587031215611ffd57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000806080858703121561202f57600080fd5b61203885611d53565b9350602080860135935061204e60408701611d53565b9250606086013567ffffffffffffffff8082111561206b57600080fd5b818801915088601f83011261207f57600080fd5b81358181111561209157612091611e05565b6120a3601f8201601f19168501611e1b565b915080825289848285010111156120b957600080fd5b808484018584013760008482840101525080935050505092959194509250565b6000806000606084860312156120ee57600080fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561211b57600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561214157600080fd5b61214d88838901611e4c565b9350606087013591508082111561216357600080fd5b5061217087828801611e4c565b91505092959194509250565b6000806040838503121561218f57600080fd5b61219883611d53565b91506121a660208401611d53565b90509250929050565b6000806000606084860312156121c457600080fd5b8335925060208401359150611faa60408501611d53565b600181811c908216806121ef57607f821691505b6020821081141561221057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561223e5761223e612216565b500390565b600081600019048311821515161561225d5761225d612216565b500290565b600060001982141561227657612276612216565b5060010190565b60006020828403121561228f57600080fd5b815161189b81611d99565b634e487b7160e01b600052600160045260246000fd5b600082198211156122c3576122c3612216565b500190565b634e487b7160e01b600052603260045260246000fd5b600181815b808511156123195781600019048211156122ff576122ff612216565b8085161561230c57918102915b93841c93908002906122e3565b509250929050565b600082612330575060016106da565b8161233d575060006106da565b8160018114612353576002811461235d57612379565b60019150506106da565b60ff84111561236e5761236e612216565b50506001821b6106da565b5060208310610133831016604e8410600b841016171561239c575081810a6106da565b6123a683836122de565b80600019048211156123ba576123ba612216565b029392505050565b600061189b8383612321565b634e487b7160e01b600052601260045260246000fd5b6000826123f3576123f36123ce565b500490565b92835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b60008261242f5761242f6123ce565b500690565b60006020828403121561244657600080fd5b505191905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220fd0c36359e2de55b59d42f2f00426e70a0971f66b56ea67bf7b4d63560d213d064736f6c634300080b0033",
  "bytecodeSha1": "09cda96e2421b11fbf44228cc286e7f383d3b74b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "ForgeMining",
  "coverageMap": {
    "branches": {
      "2": {
        "ExtendedMath2.limitLessThan": {
          "154": [
            4788,
            4793,
            false
          ]
        },
        "ForgeMining.AOpenMint": {
          "118": [
            9800,
            9818,
            false
          ],
          "119": [
            9869,
            9900,
            false
          ],
          "120": [
            10254,
            10267,
            false
          ]
        },
        "ForgeMining.ARewardSender": {
          "134": [
            10695,
            10792,
            false
          ]
        },
        "ForgeMining._reAdjustDifficulty": {
          "151": [
            17385,
            17442,
            false
          ],
          "152": [
            18434,
            18464,
            false
          ],
          "153": [
            18557,
            18587,
            false
          ]
        },
        "ForgeMining._startNewMiningEpoch": {
          "141": [
            15607,
            15658,
            false
          ],
          "142": [
            15662,
            15676,
            false
          ],
          "143": [
            16308,
            16380,
            false
          ],
          "144": [
            16477,
            16505,
            false
          ]
        },
        "ForgeMining.checkMintSolution": {
          "121": [
            19143,
            19171,
            false
          ]
        },
        "ForgeMining.mintTo": {
          "135": [
            11850,
            11876,
            true
          ],
          "136": [
            12007,
            12037,
            true
          ],
          "137": [
            12200,
            12218,
            false
          ],
          "138": [
            12269,
            12300,
            false
          ],
          "139": [
            12646,
            12659,
            false
          ]
        },
        "ForgeMining.mintTokensArrayTo": {
          "123": [
            13360,
            13378,
            false
          ],
          "124": [
            13420,
            13452,
            false
          ],
          "125": [
            13506,
            13544,
            true
          ],
          "126": [
            13685,
            13715,
            false
          ],
          "127": [
            13719,
            13751,
            true
          ],
          "128": [
            13871,
            13901,
            true
          ],
          "129": [
            13905,
            13911,
            true
          ],
          "130": [
            13981,
            14022,
            true
          ],
          "131": [
            14265,
            14280,
            false
          ],
          "132": [
            14331,
            14345,
            false
          ],
          "133": [
            14349,
            14355,
            false
          ]
        },
        "ForgeMining.receiveApproval": {
          "122": [
            24542,
            24564,
            true
          ]
        },
        "SafeMath2.add": {
          "145": [
            3792,
            3798,
            true
          ]
        },
        "SafeMath2.div": {
          "140": [
            4302,
            4308,
            true
          ]
        },
        "SafeMath2.divRound": {
          "147": [
            4449,
            4455,
            true
          ],
          "148": [
            4512,
            4522,
            false
          ]
        },
        "SafeMath2.mult": {
          "149": [
            4072,
            4078,
            false
          ],
          "150": [
            4158,
            4168,
            true
          ]
        },
        "SafeMath2.sub": {
          "146": [
            3931,
            3937,
            true
          ]
        }
      }
    },
    "statements": {
      "2": {
        "ExtendedMath2.limitLessThan": {
          "116": [
            4795,
            4803
          ],
          "117": [
            4814,
            4822
          ]
        },
        "ForgeMining.AOpenMint": {
          "9": [
            9690,
            9712
          ],
          "10": [
            9839,
            9844
          ],
          "11": [
            9912,
            9917
          ],
          "12": [
            9853,
            9856
          ],
          "13": [
            9999,
            10054
          ],
          "14": [
            10065,
            10139
          ],
          "15": [
            10149,
            10188
          ],
          "16": [
            10202,
            10237
          ],
          "17": [
            10282,
            10347
          ],
          "18": [
            10373,
            10439
          ],
          "19": [
            10452,
            10463
          ]
        },
        "ForgeMining.ARewardSender": {
          "72": [
            10623,
            10685
          ],
          "73": [
            10886,
            10906
          ],
          "74": [
            10916,
            11005
          ],
          "75": [
            11031,
            11044
          ],
          "76": [
            11056,
            11078
          ]
        },
        "ForgeMining._reAdjustDifficulty": {
          "109": [
            17566,
            17574
          ],
          "110": [
            17851,
            17935
          ],
          "111": [
            18083,
            18091
          ],
          "112": [
            18249,
            18335
          ],
          "113": [
            18375,
            18420
          ],
          "114": [
            18503,
            18533
          ],
          "115": [
            18621,
            18651
          ]
        },
        "ForgeMining._startNewMiningEpoch": {
          "93": [
            15694,
            15719
          ],
          "94": [
            15729,
            15776
          ],
          "95": [
            15965,
            15995
          ],
          "96": [
            16146,
            16161
          ],
          "97": [
            16165,
            16235
          ],
          "98": [
            16535,
            16563
          ],
          "99": [
            16628,
            16657
          ],
          "100": [
            16688,
            16709
          ],
          "101": [
            16728,
            16773
          ]
        },
        "ForgeMining.allowance": {
          "5": [
            24013,
            24048
          ]
        },
        "ForgeMining.approve": {
          "6": [
            22602,
            22639
          ],
          "7": [
            22650,
            22692
          ],
          "8": [
            22703,
            22714
          ]
        },
        "ForgeMining.balanceOf": {
          "2": [
            21331,
            21358
          ]
        },
        "ForgeMining.checkMintSolution": {
          "49": [
            19173,
            19181
          ],
          "50": [
            19192,
            19227
          ]
        },
        "ForgeMining.getChallengeNumber": {
          "1": [
            19405,
            19427
          ]
        },
        "ForgeMining.getEpoch": {
          "3": [
            20495,
            20512
          ]
        },
        "ForgeMining.getMiningDifficulty": {
          "23": [
            19591,
            19631
          ]
        },
        "ForgeMining.getMiningMinted": {
          "4": [
            19803,
            19822
          ]
        },
        "ForgeMining.getMiningReward": {
          "34": [
            20134,
            20188
          ]
        },
        "ForgeMining.getMiningTarget": {
          "0": [
            19707,
            19726
          ]
        },
        "ForgeMining.mint": {
          "24": [
            11379,
            11422
          ]
        },
        "ForgeMining.mintTo": {
          "77": [
            11642,
            11673
          ],
          "78": [
            11842,
            11927
          ],
          "79": [
            11999,
            12082
          ],
          "80": [
            12090,
            12112
          ],
          "81": [
            12239,
            12244
          ],
          "82": [
            12312,
            12317
          ],
          "83": [
            12253,
            12256
          ],
          "84": [
            12399,
            12446
          ],
          "85": [
            12457,
            12531
          ],
          "86": [
            12541,
            12580
          ],
          "87": [
            12594,
            12629
          ],
          "88": [
            12674,
            12735
          ],
          "89": [
            12761,
            12827
          ],
          "90": [
            12840,
            12851
          ]
        },
        "ForgeMining.mintTokensArrayTo": {
          "56": [
            13391,
            13397
          ],
          "57": [
            13460,
            13465
          ],
          "58": [
            13407,
            13411
          ],
          "59": [
            13498,
            13609
          ],
          "60": [
            13677,
            13782
          ],
          "61": [
            13863,
            13943
          ],
          "62": [
            13841,
            13844
          ],
          "63": [
            13654,
            13657
          ],
          "64": [
            13973,
            14037
          ],
          "65": [
            14370,
            14414
          ],
          "66": [
            14452,
            14491
          ],
          "67": [
            14611,
            14663
          ],
          "68": [
            14684,
            14693
          ],
          "69": [
            14102,
            14105
          ],
          "70": [
            14730,
            14807
          ],
          "71": [
            14813,
            14824
          ]
        },
        "ForgeMining.mintTokensSameAddress": {
          "25": [
            15148,
            15162
          ],
          "26": [
            15121,
            15124
          ],
          "27": [
            15182,
            15240
          ],
          "28": [
            15250,
            15261
          ]
        },
        "ForgeMining.receiveApproval": {
          "51": [
            24534,
            24565
          ],
          "52": [
            24581,
            24625
          ]
        },
        "ForgeMining.transfer": {
          "53": [
            21808,
            21863
          ],
          "54": [
            21874,
            21913
          ],
          "55": [
            21924,
            21961
          ]
        },
        "ForgeMining.transferFrom": {
          "29": [
            23374,
            23417
          ],
          "30": [
            23428,
            23493
          ],
          "31": [
            23504,
            23543
          ],
          "32": [
            23554,
            23585
          ],
          "33": [
            23596,
            23607
          ]
        },
        "ForgeMining.zFIRST": {
          "20": [
            9450,
            9465
          ],
          "21": [
            9475,
            9506
          ],
          "22": [
            9516,
            9563
          ]
        },
        "ForgeMining.zinit": {
          "35": [
            8433,
            8448
          ],
          "36": [
            8458,
            8471
          ],
          "37": [
            8480,
            8493
          ],
          "38": [
            8496,
            8512
          ],
          "39": [
            8589,
            8629
          ],
          "40": [
            8766,
            8788
          ],
          "41": [
            8854,
            8883
          ],
          "42": [
            8893,
            8938
          ],
          "43": [
            8945,
            8977
          ],
          "44": [
            8989,
            9024
          ],
          "45": [
            9034,
            9068
          ],
          "46": [
            9078,
            9100
          ],
          "47": [
            9147,
            9179
          ],
          "48": [
            9189,
            9237
          ]
        },
        "SafeMath2.add": {
          "102": [
            3784,
            3815
          ]
        },
        "SafeMath2.div": {
          "91": [
            4294,
            4324
          ],
          "92": [
            4334,
            4346
          ]
        },
        "SafeMath2.divRound": {
          "105": [
            4441,
            4471
          ],
          "106": [
            4538,
            4547
          ]
        },
        "SafeMath2.mult": {
          "107": [
            4094,
            4102
          ],
          "108": [
            4150,
            4186
          ]
        },
        "SafeMath2.sub": {
          "103": [
            3923,
            3955
          ],
          "104": [
            3965,
            3977
          ]
        }
      }
    }
  },
  "dependencies": [
    "ApproveAndCallFallBack",
    "ExtendedMath2",
    "IERC20",
    "Ownable",
    "SafeMath2"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "5801:18853:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8007:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;22505:217;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:3;;1211:22;1193:41;;1181:2;1166:18;22505:217:2;1053:187:3;9593:877:2;;;;;;:::i;:::-;;:::i;9406:160::-;;;:::i;:::-;;19523:115;;;:::i;:::-;;;1895:25:3;;;1883:2;1868:18;19523:115:2;1749:177:3;11288:137:2;;;;;;:::i;:::-;;:::i;6396:64::-;;;;;;14835:429;;;;;;:::i;:::-;;:::i;7242:75::-;;;;;;23263:352;;;;;;:::i;:::-;;:::i;7121:25::-;;;;;;5990:30;;;;;-1:-1:-1;;;;;5990:30:2;;;;;;-1:-1:-1;;;;;4380:32:3;;;4362:51;;4350:2;4335:18;5990:30:2;4216:203:3;8084:35:2;;8117:2;8084:35;;;;;4596:4:3;4584:17;;;4566:36;;4554:2;4539:18;8084:35:2;4424:184:3;19644:88:2;19714:12;;19644:88;;5868:41;;5902:7;5868:41;;19943:254;;;:::i;19335:99::-;19412:15;;19335:99;;7152:84;;;;;;6026:30;;;;;-1:-1:-1;;;;;6026:30:2;;;8188:1083;;;;;;:::i;:::-;;:::i;7664:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;7774:24;;;;;;21237:129;;;;;;:::i;:::-;-1:-1:-1;;;;;21338:20:2;21306:12;21338:20;;;:8;:20;;;;;;;21237:129;20311:210;20502:10;;20311:210;;18884:354;;;;;;:::i;:::-;;:::i;6682:26::-;;;;;;6859:37;;;;;;8125:30;;;;;;6902:63;;;;;;7034:30;;;;;;2832:20;;;;;-1:-1:-1;;;;;2832:20:2;;;24422:212;;;;;;:::i;:::-;;:::i;7719:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;5955:29;;;;;-1:-1:-1;;;;;5955:29:2;;;8041:37;;;;;;;;;;;;;;;-1:-1:-1;;;8041:37:2;;;;;20564:261;;;;;;:::i;:::-;;:::i;7511:40::-;;;;;;7603:55;;;;;;:::i;:::-;;;;;;;;;;;;;;21715:276;;;;;;:::i;:::-;;:::i;6741:42::-;;;;;;19741:88;19810:12;;19741:88;;13129:1698;;;;;;:::i;:::-;;:::i;10473:625::-;;;:::i;6812:36::-;;;;;;23900:156;;;;;;:::i;:::-;-1:-1:-1;;;;;24020:19:2;;;23986:14;24020:19;;;:7;:19;;;;;;;;:28;;;;;;;;;;;;;23900:156;11529:1325;;;;;;:::i;:::-;;:::i;6616:60::-;;;;;;8007:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;22505:217::-;22610:10;22577:12;22602:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;22602:28:2;;;;;;;;;;:37;;;22655;22577:12;;22602:28;;22655:37;;;;22633:6;1895:25:3;;1883:2;1868:18;;1749:177;22655:37:2;;;;;;;;-1:-1:-1;22710:4:2;22505:217;;;;;:::o;9593:877::-;9663:12;9690:22;:20;:22::i;:::-;9724:9;9754:17;;9736:15;:35;;;;:::i;:::-;9724:47;-1:-1:-1;9788:1:2;5902:7;9800:18;;9797:139;;;-1:-1:-1;9843:1:2;9835:93;9849:2;9846:1;:5;9835:93;;;9877:23;9898:1;9878:14;9891:1;5902:7;9878:14;:::i;:::-;9877:20;;:23::i;:::-;9869:4;:31;9866:61;;9912:5;;9866:61;9853:3;;;;:::i;:::-;;;;9835:93;;;9949:11;9963:26;9987:1;9968:13;;9964:1;:17;;;;:::i;9963:26::-;10031:10;10022:20;;;;:8;:20;;;;;;9949:40;;-1:-1:-1;10022:32:2;;9949:40;10022:24;:32::i;:::-;10008:10;9999:20;;;;:8;:20;;;;;:55;10093:46;10123:15;10124:6;10136:1;10123:12;:15::i;:::-;10102;;-1:-1:-1;;;;;10102:15:2;10093:25;;;;:8;:25;;;;;;;:29;:46::i;:::-;10074:15;;-1:-1:-1;;;;;10074:15:2;10065:25;;;;:8;:25;;;;;:74;10164:12;;:24;;10181:6;10164:16;:24::i;:::-;10149:12;:39;10222:15;10202:17;:35;10254:9;;:13;10251:110;;10289:15;;10337:9;;10327;;-1:-1:-1;;;;;10289:15:2;;;;10282:32;;10315:10;;10327:19;;10337:9;10327:19;:::i;:::-;10282:65;;-1:-1:-1;;;;;;10282:65:2;;;;;;;-1:-1:-1;;;;;9872:32:3;;;10282:65:2;;;9854:51:3;9921:18;;;9914:34;9827:18;;10282:65:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10251:110;10395:13;;10410:10;;10422:15;;10378:61;;;10411:25:3;;;10467:2;10452:18;;10445:34;;;;10495:18;;;10488:34;10383:10:2;;10378:61;;10399:2:3;10384:18;10378:61:2;;;;;;;-1:-1:-1;10459:4:2;;9593:877;-1:-1:-1;;;;;9593:877:2:o;9406:160::-;3088:5;;-1:-1:-1;;;;;3088:5:2;3074:10;:19;3066:42;;;;-1:-1:-1;;;3066:42:2;;10735:2:3;3066:42:2;;;10717:21:3;10774:2;10754:18;;;10747:30;-1:-1:-1;;;10793:18:3;;;10786:40;10843:18;;3066:42:2;;;;;;;;;9458:6:::1;::::0;::::1;;9457:7;9450:15;;;;:::i;:::-;9484:10;9475:20;::::0;;;:8:::1;:20;::::0;;;;;;;9498:8:::1;9475:31:::0;;;;9521:42;;1895:25:3;;;-1:-1:-1;;;;;;;;;;;9521:42:2;1868:18:3;9521:42:2::1;;;;;;;9406:160::o:0;19523:115::-;19575:4;19598:33;19618:12;;19598:15;;:19;;:33;;;;:::i;:::-;19591:40;;19523:115;:::o;11288:137::-;11359:12;11379:43;11386:5;11393:16;11411:10;11379:6;:43::i;:::-;;11288:137;;;;:::o;14835:429::-;14968:12;14992:19;15028:10;:17;15048:1;15028:21;;;;:::i;:::-;15014:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15014:36:2;;14992:58;;15061:6;15083;15079:94;15097:17;;:21;;15117:1;15097:21;:::i;:::-;15093:1;:26;15079:94;;;15156:6;15148:2;15151:1;15148:5;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15148:14:2;;;:5;;;;;;;;;;;:14;15121:3;;;;:::i;:::-;;;;15079:94;;;;15182:58;15200:5;15207:16;15225:10;15237:2;15182:17;:58::i;:::-;-1:-1:-1;15257:4:2;;14835:429;-1:-1:-1;;;;;;;14835:429:2:o;23263:352::-;-1:-1:-1;;;;;23391:14:2;;23349:12;23391:14;;;:8;:14;;;;;;:26;;23410:6;23391:18;:26::i;:::-;-1:-1:-1;;;;;23374:14:2;;;;;;:8;:14;;;;;;;;:43;;;;23456:7;:13;;;;;23470:10;23456:25;;;;;;:37;;23486:6;23456:29;:37::i;:::-;-1:-1:-1;;;;;23428:13:2;;;;;;;:7;:13;;;;;;;;23442:10;23428:25;;;;;;;:65;;;;23519:12;;;;;:8;:12;;;;;:24;;23536:6;23519:16;:24::i;:::-;-1:-1:-1;;;;;23504:12:2;;;;;;;:8;:12;;;;;;;:39;;;;23559:26;;;;;;-1:-1:-1;;;;;;;;;;;23559:26:2;;;23578:6;1895:25:3;;1883:2;1868:18;;1749:177;23559:26:2;;;;;;;;-1:-1:-1;23603:4:2;23263:352;;;;;:::o;19943:254::-;19991:4;20141:47;20177:9;;20174:1;:12;;;;:::i;:::-;20148:18;8117:2;20148;:18;:::i;:::-;20142:24;;:3;:24;:::i;8188:1083::-;3088:5;;-1:-1:-1;;;;;3088:5:2;3074:10;:19;3066:42;;;;-1:-1:-1;;;3066:42:2;;10735:2:3;3066:42:2;;;10717:21:3;10774:2;10754:18;;;10747:30;-1:-1:-1;;;10793:18:3;;;10786:40;10843:18;;3066:42:2;10533:334:3;3066:42:2;8298:6:::1;8346:14;;8341:1;:19;;;;:::i;:::-;8337:24;::::0;:1:::1;:24;:::i;:::-;8307:55;::::0;:26:::1;:55;:::i;:::-;8441:6;::::0;8298:64;;-1:-1:-1;8441:6:2::1;;8440:7;8433:15;;;;:::i;:::-;8458:6;:13:::0;;-1:-1:-1;;8458:13:2::1;8467:4;8458:13;::::0;;:6:::1;8480:9;:13:::0;;;8496:12:::1;:16:::0;8604:15:::1;::::0;:25:::1;::::0;8624:4:::1;8604:19;:25::i;:::-;8589:12;:40:::0;8766:22:::1;:20;:22::i;:::-;-1:-1:-1::0;;;;;8854:25:2;::::1;;::::0;;;:8:::1;:25;::::0;;;;;;;:29;;;8898:40;1895:25:3;;;-1:-1:-1;;;;;;;;;;;8898:40:2;1868:18:3;8898:40:2::1;;;;;;;8945:14;:32:::0;;-1:-1:-1;;;;;8945:32:2;;::::1;-1:-1:-1::0;;;;;;8945:32:2;;::::1;;::::0;;;8989:15:::1;:35:::0;;;;::::1;::::0;;::::1;;::::0;;9034:15:::1;:34:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;9090:10:::1;::::0;9078:9:::1;:22:::0;9156:10:::1;8945:14;9147:20:::0;;;:8:::1;:20;::::0;;;;;9170:9:::1;9147:32:::0;;;;9194:43;;-1:-1:-1;;;;;;;;;;;9194:43:2;::::1;::::0;1895:25:3;;;1883:2;1868:18;;1749:177;9194:43:2::1;;;;;;;;8288:983;8188:1083:::0;;;:::o;18884:354::-;19016:12;19041:14;19093:16;19110:10;19121:5;19076:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;19066:62;;;;;;19041:88;;19161:10;19151:6;19143:15;;:28;19140:41;;;19173:8;;;19140:41;19200:26;;;;18884:354;-1:-1:-1;;;;18884:354:2:o;24422:212::-;-1:-1:-1;;;;;24542:22:2;;24559:4;24542:22;24534:31;;;;;;24581:44;;-1:-1:-1;;;24581:44:2;;-1:-1:-1;;;;;9872:32:3;;24581:44:2;;;9854:51:3;9921:18;;;9914:34;;;24596:4:2;;24581:30;;9827:18:3;;24581:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;24422:212;;;;:::o;20564:261::-;20675:18;20710:14;20755:15;;20772:10;20784:5;20738:52;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;20738:52:2;;;;;;20728:63;;20738:52;20728:63;;;;;20564:261;-1:-1:-1;;;;;20564:261:2:o;21715:276::-;21840:10;21783:12;21831:20;;;:8;:20;;;;;;:32;;21856:6;21831:24;:32::i;:::-;21817:10;21808:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;21889:12:2;;;;;;:24;;21906:6;21889:16;:24::i;:::-;-1:-1:-1;;;;;21874:12:2;;;;;;:8;:12;;;;;;;:39;;;;21929:32;;21938:10;;-1:-1:-1;;;;;;;;;;;21929:32:2;;;21954:6;1895:25:3;;1883:2;1868:18;;1749:177;13129:1698:2;13336:17;;13267:12;;13295:1;;13267:12;;13318:35;;:15;:35;:::i;:::-;13306:47;;5902:7;13360:4;:18;13357:132;;;13396:1;13391:6;;13387:98;13403:2;13399;:6;13387:98;;;13428:24;13450:1;13429:15;13442:2;5902:7;13429:15;:::i;13428:24::-;13420:4;:32;13417:54;;13460:5;;13417:54;13407:4;;;;:::i;:::-;;;;13387:98;;;13523:17;;:21;;13543:1;13523:21;:::i;:::-;13506:6;:13;:38;13498:111;;;;-1:-1:-1;;;13498:111:2;;13872:2:3;13498:111:2;;;13854:21:3;13911:2;13891:18;;;13884:30;13950:34;13930:18;;;13923:62;14021:31;14001:18;;;13994:59;14070:19;;13498:111:2;13670:425:3;13498:111:2;13622:6;13618:348;13635:10;:17;13632:1;:20;13618:348;;;13710:4;-1:-1:-1;;;;;13685:30:2;:10;13696:1;13685:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;13685:30:2;;;:66;;;;-1:-1:-1;13736:15:2;;13719:13;;-1:-1:-1;;;;;13736:15:2;;;;13719:10;;13730:1;;13719:13;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;13719:32:2;;;13685:66;13677:105;;;;-1:-1:-1;;;13677:105:2;;14302:2:3;13677:105:2;;;14284:21:3;14341:2;14321:18;;;14314:30;14380:28;14360:18;;;14353:56;14426:18;;13677:105:2;14100:350:3;13677:105:2;13816:1;13805:153;13822:10;:17;13819:1;:20;13805:153;;;13888:10;13899:1;13888:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;13871:30:2;:10;13882:1;13871:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;13871:30:2;;;:40;;;;13910:1;13905;:6;13871:40;13863:80;;;;-1:-1:-1;;;13863:80:2;;14657:2:3;13863:80:2;;;14639:21:3;14696:2;14676:18;;;14669:30;14735:29;14715:18;;;14708:57;14782:18;;13863:80:2;14455:351:3;13863:80:2;13841:3;;;;:::i;:::-;;;;13805:153;;;-1:-1:-1;13654:3:2;;;;:::i;:::-;;;;13618:348;;;;13981:41;13988:5;13994:16;14012:6;14019:1;14012:9;;;;;;;;:::i;:::-;;;;;;;13981:6;:41::i;:::-;13973:64;;;;-1:-1:-1;;;13973:64:2;;15013:2:3;13973:64:2;;;14995:21:3;15052:2;15032:18;;;15025:30;-1:-1:-1;;;15071:18:3;;;15064:40;15121:18;;13973:64:2;14811:334:3;13973:64:2;14049:10;14071:6;14067:653;14083:10;:17;14081:1;:19;14067:653;;;14172:3;:1;14174;14172:3;:::i;:::-;14168:8;;:1;:8;:::i;:::-;14154:10;;:23;;;;:::i;:::-;14151:549;;14189:18;14217:10;14228:1;14217:13;;;;;;;;:::i;:::-;;;;;;;;;;;14210:46;;-1:-1:-1;;;14210:46:2;;14250:4;14210:46;;;4362:51:3;-1:-1:-1;;;;;14210:31:2;;;;;;4335:18:3;;14210:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14189:67;-1:-1:-1;14265:15:2;;14262:417;;14296:17;14339:1;14332:3;:1;14334;14332:3;:::i;:::-;14331:9;;;;:::i;:::-;:14;:24;;;;-1:-1:-1;14349:6:2;;;14331:24;14327:271;;;14382:32;14407:6;14383:13;14394:2;14383:10;:13;:::i;:::-;14382:24;;:32::i;:::-;14370:44;;14327:271;;;14464:27;14484:6;14465:13;14476:2;14465:10;:13;:::i;14464:27::-;14452:39;;14327:271;14618:10;14629:1;14618:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;14611:30:2;;14642:6;14649:1;14642:9;;;;;;;;:::i;:::-;;;;;;;14653;14611:52;;;;;;;;;;;;;;;-1:-1:-1;;;;;9872:32:3;;;;9854:51;;9936:2;9921:18;;9914:34;9842:2;9827:18;;9680:274;14611:52:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14286:393;14262:417;14692:1;14684:9;;14183:517;14151:549;14102:3;;;;:::i;:::-;;;;14067:653;;;-1:-1:-1;14756:13:2;;14771:10;;14783:15;;14735:72;;;15687:25:3;;;15743:2;15728:18;;15721:34;;;;15771:18;;;15764:34;15829:2;15814:18;;15807:34;;;14744:10:2;;14735:72;;15674:3:3;15659:19;14735:72:2;;;;;;;-1:-1:-1;14820:4:2;;13129:1698;-1:-1:-1;;;;;;;13129:1698:2:o;10473:625::-;10557:18;10591:9;;10578:10;;:22;;;;:::i;:::-;10557:43;;10639:46;10674:9;;10671:1;:12;;;;:::i;10639:46::-;10623:13;:62;10764:24;;10752:9;;10790:1;;10752:36;;;:::i;:::-;10747:42;;:1;:42;:::i;:::-;:44;;;;:::i;:::-;10702:15;;10695:48;;-1:-1:-1;;;10695:48:2;;10737:4;10695:48;;;4362:51:3;-1:-1:-1;;;;;10702:15:2;;;;10695:33;;4335:18:3;;10695:48:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:97;10692:359;;;10902:4;;10898:8;;:1;:8;:::i;:::-;10886:9;:20;;;10923:15;;10949;;10982:9;;-1:-1:-1;;;;;10923:15:2;;;;10916:32;;10949:15;;;;10886:20;10967:24;;10968:10;10967:24;:::i;:::-;:36;;;;:::i;:::-;10916:89;;-1:-1:-1;;;;;;10916:89:2;;;;;;;-1:-1:-1;;;;;9872:32:3;;;10916:89:2;;;9854:51:3;9921:18;;;9914:34;9827:18;;10916:89:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10692:359;;;11043:1;11031:9;:13;10692:359;-1:-1:-1;11068:10:2;;11056:9;:22;10473:625::o;11529:1325::-;11619:12;11642:31;11659:13;;11642:12;;:16;;:31;;;;:::i;:::-;;11687:14;11732:15;;11749:10;11761:5;11715:52;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11705:63;;;;;;11687:81;;11860:16;11850:6;:26;11842:85;;;;-1:-1:-1;;;11842:85:2;;16054:2:3;11842:85:2;;;16036:21:3;16093:2;16073:18;;;16066:30;16132:34;16112:18;;;16105:62;-1:-1:-1;;;16183:18:3;;;16176:44;16237:19;;11842:85:2;15852:410:3;11842:85:2;12025:12;;12007:30;;11999:83;;;;-1:-1:-1;;;11999:83:2;;16469:2:3;11999:83:2;;;16451:21:3;16508:2;16488:18;;;16481:30;16547:34;16527:18;;;16520:62;-1:-1:-1;;;16598:18:3;;;16591:38;16646:19;;11999:83:2;16267:404:3;11999:83:2;12090:22;:20;:22::i;:::-;12124:9;12154:17;;12136:15;:35;;;;:::i;:::-;12124:47;-1:-1:-1;12188:1:2;5902:7;12200:18;;12197:139;;;-1:-1:-1;12243:1:2;12235:93;12249:2;12246:1;:5;12235:93;;;12277:23;12298:1;12278:14;12291:1;5902:7;12278:14;:::i;12277:23::-;12269:4;:31;12266:61;;12312:5;;12266:61;12253:3;;;;:::i;:::-;;;;12235:93;;;12349:11;12363:26;12387:1;12368:13;;12364:1;:17;;;;:::i;12363:26::-;-1:-1:-1;;;;;12418:16:2;;;;;;:8;:16;;;;;;12349:40;;-1:-1:-1;12418:28:2;;12349:40;12418:20;:28::i;:::-;-1:-1:-1;;;;;12399:16:2;;;;;;:8;:16;;;;;:47;12485:46;12515:15;12516:6;12528:1;12515:12;:15::i;12485:46::-;12466:15;;-1:-1:-1;;;;;12466:15:2;12457:25;;;;:8;:25;;;;;:74;12556:12;;:24;;12573:6;12556:16;:24::i;:::-;12541:12;:39;12614:15;12594:17;:35;12646:9;;:13;12643:106;;12681:15;;12725:9;;12715;;-1:-1:-1;;;;;12681:15:2;;;;12674:32;;12707:6;;12715:19;;12725:9;12715:19;:::i;:::-;12674:61;;-1:-1:-1;;;;;;12674:61:2;;;;;;;-1:-1:-1;;;;;9872:32:3;;;12674:61:2;;;9854:51:3;9921:18;;;9914:34;9827:18;;12674:61:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12643:106;12783:13;;12798:10;;12810:15;;12766:61;;;10411:25:3;;;10467:2;10452:18;;10445:34;;;;10495:18;;;10488:34;12771:10:2;;12766:61;;10399:2:3;10384:18;12766:61:2;;;;;;;-1:-1:-1;12847:4:2;;11529:1325;-1:-1:-1;;;;;;;11529:1325:2:o;4217:136::-;4275:7;4302:6;4294:30;;;;-1:-1:-1;;;4294:30:2;;16878:2:3;4294:30:2;;;16860:21:3;16917:2;16897:18;;;16890:30;-1:-1:-1;;;16936:18:3;;;16929:41;16987:18;;4294:30:2;16676:335:3;4294:30:2;4341:5;4345:1;4341;:5;:::i;:::-;4334:12;4217:136;-1:-1:-1;;;4217:136:2:o;15268:1508::-;15643:15;;15625:13;;15607:12;;:33;;:16;:33::i;:::-;:51;:69;;;;;15674:2;15662:9;;:14;15607:69;15603:191;;;15706:9;;:13;;15718:1;15706:13;:::i;:::-;15694:9;:25;;;15744:32;;15761:14;;:1;:14;:::i;:::-;15744:12;;;:16;:32::i;:::-;15729:12;:47;15603:191;15978:10;;:17;;15993:1;15978:14;:17::i;:::-;15965:10;:30;16095:24;;:28;;16122:1;;16095:28;:::i;:::-;16080:10;;16079:45;;;;:::i;:::-;16076:646;;16146:15;:13;:15::i;:::-;16198:37;16220:9;;16232:1;16220:13;;;;:::i;:::-;16216:18;;:1;:18;:::i;:::-;16198:12;;;:16;:37::i;:::-;16183:12;;:52;;;;:::i;:::-;16165:15;:70;16259:24;;16246:10;;:37;;16259:24;16246:37;:::i;:::-;16242:474;;16361:9;;16317:15;;16310:48;;-1:-1:-1;;;16310:48:2;;16352:4;16310:48;;;4362:51:3;16375:5:2;;16361:9;-1:-1:-1;;;;;16317:15:2;;16310:33;;4335:18:3;;16310:48:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;;;:::i;:::-;16308:72;16305:364;;16496:9;;16477;;:16;;16491:1;16477:13;:16::i;:::-;:28;16474:104;;;16547:9;;:16;;16561:1;16547:13;:16::i;:::-;16535:9;:28;16474:104;16305:364;;;16640:9;;:17;;16655:1;16640:14;:17::i;:::-;16628:9;:29;16305:364;16688:21;:19;:21::i;:::-;16756:16;16771:1;16756:12;:16;:::i;:::-;16746:27;16728:15;:45;15268:1508::o;3680:160::-;3738:7;;3769:5;3773:1;3769;:5;:::i;:::-;3757:17;;3797:1;3792;:6;;3784:31;;;;-1:-1:-1;;;3784:31:2;;17218:2:3;3784:31:2;;;17200:21:3;17257:2;17237:18;;;17230:30;-1:-1:-1;;;17276:18:3;;;17269:42;17328:18;;3784:31:2;17016:336:3;3846:138:2;3904:7;3936:1;3931;:6;;3923:32;;;;-1:-1:-1;;;3923:32:2;;17559:2:3;3923:32:2;;;17541:21:3;17598:2;17578:18;;;17571:30;-1:-1:-1;;;17617:18:3;;;17610:43;17670:18;;3923:32:2;17357:337:3;3923:32:2;3972:5;3976:1;3972;:5;:::i;4359:224::-;4422:7;4449:6;4441:30;;;;-1:-1:-1;;;4441:30:2;;16878:2:3;4441:30:2;;;16860:21:3;16917:2;16897:18;;;16890:30;-1:-1:-1;;;16936:18:3;;;16929:41;16987:18;;4441:30:2;16676:335:3;4441:30:2;4481:9;4493:5;4497:1;4493;:5;:::i;:::-;4481:17;-1:-1:-1;4512:5:2;4516:1;4512;:5;:::i;:::-;:10;4508:50;;4542:5;:1;4546;4542:5;:::i;:::-;4538:9;4359:224;-1:-1:-1;;;;4359:224:2:o;3990:221::-;4049:7;4072:6;4068:45;;-1:-1:-1;4101:1:2;4094:8;;4068:45;4123:9;4135:5;4139:1;4135;:5;:::i;:::-;4123:17;-1:-1:-1;4167:1:2;4158:5;4162:1;4123:17;4158:5;:::i;:::-;:10;4150:36;;;;-1:-1:-1;;;4150:36:2;;17901:2:3;4150:36:2;;;17883:21:3;17940:2;17920:18;;;17913:30;-1:-1:-1;;;17959:18:3;;;17952:43;18012:18;;4150:36:2;17699:337:3;16961:1707:2;17118:30;;17035:15;;17012:20;;17103:45;;17035:15;17103:45;:::i;:::-;17178:24;;17060:88;;-1:-1:-1;17159:16:2;17246:24;17178;5902:7;17246:24;:::i;:::-;17219:51;;17423:19;17385:35;:57;17381:983;;;17465:21;17489:74;17526:35;17490:29;:19;17515:3;17490:24;:29::i;17489:74::-;17573:1;17566:4;:8;17465:98;-1:-1:-1;17586:27:2;17616:45;17656:4;17616:25;17465:98;17637:3;17616:20;:25::i;:::-;:39;;:45::i;:::-;17586:75;;17866:69;17883:51;17911:22;17883;17900:4;17883:12;;:16;;:22;;;;:::i;:::-;:27;;:51::i;:::-;17866:12;;;:16;:69::i;:::-;17851:12;:84;-1:-1:-1;17381:983:2;;-1:-1:-1;17381:983:2;;17980:23;18006:74;18059:19;18007:45;:35;18048:3;18007:40;:45::i;18006:74::-;18090:1;18083:4;:8;17980:100;-1:-1:-1;18103:29:2;18135:47;18177:4;18135:27;17980:100;18158:3;18135:22;:27::i;:47::-;18103:79;;18264:71;18281:53;18309:24;18281:22;18298:4;18281:12;;:16;;:22;;;;:::i;:53::-;18264:12;;;:16;:71::i;:::-;18249:12;:86;-1:-1:-1;;17381:983:2;18375:30;:45;;;18449:15;;18434:12;;:30;18431:113;;;18518:15;;18503:12;:30;18431:113;18572:15;;18557:12;;:30;18554:108;;;18636:15;;18621:12;:30;18554:108;17001:1667;;;;16961:1707::o;4704:126::-;4766:6;4792:1;4788;:5;4785:18;;;-1:-1:-1;4802:1:2;4795:8;;4785:18;-1:-1:-1;4821:1:2;;4704:126;-1:-1:-1;4704:126:2:o;14:597:3:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:3;574:15;-1:-1:-1;;570:29:3;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:3:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:3;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:3:o;1245:118::-;1331:5;1324:13;1317:21;1310:5;1307:32;1297:60;;1353:1;1350;1343:12;1297:60;1245:118;:::o;1368:376::-;1430:6;1438;1491:2;1479:9;1470:7;1466:23;1462:32;1459:52;;;1507:1;1504;1497:12;1459:52;1546:9;1533:23;1565:28;1587:5;1565:28;:::i;:::-;1612:5;-1:-1:-1;1669:2:3;1654:18;;1641:32;1682:30;1641:32;1682:30;:::i;:::-;1731:7;1721:17;;;1368:376;;;;;:::o;1931:248::-;1999:6;2007;2060:2;2048:9;2039:7;2035:23;2031:32;2028:52;;;2076:1;2073;2066:12;2028:52;-1:-1:-1;;2099:23:3;;;2169:2;2154:18;;;2141:32;;-1:-1:-1;1931:248:3:o;2184:127::-;2245:10;2240:3;2236:20;2233:1;2226:31;2276:4;2273:1;2266:15;2300:4;2297:1;2290:15;2316:275;2387:2;2381:9;2452:2;2433:13;;-1:-1:-1;;2429:27:3;2417:40;;2487:18;2472:34;;2508:22;;;2469:62;2466:88;;;2534:18;;:::i;:::-;2570:2;2563:22;2316:275;;-1:-1:-1;2316:275:3:o;2596:718::-;2650:5;2703:3;2696:4;2688:6;2684:17;2680:27;2670:55;;2721:1;2718;2711:12;2670:55;2757:6;2744:20;2783:4;2806:18;2802:2;2799:26;2796:52;;;2828:18;;:::i;:::-;2874:2;2871:1;2867:10;2897:28;2921:2;2917;2913:11;2897:28;:::i;:::-;2959:15;;;3029;;;3025:24;;;2990:12;;;;3061:15;;;3058:35;;;3089:1;3086;3079:12;3058:35;3125:2;3117:6;3113:15;3102:26;;3137:148;3153:6;3148:3;3145:15;3137:148;;;3219:23;3238:3;3219:23;:::i;:::-;3207:36;;3170:12;;;;3263;;;;3137:148;;;3303:5;2596:718;-1:-1:-1;;;;;;;2596:718:3:o;3319:559::-;3430:6;3438;3446;3454;3507:3;3495:9;3486:7;3482:23;3478:33;3475:53;;;3524:1;3521;3514:12;3475:53;3560:9;3547:23;3537:33;;3617:2;3606:9;3602:18;3589:32;3579:42;;3672:2;3661:9;3657:18;3644:32;3699:18;3691:6;3688:30;3685:50;;;3731:1;3728;3721:12;3685:50;3754:61;3807:7;3798:6;3787:9;3783:22;3754:61;:::i;:::-;3744:71;;;3834:38;3868:2;3857:9;3853:18;3834:38;:::i;:::-;3824:48;;3319:559;;;;;;;:::o;3883:328::-;3960:6;3968;3976;4029:2;4017:9;4008:7;4004:23;4000:32;3997:52;;;4045:1;4042;4035:12;3997:52;4068:29;4087:9;4068:29;:::i;:::-;4058:39;;4116:38;4150:2;4139:9;4135:18;4116:38;:::i;:::-;4106:48;;4201:2;4190:9;4186:18;4173:32;4163:42;;3883:328;;;;;:::o;4795:334::-;4872:6;4880;4888;4941:2;4929:9;4920:7;4916:23;4912:32;4909:52;;;4957:1;4954;4947:12;4909:52;4980:29;4999:9;4980:29;:::i;:::-;4970:39;;5028:38;5062:2;5051:9;5047:18;5028:38;:::i;:::-;5018:48;;5085:38;5119:2;5108:9;5104:18;5085:38;:::i;:::-;5075:48;;4795:334;;;;;:::o;5134:180::-;5193:6;5246:2;5234:9;5225:7;5221:23;5217:32;5214:52;;;5262:1;5259;5252:12;5214:52;-1:-1:-1;5285:23:3;;5134:180;-1:-1:-1;5134:180:3:o;5319:186::-;5378:6;5431:2;5419:9;5410:7;5406:23;5402:32;5399:52;;;5447:1;5444;5437:12;5399:52;5470:29;5489:9;5470:29;:::i;5510:385::-;5596:6;5604;5612;5620;5673:3;5661:9;5652:7;5648:23;5644:33;5641:53;;;5690:1;5687;5680:12;5641:53;-1:-1:-1;;5713:23:3;;;5783:2;5768:18;;5755:32;;-1:-1:-1;5834:2:3;5819:18;;5806:32;;5885:2;5870:18;5857:32;;-1:-1:-1;5510:385:3;-1:-1:-1;5510:385:3:o;5900:980::-;5995:6;6003;6011;6019;6072:3;6060:9;6051:7;6047:23;6043:33;6040:53;;;6089:1;6086;6079:12;6040:53;6112:29;6131:9;6112:29;:::i;:::-;6102:39;;6160:2;6209;6198:9;6194:18;6181:32;6171:42;;6232:38;6266:2;6255:9;6251:18;6232:38;:::i;:::-;6222:48;;6321:2;6310:9;6306:18;6293:32;6344:18;6385:2;6377:6;6374:14;6371:34;;;6401:1;6398;6391:12;6371:34;6439:6;6428:9;6424:22;6414:32;;6484:7;6477:4;6473:2;6469:13;6465:27;6455:55;;6506:1;6503;6496:12;6455:55;6542:2;6529:16;6564:2;6560;6557:10;6554:36;;;6570:18;;:::i;:::-;6612:53;6655:2;6636:13;;-1:-1:-1;;6632:27:3;6628:36;;6612:53;:::i;:::-;6599:66;;6688:2;6681:5;6674:17;6728:7;6723:2;6718;6714;6710:11;6706:20;6703:33;6700:53;;;6749:1;6746;6739:12;6700:53;6804:2;6799;6795;6791:11;6786:2;6779:5;6775:14;6762:45;6848:1;6843:2;6838;6831:5;6827:14;6823:23;6816:34;;6869:5;6859:15;;;;;5900:980;;;;;;;:::o;7070:316::-;7147:6;7155;7163;7216:2;7204:9;7195:7;7191:23;7187:32;7184:52;;;7232:1;7229;7222:12;7184:52;-1:-1:-1;;7255:23:3;;;7325:2;7310:18;;7297:32;;-1:-1:-1;7376:2:3;7361:18;;;7348:32;;7070:316;-1:-1:-1;7070:316:3:o;7391:732::-;7527:6;7535;7543;7551;7604:3;7592:9;7583:7;7579:23;7575:33;7572:53;;;7621:1;7618;7611:12;7572:53;7657:9;7644:23;7634:33;;7714:2;7703:9;7699:18;7686:32;7676:42;;7769:2;7758:9;7754:18;7741:32;7792:18;7833:2;7825:6;7822:14;7819:34;;;7849:1;7846;7839:12;7819:34;7872:61;7925:7;7916:6;7905:9;7901:22;7872:61;:::i;:::-;7862:71;;7986:2;7975:9;7971:18;7958:32;7942:48;;8015:2;8005:8;8002:16;7999:36;;;8031:1;8028;8021:12;7999:36;;8054:63;8109:7;8098:8;8087:9;8083:24;8054:63;:::i;:::-;8044:73;;;7391:732;;;;;;;:::o;8128:260::-;8196:6;8204;8257:2;8245:9;8236:7;8232:23;8228:32;8225:52;;;8273:1;8270;8263:12;8225:52;8296:29;8315:9;8296:29;:::i;:::-;8286:39;;8344:38;8378:2;8367:9;8363:18;8344:38;:::i;:::-;8334:48;;8128:260;;;;;:::o;8393:322::-;8470:6;8478;8486;8539:2;8527:9;8518:7;8514:23;8510:32;8507:52;;;8555:1;8552;8545:12;8507:52;8591:9;8578:23;8568:33;;8648:2;8637:9;8633:18;8620:32;8610:42;;8671:38;8705:2;8694:9;8690:18;8671:38;:::i;8720:380::-;8799:1;8795:12;;;;8842;;;8863:61;;8917:4;8909:6;8905:17;8895:27;;8863:61;8970:2;8962:6;8959:14;8939:18;8936:38;8933:161;;;9016:10;9011:3;9007:20;9004:1;8997:31;9051:4;9048:1;9041:15;9079:4;9076:1;9069:15;8933:161;;8720:380;;;:::o;9105:127::-;9166:10;9161:3;9157:20;9154:1;9147:31;9197:4;9194:1;9187:15;9221:4;9218:1;9211:15;9237:125;9277:4;9305:1;9302;9299:8;9296:34;;;9310:18;;:::i;:::-;-1:-1:-1;9347:9:3;;9237:125::o;9367:168::-;9407:7;9473:1;9469;9465:6;9461:14;9458:1;9455:21;9450:1;9443:9;9436:17;9432:45;9429:71;;;9480:18;;:::i;:::-;-1:-1:-1;9520:9:3;;9367:168::o;9540:135::-;9579:3;-1:-1:-1;;9600:17:3;;9597:43;;;9620:18;;:::i;:::-;-1:-1:-1;9667:1:3;9656:13;;9540:135::o;9959:245::-;10026:6;10079:2;10067:9;10058:7;10054:23;10050:32;10047:52;;;10095:1;10092;10085:12;10047:52;10127:9;10121:16;10146:28;10168:5;10146:28;:::i;10872:127::-;10933:10;10928:3;10924:20;10921:1;10914:31;10964:4;10961:1;10954:15;10988:4;10985:1;10978:15;11212:128;11252:3;11283:1;11279:6;11276:1;11273:13;11270:39;;;11289:18;;:::i;:::-;-1:-1:-1;11325:9:3;;11212:128::o;11345:127::-;11406:10;11401:3;11397:20;11394:1;11387:31;11437:4;11434:1;11427:15;11461:4;11458:1;11451:15;11477:422;11566:1;11609:5;11566:1;11623:270;11644:7;11634:8;11631:21;11623:270;;;11703:4;11699:1;11695:6;11691:17;11685:4;11682:27;11679:53;;;11712:18;;:::i;:::-;11762:7;11752:8;11748:22;11745:55;;;11782:16;;;;11745:55;11861:22;;;;11821:15;;;;11623:270;;;11627:3;11477:422;;;;;:::o;11904:806::-;11953:5;11983:8;11973:80;;-1:-1:-1;12024:1:3;12038:5;;11973:80;12072:4;12062:76;;-1:-1:-1;12109:1:3;12123:5;;12062:76;12154:4;12172:1;12167:59;;;;12240:1;12235:130;;;;12147:218;;12167:59;12197:1;12188:10;;12211:5;;;12235:130;12272:3;12262:8;12259:17;12256:43;;;12279:18;;:::i;:::-;-1:-1:-1;;12335:1:3;12321:16;;12350:5;;12147:218;;12449:2;12439:8;12436:16;12430:3;12424:4;12421:13;12417:36;12411:2;12401:8;12398:16;12393:2;12387:4;12384:12;12380:35;12377:77;12374:159;;;-1:-1:-1;12486:19:3;;;12518:5;;12374:159;12565:34;12590:8;12584:4;12565:34;:::i;:::-;12635:6;12631:1;12627:6;12623:19;12614:7;12611:32;12608:58;;;12646:18;;:::i;:::-;12684:20;;11904:806;-1:-1:-1;;;11904:806:3:o;12715:131::-;12775:5;12804:36;12831:8;12825:4;12804:36;:::i;12851:127::-;12912:10;12907:3;12903:20;12900:1;12893:31;12943:4;12940:1;12933:15;12967:4;12964:1;12957:15;12983:120;13023:1;13049;13039:35;;13054:18;;:::i;:::-;-1:-1:-1;13088:9:3;;12983:120::o;13306:359::-;13491:19;;;13548:2;13544:15;;;;-1:-1:-1;;13540:53:3;13535:2;13526:12;;13519:75;13619:2;13610:12;;13603:28;13656:2;13647:12;;13306:359::o;15150:112::-;15182:1;15208;15198:35;;15213:18;;:::i;:::-;-1:-1:-1;15247:9:3;;15150:112::o;15267:184::-;15337:6;15390:2;15378:9;15369:7;15365:23;15361:32;15358:52;;;15406:1;15403;15396:12;15358:52;-1:-1:-1;15429:16:3;;15267:184;-1:-1:-1;15267:184:3:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    5801,
    24654
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x295 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x757991A8 GT PUSH2 0x167 JUMPI DUP1 PUSH4 0x97566AA0 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xC8A1465C GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xC8A1465C EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xD0856D16 EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xDC6E9CF9 EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x590 JUMPI DUP1 PUSH4 0xDDFBD8DD EQ PUSH2 0x5C9 JUMPI DUP1 PUSH4 0xE932012B EQ PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97566AA0 EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xA68EB88E EQ PUSH2 0x51F JUMPI DUP1 PUSH4 0xA70A8D23 EQ PUSH2 0x528 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x548 JUMPI DUP1 PUSH4 0xB5ADE81B EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xC0ABEBE0 EQ PUSH2 0x564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8AE0368B GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x8AE0368B EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0x8F4FFCB1 EQ PUSH2 0x4A4 JUMPI DUP1 PUSH4 0x90DC1CA3 EQ PUSH2 0x4B7 JUMPI DUP1 PUSH4 0x94B939EF EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x757991A8 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x81269A56 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x829965CC EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x87A2A9D6 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x8A5550F6 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0x8A769D35 EQ PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F104E0C GT PUSH2 0x20B JUMPI DUP1 PUSH4 0x4FA972E1 GT PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x4FA972E1 EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x510DE094 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x64E46726 EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0x669753A7 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x6DE9F32B EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F104E0C EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x32E99708 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x45D8A232 EQ PUSH2 0x3AF JUMPI DUP1 PUSH4 0x490203A7 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x4EF37628 EQ PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1801FBE5 GT PUSH2 0x25D JUMPI DUP1 PUSH4 0x1801FBE5 EQ PUSH2 0x30E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x1FCCB33C EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x2381A60E EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x346 JUMPI DUP1 PUSH4 0x2D38BF7A EQ PUSH2 0x359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xD56D6E1 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x11B1225F EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x17DA485F EQ PUSH2 0x2F8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A2 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AF SWAP2 SWAP1 PUSH2 0x1CFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CB PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAA JUMP JUMPDEST PUSH2 0x6E0 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x8E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x300 PUSH2 0x97E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x31C CALLDATASIZE PUSH1 0x4 PUSH2 0x1DE3 JUMP JUMPDEST PUSH2 0x99C JUMP JUMPDEST PUSH2 0x300 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x338 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ED3 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH2 0x300 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F34 JUMP JUMPDEST PUSH2 0xA75 JUMP JUMPDEST PUSH2 0x300 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x375 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH2 0x395 PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AF JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x870 DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x300 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x375 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F70 JUMP JUMPDEST PUSH2 0xB8C JUMP JUMPDEST PUSH2 0x300 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x17 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x1FCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1FE7 JUMP JUMPDEST PUSH2 0xD0F JUMP JUMPDEST PUSH2 0x300 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH1 0x1F SLOAD DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x375 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x4B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0xD5A JUMP JUMPDEST PUSH2 0x300 PUSH2 0x4C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x18 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x375 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2A2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x466765 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x51A CALLDATASIZE PUSH1 0x4 PUSH2 0x20D9 JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST PUSH2 0x300 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x536 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FB3 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D6F JUMP JUMPDEST PUSH2 0xE22 JUMP JUMPDEST PUSH2 0x300 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x19 SLOAD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x57A CALLDATASIZE PUSH1 0x4 PUSH2 0x2105 JUMP JUMPDEST PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x300 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x300 PUSH2 0x59E CALLDATASIZE PUSH1 0x4 PUSH2 0x217C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2CB PUSH2 0x5D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x21AF JUMP JUMPDEST PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x300 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1E DUP1 SLOAD PUSH2 0x5F2 SWAP1 PUSH2 0x21DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x61E SWAP1 PUSH2 0x21DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x66B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x640 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x66B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x64E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x6CE SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EA PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD TIMESTAMP PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH2 0x870 DUP3 GT ISZERO PUSH2 0x749 JUMPI POP PUSH1 0x4 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x749 JUMPI PUSH2 0x72C PUSH1 0x3 PUSH2 0x726 DUP4 PUSH2 0x870 PUSH2 0x2243 JUMP JUMPDEST SWAP1 PUSH2 0x1854 JUMP JUMPDEST DUP3 GT PUSH2 0x737 JUMPI PUSH2 0x749 JUMP JUMPDEST DUP1 PUSH2 0x741 DUP2 PUSH2 0x2262 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x70C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75E PUSH1 0x4 PUSH1 0xF SLOAD DUP5 PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x2243 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x77B SWAP1 DUP3 PUSH2 0x1A54 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x7BA PUSH2 0x799 DUP3 PUSH1 0x2 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x19 SLOAD PUSH2 0x7E2 SWAP1 DUP3 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x19 SSTORE TIMESTAMP PUSH1 0x11 SSTORE PUSH1 0x1C SLOAD ISZERO PUSH2 0x889 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1C SLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 CALLER SWAP2 PUSH2 0x818 SWAP2 SWAP1 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x863 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x887 SWAP2 SWAP1 PUSH2 0x227D JUMP JUMPDEST POP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x7 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x92C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x93F JUMPI PUSH2 0x93F PUSH2 0x229A JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH8 0xDE0B6B3A7640000 SWAP1 DUP2 SWAP1 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x244E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x997 PUSH1 0xB SLOAD PUSH1 0xA SLOAD PUSH2 0x1854 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9A9 DUP4 DUP4 CALLER PUSH2 0x1556 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD PUSH1 0x1 PUSH2 0x9C1 SWAP2 SWAP1 PUSH2 0x22B0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9D9 JUMPI PUSH2 0x9D9 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA02 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP6 MLOAD PUSH2 0xA16 SWAP1 PUSH1 0x1 PUSH2 0x22B0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xA5A JUMPI DUP5 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xA30 JUMPI PUSH2 0xA30 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE DUP1 PUSH2 0xA52 DUP2 PUSH2 0x2262 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA09 JUMP JUMPDEST POP PUSH2 0xA67 DUP8 DUP8 DUP8 DUP6 PUSH2 0xEA7 JUMP JUMPDEST POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xA98 SWAP1 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1B DUP2 MSTORE DUP3 DUP3 KECCAK256 CALLER DUP4 MSTORE SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0xACF SWAP1 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP7 AND DUP2 MSTORE PUSH1 0x1A SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0xB0D SWAP1 DUP4 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP7 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x244E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xB4F SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x997 PUSH1 0xD SLOAD PUSH1 0x2 PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0x23C2 JUMP JUMPDEST PUSH2 0xB81 PUSH1 0x12 PUSH1 0xA PUSH2 0x23C2 JUMP JUMPDEST PUSH2 0x726 SWAP1 PUSH1 0x96 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x37B7363C9037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x923 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F SLOAD PUSH1 0x2 PUSH2 0xBE4 SWAP2 SWAP1 PUSH2 0x23C2 JUMP JUMPDEST PUSH2 0xBEF SWAP1 PUSH1 0x2 PUSH2 0x2243 JUMP JUMPDEST PUSH2 0xC04 SWAP1 PUSH11 0x115EEC47F6CF7E35000000 PUSH2 0x23E4 JUMP JUMPDEST PUSH1 0x20 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xC1A JUMPI PUSH2 0xC1A PUSH2 0x229A JUMP JUMPDEST PUSH1 0x20 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0x19 SSTORE PUSH1 0xA SLOAD PUSH2 0xC40 SWAP1 PUSH2 0x3E9 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH2 0xC4B PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x244E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x2 DUP1 SLOAD DUP7 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP3 DUP6 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x7 SLOAD PUSH1 0x10 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH4 0x5F5E100 SWAP1 DUP2 SWAP1 SSTORE SWAP1 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x244E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH2 0xD01 SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLER DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD27 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP3 DUP2 PUSH1 0x0 SHR GT ISZERO PUSH2 0xD4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP4 EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ADDRESS EQ PUSH2 0xD6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE0 SWAP2 SWAP1 PUSH2 0x227D JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD CALLER DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xE01 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xE3C SWAP1 DUP4 PUSH2 0x1AA2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xE68 SWAP1 DUP4 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x244E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x6CE SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH2 0xEBC SWAP1 TIMESTAMP PUSH2 0x222C JUMP JUMPDEST SWAP1 POP PUSH2 0x870 DUP2 GT ISZERO PUSH2 0xF04 JUMPI PUSH1 0x4 SWAP2 POP JUMPDEST PUSH1 0xA DUP3 LT ISZERO PUSH2 0xF04 JUMPI PUSH2 0xEE7 PUSH1 0x3 PUSH2 0x726 DUP5 PUSH2 0x870 PUSH2 0x2243 JUMP JUMPDEST DUP2 GT PUSH2 0xEF2 JUMPI PUSH2 0xF04 JUMP JUMPDEST DUP2 PUSH2 0xEFC DUP2 PUSH2 0x2262 JUMP JUMPDEST SWAP3 POP POP PUSH2 0xECD JUMP JUMPDEST DUP5 MLOAD PUSH2 0xF11 SWAP1 PUSH1 0x1 PUSH2 0x22B0 JUMP JUMPDEST DUP5 MLOAD EQ PUSH2 0xF86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F204D696E74546F2068617320746F20686176652073616D65206E756D6265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72206F66206164647265737373657320617320457874726146756E6473000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x923 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x111A JUMPI ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xFAE JUMPI PUSH2 0xFAE PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0xFFF JUMPI POP PUSH1 0x3 SLOAD DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xFEB JUMPI PUSH2 0xFEB PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST PUSH2 0x104B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x923 JUMP JUMPDEST PUSH1 0x1 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x1107 JUMPI DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1069 JUMPI PUSH2 0x1069 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x108C JUMPI PUSH2 0x108C PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 PUSH2 0x10A9 JUMPI POP DUP1 DUP3 EQ JUMPDEST PUSH2 0x10F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x923 JUMP JUMPDEST DUP1 PUSH2 0x10FF DUP2 PUSH2 0x2262 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x104E JUMP JUMPDEST POP DUP1 PUSH2 0x1112 DUP2 PUSH2 0x2262 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF89 JUMP JUMPDEST POP PUSH2 0x1140 DUP8 DUP8 DUP7 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1133 JUMPI PUSH2 0x1133 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1556 JUMP JUMPDEST PUSH2 0x1179 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x6D696E74206973737565 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x923 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x1368 JUMPI PUSH2 0x1191 DUP2 PUSH1 0x1 PUSH2 0x22B0 JUMP JUMPDEST PUSH2 0x119C SWAP1 PUSH1 0x2 PUSH2 0x23C2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x11A9 SWAP2 SWAP1 PUSH2 0x2420 JUMP JUMPDEST PUSH2 0x1356 JUMPI PUSH1 0x0 DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11C1 JUMPI PUSH2 0x11C1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1211 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1235 SWAP2 SWAP1 PUSH2 0x2434 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1351 JUMPI PUSH1 0x0 PUSH1 0x3 PUSH2 0x124C DUP5 PUSH1 0x1 PUSH2 0x22B0 JUMP JUMPDEST PUSH2 0x1256 SWAP2 SWAP1 PUSH2 0x2420 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1262 JUMPI POP DUP3 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1284 JUMPI PUSH2 0x127D PUSH2 0x2710 PUSH2 0x1277 DUP9 DUP6 PUSH2 0x2243 JUMP JUMPDEST SWAP1 PUSH2 0x1AEE JUMP JUMPDEST SWAP1 POP PUSH2 0x1297 JUMP JUMPDEST PUSH2 0x1294 PUSH2 0x2710 PUSH2 0x726 DUP9 DUP6 PUSH2 0x2243 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP9 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x12A9 JUMPI PUSH2 0x12A9 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP10 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x12D1 JUMPI PUSH2 0x12D1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130B SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x132A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134E SWAP2 SWAP1 PUSH2 0x227D JUMP JUMPDEST POP POP JUMPDEST DUP2 SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x1360 DUP2 PUSH2 0x2262 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x117D JUMP JUMPDEST POP PUSH1 0xF SLOAD PUSH1 0x7 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE CALLER SWAP1 PUSH32 0x8D1274A08A1F38C385CC00828B937D1A29D4CE3A901EDE97B42639D0C19AE2AE SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0x7 SLOAD PUSH2 0x13DB SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST SWAP1 POP PUSH2 0x13EF PUSH1 0xD SLOAD PUSH1 0x2 PUSH2 0xB75 SWAP2 SWAP1 PUSH2 0x23C2 JUMP JUMPDEST PUSH1 0xF SSTORE PUSH1 0x8 SLOAD PUSH1 0x14 SLOAD PUSH1 0x4 SWAP2 PUSH2 0x1404 SWAP2 PUSH2 0x2243 JUMP JUMPDEST PUSH2 0x140F SWAP1 PUSH1 0x6 PUSH2 0x2243 JUMP JUMPDEST PUSH2 0x1419 SWAP2 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1461 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1485 SWAP2 SWAP1 PUSH2 0x2434 JUMP JUMPDEST GT ISZERO PUSH2 0x1547 JUMPI PUSH1 0x1D SLOAD PUSH2 0x1499 SWAP1 PUSH1 0x1 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x1C DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP4 PUSH4 0xA9059CBB SWAP4 SWAP1 SWAP3 AND SWAP2 SWAP1 PUSH2 0x14C8 SWAP1 DUP7 PUSH2 0x2243 JUMP JUMPDEST PUSH2 0x14D2 SWAP2 SWAP1 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x151D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1541 SWAP2 SWAP1 PUSH2 0x227D JUMP JUMPDEST POP PUSH2 0x154D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1C SSTORE JUMPDEST POP PUSH1 0x7 SLOAD PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156F PUSH1 0xF SLOAD PUSH1 0x19 SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0xC SLOAD CALLER DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1589 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP4 DUP2 EQ PUSH2 0x1607 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6C64206368616C6C656E67655F646967657374206F722077726F6E67206368 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x185B1B195B99D957D91A59D95CDD PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x923 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT PUSH2 0x1669 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x446967657374206D75737420626520736D616C6C6572207468616E206D696E69 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1B99D5185C99D95D PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x923 JUMP JUMPDEST PUSH2 0x1671 PUSH2 0x18A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x11 SLOAD TIMESTAMP PUSH2 0x1681 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH2 0x870 DUP3 GT ISZERO PUSH2 0x16CA JUMPI POP PUSH1 0x4 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0x16CA JUMPI PUSH2 0x16AD PUSH1 0x3 PUSH2 0x726 DUP4 PUSH2 0x870 PUSH2 0x2243 JUMP JUMPDEST DUP3 GT PUSH2 0x16B8 JUMPI PUSH2 0x16CA JUMP JUMPDEST DUP1 PUSH2 0x16C2 DUP2 PUSH2 0x2262 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16DF PUSH1 0x4 PUSH1 0xF SLOAD DUP5 PUSH2 0x726 SWAP2 SWAP1 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1705 SWAP1 DUP3 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x172C PUSH2 0x799 DUP3 PUSH1 0x2 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x19 SLOAD PUSH2 0x1754 SWAP1 DUP3 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x19 SSTORE TIMESTAMP PUSH1 0x11 SSTORE PUSH1 0x1C SLOAD ISZERO PUSH2 0x17FB JUMPI PUSH1 0x3 SLOAD PUSH1 0x1C SLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 DUP10 SWAP2 PUSH2 0x178A SWAP2 SWAP1 PUSH2 0x2243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17F9 SWAP2 SWAP1 PUSH2 0x227D JUMP JUMPDEST POP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x7 SLOAD PUSH1 0xC SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1891 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x446976206279207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x923 JUMP JUMPDEST PUSH2 0x189B DUP3 DUP5 PUSH2 0x23E4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x19 SLOAD PUSH2 0x18B4 SWAP2 PUSH2 0x1A54 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x18C3 JUMPI POP PUSH1 0x27 PUSH1 0xD SLOAD LT JUMPDEST ISZERO PUSH2 0x18F7 JUMPI PUSH1 0xD SLOAD PUSH2 0x18D6 SWAP1 PUSH1 0x1 PUSH2 0x22B0 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE PUSH2 0x18F3 SWAP1 PUSH2 0x18EA SWAP1 PUSH1 0x2 PUSH2 0x23C2 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1905 SWAP1 PUSH1 0x1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x8 SLOAD PUSH2 0x1917 SWAP1 PUSH1 0x4 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1924 SWAP2 SWAP1 PUSH2 0x2420 JUMP JUMPDEST PUSH2 0x1A43 JUMPI PUSH2 0x1930 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x1956 PUSH1 0xD SLOAD PUSH1 0x1 PUSH2 0x1942 SWAP2 SWAP1 PUSH2 0x22B0 JUMP JUMPDEST PUSH2 0x194D SWAP1 PUSH1 0x2 PUSH2 0x23C2 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x1963 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x1976 SWAP2 SWAP1 PUSH2 0x2420 JUMP JUMPDEST PUSH2 0x1A43 JUMPI PUSH1 0x14 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0x2710 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19EC SWAP2 SWAP1 PUSH2 0x2434 JUMP JUMPDEST PUSH2 0x19F6 SWAP2 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST GT PUSH2 0x1A29 JUMPI PUSH1 0x15 SLOAD PUSH1 0x14 SLOAD PUSH2 0x1A0C SWAP1 PUSH1 0x2 PUSH2 0x1854 JUMP JUMPDEST GT ISZERO PUSH2 0x1A24 JUMPI PUSH1 0x14 SLOAD PUSH2 0x1A20 SWAP1 PUSH1 0x2 PUSH2 0x1854 JUMP JUMPDEST PUSH1 0x14 SSTORE JUMPDEST PUSH2 0x1A3B JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x1A37 SWAP1 PUSH1 0x3 PUSH2 0x1B5B JUMP JUMPDEST PUSH1 0x14 SSTORE JUMPDEST PUSH2 0x1A43 PUSH2 0x1BC0 JUMP JUMPDEST PUSH2 0x1A4E PUSH1 0x1 NUMBER PUSH2 0x222C JUMP JUMPDEST BLOCKHASH PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A61 DUP4 DUP6 PUSH2 0x22B0 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x189B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x416464206F766572666C6F77 PUSH1 0xA0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x923 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x1AE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x53756220756E646572666C6F77 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x923 JUMP JUMPDEST PUSH2 0x189B DUP3 DUP5 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1B2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x446976206279207A65726F PUSH1 0xA8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x923 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B37 DUP4 DUP6 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B43 DUP4 DUP6 PUSH2 0x2420 JUMP JUMPDEST ISZERO PUSH2 0x189B JUMPI PUSH2 0x1B53 DUP2 PUSH1 0x1 PUSH2 0x22B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B6A JUMPI POP PUSH1 0x0 PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B76 DUP4 DUP6 PUSH2 0x2243 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1B83 DUP6 DUP4 PUSH2 0x23E4 JUMP JUMPDEST EQ PUSH2 0x189B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4D756C74206F766572666C6F77 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x923 JUMP JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1BD2 SWAP1 DUP4 PUSH2 0x222C JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 PUSH2 0x1BE6 DUP3 PUSH2 0x870 PUSH2 0x2243 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 LT ISZERO PUSH2 0x1C5B JUMPI PUSH1 0x0 PUSH2 0x1C01 DUP5 PUSH2 0x726 DUP5 PUSH1 0x64 PUSH2 0x1B5B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1D SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x1C21 PUSH2 0x3E8 PUSH2 0x1C1B DUP5 PUSH1 0x64 PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 PUSH2 0x1CE6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1C50 PUSH2 0x1C47 DUP3 PUSH2 0x1C41 PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH2 0x1854 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1B5B JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0xB SSTORE POP PUSH2 0x1CB5 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6C DUP3 PUSH2 0x726 DUP7 PUSH1 0x64 PUSH2 0x1B5B JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1D SSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x1C86 PUSH2 0x3E8 PUSH2 0x1C1B DUP5 PUSH1 0x64 PUSH2 0x1AA2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1CAF PUSH2 0x1CA6 DUP3 PUSH2 0x1C41 PUSH2 0x7D0 PUSH1 0xB SLOAD PUSH2 0x1854 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0xB SSTORE POP POP JUMPDEST PUSH1 0x6 DUP5 SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH1 0xB SLOAD LT ISZERO PUSH2 0x1CCD JUMPI PUSH1 0x9 SLOAD PUSH1 0xB SSTORE JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD GT ISZERO PUSH2 0x1CE0 JUMPI PUSH1 0xA SLOAD PUSH1 0xB SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x1CF7 JUMPI POP DUP1 PUSH2 0x6DA JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D2B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1D0F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1D3D JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D8B DUP4 PUSH2 0x1D53 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1DA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1DC8 DUP2 PUSH2 0x1D99 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1DD8 DUP2 PUSH2 0x1D99 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1E44 JUMPI PUSH2 0x1E44 PUSH2 0x1E05 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E79 JUMPI PUSH2 0x1E79 PUSH2 0x1E05 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1E88 DUP3 DUP3 ADD PUSH2 0x1E1B JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x1EC8 JUMPI PUSH2 0x1EB9 DUP4 PUSH2 0x1D53 JUMP JUMPDEST DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F1A DUP8 DUP3 DUP9 ADD PUSH2 0x1E4C JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1F29 PUSH1 0x60 DUP7 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F52 DUP5 PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP PUSH2 0x1F60 PUSH1 0x20 DUP6 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F8E DUP5 PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP PUSH2 0x1F9C PUSH1 0x20 DUP6 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAA PUSH1 0x40 DUP6 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x189B DUP3 PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1FFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 CALLDATALOAD SWAP5 PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 PUSH1 0x60 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x202F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2038 DUP6 PUSH2 0x1D53 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP1 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x204E PUSH1 0x40 DUP8 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x206B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x207F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2091 JUMPI PUSH2 0x2091 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x20A3 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x1E1B JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP10 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x20B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x211B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x214D DUP9 DUP4 DUP10 ADD PUSH2 0x1E4C JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2163 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2170 DUP8 DUP3 DUP9 ADD PUSH2 0x1E4C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x218F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2198 DUP4 PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A6 PUSH1 0x20 DUP5 ADD PUSH2 0x1D53 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1FAA PUSH1 0x40 DUP6 ADD PUSH2 0x1D53 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x21EF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2210 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x223E JUMPI PUSH2 0x223E PUSH2 0x2216 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x225D JUMPI PUSH2 0x225D PUSH2 0x2216 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2276 JUMPI PUSH2 0x2276 PUSH2 0x2216 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x228F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x189B DUP2 PUSH2 0x1D99 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x22C3 JUMPI PUSH2 0x22C3 PUSH2 0x2216 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2319 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x22FF JUMPI PUSH2 0x22FF PUSH2 0x2216 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x230C JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x22E3 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2330 JUMPI POP PUSH1 0x1 PUSH2 0x6DA JUMP JUMPDEST DUP2 PUSH2 0x233D JUMPI POP PUSH1 0x0 PUSH2 0x6DA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2353 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x235D JUMPI PUSH2 0x2379 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x6DA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x236E JUMPI PUSH2 0x236E PUSH2 0x2216 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x6DA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x239C JUMPI POP DUP2 DUP2 EXP PUSH2 0x6DA JUMP JUMPDEST PUSH2 0x23A6 DUP4 DUP4 PUSH2 0x22DE JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x23BA JUMPI PUSH2 0x23BA PUSH2 0x2216 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189B DUP4 DUP4 PUSH2 0x2321 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x23F3 JUMPI PUSH2 0x23F3 PUSH2 0x23CE JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x54 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x242F JUMPI PUSH2 0x242F PUSH2 0x23CE JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xC CALLDATASIZE CALLDATALOAD SWAP15 0x2D 0xE5 JUMPDEST MSIZE 0xD4 0x2F 0x2F STOP TIMESTAMP PUSH15 0x70A0971F66B56EA67BF7B4D63560D2 SGT 0xD0 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x295"
    },
    "25": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x757991A8"
    },
    "38": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x167"
    },
    "42": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x97566AA0"
    },
    "49": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "GT",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCE"
    },
    "53": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC8A1465C"
    },
    "60": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "GT",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x87"
    },
    "64": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC8A1465C"
    },
    "71": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x56C"
    },
    "75": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD0856D16"
    },
    "82": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57F"
    },
    "86": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDC6E9CF9"
    },
    "93": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x587"
    },
    "97": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "99": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "105": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x590"
    },
    "108": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "109": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xDDFBD8DD"
    },
    "115": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "116": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C9"
    },
    "119": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "120": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE932012B"
    },
    "126": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "127": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5DC"
    },
    "130": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "131": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "133": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "134": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "REVERT",
      "path": "2"
    },
    "135": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "137": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x97566AA0"
    },
    "142": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "143": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x50C"
    },
    "146": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "147": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA68EB88E"
    },
    "153": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "154": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51F"
    },
    "157": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "158": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA70A8D23"
    },
    "164": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "165": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x528"
    },
    "168": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "169": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "175": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "176": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x548"
    },
    "179": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "180": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "181": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB5ADE81B"
    },
    "186": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "187": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x55B"
    },
    "190": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "191": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "192": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC0ABEBE0"
    },
    "197": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "198": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x564"
    },
    "201": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "202": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "204": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "205": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "REVERT",
      "path": "2"
    },
    "206": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "207": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "208": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AE0368B"
    },
    "213": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "GT",
      "path": "2"
    },
    "214": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x120"
    },
    "217": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "218": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "219": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8AE0368B"
    },
    "224": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "225": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x488"
    },
    "228": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "229": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "230": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "235": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "236": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x491"
    },
    "239": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "240": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "241": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8F4FFCB1"
    },
    "246": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "247": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4A4"
    },
    "250": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "251": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "252": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x90DC1CA3"
    },
    "257": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "258": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B7"
    },
    "261": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "262": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "263": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x94B939EF"
    },
    "268": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "269": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D7"
    },
    "272": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "273": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "274": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95D89B41"
    },
    "279": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "280": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4EA"
    },
    "283": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "284": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "286": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "287": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "REVERT",
      "path": "2"
    },
    "288": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "289": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "290": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x757991A8"
    },
    "295": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "296": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x449"
    },
    "299": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "300": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "301": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x81269A56"
    },
    "306": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "307": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x451"
    },
    "310": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "311": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "312": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x829965CC"
    },
    "317": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "318": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x464"
    },
    "321": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "322": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "323": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x87A2A9D6"
    },
    "328": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "329": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x46D"
    },
    "332": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "333": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "334": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8A5550F6"
    },
    "339": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "340": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x476"
    },
    "343": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "344": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "345": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8A769D35"
    },
    "350": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "351": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x47F"
    },
    "354": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "355": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "357": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "358": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "REVERT",
      "path": "2"
    },
    "359": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "360": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "361": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2F104E0C"
    },
    "366": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "GT",
      "path": "2"
    },
    "367": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20B"
    },
    "370": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "371": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "372": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4FA972E1"
    },
    "377": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "GT",
      "path": "2"
    },
    "378": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C4"
    },
    "381": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "382": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "383": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4FA972E1"
    },
    "388": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "389": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C8"
    },
    "392": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "393": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "394": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x510DE094"
    },
    "399": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "400": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3D1"
    },
    "403": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "404": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "405": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x64E46726"
    },
    "410": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "411": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E4"
    },
    "414": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "415": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "416": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x669753A7"
    },
    "421": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "422": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F7"
    },
    "425": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "426": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "427": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6DE9F32B"
    },
    "432": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "433": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x417"
    },
    "436": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "437": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "438": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "443": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "444": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x420"
    },
    "447": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "448": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "450": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "451": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "REVERT",
      "path": "2"
    },
    "452": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "453": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "454": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2F104E0C"
    },
    "459": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "460": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x362"
    },
    "463": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "464": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "465": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x313CE567"
    },
    "470": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "471": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x38D"
    },
    "474": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "475": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "476": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x32E99708"
    },
    "481": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "482": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A7"
    },
    "485": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "486": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "487": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x45D8A232"
    },
    "492": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "493": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AF"
    },
    "496": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "497": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "498": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x490203A7"
    },
    "503": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "504": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B8"
    },
    "507": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "508": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "509": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x4EF37628"
    },
    "514": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "515": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0"
    },
    "518": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "519": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "521": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "522": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "REVERT",
      "path": "2"
    },
    "523": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "524": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "525": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1801FBE5"
    },
    "530": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "GT",
      "path": "2"
    },
    "531": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25D"
    },
    "534": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "535": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "536": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1801FBE5"
    },
    "541": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "542": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30E"
    },
    "545": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "546": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "547": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x18160DDD"
    },
    "552": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "553": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x321"
    },
    "556": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "557": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "558": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1FCCB33C"
    },
    "563": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "564": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x32A"
    },
    "567": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "568": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "569": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2381A60E"
    },
    "574": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "575": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33D"
    },
    "578": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "579": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "580": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "585": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "586": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x346"
    },
    "589": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "590": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "591": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x2D38BF7A"
    },
    "596": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "597": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x359"
    },
    "600": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "601": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "603": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "604": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "REVERT",
      "path": "2"
    },
    "605": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "606": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "607": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6FDDE03"
    },
    "612": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "613": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x29A"
    },
    "616": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "617": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "618": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95EA7B3"
    },
    "623": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "624": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B8"
    },
    "627": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "628": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "629": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xD56D6E1"
    },
    "634": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "635": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DB"
    },
    "638": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "639": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "640": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x11B1225F"
    },
    "645": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "646": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EE"
    },
    "649": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "650": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "651": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x17DA485F"
    },
    "656": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "EQ",
      "path": "2"
    },
    "657": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F8"
    },
    "660": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "661": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "662": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "664": {
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "DUP1",
      "path": "2"
    },
    "665": {
      "first_revert": true,
      "fn": null,
      "offset": [
        5801,
        24654
      ],
      "op": "REVERT",
      "path": "2"
    },
    "666": {
      "offset": [
        8007,
        8035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "667": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A2"
    },
    "670": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E5"
    },
    "673": {
      "fn": null,
      "jump": "i",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "674": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "675": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "677": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "678": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF"
    },
    "681": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "682": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "683": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CFE"
    },
    "686": {
      "fn": null,
      "jump": "i",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "687": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "688": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "690": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "691": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "DUP1",
      "path": "2"
    },
    "692": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "693": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "SUB",
      "path": "2"
    },
    "694": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "695": {
      "fn": null,
      "offset": [
        8007,
        8035
      ],
      "op": "RETURN",
      "path": "2"
    },
    "696": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "697": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB"
    },
    "700": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2C6"
    },
    "703": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "704": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "706": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D6F"
    },
    "709": {
      "fn": "ForgeMining.approve",
      "jump": "i",
      "offset": [
        22505,
        22722
      ],
      "op": "JUMP",
      "path": "2"
    },
    "710": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "711": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x673"
    },
    "714": {
      "fn": "ForgeMining.approve",
      "jump": "i",
      "offset": [
        22505,
        22722
      ],
      "op": "JUMP",
      "path": "2"
    },
    "715": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "716": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "718": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "719": {
      "op": "SWAP1"
    },
    "720": {
      "op": "ISZERO"
    },
    "721": {
      "op": "ISZERO"
    },
    "722": {
      "op": "DUP2"
    },
    "723": {
      "op": "MSTORE"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "726": {
      "op": "ADD"
    },
    "727": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF"
    },
    "730": {
      "op": "JUMP"
    },
    "731": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9593,
        10470
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "732": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9593,
        10470
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB"
    },
    "735": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9593,
        10470
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E9"
    },
    "738": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9593,
        10470
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "739": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9593,
        10470
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "741": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9593,
        10470
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DAA"
    },
    "744": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9593,
        10470
      ],
      "op": "JUMP",
      "path": "2"
    },
    "745": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9593,
        10470
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "746": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9593,
        10470
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E0"
    },
    "749": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9593,
        10470
      ],
      "op": "JUMP",
      "path": "2"
    },
    "750": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9406,
        9566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "751": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9406,
        9566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6"
    },
    "754": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9406,
        9566
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E0"
    },
    "757": {
      "fn": "ForgeMining.zFIRST",
      "jump": "i",
      "offset": [
        9406,
        9566
      ],
      "op": "JUMP",
      "path": "2"
    },
    "758": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9406,
        9566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "759": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9406,
        9566
      ],
      "op": "STOP",
      "path": "2"
    },
    "760": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19523,
        19638
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "761": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19523,
        19638
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "764": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19523,
        19638
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x97E"
    },
    "767": {
      "fn": "ForgeMining.getMiningDifficulty",
      "jump": "i",
      "offset": [
        19523,
        19638
      ],
      "op": "JUMP",
      "path": "2"
    },
    "768": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19523,
        19638
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "769": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19523,
        19638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "771": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19523,
        19638
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "772": {
      "op": "SWAP1"
    },
    "773": {
      "op": "DUP2"
    },
    "774": {
      "op": "MSTORE"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "777": {
      "op": "ADD"
    },
    "778": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19523,
        19638
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF"
    },
    "781": {
      "op": "JUMP"
    },
    "782": {
      "fn": "ForgeMining.mint",
      "offset": [
        11288,
        11425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "783": {
      "fn": "ForgeMining.mint",
      "offset": [
        11288,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB"
    },
    "786": {
      "fn": "ForgeMining.mint",
      "offset": [
        11288,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31C"
    },
    "789": {
      "fn": "ForgeMining.mint",
      "offset": [
        11288,
        11425
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "790": {
      "fn": "ForgeMining.mint",
      "offset": [
        11288,
        11425
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "792": {
      "fn": "ForgeMining.mint",
      "offset": [
        11288,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DE3"
    },
    "795": {
      "fn": "ForgeMining.mint",
      "jump": "i",
      "offset": [
        11288,
        11425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "796": {
      "fn": "ForgeMining.mint",
      "offset": [
        11288,
        11425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "797": {
      "fn": "ForgeMining.mint",
      "offset": [
        11288,
        11425
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x99C"
    },
    "800": {
      "fn": "ForgeMining.mint",
      "jump": "i",
      "offset": [
        11288,
        11425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "801": {
      "offset": [
        6396,
        6460
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "802": {
      "fn": "ForgeMining.mint",
      "offset": [
        6396,
        6460
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "805": {
      "fn": "ForgeMining.mint",
      "offset": [
        6396,
        6460
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "807": {
      "fn": "ForgeMining.mint",
      "offset": [
        6396,
        6460
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "808": {
      "fn": "ForgeMining.mint",
      "offset": [
        6396,
        6460
      ],
      "op": "DUP2",
      "path": "2"
    },
    "809": {
      "fn": "ForgeMining.mint",
      "offset": [
        6396,
        6460
      ],
      "op": "JUMP",
      "path": "2"
    },
    "810": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14835,
        15264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "811": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14835,
        15264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB"
    },
    "814": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14835,
        15264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x338"
    },
    "817": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14835,
        15264
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "818": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14835,
        15264
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "820": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14835,
        15264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1ED3"
    },
    "823": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        14835,
        15264
      ],
      "op": "JUMP",
      "path": "2"
    },
    "824": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14835,
        15264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "825": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14835,
        15264
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9B0"
    },
    "828": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        14835,
        15264
      ],
      "op": "JUMP",
      "path": "2"
    },
    "829": {
      "offset": [
        7242,
        7317
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "830": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7242,
        7317
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "833": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7242,
        7317
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "835": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7242,
        7317
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "836": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7242,
        7317
      ],
      "op": "DUP2",
      "path": "2"
    },
    "837": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        7242,
        7317
      ],
      "op": "JUMP",
      "path": "2"
    },
    "838": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "839": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB"
    },
    "842": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x354"
    },
    "845": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "846": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "848": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F34"
    },
    "851": {
      "fn": "ForgeMining.transferFrom",
      "jump": "i",
      "offset": [
        23263,
        23615
      ],
      "op": "JUMP",
      "path": "2"
    },
    "852": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "853": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA75"
    },
    "856": {
      "fn": "ForgeMining.transferFrom",
      "jump": "i",
      "offset": [
        23263,
        23615
      ],
      "op": "JUMP",
      "path": "2"
    },
    "857": {
      "offset": [
        7121,
        7146
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "858": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7121,
        7146
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "861": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7121,
        7146
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "863": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7121,
        7146
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "864": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7121,
        7146
      ],
      "op": "DUP2",
      "path": "2"
    },
    "865": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        7121,
        7146
      ],
      "op": "JUMP",
      "path": "2"
    },
    "866": {
      "offset": [
        5990,
        6020
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "867": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        5990,
        6020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "869": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        5990,
        6020
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "870": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        5990,
        6020
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x375"
    },
    "873": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        5990,
        6020
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "880": {
      "op": "SHL"
    },
    "881": {
      "op": "SUB"
    },
    "882": {
      "offset": [
        5990,
        6020
      ],
      "op": "AND",
      "path": "2"
    },
    "883": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        5990,
        6020
      ],
      "op": "DUP2",
      "path": "2"
    },
    "884": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        5990,
        6020
      ],
      "op": "JUMP",
      "path": "2"
    },
    "885": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        5990,
        6020
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "886": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        5990,
        6020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "888": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        5990,
        6020
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "895": {
      "op": "SHL"
    },
    "896": {
      "op": "SUB"
    },
    "897": {
      "op": "SWAP1"
    },
    "898": {
      "op": "SWAP2"
    },
    "899": {
      "op": "AND"
    },
    "900": {
      "op": "DUP2"
    },
    "901": {
      "op": "MSTORE"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "904": {
      "op": "ADD"
    },
    "905": {
      "offset": [
        5990,
        6020
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF"
    },
    "908": {
      "op": "JUMP"
    },
    "909": {
      "offset": [
        8084,
        8119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "910": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8084,
        8119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x395"
    },
    "913": {
      "offset": [
        8117,
        8119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x12"
    },
    "915": {
      "offset": [
        8084,
        8119
      ],
      "op": "DUP2",
      "path": "2"
    },
    "916": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8084,
        8119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "917": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8084,
        8119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "918": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8084,
        8119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "920": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        8084,
        8119
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "921": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "923": {
      "op": "SWAP1"
    },
    "924": {
      "op": "SWAP2"
    },
    "925": {
      "op": "AND"
    },
    "926": {
      "op": "DUP2"
    },
    "927": {
      "op": "MSTORE"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "930": {
      "op": "ADD"
    },
    "931": {
      "offset": [
        8084,
        8119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2AF"
    },
    "934": {
      "op": "JUMP"
    },
    "935": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        19644,
        19732
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "936": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        19714,
        19726
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0xB"
    },
    "938": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        19714,
        19726
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "939": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        19644,
        19732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "942": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        19644,
        19732
      ],
      "op": "JUMP",
      "path": "2"
    },
    "943": {
      "offset": [
        5868,
        5909
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "944": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5868,
        5909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "947": {
      "offset": [
        5902,
        5909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x870"
    },
    "950": {
      "offset": [
        5868,
        5909
      ],
      "op": "DUP2",
      "path": "2"
    },
    "951": {
      "fn": "ForgeMining.getMiningTarget",
      "offset": [
        5868,
        5909
      ],
      "op": "JUMP",
      "path": "2"
    },
    "952": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        19943,
        20197
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "953": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        19943,
        20197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "956": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        19943,
        20197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB61"
    },
    "959": {
      "fn": "ForgeMining.getMiningReward",
      "jump": "i",
      "offset": [
        19943,
        20197
      ],
      "op": "JUMP",
      "path": "2"
    },
    "960": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        19335,
        19434
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "961": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        19412,
        19427
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0xC"
    },
    "963": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        19412,
        19427
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "964": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        19335,
        19434
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "967": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        19335,
        19434
      ],
      "op": "JUMP",
      "path": "2"
    },
    "968": {
      "offset": [
        7152,
        7236
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "969": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7152,
        7236
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "972": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7152,
        7236
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "974": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7152,
        7236
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "975": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7152,
        7236
      ],
      "op": "DUP2",
      "path": "2"
    },
    "976": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        7152,
        7236
      ],
      "op": "JUMP",
      "path": "2"
    },
    "977": {
      "offset": [
        6026,
        6056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "978": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6026,
        6056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "980": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6026,
        6056
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "981": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6026,
        6056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x375"
    },
    "984": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6026,
        6056
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "991": {
      "op": "SHL"
    },
    "992": {
      "op": "SUB"
    },
    "993": {
      "offset": [
        6026,
        6056
      ],
      "op": "AND",
      "path": "2"
    },
    "994": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6026,
        6056
      ],
      "op": "DUP2",
      "path": "2"
    },
    "995": {
      "fn": "ForgeMining.getChallengeNumber",
      "offset": [
        6026,
        6056
      ],
      "op": "JUMP",
      "path": "2"
    },
    "996": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8188,
        9271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "997": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8188,
        9271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6"
    },
    "1000": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8188,
        9271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3F2"
    },
    "1003": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8188,
        9271
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1004": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8188,
        9271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1006": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8188,
        9271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F70"
    },
    "1009": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8188,
        9271
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1010": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8188,
        9271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1011": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8188,
        9271
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB8C"
    },
    "1014": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8188,
        9271
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1015": {
      "offset": [
        7664,
        7713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1016": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1019": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x405"
    },
    "1022": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1023": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1025": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FB3"
    },
    "1028": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        7664,
        7713
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1029": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1030": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x17"
    },
    "1032": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1034": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1035": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1037": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1038": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1039": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1040": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1042": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1043": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1044": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1045": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1046": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7664,
        7713
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1047": {
      "offset": [
        7774,
        7798
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1048": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7774,
        7798
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1051": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7774,
        7798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x19"
    },
    "1053": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7774,
        7798
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1054": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7774,
        7798
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1055": {
      "fn": "ForgeMining.zinit",
      "offset": [
        7774,
        7798
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1056": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21237,
        21366
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1057": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21237,
        21366
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1060": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21237,
        21366
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x42E"
    },
    "1063": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21237,
        21366
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1064": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21237,
        21366
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1066": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21237,
        21366
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FCC"
    },
    "1069": {
      "fn": "ForgeMining.balanceOf",
      "jump": "i",
      "offset": [
        21237,
        21366
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1070": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21237,
        21366
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1077": {
      "op": "SHL"
    },
    "1078": {
      "op": "SUB"
    },
    "1079": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21338,
        21358
      ],
      "op": "AND",
      "path": "2",
      "statement": 2
    },
    "1080": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21306,
        21318
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1082": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21338,
        21358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1083": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21338,
        21358
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1084": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21338,
        21358
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1085": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21338,
        21346
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "1087": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21338,
        21358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1089": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21338,
        21358
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1090": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21338,
        21358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1092": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21338,
        21358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1093": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21338,
        21358
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1094": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21338,
        21358
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1095": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21338,
        21358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1096": {
      "fn": "ForgeMining.balanceOf",
      "offset": [
        21237,
        21366
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1097": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        20311,
        20521
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1098": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        20502,
        20512
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x7"
    },
    "1100": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        20502,
        20512
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1101": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        20311,
        20521
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1104": {
      "fn": "ForgeMining.getEpoch",
      "offset": [
        20311,
        20521
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1105": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        18884,
        19238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1106": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        18884,
        19238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB"
    },
    "1109": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        18884,
        19238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45F"
    },
    "1112": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        18884,
        19238
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1113": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        18884,
        19238
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1115": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        18884,
        19238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FE7"
    },
    "1118": {
      "fn": "ForgeMining.checkMintSolution",
      "jump": "i",
      "offset": [
        18884,
        19238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1119": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        18884,
        19238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1120": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        18884,
        19238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD0F"
    },
    "1123": {
      "fn": "ForgeMining.checkMintSolution",
      "jump": "i",
      "offset": [
        18884,
        19238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1124": {
      "offset": [
        6682,
        6708
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1125": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6682,
        6708
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1128": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6682,
        6708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "1130": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6682,
        6708
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1131": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6682,
        6708
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1132": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6682,
        6708
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1133": {
      "offset": [
        6859,
        6896
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1134": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6859,
        6896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1137": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6859,
        6896
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "1139": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6859,
        6896
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1140": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6859,
        6896
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1141": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6859,
        6896
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1142": {
      "offset": [
        8125,
        8155
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1143": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8125,
        8155
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1146": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8125,
        8155
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1148": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8125,
        8155
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1149": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8125,
        8155
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1150": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        8125,
        8155
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1151": {
      "offset": [
        6902,
        6965
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1152": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6902,
        6965
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1155": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6902,
        6965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "1157": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6902,
        6965
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1158": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6902,
        6965
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1159": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        6902,
        6965
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1160": {
      "offset": [
        7034,
        7064
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1161": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7034,
        7064
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1164": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7034,
        7064
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "1166": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7034,
        7064
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1167": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7034,
        7064
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1168": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        7034,
        7064
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1169": {
      "offset": [
        2832,
        2852
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1170": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2832,
        2852
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1172": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2832,
        2852
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1173": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2832,
        2852
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x375"
    },
    "1176": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2832,
        2852
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1183": {
      "op": "SHL"
    },
    "1184": {
      "op": "SUB"
    },
    "1185": {
      "offset": [
        2832,
        2852
      ],
      "op": "AND",
      "path": "2"
    },
    "1186": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2832,
        2852
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1187": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        2832,
        2852
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1188": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24422,
        24634
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1189": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24422,
        24634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6"
    },
    "1192": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24422,
        24634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B2"
    },
    "1195": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24422,
        24634
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1196": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24422,
        24634
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1198": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24422,
        24634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2019"
    },
    "1201": {
      "fn": "ForgeMining.receiveApproval",
      "jump": "i",
      "offset": [
        24422,
        24634
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1202": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24422,
        24634
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1203": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24422,
        24634
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5A"
    },
    "1206": {
      "fn": "ForgeMining.receiveApproval",
      "jump": "i",
      "offset": [
        24422,
        24634
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1207": {
      "offset": [
        7719,
        7768
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1208": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1211": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C5"
    },
    "1214": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1215": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1217": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FB3"
    },
    "1220": {
      "fn": "ForgeMining.receiveApproval",
      "jump": "i",
      "offset": [
        7719,
        7768
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1221": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1222": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x18"
    },
    "1224": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1226": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1227": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1229": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1230": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1231": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1232": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1234": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1235": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1236": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1237": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1238": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        7719,
        7768
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1239": {
      "offset": [
        5955,
        5984
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1240": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        5955,
        5984
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1242": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        5955,
        5984
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1243": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        5955,
        5984
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x375"
    },
    "1246": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        5955,
        5984
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1253": {
      "op": "SHL"
    },
    "1254": {
      "op": "SUB"
    },
    "1255": {
      "offset": [
        5955,
        5984
      ],
      "op": "AND",
      "path": "2"
    },
    "1256": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        5955,
        5984
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1257": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        5955,
        5984
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1258": {
      "offset": [
        8041,
        8078
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1259": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2A2"
    },
    "1262": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1264": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1265": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1266": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1268": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "ADD",
      "path": "2"
    },
    "1269": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1271": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1272": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1273": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1275": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1276": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1277": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1279": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "ADD",
      "path": "2"
    },
    "1280": {
      "op": "PUSH3",
      "value": "0x466765"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1286": {
      "op": "SHL"
    },
    "1287": {
      "offset": [
        8041,
        8078
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1288": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1289": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "POP",
      "path": "2"
    },
    "1290": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1291": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        8041,
        8078
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1292": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20564,
        20825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1293": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20564,
        20825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1296": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20564,
        20825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x51A"
    },
    "1299": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20564,
        20825
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1300": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20564,
        20825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1302": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20564,
        20825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20D9"
    },
    "1305": {
      "fn": "ForgeMining.getMintDigest",
      "jump": "i",
      "offset": [
        20564,
        20825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1306": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20564,
        20825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1307": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20564,
        20825
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDE7"
    },
    "1310": {
      "fn": "ForgeMining.getMintDigest",
      "jump": "i",
      "offset": [
        20564,
        20825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1311": {
      "offset": [
        7511,
        7551
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1312": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7511,
        7551
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1315": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7511,
        7551
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "1317": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7511,
        7551
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1318": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7511,
        7551
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1319": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7511,
        7551
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1320": {
      "offset": [
        7603,
        7658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1321": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1324": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x536"
    },
    "1327": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1328": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1330": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FB3"
    },
    "1333": {
      "fn": "ForgeMining.getMintDigest",
      "jump": "i",
      "offset": [
        7603,
        7658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1334": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1335": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x16"
    },
    "1337": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1339": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1340": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1342": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1343": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1344": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1345": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1347": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1348": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1349": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1350": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1351": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        7603,
        7658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1352": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21715,
        21991
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1353": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21715,
        21991
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB"
    },
    "1356": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21715,
        21991
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x556"
    },
    "1359": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21715,
        21991
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1360": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21715,
        21991
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1362": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21715,
        21991
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D6F"
    },
    "1365": {
      "fn": "ForgeMining.transfer",
      "jump": "i",
      "offset": [
        21715,
        21991
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1366": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21715,
        21991
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1367": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21715,
        21991
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE22"
    },
    "1370": {
      "fn": "ForgeMining.transfer",
      "jump": "i",
      "offset": [
        21715,
        21991
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1371": {
      "offset": [
        6741,
        6783
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1372": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6741,
        6783
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1375": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6741,
        6783
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "1377": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6741,
        6783
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1378": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6741,
        6783
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1379": {
      "fn": "ForgeMining.transfer",
      "offset": [
        6741,
        6783
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1380": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        19741,
        19829
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1381": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        19810,
        19822
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 4,
      "value": "0x19"
    },
    "1383": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        19810,
        19822
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1384": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        19741,
        19829
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1387": {
      "fn": "ForgeMining.getMiningMinted",
      "offset": [
        19741,
        19829
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1388": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13129,
        14827
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1389": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13129,
        14827
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB"
    },
    "1392": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13129,
        14827
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57A"
    },
    "1395": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13129,
        14827
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1396": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13129,
        14827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1398": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13129,
        14827
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2105"
    },
    "1401": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13129,
        14827
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1402": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13129,
        14827
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1403": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13129,
        14827
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEA7"
    },
    "1406": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13129,
        14827
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1407": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10473,
        11098
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1408": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10473,
        11098
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2F6"
    },
    "1411": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10473,
        11098
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13C9"
    },
    "1414": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10473,
        11098
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1415": {
      "offset": [
        6812,
        6848
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1416": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6812,
        6848
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1419": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6812,
        6848
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "1421": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6812,
        6848
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1422": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6812,
        6848
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1423": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        6812,
        6848
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1424": {
      "fn": "ForgeMining.allowance",
      "offset": [
        23900,
        24056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1425": {
      "fn": "ForgeMining.allowance",
      "offset": [
        23900,
        24056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1428": {
      "fn": "ForgeMining.allowance",
      "offset": [
        23900,
        24056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x59E"
    },
    "1431": {
      "fn": "ForgeMining.allowance",
      "offset": [
        23900,
        24056
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1432": {
      "fn": "ForgeMining.allowance",
      "offset": [
        23900,
        24056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1434": {
      "fn": "ForgeMining.allowance",
      "offset": [
        23900,
        24056
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x217C"
    },
    "1437": {
      "fn": "ForgeMining.allowance",
      "jump": "i",
      "offset": [
        23900,
        24056
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1438": {
      "fn": "ForgeMining.allowance",
      "offset": [
        23900,
        24056
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1445": {
      "op": "SHL"
    },
    "1446": {
      "op": "SUB"
    },
    "1447": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 5
    },
    "1448": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1449": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "AND",
      "path": "2"
    },
    "1450": {
      "fn": "ForgeMining.allowance",
      "offset": [
        23986,
        24000
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1452": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1453": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1454": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1455": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24027
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1B"
    },
    "1457": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1459": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1460": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1461": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1462": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1464": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1465": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1466": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24039
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1467": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24048
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1468": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24048
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1469": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24048
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1470": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24048
      ],
      "op": "AND",
      "path": "2"
    },
    "1471": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24048
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1472": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24048
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1473": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24048
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1474": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24048
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1475": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24048
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1476": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24048
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1477": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24048
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1478": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24048
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1479": {
      "fn": "ForgeMining.allowance",
      "offset": [
        24020,
        24048
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1480": {
      "fn": "ForgeMining.allowance",
      "offset": [
        23900,
        24056
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1481": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11529,
        12854
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1482": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11529,
        12854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2CB"
    },
    "1485": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11529,
        12854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D7"
    },
    "1488": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11529,
        12854
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1489": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11529,
        12854
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1491": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11529,
        12854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21AF"
    },
    "1494": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        11529,
        12854
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1495": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11529,
        12854
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1496": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11529,
        12854
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1556"
    },
    "1499": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        11529,
        12854
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1500": {
      "offset": [
        6616,
        6676
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1501": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6616,
        6676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x300"
    },
    "1504": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6616,
        6676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "1506": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6616,
        6676
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1507": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6616,
        6676
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1508": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        6616,
        6676
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1509": {
      "offset": [
        8007,
        8035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1510": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1E"
    },
    "1512": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1513": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1514": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F2"
    },
    "1517": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1518": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21DB"
    },
    "1521": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1522": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1523": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1524": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1526": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "ADD",
      "path": "2"
    },
    "1527": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1529": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1530": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1531": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DIV",
      "path": "2"
    },
    "1532": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "MUL",
      "path": "2"
    },
    "1533": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1535": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "ADD",
      "path": "2"
    },
    "1536": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1538": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1539": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1540": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1541": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "ADD",
      "path": "2"
    },
    "1542": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1544": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1545": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1546": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1547": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1548": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1549": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1550": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1551": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1552": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1554": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "ADD",
      "path": "2"
    },
    "1555": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1556": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1557": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1558": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x61E"
    },
    "1561": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1562": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x21DB"
    },
    "1565": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1566": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1567": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1568": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1569": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66B"
    },
    "1572": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1573": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1574": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1576": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "LT",
      "path": "2"
    },
    "1577": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x640"
    },
    "1580": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1581": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1584": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1585": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1586": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1587": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DIV",
      "path": "2"
    },
    "1588": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "MUL",
      "path": "2"
    },
    "1589": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1590": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1591": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1592": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1594": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "ADD",
      "path": "2"
    },
    "1595": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1596": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66B"
    },
    "1599": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1600": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1601": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1602": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "ADD",
      "path": "2"
    },
    "1603": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1604": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1605": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1607": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1608": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1610": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1612": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1613": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1614": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1615": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1616": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1617": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1618": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1619": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1620": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1622": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "ADD",
      "path": "2"
    },
    "1623": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1624": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1626": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "ADD",
      "path": "2"
    },
    "1627": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1628": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1629": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "GT",
      "path": "2"
    },
    "1630": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64E"
    },
    "1633": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1634": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1635": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1636": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SUB",
      "path": "2"
    },
    "1637": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1639": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "AND",
      "path": "2"
    },
    "1640": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1641": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "ADD",
      "path": "2"
    },
    "1642": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1643": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1644": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "POP",
      "path": "2"
    },
    "1645": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "POP",
      "path": "2"
    },
    "1646": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "POP",
      "path": "2"
    },
    "1647": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "POP",
      "path": "2"
    },
    "1648": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "POP",
      "path": "2"
    },
    "1649": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        8007,
        8035
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1650": {
      "fn": "ForgeMining.mintTo",
      "jump": "o",
      "offset": [
        8007,
        8035
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1651": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1652": {
      "fn": "ForgeMining.approve",
      "offset": [
        22610,
        22620
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 6
    },
    "1653": {
      "fn": "ForgeMining.approve",
      "offset": [
        22577,
        22589
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1655": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22621
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1656": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22621
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1657": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22621
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1658": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1B"
    },
    "1660": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1662": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22621
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1663": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22621
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1664": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22621
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1665": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22621
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1667": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22621
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1668": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22621
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1669": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22621
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1676": {
      "op": "SHL"
    },
    "1677": {
      "op": "SUB"
    },
    "1678": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22630
      ],
      "op": "DUP8",
      "path": "2"
    },
    "1679": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22630
      ],
      "op": "AND",
      "path": "2"
    },
    "1680": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22630
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1681": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22630
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1682": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22630
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1683": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22630
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1684": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22630
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1685": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22630
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1686": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22630
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1687": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22630
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1688": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22639
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1689": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22639
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1690": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22639
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1691": {
      "fn": "ForgeMining.approve",
      "offset": [
        22655,
        22692
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 7
    },
    "1692": {
      "fn": "ForgeMining.approve",
      "offset": [
        22577,
        22589
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1693": {
      "fn": "ForgeMining.approve",
      "offset": [
        22577,
        22589
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1694": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22630
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1695": {
      "fn": "ForgeMining.approve",
      "offset": [
        22602,
        22630
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1696": {
      "fn": "ForgeMining.approve",
      "offset": [
        22655,
        22692
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1729": {
      "fn": "ForgeMining.approve",
      "offset": [
        22655,
        22692
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1730": {
      "fn": "ForgeMining.approve",
      "offset": [
        22655,
        22692
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6CE"
    },
    "1733": {
      "fn": "ForgeMining.approve",
      "offset": [
        22655,
        22692
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1734": {
      "fn": "ForgeMining.approve",
      "offset": [
        22633,
        22639
      ],
      "op": "DUP7",
      "path": "2"
    },
    "1735": {
      "op": "DUP2"
    },
    "1736": {
      "op": "MSTORE"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1739": {
      "op": "ADD"
    },
    "1740": {
      "op": "SWAP1"
    },
    "1741": {
      "op": "JUMP"
    },
    "1742": {
      "fn": "ForgeMining.approve",
      "offset": [
        22655,
        22692
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1743": {
      "fn": "ForgeMining.approve",
      "offset": [
        22655,
        22692
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1745": {
      "fn": "ForgeMining.approve",
      "offset": [
        22655,
        22692
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1746": {
      "fn": "ForgeMining.approve",
      "offset": [
        22655,
        22692
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1747": {
      "fn": "ForgeMining.approve",
      "offset": [
        22655,
        22692
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1748": {
      "fn": "ForgeMining.approve",
      "offset": [
        22655,
        22692
      ],
      "op": "SUB",
      "path": "2"
    },
    "1749": {
      "fn": "ForgeMining.approve",
      "offset": [
        22655,
        22692
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1750": {
      "fn": "ForgeMining.approve",
      "offset": [
        22655,
        22692
      ],
      "op": "LOG3",
      "path": "2"
    },
    "1751": {
      "op": "POP"
    },
    "1752": {
      "fn": "ForgeMining.approve",
      "offset": [
        22710,
        22714
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 8,
      "value": "0x1"
    },
    "1754": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1755": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1756": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1757": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "POP",
      "path": "2"
    },
    "1758": {
      "fn": "ForgeMining.approve",
      "offset": [
        22505,
        22722
      ],
      "op": "POP",
      "path": "2"
    },
    "1759": {
      "fn": "ForgeMining.approve",
      "jump": "o",
      "offset": [
        22505,
        22722
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1760": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9593,
        10470
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1761": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9663,
        9675
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1763": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9690,
        9712
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 9,
      "value": "0x6EA"
    },
    "1766": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9690,
        9710
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A2"
    },
    "1769": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9690,
        9712
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1770": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9690,
        9712
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1771": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9724,
        9733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1773": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9754,
        9771
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x11"
    },
    "1775": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9754,
        9771
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1776": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9736,
        9751
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "1777": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9736,
        9771
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6FA"
    },
    "1780": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9736,
        9771
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1781": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9736,
        9771
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1782": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9736,
        9771
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222C"
    },
    "1785": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9736,
        9771
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1786": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9736,
        9771
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1787": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9724,
        9771
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9788,
        9789
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1791": {
      "offset": [
        5902,
        5909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x870"
    },
    "1794": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9800,
        9818
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1795": {
      "branch": 118,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9800,
        9818
      ],
      "op": "GT",
      "path": "2"
    },
    "1796": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9797,
        9936
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1797": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9797,
        9936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x749"
    },
    "1800": {
      "branch": 118,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9797,
        9936
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1801": {
      "op": "POP"
    },
    "1802": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9843,
        9844
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 10,
      "value": "0x4"
    },
    "1804": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9835,
        9928
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1805": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9849,
        9851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "1807": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9846,
        9847
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1808": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9846,
        9851
      ],
      "op": "LT",
      "path": "2"
    },
    "1809": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9835,
        9928
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1810": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9835,
        9928
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x749"
    },
    "1813": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9835,
        9928
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1814": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9877,
        9900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x72C"
    },
    "1817": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9898,
        9899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1819": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9878,
        9892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x726"
    },
    "1822": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9891,
        9892
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1823": {
      "offset": [
        5902,
        5909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x870"
    },
    "1826": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9878,
        9892
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "1829": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9878,
        9892
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1830": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9878,
        9892
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1831": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9877,
        9897
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1832": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9877,
        9897
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1854"
    },
    "1835": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9877,
        9900
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1836": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9877,
        9900
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1837": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9869,
        9873
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1838": {
      "branch": 119,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9869,
        9900
      ],
      "op": "GT",
      "path": "2"
    },
    "1839": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9866,
        9927
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x737"
    },
    "1842": {
      "branch": 119,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9866,
        9927
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1843": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9912,
        9917
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0x749"
    },
    "1846": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9912,
        9917
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1847": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9866,
        9927
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1848": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9853,
        9856
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 12
    },
    "1849": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9853,
        9856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x741"
    },
    "1852": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9853,
        9856
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1853": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9853,
        9856
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2262"
    },
    "1856": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9853,
        9856
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1857": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9853,
        9856
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1858": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9853,
        9856
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1859": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9853,
        9856
      ],
      "op": "POP",
      "path": "2"
    },
    "1860": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9853,
        9856
      ],
      "op": "POP",
      "path": "2"
    },
    "1861": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9835,
        9928
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70C"
    },
    "1864": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9835,
        9928
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1865": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9835,
        9928
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1866": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9949,
        9960
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1868": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9963,
        9989
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x75E"
    },
    "1871": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9987,
        9988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1873": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9968,
        9981
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "1875": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9968,
        9981
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1876": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9964,
        9965
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1877": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9964,
        9981
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x726"
    },
    "1880": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9964,
        9981
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1881": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9964,
        9981
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1882": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9964,
        9981
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "1885": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        9964,
        9981
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1886": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9963,
        9989
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1887": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10031,
        10041
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 13
    },
    "1888": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1890": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1891": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10042
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1892": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10042
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1893": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10030
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "1895": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1897": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10042
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1898": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10042
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1900": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10042
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1901": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10042
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1902": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10042
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1903": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9949,
        9989
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1904": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9949,
        9989
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1905": {
      "op": "POP"
    },
    "1906": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10054
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x77B"
    },
    "1909": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10054
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1910": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9949,
        9989
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1911": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10046
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A54"
    },
    "1914": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10022,
        10054
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1915": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10022,
        10054
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1916": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10008,
        10018
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1917": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9999,
        10019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1919": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9999,
        10019
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1920": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9999,
        10019
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1921": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9999,
        10019
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1922": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9999,
        10007
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "1924": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9999,
        10019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1926": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9999,
        10019
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1927": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9999,
        10019
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1929": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9999,
        10019
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1930": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9999,
        10019
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1931": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9999,
        10054
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1932": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10139
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0x7BA"
    },
    "1935": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10138
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x799"
    },
    "1938": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10124,
        10130
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1939": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10136,
        10137
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1941": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1854"
    },
    "1944": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10123,
        10138
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1945": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10123,
        10138
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1946": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10102,
        10117
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1948": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10102,
        10117
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1955": {
      "op": "SHL"
    },
    "1956": {
      "op": "SUB"
    },
    "1957": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10102,
        10117
      ],
      "op": "AND",
      "path": "2"
    },
    "1958": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1960": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1961": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10118
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1962": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1963": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10101
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "1965": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1967": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10118
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1968": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1970": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1971": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10118
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1972": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10118
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1973": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1974": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10122
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A54"
    },
    "1977": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10093,
        10139
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1978": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10093,
        10139
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1979": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10074,
        10089
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1981": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10074,
        10089
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1988": {
      "op": "SHL"
    },
    "1989": {
      "op": "SUB"
    },
    "1990": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10074,
        10089
      ],
      "op": "AND",
      "path": "2"
    },
    "1991": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10065,
        10090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1993": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10065,
        10090
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1994": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10065,
        10090
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1995": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10065,
        10090
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1996": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10065,
        10073
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "1998": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10065,
        10090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2000": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10065,
        10090
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2001": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10065,
        10090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2003": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10065,
        10090
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2004": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10065,
        10090
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2005": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10065,
        10139
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2006": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10164,
        10176
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 15,
      "value": "0x19"
    },
    "2008": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10164,
        10176
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2009": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10164,
        10188
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E2"
    },
    "2012": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10164,
        10188
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2013": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10181,
        10187
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2014": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10164,
        10180
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A54"
    },
    "2017": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10164,
        10188
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2018": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10164,
        10188
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2019": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10149,
        10161
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x19"
    },
    "2021": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10149,
        10188
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2022": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10222,
        10237
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 16
    },
    "2023": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10202,
        10219
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x11"
    },
    "2025": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10202,
        10237
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2026": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10254,
        10263
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1C"
    },
    "2028": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10254,
        10263
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2029": {
      "branch": 120,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10254,
        10267
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2030": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10251,
        10361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x889"
    },
    "2033": {
      "branch": 120,
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10251,
        10361
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2034": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10289,
        10304
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x3"
    },
    "2036": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10289,
        10304
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2037": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10337,
        10346
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1C"
    },
    "2039": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10337,
        10346
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2040": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10327,
        10336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "2042": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10327,
        10336
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2049": {
      "op": "SHL"
    },
    "2050": {
      "op": "SUB"
    },
    "2051": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10289,
        10304
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2052": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10289,
        10304
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2053": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10289,
        10304
      ],
      "op": "AND",
      "path": "2"
    },
    "2054": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10289,
        10304
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2055": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10314
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "2060": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10314
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2061": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10315,
        10325
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2062": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10315,
        10325
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2063": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10327,
        10346
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x818"
    },
    "2066": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10327,
        10346
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2067": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10337,
        10346
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2068": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10327,
        10346
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "2071": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10327,
        10346
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2072": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10327,
        10346
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2073": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2075": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2082": {
      "op": "SHL"
    },
    "2083": {
      "op": "SUB"
    },
    "2084": {
      "op": "NOT"
    },
    "2085": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "2087": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2088": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2089": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "SHL",
      "path": "2"
    },
    "2090": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "AND",
      "path": "2"
    },
    "2091": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2092": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2093": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2095": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2097": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2099": {
      "op": "SHL"
    },
    "2100": {
      "op": "SUB"
    },
    "2101": {
      "op": "SWAP1"
    },
    "2102": {
      "op": "SWAP3"
    },
    "2103": {
      "op": "AND"
    },
    "2104": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2106": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2107": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "ADD",
      "path": "2"
    },
    "2108": {
      "op": "MSTORE"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2111": {
      "op": "DUP3"
    },
    "2112": {
      "op": "ADD"
    },
    "2113": {
      "op": "MSTORE"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2116": {
      "op": "ADD"
    },
    "2117": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2119": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2121": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2122": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2123": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2124": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "SUB",
      "path": "2"
    },
    "2125": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2126": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2128": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2129": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "GAS",
      "path": "2"
    },
    "2130": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "CALL",
      "path": "2"
    },
    "2131": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2132": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2133": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2134": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x863"
    },
    "2137": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2138": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2139": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2141": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2142": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "2143": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2144": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2146": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "REVERT",
      "path": "2"
    },
    "2147": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2148": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "POP",
      "path": "2"
    },
    "2149": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "POP",
      "path": "2"
    },
    "2150": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "POP",
      "path": "2"
    },
    "2151": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "POP",
      "path": "2"
    },
    "2152": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2154": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2155": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "2156": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2158": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "NOT",
      "path": "2"
    },
    "2159": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2161": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2162": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "ADD",
      "path": "2"
    },
    "2163": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "AND",
      "path": "2"
    },
    "2164": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2165": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "ADD",
      "path": "2"
    },
    "2166": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2167": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2169": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2170": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "POP",
      "path": "2"
    },
    "2171": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2172": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "ADD",
      "path": "2"
    },
    "2173": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2174": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x887"
    },
    "2177": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2178": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2179": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x227D"
    },
    "2182": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "i",
      "offset": [
        10282,
        10347
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2183": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2184": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10282,
        10347
      ],
      "op": "POP",
      "path": "2"
    },
    "2185": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10251,
        10361
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2186": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10395,
        10408
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 18,
      "value": "0xF"
    },
    "2188": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10395,
        10408
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2189": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10410,
        10420
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "2191": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10410,
        10420
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2192": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10422,
        10437
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "2194": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10422,
        10437
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2195": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10378,
        10439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2197": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10378,
        10439
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2198": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10378,
        10439
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2199": {
      "op": "SWAP4"
    },
    "2200": {
      "op": "DUP5"
    },
    "2201": {
      "op": "MSTORE"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2204": {
      "op": "DUP5"
    },
    "2205": {
      "op": "ADD"
    },
    "2206": {
      "op": "SWAP3"
    },
    "2207": {
      "op": "SWAP1"
    },
    "2208": {
      "op": "SWAP3"
    },
    "2209": {
      "op": "MSTORE"
    },
    "2210": {
      "op": "SWAP1"
    },
    "2211": {
      "op": "DUP3"
    },
    "2212": {
      "op": "ADD"
    },
    "2213": {
      "op": "MSTORE"
    },
    "2214": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10383,
        10393
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2215": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10383,
        10393
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2216": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10378,
        10439
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D"
    },
    "2249": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10378,
        10439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2252": {
      "op": "ADD"
    },
    "2253": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10378,
        10439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2255": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10378,
        10439
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2256": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10378,
        10439
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2257": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10378,
        10439
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2258": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10378,
        10439
      ],
      "op": "SUB",
      "path": "2"
    },
    "2259": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10378,
        10439
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2260": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10378,
        10439
      ],
      "op": "LOG2",
      "path": "2"
    },
    "2261": {
      "op": "POP"
    },
    "2262": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10459,
        10463
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 19,
      "value": "0x1"
    },
    "2264": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        10459,
        10463
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "2265": {
      "fn": "ForgeMining.AOpenMint",
      "offset": [
        9593,
        10470
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2266": {
      "op": "POP"
    },
    "2267": {
      "op": "POP"
    },
    "2268": {
      "op": "POP"
    },
    "2269": {
      "op": "POP"
    },
    "2270": {
      "op": "POP"
    },
    "2271": {
      "fn": "ForgeMining.AOpenMint",
      "jump": "o",
      "offset": [
        9593,
        10470
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2272": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9406,
        9566
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2273": {
      "offset": [
        3088,
        3093
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2275": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3088,
        3093
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2282": {
      "op": "SHL"
    },
    "2283": {
      "op": "SUB"
    },
    "2284": {
      "offset": [
        3088,
        3093
      ],
      "op": "AND",
      "path": "2"
    },
    "2285": {
      "offset": [
        3074,
        3084
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2286": {
      "offset": [
        3074,
        3093
      ],
      "op": "EQ",
      "path": "2"
    },
    "2287": {
      "offset": [
        3066,
        3108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x92C"
    },
    "2290": {
      "offset": [
        3066,
        3108
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2291": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3066,
        3108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2293": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3066,
        3108
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2294": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2300": {
      "op": "SHL"
    },
    "2301": {
      "offset": [
        3066,
        3108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2302": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3066,
        3108
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2305": {
      "offset": [
        3066,
        3108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2307": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3066,
        3108
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2308": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3066,
        3108
      ],
      "op": "ADD",
      "path": "2"
    },
    "2309": {
      "op": "MSTORE"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2314": {
      "op": "DUP3"
    },
    "2315": {
      "op": "ADD"
    },
    "2316": {
      "op": "MSTORE"
    },
    "2317": {
      "op": "PUSH10",
      "value": "0x37B7363C9037BBB732B9"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "2330": {
      "op": "SHL"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2333": {
      "op": "DUP3"
    },
    "2334": {
      "op": "ADD"
    },
    "2335": {
      "op": "MSTORE"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2338": {
      "op": "ADD"
    },
    "2339": {
      "offset": [
        3066,
        3108
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2340": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3066,
        3108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2342": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3066,
        3108
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2343": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3066,
        3108
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2344": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3066,
        3108
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2345": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3066,
        3108
      ],
      "op": "SUB",
      "path": "2"
    },
    "2346": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3066,
        3108
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2347": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3066,
        3108
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "2348": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        3066,
        3108
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2349": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9458,
        9464
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0x20"
    },
    "2351": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9458,
        9464
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2352": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9458,
        9464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2354": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9458,
        9464
      ],
      "op": "AND",
      "path": "2"
    },
    "2355": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9457,
        9464
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2356": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9450,
        9465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x93F"
    },
    "2359": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9450,
        9465
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2360": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9450,
        9465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x93F"
    },
    "2363": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9450,
        9465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229A"
    },
    "2366": {
      "fn": "ForgeMining.zFIRST",
      "jump": "i",
      "offset": [
        9450,
        9465
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2367": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9450,
        9465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2368": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9484,
        9494
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 21
    },
    "2369": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2371": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2372": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2373": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2374": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9483
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "2376": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2378": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9495
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2379": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9495
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2380": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9495
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2381": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9495
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2383": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9495
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2384": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9495
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2385": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9495
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2386": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9498,
        9506
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xDE0B6B3A7640000"
    },
    "2395": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2396": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9506
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2397": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9506
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2398": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9475,
        9506
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2399": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9521,
        9563
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 22
    },
    "2400": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9521,
        9563
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2401": {
      "op": "SWAP1"
    },
    "2402": {
      "op": "DUP2"
    },
    "2403": {
      "op": "MSTORE"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2406": {
      "op": "DUP1"
    },
    "2407": {
      "op": "MLOAD"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2410": {
      "op": "PUSH2",
      "value": "0x244E"
    },
    "2413": {
      "op": "DUP4"
    },
    "2414": {
      "op": "CODECOPY"
    },
    "2415": {
      "op": "DUP2"
    },
    "2416": {
      "op": "MLOAD"
    },
    "2417": {
      "op": "SWAP2"
    },
    "2418": {
      "op": "MSTORE"
    },
    "2419": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9521,
        9563
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2420": {
      "op": "ADD"
    },
    "2421": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9521,
        9563
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2423": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9521,
        9563
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2424": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9521,
        9563
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2425": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9521,
        9563
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2426": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9521,
        9563
      ],
      "op": "SUB",
      "path": "2"
    },
    "2427": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9521,
        9563
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2428": {
      "fn": "ForgeMining.zFIRST",
      "offset": [
        9521,
        9563
      ],
      "op": "LOG3",
      "path": "2"
    },
    "2429": {
      "fn": "ForgeMining.zFIRST",
      "jump": "o",
      "offset": [
        9406,
        9566
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2430": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19523,
        19638
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2431": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19575,
        19579
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2433": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19598,
        19631
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 23,
      "value": "0x997"
    },
    "2436": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19618,
        19630
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "2438": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19618,
        19630
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2439": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19598,
        19613
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "2441": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19598,
        19613
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2442": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19598,
        19617
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1854"
    },
    "2445": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19598,
        19617
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2446": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19598,
        19631
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2447": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19598,
        19631
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2448": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19598,
        19631
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "2453": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19598,
        19631
      ],
      "op": "AND",
      "path": "2"
    },
    "2454": {
      "fn": "ForgeMining.getMiningDifficulty",
      "jump": "i",
      "offset": [
        19598,
        19631
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2455": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19598,
        19631
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2456": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19591,
        19631
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2457": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19591,
        19631
      ],
      "op": "POP",
      "path": "2"
    },
    "2458": {
      "fn": "ForgeMining.getMiningDifficulty",
      "offset": [
        19523,
        19638
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2459": {
      "fn": "ForgeMining.getMiningDifficulty",
      "jump": "o",
      "offset": [
        19523,
        19638
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2460": {
      "fn": "ForgeMining.mint",
      "offset": [
        11288,
        11425
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2461": {
      "fn": "ForgeMining.mint",
      "offset": [
        11359,
        11371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2463": {
      "fn": "ForgeMining.mint",
      "offset": [
        11379,
        11422
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 24,
      "value": "0x9A9"
    },
    "2466": {
      "fn": "ForgeMining.mint",
      "offset": [
        11386,
        11391
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2467": {
      "fn": "ForgeMining.mint",
      "offset": [
        11393,
        11409
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2468": {
      "fn": "ForgeMining.mint",
      "offset": [
        11411,
        11421
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2469": {
      "fn": "ForgeMining.mint",
      "offset": [
        11379,
        11385
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1556"
    },
    "2472": {
      "fn": "ForgeMining.mint",
      "jump": "i",
      "offset": [
        11379,
        11422
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2473": {
      "fn": "ForgeMining.mint",
      "offset": [
        11379,
        11422
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2474": {
      "fn": "ForgeMining.mint",
      "offset": [
        11379,
        11422
      ],
      "op": "POP",
      "path": "2"
    },
    "2475": {
      "fn": "ForgeMining.mint",
      "offset": [
        11288,
        11425
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2476": {
      "fn": "ForgeMining.mint",
      "offset": [
        11288,
        11425
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2477": {
      "fn": "ForgeMining.mint",
      "offset": [
        11288,
        11425
      ],
      "op": "POP",
      "path": "2"
    },
    "2478": {
      "fn": "ForgeMining.mint",
      "offset": [
        11288,
        11425
      ],
      "op": "POP",
      "path": "2"
    },
    "2479": {
      "fn": "ForgeMining.mint",
      "jump": "o",
      "offset": [
        11288,
        11425
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2480": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14835,
        15264
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2481": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14968,
        14980
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2483": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14992,
        15011
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2484": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15028,
        15038
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2485": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15028,
        15045
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2486": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15048,
        15049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2488": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15028,
        15049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9C1"
    },
    "2491": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15028,
        15049
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2492": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15028,
        15049
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2493": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15028,
        15049
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B0"
    },
    "2496": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        15028,
        15049
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2497": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15028,
        15049
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2498": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2507": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2508": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "GT",
      "path": "2"
    },
    "2509": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2510": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D9"
    },
    "2513": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2514": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9D9"
    },
    "2517": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E05"
    },
    "2520": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        15014,
        15050
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2521": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2522": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2524": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2525": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2526": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2527": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2528": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2529": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2530": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2532": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "MUL",
      "path": "2"
    },
    "2533": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2535": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "ADD",
      "path": "2"
    },
    "2536": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2537": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "ADD",
      "path": "2"
    },
    "2538": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2540": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2541": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2542": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2543": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA02"
    },
    "2546": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2547": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2548": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2550": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "ADD",
      "path": "2"
    },
    "2551": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2553": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2554": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "MUL",
      "path": "2"
    },
    "2555": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2556": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "2557": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2558": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "2559": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "ADD",
      "path": "2"
    },
    "2560": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2561": {
      "op": "POP"
    },
    "2562": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2563": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15014,
        15050
      ],
      "op": "POP",
      "path": "2"
    },
    "2564": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14992,
        15050
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2565": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14992,
        15050
      ],
      "op": "POP",
      "path": "2"
    },
    "2566": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15061,
        15067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2568": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15083,
        15089
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2569": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15079,
        15173
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2570": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15097,
        15114
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2571": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15097,
        15114
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2572": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15097,
        15118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA16"
    },
    "2575": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15097,
        15118
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2576": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15117,
        15118
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2578": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15097,
        15118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B0"
    },
    "2581": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        15097,
        15118
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2582": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15097,
        15118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2583": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15093,
        15094
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2584": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15093,
        15119
      ],
      "op": "LT",
      "path": "2"
    },
    "2585": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15079,
        15173
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2586": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15079,
        15173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA5A"
    },
    "2589": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15079,
        15173
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2590": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15156,
        15162
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 25
    },
    "2591": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15150
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2592": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15151,
        15152
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2593": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2594": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2595": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2596": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "LT",
      "path": "2"
    },
    "2597": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA30"
    },
    "2600": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2601": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA30"
    },
    "2604": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C8"
    },
    "2607": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        15148,
        15153
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2608": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2615": {
      "op": "SHL"
    },
    "2616": {
      "op": "SUB"
    },
    "2617": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15162
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2618": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15162
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2619": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15162
      ],
      "op": "AND",
      "path": "2"
    },
    "2620": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2622": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2623": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2624": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "MUL",
      "path": "2"
    },
    "2625": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2626": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2627": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2628": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "ADD",
      "path": "2"
    },
    "2629": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2630": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2631": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15153
      ],
      "op": "ADD",
      "path": "2"
    },
    "2632": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15148,
        15162
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2633": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15121,
        15124
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 26
    },
    "2634": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15121,
        15124
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA52"
    },
    "2637": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15121,
        15124
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2638": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15121,
        15124
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2262"
    },
    "2641": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        15121,
        15124
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2642": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15121,
        15124
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2643": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15121,
        15124
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2644": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15121,
        15124
      ],
      "op": "POP",
      "path": "2"
    },
    "2645": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15121,
        15124
      ],
      "op": "POP",
      "path": "2"
    },
    "2646": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15079,
        15173
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA09"
    },
    "2649": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15079,
        15173
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2650": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15079,
        15173
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2651": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15079,
        15173
      ],
      "op": "POP",
      "path": "2"
    },
    "2652": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15182,
        15240
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 27,
      "value": "0xA67"
    },
    "2655": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15200,
        15205
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2656": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15207,
        15223
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2657": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15225,
        15235
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2658": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15237,
        15239
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2659": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15182,
        15199
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEA7"
    },
    "2662": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "i",
      "offset": [
        15182,
        15240
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2663": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15182,
        15240
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2664": {
      "op": "POP"
    },
    "2665": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15257,
        15261
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 28,
      "value": "0x1"
    },
    "2667": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        15257,
        15261
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "2668": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "offset": [
        14835,
        15264
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "2669": {
      "op": "POP"
    },
    "2670": {
      "op": "POP"
    },
    "2671": {
      "op": "POP"
    },
    "2672": {
      "op": "POP"
    },
    "2673": {
      "op": "POP"
    },
    "2674": {
      "op": "POP"
    },
    "2675": {
      "op": "POP"
    },
    "2676": {
      "fn": "ForgeMining.mintTokensSameAddress",
      "jump": "o",
      "offset": [
        14835,
        15264
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2677": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2678": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2682": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2684": {
      "op": "SHL"
    },
    "2685": {
      "op": "SUB"
    },
    "2686": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23405
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 29
    },
    "2687": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23405
      ],
      "op": "AND",
      "path": "2"
    },
    "2688": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23349,
        23361
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2690": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23405
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2691": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23405
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2692": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23405
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2693": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23399
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "2695": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23405
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2697": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23405
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2698": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23405
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2700": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23405
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2701": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23405
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2702": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23405
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2703": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23417
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA98"
    },
    "2706": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2707": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23410,
        23416
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2708": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23409
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA2"
    },
    "2711": {
      "fn": "ForgeMining.transferFrom",
      "jump": "i",
      "offset": [
        23391,
        23417
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2712": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23391,
        23417
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2719": {
      "op": "SHL"
    },
    "2720": {
      "op": "SUB"
    },
    "2721": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2722": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "AND",
      "path": "2"
    },
    "2723": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2725": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2726": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2727": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2728": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "2730": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2732": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2733": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2734": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2735": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2737": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2738": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2739": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23388
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2740": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23417
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2741": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23417
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2742": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23417
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2743": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23374,
        23417
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2744": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23463
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 30,
      "value": "0x1B"
    },
    "2746": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23469
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2747": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23469
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2748": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23469
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2749": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23469
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2750": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23469
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2751": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23470,
        23480
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2752": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23481
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2753": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23481
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2754": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23481
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2755": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23481
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2756": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23481
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2757": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23481
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2758": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23493
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xACF"
    },
    "2761": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23493
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2762": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23486,
        23492
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2763": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA2"
    },
    "2766": {
      "fn": "ForgeMining.transferFrom",
      "jump": "i",
      "offset": [
        23456,
        23493
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2767": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23456,
        23493
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2774": {
      "op": "SHL"
    },
    "2775": {
      "op": "SUB"
    },
    "2776": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2777": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2778": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "AND",
      "path": "2"
    },
    "2779": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2781": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2782": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2783": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2784": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1B"
    },
    "2786": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2788": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2789": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2790": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2791": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2793": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2794": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2795": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23441
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2796": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23442,
        23452
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2797": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23453
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2798": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23453
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2799": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23453
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2800": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23453
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2801": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23453
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2802": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23453
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2803": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23453
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2804": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23493
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2805": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23493
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2806": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23493
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2807": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23428,
        23493
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2808": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23531
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 31
    },
    "2809": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23531
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2810": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23531
      ],
      "op": "AND",
      "path": "2"
    },
    "2811": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23531
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2812": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23531
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2813": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23527
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "2815": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23531
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2816": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23531
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2817": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23531
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2818": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23531
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2819": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23531
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2820": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB0D"
    },
    "2823": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23543
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2824": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23536,
        23542
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2825": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23535
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A54"
    },
    "2828": {
      "fn": "ForgeMining.transferFrom",
      "jump": "i",
      "offset": [
        23519,
        23543
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2829": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23519,
        23543
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2836": {
      "op": "SHL"
    },
    "2837": {
      "op": "SUB"
    },
    "2838": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2839": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2840": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "AND",
      "path": "2"
    },
    "2841": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2843": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2844": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2845": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2846": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23512
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "2848": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2850": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2851": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2853": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2854": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2855": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2856": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23516
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2857": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23543
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2858": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23543
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2859": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23543
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2860": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23504,
        23543
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2861": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 32
    },
    "2862": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2863": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2864": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2865": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "AND",
      "path": "2"
    },
    "2866": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2869": {
      "op": "DUP1"
    },
    "2870": {
      "op": "MLOAD"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2873": {
      "op": "PUSH2",
      "value": "0x244E"
    },
    "2876": {
      "op": "DUP4"
    },
    "2877": {
      "op": "CODECOPY"
    },
    "2878": {
      "op": "DUP2"
    },
    "2879": {
      "op": "MLOAD"
    },
    "2880": {
      "op": "SWAP2"
    },
    "2881": {
      "op": "MSTORE"
    },
    "2882": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2883": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB4F"
    },
    "2886": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2887": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23578,
        23584
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2888": {
      "op": "DUP2"
    },
    "2889": {
      "op": "MSTORE"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2892": {
      "op": "ADD"
    },
    "2893": {
      "op": "SWAP1"
    },
    "2894": {
      "op": "JUMP"
    },
    "2895": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2896": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2898": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2899": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2900": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2901": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "SUB",
      "path": "2"
    },
    "2902": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2903": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23559,
        23585
      ],
      "op": "LOG3",
      "path": "2"
    },
    "2904": {
      "op": "POP"
    },
    "2905": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23603,
        23607
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 33,
      "value": "0x1"
    },
    "2907": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2908": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2909": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "POP",
      "path": "2"
    },
    "2910": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "POP",
      "path": "2"
    },
    "2911": {
      "fn": "ForgeMining.transferFrom",
      "offset": [
        23263,
        23615
      ],
      "op": "POP",
      "path": "2"
    },
    "2912": {
      "fn": "ForgeMining.transferFrom",
      "jump": "o",
      "offset": [
        23263,
        23615
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2913": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        19943,
        20197
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2914": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        19991,
        19995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2916": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20141,
        20188
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 34,
      "value": "0x997"
    },
    "2919": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20177,
        20186
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "2921": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20177,
        20186
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2922": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20174,
        20175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2924": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20174,
        20186
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB75"
    },
    "2927": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20174,
        20186
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2928": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20174,
        20186
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2929": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20174,
        20186
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C2"
    },
    "2932": {
      "fn": "ForgeMining.getMiningReward",
      "jump": "i",
      "offset": [
        20174,
        20186
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2933": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20174,
        20186
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2934": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20148,
        20166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB81"
    },
    "2937": {
      "offset": [
        8117,
        8119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x12"
    },
    "2939": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20148,
        20150
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "2941": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20148,
        20166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C2"
    },
    "2944": {
      "fn": "ForgeMining.getMiningReward",
      "jump": "i",
      "offset": [
        20148,
        20166
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2945": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20148,
        20166
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2946": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20142,
        20166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x726"
    },
    "2949": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20142,
        20166
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2950": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20142,
        20145
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x96"
    },
    "2952": {
      "fn": "ForgeMining.getMiningReward",
      "offset": [
        20142,
        20166
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "2955": {
      "fn": "ForgeMining.getMiningReward",
      "jump": "i",
      "offset": [
        20142,
        20166
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2956": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8188,
        9271
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2957": {
      "offset": [
        3088,
        3093
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2959": {
      "fn": "ForgeMining.zinit",
      "offset": [
        3088,
        3093
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2966": {
      "op": "SHL"
    },
    "2967": {
      "op": "SUB"
    },
    "2968": {
      "offset": [
        3088,
        3093
      ],
      "op": "AND",
      "path": "2"
    },
    "2969": {
      "offset": [
        3074,
        3084
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2970": {
      "offset": [
        3074,
        3093
      ],
      "op": "EQ",
      "path": "2"
    },
    "2971": {
      "offset": [
        3066,
        3108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBD3"
    },
    "2974": {
      "offset": [
        3066,
        3108
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2975": {
      "fn": "ForgeMining.zinit",
      "offset": [
        3066,
        3108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2977": {
      "fn": "ForgeMining.zinit",
      "offset": [
        3066,
        3108
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2978": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2984": {
      "op": "SHL"
    },
    "2985": {
      "offset": [
        3066,
        3108
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2986": {
      "fn": "ForgeMining.zinit",
      "offset": [
        3066,
        3108
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2989": {
      "offset": [
        3066,
        3108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2991": {
      "fn": "ForgeMining.zinit",
      "offset": [
        3066,
        3108
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2992": {
      "fn": "ForgeMining.zinit",
      "offset": [
        3066,
        3108
      ],
      "op": "ADD",
      "path": "2"
    },
    "2993": {
      "op": "MSTORE"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2998": {
      "op": "DUP3"
    },
    "2999": {
      "op": "ADD"
    },
    "3000": {
      "op": "MSTORE"
    },
    "3001": {
      "op": "PUSH10",
      "value": "0x37B7363C9037BBB732B9"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3014": {
      "op": "SHL"
    },
    "3015": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3017": {
      "op": "DUP3"
    },
    "3018": {
      "op": "ADD"
    },
    "3019": {
      "op": "MSTORE"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3022": {
      "op": "ADD"
    },
    "3023": {
      "offset": [
        3066,
        3108
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x923"
    },
    "3026": {
      "op": "JUMP"
    },
    "3027": {
      "offset": [
        3066,
        3108
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3028": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8298,
        8304
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3030": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8346,
        8360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3032": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8346,
        8360
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3033": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8341,
        8342
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3035": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8341,
        8360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBE4"
    },
    "3038": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8341,
        8360
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3039": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8341,
        8360
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3040": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8341,
        8360
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C2"
    },
    "3043": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8341,
        8360
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3044": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8341,
        8360
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3045": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8337,
        8361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBEF"
    },
    "3048": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8337,
        8361
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3049": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8337,
        8338
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3051": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8337,
        8361
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "3054": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8337,
        8361
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3055": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8337,
        8361
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3056": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8307,
        8362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC04"
    },
    "3059": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8307,
        8362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3060": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8307,
        8333
      ],
      "op": "PUSH11",
      "path": "2",
      "value": "0x115EEC47F6CF7E35000000"
    },
    "3072": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8307,
        8362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23E4"
    },
    "3075": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8307,
        8362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3076": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8307,
        8362
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3077": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8441,
        8447
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 35,
      "value": "0x20"
    },
    "3079": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8441,
        8447
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3080": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8298,
        8362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3081": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8298,
        8362
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3082": {
      "op": "POP"
    },
    "3083": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8441,
        8447
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "3085": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8441,
        8447
      ],
      "op": "AND",
      "path": "2"
    },
    "3086": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8440,
        8447
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3087": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8433,
        8448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1A"
    },
    "3090": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8433,
        8448
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3091": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8433,
        8448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1A"
    },
    "3094": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8433,
        8448
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x229A"
    },
    "3097": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8433,
        8448
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3098": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8433,
        8448
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3099": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8458,
        8464
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 36,
      "value": "0x20"
    },
    "3101": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8458,
        8471
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3102": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8458,
        8471
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3103": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3105": {
      "op": "NOT"
    },
    "3106": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8458,
        8471
      ],
      "op": "AND",
      "path": "2"
    },
    "3107": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8467,
        8471
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3109": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8458,
        8471
      ],
      "op": "OR",
      "path": "2"
    },
    "3110": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8458,
        8471
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3111": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8458,
        8471
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3112": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8458,
        8464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3114": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8480,
        8489
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0xD"
    },
    "3116": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8480,
        8493
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3117": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8480,
        8493
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3118": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8480,
        8493
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3119": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8496,
        8508
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 38,
      "value": "0x19"
    },
    "3121": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8496,
        8512
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3122": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8604,
        8619
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 39,
      "value": "0xA"
    },
    "3124": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8604,
        8619
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3125": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8604,
        8629
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC40"
    },
    "3128": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8604,
        8629
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3129": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8624,
        8628
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E9"
    },
    "3132": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8604,
        8623
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1854"
    },
    "3135": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8604,
        8629
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3136": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8604,
        8629
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3137": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8589,
        8601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "3139": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8589,
        8629
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3140": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8766,
        8788
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 40,
      "value": "0xC4B"
    },
    "3143": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8766,
        8786
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A2"
    },
    "3146": {
      "fn": "ForgeMining.zinit",
      "jump": "i",
      "offset": [
        8766,
        8788
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3147": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8766,
        8788
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "op": "SUB"
    },
    "3156": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 41
    },
    "3157": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "AND",
      "path": "2"
    },
    "3158": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3160": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3161": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3162": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3163": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8862
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "3165": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3167": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3168": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3169": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3170": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3172": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3173": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3174": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8879
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3175": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8883
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3176": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8883
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3177": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8854,
        8883
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3178": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8898,
        8938
      ],
      "op": "MLOAD",
      "path": "2",
      "statement": 42
    },
    "3179": {
      "op": "DUP5"
    },
    "3180": {
      "op": "DUP2"
    },
    "3181": {
      "op": "MSTORE"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3184": {
      "op": "DUP1"
    },
    "3185": {
      "op": "MLOAD"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3188": {
      "op": "PUSH2",
      "value": "0x244E"
    },
    "3191": {
      "op": "DUP4"
    },
    "3192": {
      "op": "CODECOPY"
    },
    "3193": {
      "op": "DUP2"
    },
    "3194": {
      "op": "MLOAD"
    },
    "3195": {
      "op": "SWAP2"
    },
    "3196": {
      "op": "MSTORE"
    },
    "3197": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8898,
        8938
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3198": {
      "op": "ADD"
    },
    "3199": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8898,
        8938
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3201": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8898,
        8938
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3202": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8898,
        8938
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3203": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8898,
        8938
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3204": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8898,
        8938
      ],
      "op": "SUB",
      "path": "2"
    },
    "3205": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8898,
        8938
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3206": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8898,
        8938
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3207": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8959
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 43,
      "value": "0x1"
    },
    "3209": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3210": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8977
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3215": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3217": {
      "op": "SHL"
    },
    "3218": {
      "op": "SUB"
    },
    "3219": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8977
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3220": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8977
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3221": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8977
      ],
      "op": "AND",
      "path": "2"
    },
    "3222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3228": {
      "op": "SHL"
    },
    "3229": {
      "op": "SUB"
    },
    "3230": {
      "op": "NOT"
    },
    "3231": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8977
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3232": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8977
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3233": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8977
      ],
      "op": "AND",
      "path": "2"
    },
    "3234": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8977
      ],
      "op": "OR",
      "path": "2"
    },
    "3235": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8977
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3236": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8977
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3237": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8977
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3238": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8989,
        9004
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 44,
      "value": "0x2"
    },
    "3240": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8989,
        9024
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3241": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8989,
        9024
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3242": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8989,
        9024
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3243": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8989,
        9024
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3244": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8989,
        9024
      ],
      "op": "AND",
      "path": "2"
    },
    "3245": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8989,
        9024
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3246": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8989,
        9024
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3247": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8989,
        9024
      ],
      "op": "AND",
      "path": "2"
    },
    "3248": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8989,
        9024
      ],
      "op": "OR",
      "path": "2"
    },
    "3249": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8989,
        9024
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3250": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8989,
        9024
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3251": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9049
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 45,
      "value": "0x3"
    },
    "3253": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3254": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3255": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3256": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3257": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "AND",
      "path": "2"
    },
    "3258": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3259": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3260": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3261": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "AND",
      "path": "2"
    },
    "3262": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3263": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3264": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3265": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "OR",
      "path": "2"
    },
    "3266": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3267": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9034,
        9068
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3268": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9090,
        9100
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 46,
      "value": "0x7"
    },
    "3270": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9090,
        9100
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3271": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9078,
        9087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "3273": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9078,
        9100
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3274": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9156,
        9166
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 47
    },
    "3275": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8945,
        8959
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3277": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9167
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3278": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9167
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3279": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9167
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3280": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9155
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "3282": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3284": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9167
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3285": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9167
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3287": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9167
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3288": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9167
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3289": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9167
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3290": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9170,
        9179
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x5F5E100"
    },
    "3295": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9179
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3296": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9179
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3297": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9179
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3298": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9147,
        9179
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3299": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9194,
        9237
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 48
    },
    "3300": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9194,
        9237
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3303": {
      "op": "DUP1"
    },
    "3304": {
      "op": "MLOAD"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3307": {
      "op": "PUSH2",
      "value": "0x244E"
    },
    "3310": {
      "op": "DUP4"
    },
    "3311": {
      "op": "CODECOPY"
    },
    "3312": {
      "op": "DUP2"
    },
    "3313": {
      "op": "MLOAD"
    },
    "3314": {
      "op": "SWAP2"
    },
    "3315": {
      "op": "MSTORE"
    },
    "3316": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9194,
        9237
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3317": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9194,
        9237
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD01"
    },
    "3320": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9194,
        9237
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3321": {
      "op": "SWAP1"
    },
    "3322": {
      "op": "DUP2"
    },
    "3323": {
      "op": "MSTORE"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3326": {
      "op": "ADD"
    },
    "3327": {
      "op": "SWAP1"
    },
    "3328": {
      "op": "JUMP"
    },
    "3329": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9194,
        9237
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3330": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9194,
        9237
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3332": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9194,
        9237
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3333": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9194,
        9237
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3334": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9194,
        9237
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3335": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9194,
        9237
      ],
      "op": "SUB",
      "path": "2"
    },
    "3336": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9194,
        9237
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3337": {
      "fn": "ForgeMining.zinit",
      "offset": [
        9194,
        9237
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3338": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8288,
        9271
      ],
      "op": "POP",
      "path": "2"
    },
    "3339": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8188,
        9271
      ],
      "op": "POP",
      "path": "2"
    },
    "3340": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8188,
        9271
      ],
      "op": "POP",
      "path": "2"
    },
    "3341": {
      "fn": "ForgeMining.zinit",
      "offset": [
        8188,
        9271
      ],
      "op": "POP",
      "path": "2"
    },
    "3342": {
      "fn": "ForgeMining.zinit",
      "jump": "o",
      "offset": [
        8188,
        9271
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3343": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        18884,
        19238
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3344": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19016,
        19028
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3346": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19041,
        19055
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3347": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19093,
        19109
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3348": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19110,
        19120
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3349": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19121,
        19126
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3350": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3352": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3353": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3355": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "ADD",
      "path": "2"
    },
    "3356": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD27"
    },
    "3359": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3360": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3361": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3362": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3363": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23F8"
    },
    "3366": {
      "fn": "ForgeMining.checkMintSolution",
      "jump": "i",
      "offset": [
        19076,
        19127
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3367": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3368": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3370": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3371": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3373": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3374": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3375": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "SUB",
      "path": "2"
    },
    "3376": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "SUB",
      "path": "2"
    },
    "3377": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3378": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3379": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3380": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3382": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19076,
        19127
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3383": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19066,
        19128
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3384": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19066,
        19128
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3385": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19066,
        19128
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3386": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19066,
        19128
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3388": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19066,
        19128
      ],
      "op": "ADD",
      "path": "2"
    },
    "3389": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19066,
        19128
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3390": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19041,
        19129
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3391": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19041,
        19129
      ],
      "op": "POP",
      "path": "2"
    },
    "3392": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19161,
        19171
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3393": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19151,
        19157
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3394": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19143,
        19158
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3396": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19143,
        19158
      ],
      "op": "SHR",
      "path": "2"
    },
    "3397": {
      "branch": 121,
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19143,
        19171
      ],
      "op": "GT",
      "path": "2"
    },
    "3398": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19140,
        19181
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3399": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19140,
        19181
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD4F"
    },
    "3402": {
      "branch": 121,
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19140,
        19181
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3403": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19173,
        19181
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 49,
      "value": "0x0"
    },
    "3405": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19173,
        19181
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3406": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19173,
        19181
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3407": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19140,
        19181
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3408": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19200,
        19226
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 50
    },
    "3409": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19200,
        19226
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3410": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19200,
        19226
      ],
      "op": "EQ",
      "path": "2"
    },
    "3411": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        19200,
        19226
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3412": {
      "fn": "ForgeMining.checkMintSolution",
      "offset": [
        18884,
        19238
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3413": {
      "op": "POP"
    },
    "3414": {
      "op": "POP"
    },
    "3415": {
      "op": "POP"
    },
    "3416": {
      "op": "POP"
    },
    "3417": {
      "fn": "ForgeMining.checkMintSolution",
      "jump": "o",
      "offset": [
        18884,
        19238
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3418": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24422,
        24634
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3425": {
      "op": "SHL"
    },
    "3426": {
      "op": "SUB"
    },
    "3427": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24542,
        24564
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 51
    },
    "3428": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24542,
        24564
      ],
      "op": "AND",
      "path": "2"
    },
    "3429": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24559,
        24563
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "3430": {
      "branch": 122,
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24542,
        24564
      ],
      "op": "EQ",
      "path": "2"
    },
    "3431": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24534,
        24565
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD6F"
    },
    "3434": {
      "branch": 122,
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24534,
        24565
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3435": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24534,
        24565
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3437": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24534,
        24565
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3438": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24534,
        24565
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3439": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24534,
        24565
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3440": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 52,
      "value": "0x40"
    },
    "3442": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3443": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3450": {
      "op": "SHL"
    },
    "3451": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3452": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3459": {
      "op": "SHL"
    },
    "3460": {
      "op": "SUB"
    },
    "3461": {
      "op": "DUP6"
    },
    "3462": {
      "op": "AND"
    },
    "3463": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3465": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3466": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "ADD",
      "path": "2"
    },
    "3467": {
      "op": "MSTORE"
    },
    "3468": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3470": {
      "op": "DUP2"
    },
    "3471": {
      "op": "ADD"
    },
    "3472": {
      "op": "DUP5"
    },
    "3473": {
      "op": "SWAP1"
    },
    "3474": {
      "op": "MSTORE"
    },
    "3475": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24596,
        24600
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "3476": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24596,
        24600
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3477": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24611
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "3482": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24611
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3485": {
      "op": "ADD"
    },
    "3486": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3488": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3490": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3491": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3492": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3493": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "SUB",
      "path": "2"
    },
    "3494": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3495": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3497": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3498": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "GAS",
      "path": "2"
    },
    "3499": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "CALL",
      "path": "2"
    },
    "3500": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3501": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3502": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3503": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDBC"
    },
    "3506": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3507": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3508": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3510": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3511": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3512": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3513": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3515": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3516": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3517": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "POP",
      "path": "2"
    },
    "3518": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "POP",
      "path": "2"
    },
    "3519": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "POP",
      "path": "2"
    },
    "3520": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "POP",
      "path": "2"
    },
    "3521": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3523": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3524": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3525": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3527": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "NOT",
      "path": "2"
    },
    "3528": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3530": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3531": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "ADD",
      "path": "2"
    },
    "3532": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "AND",
      "path": "2"
    },
    "3533": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3534": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "ADD",
      "path": "2"
    },
    "3535": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3536": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3538": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3539": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "POP",
      "path": "2"
    },
    "3540": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3541": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "ADD",
      "path": "2"
    },
    "3542": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3543": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDE0"
    },
    "3546": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3547": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3548": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x227D"
    },
    "3551": {
      "fn": "ForgeMining.receiveApproval",
      "jump": "i",
      "offset": [
        24581,
        24625
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3552": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3553": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24581,
        24625
      ],
      "op": "POP",
      "path": "2"
    },
    "3554": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24422,
        24634
      ],
      "op": "POP",
      "path": "2"
    },
    "3555": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24422,
        24634
      ],
      "op": "POP",
      "path": "2"
    },
    "3556": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24422,
        24634
      ],
      "op": "POP",
      "path": "2"
    },
    "3557": {
      "fn": "ForgeMining.receiveApproval",
      "offset": [
        24422,
        24634
      ],
      "op": "POP",
      "path": "2"
    },
    "3558": {
      "fn": "ForgeMining.receiveApproval",
      "jump": "o",
      "offset": [
        24422,
        24634
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3559": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20564,
        20825
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3560": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20675,
        20693
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3562": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20710,
        20724
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3563": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20755,
        20770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "3565": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20755,
        20770
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3566": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20772,
        20782
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3567": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20784,
        20789
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3568": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3570": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3571": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3573": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "ADD",
      "path": "2"
    },
    "3574": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE01"
    },
    "3577": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3578": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3579": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3580": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3581": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23F8"
    },
    "3584": {
      "fn": "ForgeMining.getMintDigest",
      "jump": "i",
      "offset": [
        20738,
        20790
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3585": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3586": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3588": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3589": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3590": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3591": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3592": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "SUB",
      "path": "2"
    },
    "3593": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3595": {
      "op": "NOT"
    },
    "3596": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "ADD",
      "path": "2"
    },
    "3597": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3598": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3599": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3600": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3601": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3602": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20728,
        20791
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3603": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20728,
        20791
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3604": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20738,
        20790
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3606": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20728,
        20791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3607": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20728,
        20791
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3608": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20728,
        20791
      ],
      "op": "ADD",
      "path": "2"
    },
    "3609": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20728,
        20791
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3610": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20728,
        20791
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "3611": {
      "fn": "ForgeMining.getMintDigest",
      "offset": [
        20564,
        20825
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3612": {
      "op": "POP"
    },
    "3613": {
      "op": "POP"
    },
    "3614": {
      "op": "POP"
    },
    "3615": {
      "op": "POP"
    },
    "3616": {
      "op": "POP"
    },
    "3617": {
      "fn": "ForgeMining.getMintDigest",
      "jump": "o",
      "offset": [
        20564,
        20825
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3618": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21715,
        21991
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3619": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21840,
        21850
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 53
    },
    "3620": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21783,
        21795
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3622": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21851
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3623": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3624": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3625": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "3627": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3629": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21851
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3630": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21851
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3632": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21851
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3633": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21851
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3634": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21851
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3635": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21863
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE3C"
    },
    "3638": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3639": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21856,
        21862
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3640": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA2"
    },
    "3643": {
      "fn": "ForgeMining.transfer",
      "jump": "i",
      "offset": [
        21831,
        21863
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3644": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21831,
        21863
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3645": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21817,
        21827
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3646": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3648": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21828
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3649": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21828
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3650": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21828
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3651": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21816
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "3653": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3655": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21828
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3656": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21828
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3658": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21828
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3659": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21828
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3660": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21828
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3661": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21863
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3662": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21863
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3663": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21863
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3664": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21808,
        21863
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3669": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3671": {
      "op": "SHL"
    },
    "3672": {
      "op": "SUB"
    },
    "3673": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21889,
        21901
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 54
    },
    "3674": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21889,
        21901
      ],
      "op": "AND",
      "path": "2"
    },
    "3675": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21889,
        21901
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3676": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21889,
        21901
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3677": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21889,
        21901
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3678": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21889,
        21901
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3679": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21889,
        21913
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE68"
    },
    "3682": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21889,
        21913
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3683": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21906,
        21912
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3684": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21889,
        21905
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A54"
    },
    "3687": {
      "fn": "ForgeMining.transfer",
      "jump": "i",
      "offset": [
        21889,
        21913
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3688": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21889,
        21913
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3695": {
      "op": "SHL"
    },
    "3696": {
      "op": "SUB"
    },
    "3697": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21886
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3698": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21886
      ],
      "op": "AND",
      "path": "2"
    },
    "3699": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3701": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21886
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3702": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21886
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3703": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21886
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3704": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21882
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "3706": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3708": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21886
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3709": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21886
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3711": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21886
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3712": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21886
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3713": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21886
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3714": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21886
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3715": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21913
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3716": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21913
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3717": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21913
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3718": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21874,
        21913
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3719": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21929,
        21961
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 55
    },
    "3720": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21929,
        21961
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3721": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21938,
        21948
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3722": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21938,
        21948
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3725": {
      "op": "DUP1"
    },
    "3726": {
      "op": "MLOAD"
    },
    "3727": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3729": {
      "op": "PUSH2",
      "value": "0x244E"
    },
    "3732": {
      "op": "DUP4"
    },
    "3733": {
      "op": "CODECOPY"
    },
    "3734": {
      "op": "DUP2"
    },
    "3735": {
      "op": "MLOAD"
    },
    "3736": {
      "op": "SWAP2"
    },
    "3737": {
      "op": "MSTORE"
    },
    "3738": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21929,
        21961
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3739": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21929,
        21961
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6CE"
    },
    "3742": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21929,
        21961
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3743": {
      "fn": "ForgeMining.transfer",
      "offset": [
        21954,
        21960
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3744": {
      "op": "DUP2"
    },
    "3745": {
      "op": "MSTORE"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3748": {
      "op": "ADD"
    },
    "3749": {
      "op": "SWAP1"
    },
    "3750": {
      "op": "JUMP"
    },
    "3751": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13129,
        14827
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3752": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13336,
        13353
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x11"
    },
    "3754": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13336,
        13353
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3755": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13267,
        13279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3757": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13267,
        13279
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3758": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13295,
        13296
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3760": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13295,
        13296
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3761": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13267,
        13279
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3762": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13267,
        13279
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3763": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13318,
        13353
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEBC"
    },
    "3766": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13318,
        13353
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3767": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13318,
        13333
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "3768": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13318,
        13353
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222C"
    },
    "3771": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13318,
        13353
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3772": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13318,
        13353
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3773": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13306,
        13353
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3774": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13306,
        13353
      ],
      "op": "POP",
      "path": "2"
    },
    "3775": {
      "offset": [
        5902,
        5909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x870"
    },
    "3778": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13360,
        13364
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3779": {
      "branch": 123,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13360,
        13378
      ],
      "op": "GT",
      "path": "2"
    },
    "3780": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13357,
        13489
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3781": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13357,
        13489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF04"
    },
    "3784": {
      "branch": 123,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13357,
        13489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3785": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13396,
        13397
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 56,
      "value": "0x4"
    },
    "3787": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13391,
        13397
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3788": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13391,
        13397
      ],
      "op": "POP",
      "path": "2"
    },
    "3789": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13387,
        13485
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3790": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13403,
        13405
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "3792": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13399,
        13401
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3793": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13399,
        13405
      ],
      "op": "LT",
      "path": "2"
    },
    "3794": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13387,
        13485
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3795": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13387,
        13485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF04"
    },
    "3798": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13387,
        13485
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3799": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13428,
        13452
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEE7"
    },
    "3802": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13450,
        13451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "3804": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13429,
        13444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x726"
    },
    "3807": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13442,
        13444
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3808": {
      "offset": [
        5902,
        5909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x870"
    },
    "3811": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13429,
        13444
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "3814": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13429,
        13444
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3815": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13428,
        13452
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3816": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13420,
        13424
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3817": {
      "branch": 124,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13420,
        13452
      ],
      "op": "GT",
      "path": "2"
    },
    "3818": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13417,
        13471
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF2"
    },
    "3821": {
      "branch": 124,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13417,
        13471
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3822": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13460,
        13465
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 57,
      "value": "0xF04"
    },
    "3825": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13460,
        13465
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3826": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13417,
        13471
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3827": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13407,
        13411
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 58
    },
    "3828": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13407,
        13411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEFC"
    },
    "3831": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13407,
        13411
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3832": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13407,
        13411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2262"
    },
    "3835": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13407,
        13411
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3836": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13407,
        13411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3837": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13407,
        13411
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3838": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13407,
        13411
      ],
      "op": "POP",
      "path": "2"
    },
    "3839": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13407,
        13411
      ],
      "op": "POP",
      "path": "2"
    },
    "3840": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13387,
        13485
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xECD"
    },
    "3843": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13387,
        13485
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3844": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13387,
        13485
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3845": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13523,
        13540
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 59
    },
    "3846": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13523,
        13540
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3847": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13523,
        13544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF11"
    },
    "3850": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13523,
        13544
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3851": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13543,
        13544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3853": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13523,
        13544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B0"
    },
    "3856": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13523,
        13544
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3857": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13523,
        13544
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3858": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13506,
        13512
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3859": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13506,
        13519
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3860": {
      "branch": 125,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13506,
        13544
      ],
      "op": "EQ",
      "path": "2"
    },
    "3861": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13498,
        13609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF86"
    },
    "3864": {
      "branch": 125,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13498,
        13609
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3865": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13498,
        13609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3867": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13498,
        13609
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3868": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3874": {
      "op": "SHL"
    },
    "3875": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13498,
        13609
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3876": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13498,
        13609
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3879": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13498,
        13609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3881": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13498,
        13609
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3882": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13498,
        13609
      ],
      "op": "ADD",
      "path": "2"
    },
    "3883": {
      "op": "MSTORE"
    },
    "3884": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "3886": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3888": {
      "op": "DUP3"
    },
    "3889": {
      "op": "ADD"
    },
    "3890": {
      "op": "MSTORE"
    },
    "3891": {
      "op": "PUSH32",
      "value": "0x536F204D696E74546F2068617320746F20686176652073616D65206E756D6265"
    },
    "3924": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3926": {
      "op": "DUP3"
    },
    "3927": {
      "op": "ADD"
    },
    "3928": {
      "op": "MSTORE"
    },
    "3929": {
      "op": "PUSH32",
      "value": "0x72206F66206164647265737373657320617320457874726146756E6473000000"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3964": {
      "op": "DUP3"
    },
    "3965": {
      "op": "ADD"
    },
    "3966": {
      "op": "MSTORE"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3969": {
      "op": "ADD"
    },
    "3970": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13498,
        13609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x923"
    },
    "3973": {
      "op": "JUMP"
    },
    "3974": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13498,
        13609
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3975": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13622,
        13628
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3977": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13618,
        13966
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3978": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13635,
        13645
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3979": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13635,
        13652
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3980": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13632,
        13633
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3981": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13632,
        13652
      ],
      "op": "LT",
      "path": "2"
    },
    "3982": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13618,
        13966
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3983": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13618,
        13966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x111A"
    },
    "3986": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13618,
        13966
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3987": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13710,
        13714
      ],
      "op": "ADDRESS",
      "path": "2",
      "statement": 60
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3994": {
      "op": "SHL"
    },
    "3995": {
      "op": "SUB"
    },
    "3996": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13715
      ],
      "op": "AND",
      "path": "2"
    },
    "3997": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13695
      ],
      "op": "DUP7",
      "path": "2"
    },
    "3998": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13696,
        13697
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3999": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4000": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4001": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4002": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "LT",
      "path": "2"
    },
    "4003": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFAE"
    },
    "4006": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4007": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFAE"
    },
    "4010": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C8"
    },
    "4013": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13685,
        13698
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4014": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4015": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4017": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "MUL",
      "path": "2"
    },
    "4018": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4020": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "ADD",
      "path": "2"
    },
    "4021": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "ADD",
      "path": "2"
    },
    "4022": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13698
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4029": {
      "op": "SHL"
    },
    "4030": {
      "op": "SUB"
    },
    "4031": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13715
      ],
      "op": "AND",
      "path": "2"
    },
    "4032": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13715
      ],
      "op": "EQ",
      "path": "2"
    },
    "4033": {
      "branch": 126,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13715
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4034": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13751
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4035": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13751
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4036": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13751
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFF"
    },
    "4039": {
      "branch": 126,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13751
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4040": {
      "op": "POP"
    },
    "4041": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13736,
        13751
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4043": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13736,
        13751
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4044": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4045": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4052": {
      "op": "SHL"
    },
    "4053": {
      "op": "SUB"
    },
    "4054": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13736,
        13751
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4055": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13736,
        13751
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4056": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13736,
        13751
      ],
      "op": "AND",
      "path": "2"
    },
    "4057": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13736,
        13751
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4058": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13729
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4059": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13729
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4060": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13730,
        13731
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4061": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13730,
        13731
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4062": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4063": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "LT",
      "path": "2"
    },
    "4064": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFEB"
    },
    "4067": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4068": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFEB"
    },
    "4071": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C8"
    },
    "4074": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13719,
        13732
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4075": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4076": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4078": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "MUL",
      "path": "2"
    },
    "4079": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4081": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "ADD",
      "path": "2"
    },
    "4082": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "ADD",
      "path": "2"
    },
    "4083": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13732
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4090": {
      "op": "SHL"
    },
    "4091": {
      "op": "SUB"
    },
    "4092": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13751
      ],
      "op": "AND",
      "path": "2"
    },
    "4093": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13751
      ],
      "op": "EQ",
      "path": "2"
    },
    "4094": {
      "branch": 127,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13719,
        13751
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4095": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13685,
        13751
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4096": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13677,
        13782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104B"
    },
    "4099": {
      "branch": 127,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13677,
        13782
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4100": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13677,
        13782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4102": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13677,
        13782
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4103": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4109": {
      "op": "SHL"
    },
    "4110": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13677,
        13782
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4111": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13677,
        13782
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4114": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13677,
        13782
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4116": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13677,
        13782
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4117": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13677,
        13782
      ],
      "op": "ADD",
      "path": "2"
    },
    "4118": {
      "op": "MSTORE"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4121": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4123": {
      "op": "DUP3"
    },
    "4124": {
      "op": "ADD"
    },
    "4125": {
      "op": "MSTORE"
    },
    "4126": {
      "op": "PUSH32",
      "value": "0x4E6F2062617365207072696E74696E67206F6620746F6B656E73000000000000"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4161": {
      "op": "DUP3"
    },
    "4162": {
      "op": "ADD"
    },
    "4163": {
      "op": "MSTORE"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4166": {
      "op": "ADD"
    },
    "4167": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13677,
        13782
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x923"
    },
    "4170": {
      "op": "JUMP"
    },
    "4171": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13677,
        13782
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4172": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13816,
        13817
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4174": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13805,
        13958
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4175": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13822,
        13832
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4176": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13822,
        13839
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4177": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13819,
        13820
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4178": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13819,
        13839
      ],
      "op": "LT",
      "path": "2"
    },
    "4179": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13805,
        13958
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4180": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13805,
        13958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1107"
    },
    "4183": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13805,
        13958
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4184": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13898
      ],
      "op": "DUP7",
      "path": "2",
      "statement": 61
    },
    "4185": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13899,
        13900
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4186": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4187": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4188": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4189": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "LT",
      "path": "2"
    },
    "4190": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1069"
    },
    "4193": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4194": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1069"
    },
    "4197": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C8"
    },
    "4200": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13888,
        13901
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4201": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4202": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4204": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "MUL",
      "path": "2"
    },
    "4205": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4207": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "ADD",
      "path": "2"
    },
    "4208": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "ADD",
      "path": "2"
    },
    "4209": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13888,
        13901
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4216": {
      "op": "SHL"
    },
    "4217": {
      "op": "SUB"
    },
    "4218": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13901
      ],
      "op": "AND",
      "path": "2"
    },
    "4219": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13881
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4220": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13882,
        13883
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4221": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4222": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4223": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4224": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "LT",
      "path": "2"
    },
    "4225": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x108C"
    },
    "4228": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4229": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x108C"
    },
    "4232": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C8"
    },
    "4235": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13871,
        13884
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4236": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4237": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4239": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "MUL",
      "path": "2"
    },
    "4240": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4242": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "ADD",
      "path": "2"
    },
    "4243": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "ADD",
      "path": "2"
    },
    "4244": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13884
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4251": {
      "op": "SHL"
    },
    "4252": {
      "op": "SUB"
    },
    "4253": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13901
      ],
      "op": "AND",
      "path": "2"
    },
    "4254": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13901
      ],
      "op": "EQ",
      "path": "2"
    },
    "4255": {
      "branch": 128,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13901
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4256": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13911
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4257": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13911
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10A9"
    },
    "4260": {
      "branch": 128,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13911
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4261": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13911
      ],
      "op": "POP",
      "path": "2"
    },
    "4262": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13910,
        13911
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4263": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13905,
        13906
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4264": {
      "branch": 129,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13905,
        13911
      ],
      "op": "EQ",
      "path": "2"
    },
    "4265": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13871,
        13911
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4266": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13863,
        13943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10F5"
    },
    "4269": {
      "branch": 129,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13863,
        13943
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4270": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13863,
        13943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4272": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13863,
        13943
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4273": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4279": {
      "op": "SHL"
    },
    "4280": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13863,
        13943
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4281": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13863,
        13943
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4284": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13863,
        13943
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4286": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13863,
        13943
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4287": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13863,
        13943
      ],
      "op": "ADD",
      "path": "2"
    },
    "4288": {
      "op": "MSTORE"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4293": {
      "op": "DUP3"
    },
    "4294": {
      "op": "ADD"
    },
    "4295": {
      "op": "MSTORE"
    },
    "4296": {
      "op": "PUSH32",
      "value": "0x4E6F207072696E74696E67205468652073616D6520746F6B656E730000000000"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4331": {
      "op": "DUP3"
    },
    "4332": {
      "op": "ADD"
    },
    "4333": {
      "op": "MSTORE"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4336": {
      "op": "ADD"
    },
    "4337": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13863,
        13943
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x923"
    },
    "4340": {
      "op": "JUMP"
    },
    "4341": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13863,
        13943
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4342": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13841,
        13844
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 62
    },
    "4343": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13841,
        13844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10FF"
    },
    "4346": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13841,
        13844
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4347": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13841,
        13844
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2262"
    },
    "4350": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13841,
        13844
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4351": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13841,
        13844
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4352": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13841,
        13844
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4353": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13841,
        13844
      ],
      "op": "POP",
      "path": "2"
    },
    "4354": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13841,
        13844
      ],
      "op": "POP",
      "path": "2"
    },
    "4355": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13805,
        13958
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104E"
    },
    "4358": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13805,
        13958
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4359": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13805,
        13958
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4360": {
      "op": "POP"
    },
    "4361": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13654,
        13657
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 63
    },
    "4362": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13654,
        13657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1112"
    },
    "4365": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13654,
        13657
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4366": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13654,
        13657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2262"
    },
    "4369": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13654,
        13657
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4370": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13654,
        13657
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4371": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13654,
        13657
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4372": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13654,
        13657
      ],
      "op": "POP",
      "path": "2"
    },
    "4373": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13654,
        13657
      ],
      "op": "POP",
      "path": "2"
    },
    "4374": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13618,
        13966
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF89"
    },
    "4377": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13618,
        13966
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4378": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13618,
        13966
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4379": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13618,
        13966
      ],
      "op": "POP",
      "path": "2"
    },
    "4380": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13981,
        14022
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 64,
      "value": "0x1140"
    },
    "4383": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13988,
        13993
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4384": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13994,
        14010
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4385": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14018
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4386": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14019,
        14020
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4388": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4389": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4390": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4391": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "LT",
      "path": "2"
    },
    "4392": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1133"
    },
    "4395": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4396": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1133"
    },
    "4399": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C8"
    },
    "4402": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14012,
        14021
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4403": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4404": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4406": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "MUL",
      "path": "2"
    },
    "4407": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4409": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "ADD",
      "path": "2"
    },
    "4410": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "ADD",
      "path": "2"
    },
    "4411": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14012,
        14021
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4412": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13981,
        13987
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1556"
    },
    "4415": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        13981,
        14022
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4416": {
      "branch": 130,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13981,
        14022
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4417": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13973,
        14037
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1179"
    },
    "4420": {
      "branch": 130,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13973,
        14037
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4421": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13973,
        14037
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4423": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13973,
        14037
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4424": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4430": {
      "op": "SHL"
    },
    "4431": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13973,
        14037
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4432": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13973,
        14037
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4435": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13973,
        14037
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4437": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13973,
        14037
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4438": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13973,
        14037
      ],
      "op": "ADD",
      "path": "2"
    },
    "4439": {
      "op": "MSTORE"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0xA"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4444": {
      "op": "DUP3"
    },
    "4445": {
      "op": "ADD"
    },
    "4446": {
      "op": "MSTORE"
    },
    "4447": {
      "op": "PUSH10",
      "value": "0x6D696E74206973737565"
    },
    "4458": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "4460": {
      "op": "SHL"
    },
    "4461": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4463": {
      "op": "DUP3"
    },
    "4464": {
      "op": "ADD"
    },
    "4465": {
      "op": "MSTORE"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4468": {
      "op": "ADD"
    },
    "4469": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13973,
        14037
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x923"
    },
    "4472": {
      "op": "JUMP"
    },
    "4473": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13973,
        14037
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4474": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14049,
        14059
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4476": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14071,
        14077
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4477": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14067,
        14720
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4478": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14083,
        14093
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4479": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14083,
        14100
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4480": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14081,
        14082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4481": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14081,
        14100
      ],
      "op": "LT",
      "path": "2"
    },
    "4482": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14067,
        14720
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4483": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14067,
        14720
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1368"
    },
    "4486": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14067,
        14720
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4487": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14172,
        14175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1191"
    },
    "4490": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14172,
        14173
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4491": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14174,
        14175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4493": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14172,
        14175
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B0"
    },
    "4496": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14172,
        14175
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4497": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14172,
        14175
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4498": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14168,
        14176
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x119C"
    },
    "4501": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14168,
        14176
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4502": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14168,
        14169
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4504": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14168,
        14176
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C2"
    },
    "4507": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14168,
        14176
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4508": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14168,
        14176
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4509": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14154,
        14164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4511": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14154,
        14164
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4512": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14154,
        14177
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11A9"
    },
    "4515": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14154,
        14177
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4516": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14154,
        14177
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4517": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14154,
        14177
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2420"
    },
    "4520": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14154,
        14177
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4521": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14154,
        14177
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4522": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14151,
        14700
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1356"
    },
    "4525": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14151,
        14700
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4526": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14189,
        14207
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4528": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14227
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4529": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14228,
        14229
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4530": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4531": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4532": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4533": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "LT",
      "path": "2"
    },
    "4534": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11C1"
    },
    "4537": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4538": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11C1"
    },
    "4541": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C8"
    },
    "4544": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14217,
        14230
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4545": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4546": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4548": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4549": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4550": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "MUL",
      "path": "2"
    },
    "4551": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4552": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4553": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4554": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "ADD",
      "path": "2"
    },
    "4555": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "ADD",
      "path": "2"
    },
    "4556": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14217,
        14230
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4557": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4559": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4560": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4567": {
      "op": "SHL"
    },
    "4568": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4569": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4570": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14250,
        14254
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "4571": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4573": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4574": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "ADD",
      "path": "2"
    },
    "4575": {
      "op": "MSTORE"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4582": {
      "op": "SHL"
    },
    "4583": {
      "op": "SUB"
    },
    "4584": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14241
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4585": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14241
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4586": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14241
      ],
      "op": "AND",
      "path": "2"
    },
    "4587": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14241
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4588": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14241
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "4593": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14241
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4594": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4596": {
      "op": "ADD"
    },
    "4597": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4599": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4601": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4602": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4603": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4604": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "SUB",
      "path": "2"
    },
    "4605": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4606": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4607": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "GAS",
      "path": "2"
    },
    "4608": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "4609": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4610": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4611": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4612": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1211"
    },
    "4615": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4616": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4617": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4619": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4620": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4621": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4622": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4624": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4625": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4626": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "POP",
      "path": "2"
    },
    "4627": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "POP",
      "path": "2"
    },
    "4628": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "POP",
      "path": "2"
    },
    "4629": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "POP",
      "path": "2"
    },
    "4630": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4632": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4633": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4634": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4636": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "NOT",
      "path": "2"
    },
    "4637": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4639": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4640": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "ADD",
      "path": "2"
    },
    "4641": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "AND",
      "path": "2"
    },
    "4642": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4643": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "ADD",
      "path": "2"
    },
    "4644": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4645": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4647": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4648": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "POP",
      "path": "2"
    },
    "4649": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4650": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "ADD",
      "path": "2"
    },
    "4651": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4652": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1235"
    },
    "4655": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4656": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4657": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2434"
    },
    "4660": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14210,
        14256
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4661": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14210,
        14256
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4662": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14189,
        14256
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4663": {
      "op": "POP"
    },
    "4664": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14265,
        14280
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4665": {
      "branch": 131,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14265,
        14280
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4666": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14262,
        14679
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1351"
    },
    "4669": {
      "branch": 131,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14262,
        14679
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4670": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14296,
        14313
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4672": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14339,
        14340
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "4674": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14332,
        14335
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x124C"
    },
    "4677": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14332,
        14333
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4678": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14334,
        14335
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4680": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14332,
        14335
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B0"
    },
    "4683": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14332,
        14335
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4684": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14332,
        14335
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4685": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14331,
        14340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1256"
    },
    "4688": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14331,
        14340
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4689": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14331,
        14340
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4690": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14331,
        14340
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2420"
    },
    "4693": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14331,
        14340
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4694": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14331,
        14340
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4695": {
      "branch": 132,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14331,
        14345
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4696": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14331,
        14355
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4697": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14331,
        14355
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4698": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14331,
        14355
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1262"
    },
    "4701": {
      "branch": 132,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14331,
        14355
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4702": {
      "op": "POP"
    },
    "4703": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14349,
        14355
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4704": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14349,
        14355
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4705": {
      "branch": 133,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14349,
        14355
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4706": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14331,
        14355
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4707": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14327,
        14598
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4708": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14327,
        14598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1284"
    },
    "4711": {
      "branch": 133,
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14327,
        14598
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4712": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14382,
        14414
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 65,
      "value": "0x127D"
    },
    "4715": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14407,
        14413
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2710"
    },
    "4718": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14383,
        14396
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1277"
    },
    "4721": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14394,
        14396
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4722": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14383,
        14393
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4723": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14383,
        14396
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "4726": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14383,
        14396
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4727": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14383,
        14396
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4728": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14382,
        14406
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4729": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14382,
        14406
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AEE"
    },
    "4732": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14382,
        14414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4733": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14382,
        14414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4734": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14370,
        14414
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4735": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14370,
        14414
      ],
      "op": "POP",
      "path": "2"
    },
    "4736": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14327,
        14598
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1297"
    },
    "4739": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14327,
        14598
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4740": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14327,
        14598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4741": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14464,
        14491
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 66,
      "value": "0x1294"
    },
    "4744": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14484,
        14490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2710"
    },
    "4747": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14465,
        14478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x726"
    },
    "4750": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14476,
        14478
      ],
      "op": "DUP9",
      "path": "2"
    },
    "4751": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14465,
        14475
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4752": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14465,
        14478
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "4755": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14465,
        14478
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4756": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14464,
        14491
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4757": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14452,
        14491
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4758": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14452,
        14491
      ],
      "op": "POP",
      "path": "2"
    },
    "4759": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14327,
        14598
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4760": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14628
      ],
      "op": "DUP9",
      "path": "2",
      "statement": 67
    },
    "4761": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14629,
        14630
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4762": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4763": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4764": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4765": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "LT",
      "path": "2"
    },
    "4766": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12A9"
    },
    "4769": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4770": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12A9"
    },
    "4773": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C8"
    },
    "4776": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14618,
        14631
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4777": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4778": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4780": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "MUL",
      "path": "2"
    },
    "4781": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4783": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "ADD",
      "path": "2"
    },
    "4784": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "ADD",
      "path": "2"
    },
    "4785": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14618,
        14631
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4792": {
      "op": "SHL"
    },
    "4793": {
      "op": "SUB"
    },
    "4794": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14641
      ],
      "op": "AND",
      "path": "2"
    },
    "4795": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14641
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "4800": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14648
      ],
      "op": "DUP10",
      "path": "2"
    },
    "4801": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14649,
        14650
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4802": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4803": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4804": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4805": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "LT",
      "path": "2"
    },
    "4806": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12D1"
    },
    "4809": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4810": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12D1"
    },
    "4813": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C8"
    },
    "4816": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14642,
        14651
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4817": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4818": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4820": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "MUL",
      "path": "2"
    },
    "4821": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4823": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "ADD",
      "path": "2"
    },
    "4824": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "ADD",
      "path": "2"
    },
    "4825": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14642,
        14651
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4826": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14653,
        14662
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4827": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4829": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4830": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4831": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "4836": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "AND",
      "path": "2"
    },
    "4837": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "4839": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "SHL",
      "path": "2"
    },
    "4840": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4841": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4842": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4844": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "ADD",
      "path": "2"
    },
    "4845": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x130B"
    },
    "4848": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4849": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4850": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4857": {
      "op": "SHL"
    },
    "4858": {
      "op": "SUB"
    },
    "4859": {
      "op": "SWAP3"
    },
    "4860": {
      "op": "SWAP1"
    },
    "4861": {
      "op": "SWAP3"
    },
    "4862": {
      "op": "AND"
    },
    "4863": {
      "op": "DUP3"
    },
    "4864": {
      "op": "MSTORE"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4867": {
      "op": "DUP3"
    },
    "4868": {
      "op": "ADD"
    },
    "4869": {
      "op": "MSTORE"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4872": {
      "op": "ADD"
    },
    "4873": {
      "op": "SWAP1"
    },
    "4874": {
      "op": "JUMP"
    },
    "4875": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4876": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4878": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4880": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4881": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4882": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4883": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "SUB",
      "path": "2"
    },
    "4884": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4885": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4887": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4888": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "GAS",
      "path": "2"
    },
    "4889": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "CALL",
      "path": "2"
    },
    "4890": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4891": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4892": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4893": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x132A"
    },
    "4896": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4897": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4898": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4900": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4901": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "4902": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4903": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4905": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "REVERT",
      "path": "2"
    },
    "4906": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4907": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "POP",
      "path": "2"
    },
    "4908": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "POP",
      "path": "2"
    },
    "4909": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "POP",
      "path": "2"
    },
    "4910": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "POP",
      "path": "2"
    },
    "4911": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4913": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4914": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "4915": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4917": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "NOT",
      "path": "2"
    },
    "4918": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "4920": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4921": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "ADD",
      "path": "2"
    },
    "4922": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "AND",
      "path": "2"
    },
    "4923": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4924": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "ADD",
      "path": "2"
    },
    "4925": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4926": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4928": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4929": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "POP",
      "path": "2"
    },
    "4930": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4931": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "ADD",
      "path": "2"
    },
    "4932": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4933": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x134E"
    },
    "4936": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4937": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4938": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x227D"
    },
    "4941": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14611,
        14663
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4942": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4943": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14611,
        14663
      ],
      "op": "POP",
      "path": "2"
    },
    "4944": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14286,
        14679
      ],
      "op": "POP",
      "path": "2"
    },
    "4945": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14262,
        14679
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4946": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14692,
        14693
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 68
    },
    "4947": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14684,
        14693
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4948": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14684,
        14693
      ],
      "op": "POP",
      "path": "2"
    },
    "4949": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14183,
        14700
      ],
      "op": "POP",
      "path": "2"
    },
    "4950": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14151,
        14700
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4951": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14102,
        14105
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 69
    },
    "4952": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14102,
        14105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1360"
    },
    "4955": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14102,
        14105
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4956": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14102,
        14105
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2262"
    },
    "4959": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "i",
      "offset": [
        14102,
        14105
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4960": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14102,
        14105
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4961": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14102,
        14105
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4962": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14102,
        14105
      ],
      "op": "POP",
      "path": "2"
    },
    "4963": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14102,
        14105
      ],
      "op": "POP",
      "path": "2"
    },
    "4964": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14067,
        14720
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x117D"
    },
    "4967": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14067,
        14720
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4968": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14067,
        14720
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4969": {
      "op": "POP"
    },
    "4970": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14756,
        14769
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 70,
      "value": "0xF"
    },
    "4972": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14756,
        14769
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4973": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14771,
        14781
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "4975": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14771,
        14781
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4976": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14783,
        14798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "4978": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14783,
        14798
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4979": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14735,
        14807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4981": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14735,
        14807
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4982": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14735,
        14807
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4983": {
      "op": "SWAP4"
    },
    "4984": {
      "op": "DUP5"
    },
    "4985": {
      "op": "MSTORE"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4988": {
      "op": "DUP5"
    },
    "4989": {
      "op": "ADD"
    },
    "4990": {
      "op": "SWAP3"
    },
    "4991": {
      "op": "SWAP1"
    },
    "4992": {
      "op": "SWAP3"
    },
    "4993": {
      "op": "MSTORE"
    },
    "4994": {
      "op": "SWAP1"
    },
    "4995": {
      "op": "DUP3"
    },
    "4996": {
      "op": "ADD"
    },
    "4997": {
      "op": "MSTORE"
    },
    "4998": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5000": {
      "op": "DUP2"
    },
    "5001": {
      "op": "ADD"
    },
    "5002": {
      "op": "DUP3"
    },
    "5003": {
      "op": "SWAP1"
    },
    "5004": {
      "op": "MSTORE"
    },
    "5005": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14744,
        14754
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5006": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14744,
        14754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5007": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14735,
        14807
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8D1274A08A1F38C385CC00828B937D1A29D4CE3A901EDE97B42639D0C19AE2AE"
    },
    "5040": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14735,
        14807
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5041": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5043": {
      "op": "ADD"
    },
    "5044": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14735,
        14807
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5046": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14735,
        14807
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5047": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14735,
        14807
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5048": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14735,
        14807
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5049": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14735,
        14807
      ],
      "op": "SUB",
      "path": "2"
    },
    "5050": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14735,
        14807
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5051": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14735,
        14807
      ],
      "op": "LOG2",
      "path": "2"
    },
    "5052": {
      "op": "POP"
    },
    "5053": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14820,
        14824
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 71,
      "value": "0x1"
    },
    "5055": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        14820,
        14824
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "5056": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "offset": [
        13129,
        14827
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "5057": {
      "op": "POP"
    },
    "5058": {
      "op": "POP"
    },
    "5059": {
      "op": "POP"
    },
    "5060": {
      "op": "POP"
    },
    "5061": {
      "op": "POP"
    },
    "5062": {
      "op": "POP"
    },
    "5063": {
      "op": "POP"
    },
    "5064": {
      "fn": "ForgeMining.mintTokensArrayTo",
      "jump": "o",
      "offset": [
        13129,
        14827
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5065": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10473,
        11098
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5066": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10557,
        10575
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5068": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10591,
        10600
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5070": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10591,
        10600
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5071": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10578,
        10588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "5073": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10578,
        10588
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5074": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10578,
        10600
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13DB"
    },
    "5077": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10578,
        10600
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5078": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10578,
        10600
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5079": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10578,
        10600
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222C"
    },
    "5082": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10578,
        10600
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5083": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10578,
        10600
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5084": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10557,
        10600
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5085": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10557,
        10600
      ],
      "op": "POP",
      "path": "2"
    },
    "5086": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10639,
        10685
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 72,
      "value": "0x13EF"
    },
    "5089": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10674,
        10683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "5091": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10674,
        10683
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5092": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10671,
        10672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5094": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10671,
        10683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB75"
    },
    "5097": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10671,
        10683
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5098": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10671,
        10683
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5099": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10671,
        10683
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C2"
    },
    "5102": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10671,
        10683
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5103": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10639,
        10685
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5104": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10623,
        10636
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "5106": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10623,
        10685
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5107": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10764,
        10788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "5109": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10764,
        10788
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5110": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10752,
        10761
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "5112": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10752,
        10761
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5113": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10790,
        10791
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5115": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10790,
        10791
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5116": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10752,
        10788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1404"
    },
    "5119": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10752,
        10788
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5120": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10752,
        10788
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "5123": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10752,
        10788
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5124": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10752,
        10788
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5125": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10747,
        10789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140F"
    },
    "5128": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10747,
        10789
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5129": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10747,
        10748
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "5131": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10747,
        10789
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "5134": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10747,
        10789
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5135": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10747,
        10789
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5136": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10747,
        10791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1419"
    },
    "5139": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10747,
        10791
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5140": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10747,
        10791
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5141": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10747,
        10791
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23E4"
    },
    "5144": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10747,
        10791
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5145": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10747,
        10791
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5146": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10702,
        10717
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5148": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10702,
        10717
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5149": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5151": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5152": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5159": {
      "op": "SHL"
    },
    "5160": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5161": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5162": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10737,
        10741
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "5163": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5165": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5166": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "ADD",
      "path": "2"
    },
    "5167": {
      "op": "MSTORE"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5174": {
      "op": "SHL"
    },
    "5175": {
      "op": "SUB"
    },
    "5176": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10702,
        10717
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5177": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10702,
        10717
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5178": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10702,
        10717
      ],
      "op": "AND",
      "path": "2"
    },
    "5179": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10702,
        10717
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5180": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10728
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "5185": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10728
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5188": {
      "op": "ADD"
    },
    "5189": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5191": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5193": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5194": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5195": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5196": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "SUB",
      "path": "2"
    },
    "5197": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5198": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5199": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "GAS",
      "path": "2"
    },
    "5200": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "5201": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5202": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5203": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5204": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1461"
    },
    "5207": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5208": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5209": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5211": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5212": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5213": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5214": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5216": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5217": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5218": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "POP",
      "path": "2"
    },
    "5219": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "POP",
      "path": "2"
    },
    "5220": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "POP",
      "path": "2"
    },
    "5221": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "POP",
      "path": "2"
    },
    "5222": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5224": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5225": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5226": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5228": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "NOT",
      "path": "2"
    },
    "5229": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5231": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5232": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "ADD",
      "path": "2"
    },
    "5233": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "AND",
      "path": "2"
    },
    "5234": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5235": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "ADD",
      "path": "2"
    },
    "5236": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5237": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5239": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5240": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "POP",
      "path": "2"
    },
    "5241": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5242": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "ADD",
      "path": "2"
    },
    "5243": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5244": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1485"
    },
    "5247": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5248": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5249": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2434"
    },
    "5252": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10695,
        10743
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5253": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10743
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5254": {
      "branch": 134,
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10695,
        10792
      ],
      "op": "GT",
      "path": "2"
    },
    "5255": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10692,
        11051
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5256": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10692,
        11051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1547"
    },
    "5259": {
      "branch": 134,
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10692,
        11051
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5260": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10902,
        10906
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 73,
      "value": "0x1D"
    },
    "5262": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10902,
        10906
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5263": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10898,
        10906
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1499"
    },
    "5266": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10898,
        10906
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5267": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10898,
        10899
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "5269": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10898,
        10906
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "5272": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10898,
        10906
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5273": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10898,
        10906
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5274": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10886,
        10895
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1C"
    },
    "5276": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10886,
        10906
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5277": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10886,
        10906
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5278": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10886,
        10906
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5279": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10923,
        10938
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 74,
      "value": "0x3"
    },
    "5281": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10923,
        10938
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5282": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10949,
        10964
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5284": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10949,
        10964
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5285": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10982,
        10991
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "5287": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10982,
        10991
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5294": {
      "op": "SHL"
    },
    "5295": {
      "op": "SUB"
    },
    "5296": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10923,
        10938
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5297": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10923,
        10938
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5298": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10923,
        10938
      ],
      "op": "AND",
      "path": "2"
    },
    "5299": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10923,
        10938
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5300": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        10948
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "5305": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        10948
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5306": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10949,
        10964
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5307": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10949,
        10964
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5308": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10949,
        10964
      ],
      "op": "AND",
      "path": "2"
    },
    "5309": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10949,
        10964
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5310": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10886,
        10906
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5311": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10967,
        10991
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14C8"
    },
    "5314": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10967,
        10991
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5315": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10968,
        10978
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5316": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10967,
        10991
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "5319": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10967,
        10991
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5320": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10967,
        10991
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5321": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10967,
        11003
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14D2"
    },
    "5324": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10967,
        11003
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5325": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10967,
        11003
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5326": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10967,
        11003
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "5329": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10967,
        11003
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5330": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10967,
        11003
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5331": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5333": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5340": {
      "op": "SHL"
    },
    "5341": {
      "op": "SUB"
    },
    "5342": {
      "op": "NOT"
    },
    "5343": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "5345": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5346": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5347": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "SHL",
      "path": "2"
    },
    "5348": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "AND",
      "path": "2"
    },
    "5349": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5350": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5357": {
      "op": "SHL"
    },
    "5358": {
      "op": "SUB"
    },
    "5359": {
      "op": "SWAP1"
    },
    "5360": {
      "op": "SWAP3"
    },
    "5361": {
      "op": "AND"
    },
    "5362": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5364": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5365": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "ADD",
      "path": "2"
    },
    "5366": {
      "op": "MSTORE"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5369": {
      "op": "DUP3"
    },
    "5370": {
      "op": "ADD"
    },
    "5371": {
      "op": "MSTORE"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5374": {
      "op": "ADD"
    },
    "5375": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5377": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5379": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5380": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5381": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5382": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "SUB",
      "path": "2"
    },
    "5383": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5384": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5386": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5387": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "GAS",
      "path": "2"
    },
    "5388": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "CALL",
      "path": "2"
    },
    "5389": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5390": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5391": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5392": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151D"
    },
    "5395": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5396": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5397": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5399": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5400": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "5401": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5402": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5404": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "REVERT",
      "path": "2"
    },
    "5405": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5406": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "POP",
      "path": "2"
    },
    "5407": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "POP",
      "path": "2"
    },
    "5408": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "POP",
      "path": "2"
    },
    "5409": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "POP",
      "path": "2"
    },
    "5410": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5412": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5413": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "5414": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5416": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "NOT",
      "path": "2"
    },
    "5417": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "5419": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5420": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "ADD",
      "path": "2"
    },
    "5421": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "AND",
      "path": "2"
    },
    "5422": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5423": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "ADD",
      "path": "2"
    },
    "5424": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5425": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5427": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5428": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "POP",
      "path": "2"
    },
    "5429": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5430": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "ADD",
      "path": "2"
    },
    "5431": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5432": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1541"
    },
    "5435": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5436": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5437": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x227D"
    },
    "5440": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "i",
      "offset": [
        10916,
        11005
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5441": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5442": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10916,
        11005
      ],
      "op": "POP",
      "path": "2"
    },
    "5443": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10692,
        11051
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x154D"
    },
    "5446": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10692,
        11051
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5447": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10692,
        11051
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5448": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11043,
        11044
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 75,
      "value": "0x0"
    },
    "5450": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11031,
        11040
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1C"
    },
    "5452": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11031,
        11044
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5453": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        10692,
        11051
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5454": {
      "op": "POP"
    },
    "5455": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11068,
        11078
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 76,
      "value": "0x7"
    },
    "5457": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11068,
        11078
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5458": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11056,
        11065
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x10"
    },
    "5460": {
      "fn": "ForgeMining.ARewardSender",
      "offset": [
        11056,
        11078
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5461": {
      "fn": "ForgeMining.ARewardSender",
      "jump": "o",
      "offset": [
        10473,
        11098
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5462": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11529,
        12854
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5463": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11619,
        11631
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5465": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11642,
        11673
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 77,
      "value": "0x156F"
    },
    "5468": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11659,
        11672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "5470": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11659,
        11672
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5471": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11642,
        11654
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x19"
    },
    "5473": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11642,
        11654
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5474": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11642,
        11658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A54"
    },
    "5477": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11642,
        11658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5478": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11642,
        11673
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5479": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11642,
        11673
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5480": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11642,
        11673
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "5485": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11642,
        11673
      ],
      "op": "AND",
      "path": "2"
    },
    "5486": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        11642,
        11673
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5487": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11642,
        11673
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5488": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11642,
        11673
      ],
      "op": "POP",
      "path": "2"
    },
    "5489": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11687,
        11701
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5491": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11732,
        11747
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "5493": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11732,
        11747
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5494": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11749,
        11759
      ],
      "op": "CALLER",
      "path": "2"
    },
    "5495": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11761,
        11766
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5496": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5498": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5499": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5501": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "ADD",
      "path": "2"
    },
    "5502": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1589"
    },
    "5505": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5506": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5507": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5508": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5509": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23F8"
    },
    "5512": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        11715,
        11767
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5513": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5514": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5516": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5517": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5519": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5520": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5521": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "SUB",
      "path": "2"
    },
    "5522": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "SUB",
      "path": "2"
    },
    "5523": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5524": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5525": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5526": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5528": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11715,
        11767
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5529": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11705,
        11768
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5530": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11705,
        11768
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5531": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11705,
        11768
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5532": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11705,
        11768
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5534": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11705,
        11768
      ],
      "op": "ADD",
      "path": "2"
    },
    "5535": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11705,
        11768
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5536": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11687,
        11768
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5537": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11687,
        11768
      ],
      "op": "POP",
      "path": "2"
    },
    "5538": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11860,
        11876
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 78
    },
    "5539": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11850,
        11856
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5540": {
      "branch": 135,
      "fn": "ForgeMining.mintTo",
      "offset": [
        11850,
        11876
      ],
      "op": "EQ",
      "path": "2"
    },
    "5541": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11842,
        11927
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1607"
    },
    "5544": {
      "branch": 135,
      "fn": "ForgeMining.mintTo",
      "offset": [
        11842,
        11927
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5545": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11842,
        11927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5547": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11842,
        11927
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5548": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5554": {
      "op": "SHL"
    },
    "5555": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11842,
        11927
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5556": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11842,
        11927
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5557": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5559": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11842,
        11927
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5561": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11842,
        11927
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5562": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11842,
        11927
      ],
      "op": "ADD",
      "path": "2"
    },
    "5563": {
      "op": "MSTORE"
    },
    "5564": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5568": {
      "op": "DUP3"
    },
    "5569": {
      "op": "ADD"
    },
    "5570": {
      "op": "MSTORE"
    },
    "5571": {
      "op": "PUSH32",
      "value": "0x4F6C64206368616C6C656E67655F646967657374206F722077726F6E67206368"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5606": {
      "op": "DUP3"
    },
    "5607": {
      "op": "ADD"
    },
    "5608": {
      "op": "MSTORE"
    },
    "5609": {
      "op": "PUSH14",
      "value": "0x185B1B195B99D957D91A59D95CDD"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "5626": {
      "op": "SHL"
    },
    "5627": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5629": {
      "op": "DUP3"
    },
    "5630": {
      "op": "ADD"
    },
    "5631": {
      "op": "MSTORE"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5634": {
      "op": "ADD"
    },
    "5635": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11842,
        11927
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x923"
    },
    "5638": {
      "op": "JUMP"
    },
    "5639": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11842,
        11927
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5640": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12025,
        12037
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 79,
      "value": "0xB"
    },
    "5642": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12025,
        12037
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5643": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12007,
        12037
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5644": {
      "branch": 136,
      "fn": "ForgeMining.mintTo",
      "offset": [
        12007,
        12037
      ],
      "op": "LT",
      "path": "2"
    },
    "5645": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11999,
        12082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1669"
    },
    "5648": {
      "branch": 136,
      "fn": "ForgeMining.mintTo",
      "offset": [
        11999,
        12082
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5649": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11999,
        12082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5651": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11999,
        12082
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5658": {
      "op": "SHL"
    },
    "5659": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11999,
        12082
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5660": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11999,
        12082
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5663": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11999,
        12082
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5665": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11999,
        12082
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5666": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11999,
        12082
      ],
      "op": "ADD",
      "path": "2"
    },
    "5667": {
      "op": "MSTORE"
    },
    "5668": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "5670": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5672": {
      "op": "DUP3"
    },
    "5673": {
      "op": "ADD"
    },
    "5674": {
      "op": "MSTORE"
    },
    "5675": {
      "op": "PUSH32",
      "value": "0x446967657374206D75737420626520736D616C6C6572207468616E206D696E69"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5710": {
      "op": "DUP3"
    },
    "5711": {
      "op": "ADD"
    },
    "5712": {
      "op": "MSTORE"
    },
    "5713": {
      "op": "PUSH8",
      "value": "0x1B99D5185C99D95D"
    },
    "5722": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "5724": {
      "op": "SHL"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5727": {
      "op": "DUP3"
    },
    "5728": {
      "op": "ADD"
    },
    "5729": {
      "op": "MSTORE"
    },
    "5730": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5732": {
      "op": "ADD"
    },
    "5733": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11999,
        12082
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x923"
    },
    "5736": {
      "op": "JUMP"
    },
    "5737": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11999,
        12082
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5738": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12090,
        12112
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 80,
      "value": "0x1671"
    },
    "5741": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12090,
        12110
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A2"
    },
    "5744": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12090,
        12112
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5745": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12090,
        12112
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5746": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12124,
        12133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5748": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12154,
        12171
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x11"
    },
    "5750": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12154,
        12171
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5751": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12136,
        12151
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "5752": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12136,
        12171
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1681"
    },
    "5755": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12136,
        12171
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5756": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12136,
        12171
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5757": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12136,
        12171
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222C"
    },
    "5760": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12136,
        12171
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5761": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12136,
        12171
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5762": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12124,
        12171
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5763": {
      "op": "POP"
    },
    "5764": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12188,
        12189
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5766": {
      "offset": [
        5902,
        5909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x870"
    },
    "5769": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12200,
        12218
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5770": {
      "branch": 137,
      "fn": "ForgeMining.mintTo",
      "offset": [
        12200,
        12218
      ],
      "op": "GT",
      "path": "2"
    },
    "5771": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12197,
        12336
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5772": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12197,
        12336
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16CA"
    },
    "5775": {
      "branch": 137,
      "fn": "ForgeMining.mintTo",
      "offset": [
        12197,
        12336
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5776": {
      "op": "POP"
    },
    "5777": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12243,
        12244
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 81,
      "value": "0x4"
    },
    "5779": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12235,
        12328
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5780": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12249,
        12251
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "5782": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12246,
        12247
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5783": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12246,
        12251
      ],
      "op": "LT",
      "path": "2"
    },
    "5784": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12235,
        12328
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5785": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12235,
        12328
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16CA"
    },
    "5788": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12235,
        12328
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5789": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12277,
        12300
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16AD"
    },
    "5792": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12298,
        12299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "5794": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12278,
        12292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x726"
    },
    "5797": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12291,
        12292
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5798": {
      "offset": [
        5902,
        5909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x870"
    },
    "5801": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12278,
        12292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "5804": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12278,
        12292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5805": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12277,
        12300
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5806": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12269,
        12273
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5807": {
      "branch": 138,
      "fn": "ForgeMining.mintTo",
      "offset": [
        12269,
        12300
      ],
      "op": "GT",
      "path": "2"
    },
    "5808": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12266,
        12327
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16B8"
    },
    "5811": {
      "branch": 138,
      "fn": "ForgeMining.mintTo",
      "offset": [
        12266,
        12327
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5812": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12312,
        12317
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 82,
      "value": "0x16CA"
    },
    "5815": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12312,
        12317
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5816": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12266,
        12327
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5817": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12253,
        12256
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 83
    },
    "5818": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12253,
        12256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16C2"
    },
    "5821": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12253,
        12256
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5822": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12253,
        12256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2262"
    },
    "5825": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12253,
        12256
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5826": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12253,
        12256
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5827": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12253,
        12256
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5828": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12253,
        12256
      ],
      "op": "POP",
      "path": "2"
    },
    "5829": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12253,
        12256
      ],
      "op": "POP",
      "path": "2"
    },
    "5830": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12235,
        12328
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1693"
    },
    "5833": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12235,
        12328
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5834": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12235,
        12328
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5835": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12349,
        12360
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5837": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12363,
        12389
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x16DF"
    },
    "5840": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12387,
        12388
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5842": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12368,
        12381
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "5844": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12368,
        12381
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5845": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12364,
        12365
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5846": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12364,
        12381
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x726"
    },
    "5849": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12364,
        12381
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5850": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12364,
        12381
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5851": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12364,
        12381
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "5854": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12364,
        12381
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5855": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12363,
        12389
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5862": {
      "op": "SHL"
    },
    "5863": {
      "op": "SUB"
    },
    "5864": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12434
      ],
      "op": "DUP8",
      "path": "2",
      "statement": 84
    },
    "5865": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12434
      ],
      "op": "AND",
      "path": "2"
    },
    "5866": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5868": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12434
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5869": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12434
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5870": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12434
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5871": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12426
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "5873": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5875": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12434
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5876": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12434
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5878": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12434
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5879": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12434
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5880": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12434
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5881": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12349,
        12389
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5882": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12349,
        12389
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5883": {
      "op": "POP"
    },
    "5884": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12446
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1705"
    },
    "5887": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12446
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5888": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12349,
        12389
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5889": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A54"
    },
    "5892": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12418,
        12446
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5893": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12418,
        12446
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5896": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5900": {
      "op": "SHL"
    },
    "5901": {
      "op": "SUB"
    },
    "5902": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12399,
        12415
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5903": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12399,
        12415
      ],
      "op": "AND",
      "path": "2"
    },
    "5904": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12399,
        12415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5906": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12399,
        12415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5907": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12399,
        12415
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5908": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12399,
        12415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5909": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12399,
        12407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "5911": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12399,
        12415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5913": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12399,
        12415
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5914": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12399,
        12415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5916": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12399,
        12415
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5917": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12399,
        12415
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5918": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12399,
        12446
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5919": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12485,
        12531
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 85,
      "value": "0x172C"
    },
    "5922": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12515,
        12530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x799"
    },
    "5925": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12516,
        12522
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5926": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12528,
        12529
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5928": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12515,
        12527
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1854"
    },
    "5931": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12515,
        12530
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5932": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12485,
        12531
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5933": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12466,
        12481
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "5935": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12466,
        12481
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5942": {
      "op": "SHL"
    },
    "5943": {
      "op": "SUB"
    },
    "5944": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12466,
        12481
      ],
      "op": "AND",
      "path": "2"
    },
    "5945": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12457,
        12482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5947": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12457,
        12482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5948": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12457,
        12482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5949": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12457,
        12482
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5950": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12457,
        12465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1A"
    },
    "5952": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12457,
        12482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5954": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12457,
        12482
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5955": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12457,
        12482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5957": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12457,
        12482
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5958": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12457,
        12482
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5959": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12457,
        12531
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5960": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12556,
        12568
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 86,
      "value": "0x19"
    },
    "5962": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12556,
        12568
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5963": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12556,
        12580
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1754"
    },
    "5966": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12556,
        12580
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5967": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12573,
        12579
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5968": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12556,
        12572
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A54"
    },
    "5971": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12556,
        12580
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5972": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12556,
        12580
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5973": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12541,
        12553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x19"
    },
    "5975": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12541,
        12580
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5976": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12614,
        12629
      ],
      "op": "TIMESTAMP",
      "path": "2",
      "statement": 87
    },
    "5977": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12594,
        12611
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x11"
    },
    "5979": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12594,
        12629
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5980": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12646,
        12655
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1C"
    },
    "5982": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12646,
        12655
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5983": {
      "branch": 139,
      "fn": "ForgeMining.mintTo",
      "offset": [
        12646,
        12659
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5984": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12643,
        12749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17FB"
    },
    "5987": {
      "branch": 139,
      "fn": "ForgeMining.mintTo",
      "offset": [
        12643,
        12749
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5988": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12681,
        12696
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 88,
      "value": "0x3"
    },
    "5990": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12681,
        12696
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5991": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12725,
        12734
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1C"
    },
    "5993": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12725,
        12734
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5994": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12715,
        12724
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "5996": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12715,
        12724
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6001": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6003": {
      "op": "SHL"
    },
    "6004": {
      "op": "SUB"
    },
    "6005": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12681,
        12696
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6006": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12681,
        12696
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6007": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12681,
        12696
      ],
      "op": "AND",
      "path": "2"
    },
    "6008": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12681,
        12696
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6009": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12706
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA9059CBB"
    },
    "6014": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12706
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6015": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12707,
        12713
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6016": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12707,
        12713
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6017": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12715,
        12734
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x178A"
    },
    "6020": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12715,
        12734
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6021": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12725,
        12734
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6022": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12715,
        12734
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "6025": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12715,
        12734
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6026": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12715,
        12734
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6027": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6029": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6034": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6036": {
      "op": "SHL"
    },
    "6037": {
      "op": "SUB"
    },
    "6038": {
      "op": "NOT"
    },
    "6039": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "6041": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6042": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6043": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "SHL",
      "path": "2"
    },
    "6044": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "AND",
      "path": "2"
    },
    "6045": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6046": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6053": {
      "op": "SHL"
    },
    "6054": {
      "op": "SUB"
    },
    "6055": {
      "op": "SWAP1"
    },
    "6056": {
      "op": "SWAP3"
    },
    "6057": {
      "op": "AND"
    },
    "6058": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6060": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6061": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "ADD",
      "path": "2"
    },
    "6062": {
      "op": "MSTORE"
    },
    "6063": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6065": {
      "op": "DUP3"
    },
    "6066": {
      "op": "ADD"
    },
    "6067": {
      "op": "MSTORE"
    },
    "6068": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6070": {
      "op": "ADD"
    },
    "6071": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6073": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6075": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6076": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6077": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6078": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "SUB",
      "path": "2"
    },
    "6079": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6080": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6082": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6083": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "GAS",
      "path": "2"
    },
    "6084": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "CALL",
      "path": "2"
    },
    "6085": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6086": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6087": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6088": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17D5"
    },
    "6091": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6092": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6093": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6095": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6096": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6097": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6098": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6100": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6101": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6102": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "POP",
      "path": "2"
    },
    "6103": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "POP",
      "path": "2"
    },
    "6104": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "POP",
      "path": "2"
    },
    "6105": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "POP",
      "path": "2"
    },
    "6106": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6108": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6109": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6110": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6112": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "NOT",
      "path": "2"
    },
    "6113": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6115": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6116": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "ADD",
      "path": "2"
    },
    "6117": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "AND",
      "path": "2"
    },
    "6118": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6119": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "ADD",
      "path": "2"
    },
    "6120": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6121": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6123": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6124": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "POP",
      "path": "2"
    },
    "6125": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6126": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "ADD",
      "path": "2"
    },
    "6127": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6128": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17F9"
    },
    "6131": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6132": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6133": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x227D"
    },
    "6136": {
      "fn": "ForgeMining.mintTo",
      "jump": "i",
      "offset": [
        12674,
        12735
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6137": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6138": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12674,
        12735
      ],
      "op": "POP",
      "path": "2"
    },
    "6139": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12643,
        12749
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6140": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12783,
        12796
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 89,
      "value": "0xF"
    },
    "6142": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12783,
        12796
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6143": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12798,
        12808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6145": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12798,
        12808
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6146": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12810,
        12825
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "6148": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12810,
        12825
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6149": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12766,
        12827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6151": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12766,
        12827
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6152": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12766,
        12827
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6153": {
      "op": "SWAP4"
    },
    "6154": {
      "op": "DUP5"
    },
    "6155": {
      "op": "MSTORE"
    },
    "6156": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6158": {
      "op": "DUP5"
    },
    "6159": {
      "op": "ADD"
    },
    "6160": {
      "op": "SWAP3"
    },
    "6161": {
      "op": "SWAP1"
    },
    "6162": {
      "op": "SWAP3"
    },
    "6163": {
      "op": "MSTORE"
    },
    "6164": {
      "op": "SWAP1"
    },
    "6165": {
      "op": "DUP3"
    },
    "6166": {
      "op": "ADD"
    },
    "6167": {
      "op": "MSTORE"
    },
    "6168": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12771,
        12781
      ],
      "op": "CALLER",
      "path": "2"
    },
    "6169": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12771,
        12781
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6170": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12766,
        12827
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xCF6FBB9DCEA7D07263AB4F5C3A92F53AF33DFFC421D9D121E1C74B307E68189D"
    },
    "6203": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12766,
        12827
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6204": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6206": {
      "op": "ADD"
    },
    "6207": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12766,
        12827
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6209": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12766,
        12827
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6210": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12766,
        12827
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6211": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12766,
        12827
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6212": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12766,
        12827
      ],
      "op": "SUB",
      "path": "2"
    },
    "6213": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12766,
        12827
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6214": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12766,
        12827
      ],
      "op": "LOG2",
      "path": "2"
    },
    "6215": {
      "op": "POP"
    },
    "6216": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12847,
        12851
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 90,
      "value": "0x1"
    },
    "6218": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        12847,
        12851
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "6219": {
      "fn": "ForgeMining.mintTo",
      "offset": [
        11529,
        12854
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "6220": {
      "op": "POP"
    },
    "6221": {
      "op": "POP"
    },
    "6222": {
      "op": "POP"
    },
    "6223": {
      "op": "POP"
    },
    "6224": {
      "op": "POP"
    },
    "6225": {
      "op": "POP"
    },
    "6226": {
      "op": "POP"
    },
    "6227": {
      "fn": "ForgeMining.mintTo",
      "jump": "o",
      "offset": [
        11529,
        12854
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6228": {
      "fn": "SafeMath2.div",
      "offset": [
        4217,
        4353
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6229": {
      "fn": "SafeMath2.div",
      "offset": [
        4275,
        4282
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6231": {
      "branch": 140,
      "fn": "SafeMath2.div",
      "offset": [
        4302,
        4308
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 91
    },
    "6232": {
      "fn": "SafeMath2.div",
      "offset": [
        4294,
        4324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1891"
    },
    "6235": {
      "branch": 140,
      "fn": "SafeMath2.div",
      "offset": [
        4294,
        4324
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6236": {
      "fn": "SafeMath2.div",
      "offset": [
        4294,
        4324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6238": {
      "fn": "SafeMath2.div",
      "offset": [
        4294,
        4324
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6239": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6243": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6245": {
      "op": "SHL"
    },
    "6246": {
      "fn": "SafeMath2.div",
      "offset": [
        4294,
        4324
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6247": {
      "fn": "SafeMath2.div",
      "offset": [
        4294,
        4324
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6250": {
      "fn": "SafeMath2.div",
      "offset": [
        4294,
        4324
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6252": {
      "fn": "SafeMath2.div",
      "offset": [
        4294,
        4324
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6253": {
      "fn": "SafeMath2.div",
      "offset": [
        4294,
        4324
      ],
      "op": "ADD",
      "path": "2"
    },
    "6254": {
      "op": "MSTORE"
    },
    "6255": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6259": {
      "op": "DUP3"
    },
    "6260": {
      "op": "ADD"
    },
    "6261": {
      "op": "MSTORE"
    },
    "6262": {
      "op": "PUSH11",
      "value": "0x446976206279207A65726F"
    },
    "6274": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6276": {
      "op": "SHL"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6279": {
      "op": "DUP3"
    },
    "6280": {
      "op": "ADD"
    },
    "6281": {
      "op": "MSTORE"
    },
    "6282": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6284": {
      "op": "ADD"
    },
    "6285": {
      "fn": "SafeMath2.div",
      "offset": [
        4294,
        4324
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x923"
    },
    "6288": {
      "op": "JUMP"
    },
    "6289": {
      "fn": "SafeMath2.div",
      "offset": [
        4294,
        4324
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6290": {
      "fn": "SafeMath2.div",
      "offset": [
        4341,
        4346
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 92,
      "value": "0x189B"
    },
    "6293": {
      "fn": "SafeMath2.div",
      "offset": [
        4345,
        4346
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6294": {
      "fn": "SafeMath2.div",
      "offset": [
        4341,
        4342
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6295": {
      "fn": "SafeMath2.div",
      "offset": [
        4341,
        4346
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23E4"
    },
    "6298": {
      "fn": "SafeMath2.div",
      "jump": "i",
      "offset": [
        4341,
        4346
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6299": {
      "fn": "SafeMath2.div",
      "offset": [
        4341,
        4346
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6300": {
      "fn": "SafeMath2.div",
      "offset": [
        4334,
        4346
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6301": {
      "fn": "SafeMath2.div",
      "offset": [
        4217,
        4353
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6302": {
      "op": "POP"
    },
    "6303": {
      "op": "POP"
    },
    "6304": {
      "op": "POP"
    },
    "6305": {
      "fn": "SafeMath2.div",
      "jump": "o",
      "offset": [
        4217,
        4353
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6306": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15268,
        16776
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6307": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15643,
        15658
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "6309": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15643,
        15658
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6310": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15625,
        15638
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xF"
    },
    "6312": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15625,
        15638
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6313": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15607,
        15619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x19"
    },
    "6315": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15607,
        15619
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6316": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15607,
        15640
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18B4"
    },
    "6319": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15607,
        15640
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6320": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15607,
        15623
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A54"
    },
    "6323": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        15607,
        15640
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6324": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15607,
        15640
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6325": {
      "branch": 141,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15607,
        15658
      ],
      "op": "GT",
      "path": "2"
    },
    "6326": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15607,
        15676
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6327": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15607,
        15676
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6328": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15607,
        15676
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C3"
    },
    "6331": {
      "branch": 141,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15607,
        15676
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6332": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15607,
        15676
      ],
      "op": "POP",
      "path": "2"
    },
    "6333": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15674,
        15676
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x27"
    },
    "6335": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15662,
        15671
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "6337": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15662,
        15671
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6338": {
      "branch": 142,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15662,
        15676
      ],
      "op": "LT",
      "path": "2"
    },
    "6339": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15607,
        15676
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6340": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15603,
        15794
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6341": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15603,
        15794
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18F7"
    },
    "6344": {
      "branch": 142,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15603,
        15794
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6345": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15706,
        15715
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 93,
      "value": "0xD"
    },
    "6347": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15706,
        15715
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6348": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15706,
        15719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18D6"
    },
    "6351": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15706,
        15719
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6352": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15718,
        15719
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6354": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15706,
        15719
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B0"
    },
    "6357": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        15706,
        15719
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6358": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15706,
        15719
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6359": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15694,
        15703
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "6361": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15694,
        15719
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6362": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15694,
        15719
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6363": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15694,
        15719
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6364": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15744,
        15776
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 94,
      "value": "0x18F3"
    },
    "6367": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15744,
        15776
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6368": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15761,
        15775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18EA"
    },
    "6371": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15761,
        15775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6372": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15761,
        15762
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6374": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15761,
        15775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C2"
    },
    "6377": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        15761,
        15775
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6378": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15761,
        15775
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6379": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15744,
        15756
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "6381": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15744,
        15756
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6382": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15744,
        15756
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6383": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15744,
        15760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1854"
    },
    "6386": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        15744,
        15776
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6387": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15744,
        15776
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6388": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15729,
        15741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "6390": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15729,
        15776
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6391": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15603,
        15794
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6392": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15978,
        15988
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 95,
      "value": "0x7"
    },
    "6394": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15978,
        15988
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6395": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15978,
        15995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1905"
    },
    "6398": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15978,
        15995
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6399": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15993,
        15994
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6401": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15978,
        15992
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A54"
    },
    "6404": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        15978,
        15995
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6405": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15978,
        15995
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6406": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15965,
        15975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6408": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        15965,
        15995
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6409": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16095,
        16119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6411": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16095,
        16119
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6412": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16095,
        16123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1917"
    },
    "6415": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16095,
        16123
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6416": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16122,
        16123
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6418": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16122,
        16123
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6419": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16095,
        16123
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23E4"
    },
    "6422": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16095,
        16123
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6423": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16095,
        16123
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6424": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16080,
        16090
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6426": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16080,
        16090
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6427": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16079,
        16124
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1924"
    },
    "6430": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16079,
        16124
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6431": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16079,
        16124
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6432": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16079,
        16124
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2420"
    },
    "6435": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16079,
        16124
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6436": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16079,
        16124
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6437": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16076,
        16722
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A43"
    },
    "6440": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16076,
        16722
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6441": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16146,
        16161
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 96,
      "value": "0x1930"
    },
    "6444": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16146,
        16159
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13C9"
    },
    "6447": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16146,
        16161
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6448": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16146,
        16161
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6449": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16198,
        16235
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 97,
      "value": "0x1956"
    },
    "6452": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16220,
        16229
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xD"
    },
    "6454": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16220,
        16229
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6455": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16232,
        16233
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6457": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16220,
        16233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1942"
    },
    "6460": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16220,
        16233
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6461": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16220,
        16233
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6462": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16220,
        16233
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B0"
    },
    "6465": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16220,
        16233
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6466": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16220,
        16233
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6467": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16216,
        16234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x194D"
    },
    "6470": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16216,
        16234
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6471": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16216,
        16217
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6473": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16216,
        16234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23C2"
    },
    "6476": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16216,
        16234
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6477": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16216,
        16234
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6478": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16198,
        16210
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6480": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16198,
        16210
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6481": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16198,
        16210
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6482": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16198,
        16214
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1854"
    },
    "6485": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16198,
        16235
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6486": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16198,
        16235
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6487": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16183,
        16195
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "6489": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16183,
        16195
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6490": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16183,
        16235
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1963"
    },
    "6493": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16183,
        16235
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6494": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16183,
        16235
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6495": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16183,
        16235
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222C"
    },
    "6498": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16183,
        16235
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6499": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16183,
        16235
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6500": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16165,
        16180
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE"
    },
    "6502": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16165,
        16235
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6503": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16259,
        16283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "6505": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16259,
        16283
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6506": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16246,
        16256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x7"
    },
    "6508": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16246,
        16256
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6509": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16246,
        16283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1976"
    },
    "6512": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16246,
        16283
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6513": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16259,
        16283
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6514": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16246,
        16283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2420"
    },
    "6517": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16246,
        16283
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6518": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16246,
        16283
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6519": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16242,
        16716
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A43"
    },
    "6522": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16242,
        16716
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6523": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16361,
        16370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "6525": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16361,
        16370
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6526": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16317,
        16332
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6528": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16317,
        16332
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6529": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6531": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6532": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "6537": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6539": {
      "op": "SHL"
    },
    "6540": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6541": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6542": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16352,
        16356
      ],
      "op": "ADDRESS",
      "path": "2"
    },
    "6543": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6545": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6546": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "ADD",
      "path": "2"
    },
    "6547": {
      "op": "MSTORE"
    },
    "6548": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16375,
        16380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2710"
    },
    "6551": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16375,
        16380
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6552": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16361,
        16370
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6559": {
      "op": "SHL"
    },
    "6560": {
      "op": "SUB"
    },
    "6561": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16317,
        16332
      ],
      "op": "AND",
      "path": "2"
    },
    "6562": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16317,
        16332
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6563": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16343
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "6568": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6571": {
      "op": "ADD"
    },
    "6572": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6574": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6576": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6577": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6578": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6579": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "SUB",
      "path": "2"
    },
    "6580": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6581": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6582": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "GAS",
      "path": "2"
    },
    "6583": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "STATICCALL",
      "path": "2"
    },
    "6584": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6585": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6586": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6587": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19C8"
    },
    "6590": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6591": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6592": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6594": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6595": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "6596": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6597": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6599": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "REVERT",
      "path": "2"
    },
    "6600": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6601": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "POP",
      "path": "2"
    },
    "6602": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "POP",
      "path": "2"
    },
    "6603": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "POP",
      "path": "2"
    },
    "6604": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "POP",
      "path": "2"
    },
    "6605": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6607": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6608": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "6609": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6611": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "NOT",
      "path": "2"
    },
    "6612": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "6614": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6615": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "ADD",
      "path": "2"
    },
    "6616": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "AND",
      "path": "2"
    },
    "6617": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6618": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "ADD",
      "path": "2"
    },
    "6619": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6620": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6622": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6623": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "POP",
      "path": "2"
    },
    "6624": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6625": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "ADD",
      "path": "2"
    },
    "6626": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6627": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19EC"
    },
    "6630": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6631": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6632": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2434"
    },
    "6635": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16310,
        16358
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6636": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16358
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6637": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19F6"
    },
    "6640": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16370
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6641": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16370
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6642": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23E4"
    },
    "6645": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16310,
        16370
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6646": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16310,
        16370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6647": {
      "branch": 143,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16308,
        16380
      ],
      "op": "GT",
      "path": "2"
    },
    "6648": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16305,
        16669
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A29"
    },
    "6651": {
      "branch": 143,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16305,
        16669
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6652": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16496,
        16505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x15"
    },
    "6654": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16496,
        16505
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6655": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16477,
        16486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "6657": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16477,
        16486
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6658": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16477,
        16493
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A0C"
    },
    "6661": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16477,
        16493
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6662": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16491,
        16492
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6664": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16477,
        16490
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1854"
    },
    "6667": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16477,
        16493
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6668": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16477,
        16493
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6669": {
      "branch": 144,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16477,
        16505
      ],
      "op": "GT",
      "path": "2"
    },
    "6670": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16474,
        16578
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6671": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16474,
        16578
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A24"
    },
    "6674": {
      "branch": 144,
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16474,
        16578
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6675": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16547,
        16556
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 98,
      "value": "0x14"
    },
    "6677": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16547,
        16556
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6678": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16547,
        16563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A20"
    },
    "6681": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16547,
        16563
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6682": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16561,
        16562
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "6684": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16547,
        16560
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1854"
    },
    "6687": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16547,
        16563
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6688": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16547,
        16563
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6689": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16535,
        16544
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "6691": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16535,
        16563
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6692": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16474,
        16578
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6693": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16305,
        16669
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A3B"
    },
    "6696": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16305,
        16669
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6697": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16305,
        16669
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6698": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16640,
        16649
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 99,
      "value": "0x14"
    },
    "6700": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16640,
        16649
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6701": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16640,
        16657
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A37"
    },
    "6704": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16640,
        16657
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6705": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16655,
        16656
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "6707": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16640,
        16654
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5B"
    },
    "6710": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16640,
        16657
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6711": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16640,
        16657
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6712": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16628,
        16637
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x14"
    },
    "6714": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16628,
        16657
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6715": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16305,
        16669
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6716": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16688,
        16709
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 100,
      "value": "0x1A43"
    },
    "6719": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16688,
        16707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BC0"
    },
    "6722": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16688,
        16709
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6723": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16688,
        16709
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6724": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16756,
        16772
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 101,
      "value": "0x1A4E"
    },
    "6727": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16771,
        16772
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6729": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16756,
        16768
      ],
      "op": "NUMBER",
      "path": "2"
    },
    "6730": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16756,
        16772
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222C"
    },
    "6733": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "i",
      "offset": [
        16756,
        16772
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6734": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16756,
        16772
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6735": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16746,
        16773
      ],
      "op": "BLOCKHASH",
      "path": "2"
    },
    "6736": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16728,
        16743
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC"
    },
    "6738": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "offset": [
        16728,
        16773
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6739": {
      "fn": "ForgeMining._startNewMiningEpoch",
      "jump": "o",
      "offset": [
        15268,
        16776
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6740": {
      "fn": "SafeMath2.add",
      "offset": [
        3680,
        3840
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6741": {
      "fn": "SafeMath2.add",
      "offset": [
        3738,
        3745
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6743": {
      "fn": "SafeMath2.add",
      "offset": [
        3738,
        3745
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6744": {
      "fn": "SafeMath2.add",
      "offset": [
        3769,
        3774
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A61"
    },
    "6747": {
      "fn": "SafeMath2.add",
      "offset": [
        3773,
        3774
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6748": {
      "fn": "SafeMath2.add",
      "offset": [
        3769,
        3770
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6749": {
      "fn": "SafeMath2.add",
      "offset": [
        3769,
        3774
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B0"
    },
    "6752": {
      "fn": "SafeMath2.add",
      "jump": "i",
      "offset": [
        3769,
        3774
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6753": {
      "fn": "SafeMath2.add",
      "offset": [
        3769,
        3774
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6754": {
      "fn": "SafeMath2.add",
      "offset": [
        3757,
        3774
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6755": {
      "fn": "SafeMath2.add",
      "offset": [
        3757,
        3774
      ],
      "op": "POP",
      "path": "2"
    },
    "6756": {
      "fn": "SafeMath2.add",
      "offset": [
        3797,
        3798
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 102
    },
    "6757": {
      "fn": "SafeMath2.add",
      "offset": [
        3792,
        3793
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6758": {
      "fn": "SafeMath2.add",
      "offset": [
        3792,
        3798
      ],
      "op": "LT",
      "path": "2"
    },
    "6759": {
      "branch": 145,
      "fn": "SafeMath2.add",
      "offset": [
        3792,
        3798
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6760": {
      "fn": "SafeMath2.add",
      "offset": [
        3784,
        3815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189B"
    },
    "6763": {
      "branch": 145,
      "fn": "SafeMath2.add",
      "offset": [
        3784,
        3815
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6764": {
      "fn": "SafeMath2.add",
      "offset": [
        3784,
        3815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6766": {
      "fn": "SafeMath2.add",
      "offset": [
        3784,
        3815
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6767": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6771": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6773": {
      "op": "SHL"
    },
    "6774": {
      "fn": "SafeMath2.add",
      "offset": [
        3784,
        3815
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6775": {
      "fn": "SafeMath2.add",
      "offset": [
        3784,
        3815
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6778": {
      "fn": "SafeMath2.add",
      "offset": [
        3784,
        3815
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6780": {
      "fn": "SafeMath2.add",
      "offset": [
        3784,
        3815
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6781": {
      "fn": "SafeMath2.add",
      "offset": [
        3784,
        3815
      ],
      "op": "ADD",
      "path": "2"
    },
    "6782": {
      "op": "MSTORE"
    },
    "6783": {
      "op": "PUSH1",
      "value": "0xC"
    },
    "6785": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6787": {
      "op": "DUP3"
    },
    "6788": {
      "op": "ADD"
    },
    "6789": {
      "op": "MSTORE"
    },
    "6790": {
      "op": "PUSH12",
      "value": "0x416464206F766572666C6F77"
    },
    "6803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6805": {
      "op": "SHL"
    },
    "6806": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6808": {
      "op": "DUP3"
    },
    "6809": {
      "op": "ADD"
    },
    "6810": {
      "op": "MSTORE"
    },
    "6811": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6813": {
      "op": "ADD"
    },
    "6814": {
      "fn": "SafeMath2.add",
      "offset": [
        3784,
        3815
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x923"
    },
    "6817": {
      "op": "JUMP"
    },
    "6818": {
      "fn": "SafeMath2.sub",
      "offset": [
        3846,
        3984
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6819": {
      "fn": "SafeMath2.sub",
      "offset": [
        3904,
        3911
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6821": {
      "fn": "SafeMath2.sub",
      "offset": [
        3936,
        3937
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 103
    },
    "6822": {
      "fn": "SafeMath2.sub",
      "offset": [
        3931,
        3932
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6823": {
      "fn": "SafeMath2.sub",
      "offset": [
        3931,
        3937
      ],
      "op": "LT",
      "path": "2"
    },
    "6824": {
      "branch": 146,
      "fn": "SafeMath2.sub",
      "offset": [
        3931,
        3937
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6825": {
      "fn": "SafeMath2.sub",
      "offset": [
        3923,
        3955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AE4"
    },
    "6828": {
      "branch": 146,
      "fn": "SafeMath2.sub",
      "offset": [
        3923,
        3955
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6829": {
      "fn": "SafeMath2.sub",
      "offset": [
        3923,
        3955
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6831": {
      "fn": "SafeMath2.sub",
      "offset": [
        3923,
        3955
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6832": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6836": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6838": {
      "op": "SHL"
    },
    "6839": {
      "fn": "SafeMath2.sub",
      "offset": [
        3923,
        3955
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6840": {
      "fn": "SafeMath2.sub",
      "offset": [
        3923,
        3955
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6843": {
      "fn": "SafeMath2.sub",
      "offset": [
        3923,
        3955
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6845": {
      "fn": "SafeMath2.sub",
      "offset": [
        3923,
        3955
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6846": {
      "fn": "SafeMath2.sub",
      "offset": [
        3923,
        3955
      ],
      "op": "ADD",
      "path": "2"
    },
    "6847": {
      "op": "MSTORE"
    },
    "6848": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "6850": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6852": {
      "op": "DUP3"
    },
    "6853": {
      "op": "ADD"
    },
    "6854": {
      "op": "MSTORE"
    },
    "6855": {
      "op": "PUSH13",
      "value": "0x53756220756E646572666C6F77"
    },
    "6869": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "6871": {
      "op": "SHL"
    },
    "6872": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6874": {
      "op": "DUP3"
    },
    "6875": {
      "op": "ADD"
    },
    "6876": {
      "op": "MSTORE"
    },
    "6877": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6879": {
      "op": "ADD"
    },
    "6880": {
      "fn": "SafeMath2.sub",
      "offset": [
        3923,
        3955
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x923"
    },
    "6883": {
      "op": "JUMP"
    },
    "6884": {
      "fn": "SafeMath2.sub",
      "offset": [
        3923,
        3955
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6885": {
      "fn": "SafeMath2.sub",
      "offset": [
        3972,
        3977
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 104,
      "value": "0x189B"
    },
    "6888": {
      "fn": "SafeMath2.sub",
      "offset": [
        3976,
        3977
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6889": {
      "fn": "SafeMath2.sub",
      "offset": [
        3972,
        3973
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6890": {
      "fn": "SafeMath2.sub",
      "offset": [
        3972,
        3977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222C"
    },
    "6893": {
      "fn": "SafeMath2.sub",
      "jump": "i",
      "offset": [
        3972,
        3977
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6894": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4359,
        4583
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6895": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4422,
        4429
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6897": {
      "branch": 147,
      "fn": "SafeMath2.divRound",
      "offset": [
        4449,
        4455
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 105
    },
    "6898": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4441,
        4471
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B2B"
    },
    "6901": {
      "branch": 147,
      "fn": "SafeMath2.divRound",
      "offset": [
        4441,
        4471
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6902": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4441,
        4471
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6904": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4441,
        4471
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6905": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6909": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6911": {
      "op": "SHL"
    },
    "6912": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4441,
        4471
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6913": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4441,
        4471
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6914": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6916": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4441,
        4471
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6918": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4441,
        4471
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6919": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4441,
        4471
      ],
      "op": "ADD",
      "path": "2"
    },
    "6920": {
      "op": "MSTORE"
    },
    "6921": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "6923": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6925": {
      "op": "DUP3"
    },
    "6926": {
      "op": "ADD"
    },
    "6927": {
      "op": "MSTORE"
    },
    "6928": {
      "op": "PUSH11",
      "value": "0x446976206279207A65726F"
    },
    "6940": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "6942": {
      "op": "SHL"
    },
    "6943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6945": {
      "op": "DUP3"
    },
    "6946": {
      "op": "ADD"
    },
    "6947": {
      "op": "MSTORE"
    },
    "6948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6950": {
      "op": "ADD"
    },
    "6951": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4441,
        4471
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x923"
    },
    "6954": {
      "op": "JUMP"
    },
    "6955": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4441,
        4471
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6956": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4481,
        4490
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6958": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4493,
        4498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B37"
    },
    "6961": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4497,
        4498
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6962": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4493,
        4494
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6963": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4493,
        4498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23E4"
    },
    "6966": {
      "fn": "SafeMath2.divRound",
      "jump": "i",
      "offset": [
        4493,
        4498
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6967": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4493,
        4498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6968": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4481,
        4498
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6969": {
      "op": "POP"
    },
    "6970": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4512,
        4517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B43"
    },
    "6973": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4516,
        4517
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6974": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4512,
        4513
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6975": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4512,
        4517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2420"
    },
    "6978": {
      "fn": "SafeMath2.divRound",
      "jump": "i",
      "offset": [
        4512,
        4517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6979": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4512,
        4517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6980": {
      "branch": 148,
      "fn": "SafeMath2.divRound",
      "offset": [
        4512,
        4522
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6981": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4508,
        4558
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189B"
    },
    "6984": {
      "branch": 148,
      "fn": "SafeMath2.divRound",
      "offset": [
        4508,
        4558
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6985": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4542,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 106,
      "value": "0x1B53"
    },
    "6988": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4542,
        4543
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6989": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4546,
        4547
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6991": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4542,
        4547
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22B0"
    },
    "6994": {
      "fn": "SafeMath2.divRound",
      "jump": "i",
      "offset": [
        4542,
        4547
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6995": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4542,
        4547
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6996": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4538,
        4547
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "6997": {
      "fn": "SafeMath2.divRound",
      "offset": [
        4359,
        4583
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "6998": {
      "op": "POP"
    },
    "6999": {
      "op": "POP"
    },
    "7000": {
      "op": "POP"
    },
    "7001": {
      "op": "POP"
    },
    "7002": {
      "fn": "SafeMath2.divRound",
      "jump": "o",
      "offset": [
        4359,
        4583
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7003": {
      "fn": "SafeMath2.mult",
      "offset": [
        3990,
        4211
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7004": {
      "fn": "SafeMath2.mult",
      "offset": [
        4049,
        4056
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7006": {
      "branch": 149,
      "fn": "SafeMath2.mult",
      "offset": [
        4072,
        4078
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7007": {
      "fn": "SafeMath2.mult",
      "offset": [
        4068,
        4113
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B6A"
    },
    "7010": {
      "branch": 149,
      "fn": "SafeMath2.mult",
      "offset": [
        4068,
        4113
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7011": {
      "op": "POP"
    },
    "7012": {
      "fn": "SafeMath2.mult",
      "offset": [
        4101,
        4102
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 107,
      "value": "0x0"
    },
    "7014": {
      "fn": "SafeMath2.mult",
      "offset": [
        4094,
        4102
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6DA"
    },
    "7017": {
      "fn": "SafeMath2.mult",
      "offset": [
        4094,
        4102
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7018": {
      "fn": "SafeMath2.mult",
      "offset": [
        4068,
        4113
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7019": {
      "fn": "SafeMath2.mult",
      "offset": [
        4123,
        4132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7021": {
      "fn": "SafeMath2.mult",
      "offset": [
        4135,
        4140
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B76"
    },
    "7024": {
      "fn": "SafeMath2.mult",
      "offset": [
        4139,
        4140
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7025": {
      "fn": "SafeMath2.mult",
      "offset": [
        4135,
        4136
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7026": {
      "fn": "SafeMath2.mult",
      "offset": [
        4135,
        4140
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "7029": {
      "fn": "SafeMath2.mult",
      "jump": "i",
      "offset": [
        4135,
        4140
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7030": {
      "fn": "SafeMath2.mult",
      "offset": [
        4135,
        4140
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7031": {
      "fn": "SafeMath2.mult",
      "offset": [
        4123,
        4140
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7032": {
      "op": "POP"
    },
    "7033": {
      "fn": "SafeMath2.mult",
      "offset": [
        4167,
        4168
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 108
    },
    "7034": {
      "fn": "SafeMath2.mult",
      "offset": [
        4158,
        4163
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B83"
    },
    "7037": {
      "fn": "SafeMath2.mult",
      "offset": [
        4162,
        4163
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7038": {
      "fn": "SafeMath2.mult",
      "offset": [
        4123,
        4140
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7039": {
      "fn": "SafeMath2.mult",
      "offset": [
        4158,
        4163
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23E4"
    },
    "7042": {
      "fn": "SafeMath2.mult",
      "jump": "i",
      "offset": [
        4158,
        4163
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7043": {
      "fn": "SafeMath2.mult",
      "offset": [
        4158,
        4163
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7044": {
      "branch": 150,
      "fn": "SafeMath2.mult",
      "offset": [
        4158,
        4168
      ],
      "op": "EQ",
      "path": "2"
    },
    "7045": {
      "fn": "SafeMath2.mult",
      "offset": [
        4150,
        4186
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x189B"
    },
    "7048": {
      "branch": 150,
      "fn": "SafeMath2.mult",
      "offset": [
        4150,
        4186
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7049": {
      "fn": "SafeMath2.mult",
      "offset": [
        4150,
        4186
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7051": {
      "fn": "SafeMath2.mult",
      "offset": [
        4150,
        4186
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7052": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7056": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7058": {
      "op": "SHL"
    },
    "7059": {
      "fn": "SafeMath2.mult",
      "offset": [
        4150,
        4186
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7060": {
      "fn": "SafeMath2.mult",
      "offset": [
        4150,
        4186
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7063": {
      "fn": "SafeMath2.mult",
      "offset": [
        4150,
        4186
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7065": {
      "fn": "SafeMath2.mult",
      "offset": [
        4150,
        4186
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7066": {
      "fn": "SafeMath2.mult",
      "offset": [
        4150,
        4186
      ],
      "op": "ADD",
      "path": "2"
    },
    "7067": {
      "op": "MSTORE"
    },
    "7068": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "7070": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7072": {
      "op": "DUP3"
    },
    "7073": {
      "op": "ADD"
    },
    "7074": {
      "op": "MSTORE"
    },
    "7075": {
      "op": "PUSH13",
      "value": "0x4D756C74206F766572666C6F77"
    },
    "7089": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "7091": {
      "op": "SHL"
    },
    "7092": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7094": {
      "op": "DUP3"
    },
    "7095": {
      "op": "ADD"
    },
    "7096": {
      "op": "MSTORE"
    },
    "7097": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7099": {
      "op": "ADD"
    },
    "7100": {
      "fn": "SafeMath2.mult",
      "offset": [
        4150,
        4186
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x923"
    },
    "7103": {
      "op": "JUMP"
    },
    "7104": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        16961,
        18668
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7105": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17118,
        17148
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7107": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17118,
        17148
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7108": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17035,
        17050
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "7109": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17035,
        17050
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7110": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17012,
        17032
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7112": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17012,
        17032
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7113": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17103,
        17148
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BD2"
    },
    "7116": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17103,
        17148
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7117": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17035,
        17050
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7118": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17103,
        17148
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x222C"
    },
    "7121": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        17103,
        17148
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7122": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17103,
        17148
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7123": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17178,
        17202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x8"
    },
    "7125": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17178,
        17202
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7126": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17060,
        17148
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7127": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17060,
        17148
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7128": {
      "op": "POP"
    },
    "7129": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17159,
        17175
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7131": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17246,
        17270
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BE6"
    },
    "7134": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17178,
        17202
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7135": {
      "offset": [
        5902,
        5909
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x870"
    },
    "7138": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17246,
        17270
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2243"
    },
    "7141": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        17246,
        17270
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7142": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17246,
        17270
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7143": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17219,
        17270
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7144": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17219,
        17270
      ],
      "op": "POP",
      "path": "2"
    },
    "7145": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17423,
        17442
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7146": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17385,
        17420
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7147": {
      "branch": 151,
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17385,
        17442
      ],
      "op": "LT",
      "path": "2"
    },
    "7148": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17381,
        18364
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7149": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17381,
        18364
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C5B"
    },
    "7152": {
      "branch": 151,
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17381,
        18364
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7153": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17465,
        17486
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7155": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17489,
        17563
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C01"
    },
    "7158": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17526,
        17561
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7159": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17490,
        17519
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x726"
    },
    "7162": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17490,
        17509
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7163": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17515,
        17518
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "7165": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17490,
        17514
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5B"
    },
    "7168": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        17490,
        17519
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7169": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17489,
        17563
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7170": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17573,
        17574
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 109,
      "value": "0x1"
    },
    "7172": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17566,
        17570
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1D"
    },
    "7174": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17566,
        17574
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7175": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17465,
        17563
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7176": {
      "op": "POP"
    },
    "7177": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17586,
        17613
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7179": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17616,
        17661
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C21"
    },
    "7182": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17656,
        17660
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "7185": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17616,
        17641
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C1B"
    },
    "7188": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17465,
        17563
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7189": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17637,
        17640
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "7191": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17616,
        17636
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA2"
    },
    "7194": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        17616,
        17641
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7195": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17616,
        17641
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7196": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17616,
        17655
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7197": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17616,
        17655
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE6"
    },
    "7200": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        17616,
        17661
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7201": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17616,
        17661
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7202": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17586,
        17661
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7203": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17586,
        17661
      ],
      "op": "POP",
      "path": "2"
    },
    "7204": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17866,
        17935
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 110,
      "value": "0x1C50"
    },
    "7207": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17934
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C47"
    },
    "7210": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17911,
        17933
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7211": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17905
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C41"
    },
    "7214": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17900,
        17904
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7D0"
    },
    "7217": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17895
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7219": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17895
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7220": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17899
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1854"
    },
    "7223": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17899
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7224": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17905
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7225": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17905
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7226": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17905
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "7231": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17905
      ],
      "op": "AND",
      "path": "2"
    },
    "7232": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        17883,
        17905
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7233": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17905
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7234": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17910
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7235": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17910
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5B"
    },
    "7238": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        17883,
        17934
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7239": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17883,
        17934
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7240": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17866,
        17878
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7242": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17866,
        17878
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7243": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17866,
        17878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7244": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17866,
        17882
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA2"
    },
    "7247": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        17866,
        17935
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7248": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17866,
        17935
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7249": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17851,
        17863
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7251": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17851,
        17935
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7252": {
      "op": "POP"
    },
    "7253": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17381,
        18364
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB5"
    },
    "7256": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17381,
        18364
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7257": {
      "op": "POP"
    },
    "7258": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17381,
        18364
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7259": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17381,
        18364
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7260": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17980,
        18003
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7262": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18006,
        18080
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C6C"
    },
    "7265": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18059,
        18078
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7266": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18007,
        18052
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x726"
    },
    "7269": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18007,
        18042
      ],
      "op": "DUP7",
      "path": "2"
    },
    "7270": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18048,
        18051
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "7272": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18007,
        18047
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B5B"
    },
    "7275": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18007,
        18052
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7276": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18006,
        18080
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7277": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18090,
        18091
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 111,
      "value": "0x2"
    },
    "7279": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18083,
        18087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1D"
    },
    "7281": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18083,
        18091
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7282": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17980,
        18080
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7283": {
      "op": "POP"
    },
    "7284": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18103,
        18132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7286": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18135,
        18182
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C86"
    },
    "7289": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18177,
        18181
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3E8"
    },
    "7292": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18135,
        18162
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C1B"
    },
    "7295": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17980,
        18080
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7296": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18158,
        18161
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x64"
    },
    "7298": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18135,
        18157
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AA2"
    },
    "7301": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18135,
        18162
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7302": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18135,
        18182
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7303": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18103,
        18182
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7304": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18103,
        18182
      ],
      "op": "POP",
      "path": "2"
    },
    "7305": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18264,
        18335
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 112,
      "value": "0x1CAF"
    },
    "7308": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18281,
        18334
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CA6"
    },
    "7311": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18309,
        18333
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7312": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18281,
        18303
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C41"
    },
    "7315": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18298,
        18302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7D0"
    },
    "7318": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18281,
        18293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7320": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18281,
        18293
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7321": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18281,
        18297
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1854"
    },
    "7324": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18281,
        18297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7325": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18281,
        18303
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7326": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18281,
        18303
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7327": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18281,
        18303
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xFFFFFFFF"
    },
    "7332": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18281,
        18303
      ],
      "op": "AND",
      "path": "2"
    },
    "7333": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18281,
        18303
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7334": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18281,
        18334
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7335": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18264,
        18276
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7337": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18264,
        18276
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7338": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18264,
        18276
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7339": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18264,
        18280
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A54"
    },
    "7342": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "i",
      "offset": [
        18264,
        18335
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7343": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18264,
        18335
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7344": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18249,
        18261
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7346": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18249,
        18335
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7347": {
      "op": "POP"
    },
    "7348": {
      "op": "POP"
    },
    "7349": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17381,
        18364
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7350": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18375,
        18405
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 113,
      "value": "0x6"
    },
    "7352": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18375,
        18420
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7353": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18375,
        18420
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7354": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18375,
        18420
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7355": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18449,
        18464
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x9"
    },
    "7357": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18449,
        18464
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7358": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18434,
        18446
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7360": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18434,
        18446
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7361": {
      "branch": 152,
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18434,
        18464
      ],
      "op": "LT",
      "path": "2"
    },
    "7362": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18431,
        18544
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7363": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18431,
        18544
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CCD"
    },
    "7366": {
      "branch": 152,
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18431,
        18544
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7367": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18518,
        18533
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 114,
      "value": "0x9"
    },
    "7369": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18518,
        18533
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7370": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18503,
        18515
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7372": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18503,
        18533
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7373": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18431,
        18544
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7374": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18572,
        18587
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA"
    },
    "7376": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18572,
        18587
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7377": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18557,
        18569
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7379": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18557,
        18569
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7380": {
      "branch": 153,
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18557,
        18587
      ],
      "op": "GT",
      "path": "2"
    },
    "7381": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18554,
        18662
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7382": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18554,
        18662
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CE0"
    },
    "7385": {
      "branch": 153,
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18554,
        18662
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7386": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18636,
        18651
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 115,
      "value": "0xA"
    },
    "7388": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18636,
        18651
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7389": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18621,
        18633
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xB"
    },
    "7391": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18621,
        18651
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "7392": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        18554,
        18662
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7393": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17001,
        18668
      ],
      "op": "POP",
      "path": "2"
    },
    "7394": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17001,
        18668
      ],
      "op": "POP",
      "path": "2"
    },
    "7395": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17001,
        18668
      ],
      "op": "POP",
      "path": "2"
    },
    "7396": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "offset": [
        17001,
        18668
      ],
      "op": "POP",
      "path": "2"
    },
    "7397": {
      "fn": "ForgeMining._reAdjustDifficulty",
      "jump": "o",
      "offset": [
        16961,
        18668
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7398": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4704,
        4830
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7399": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4766,
        4772
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7401": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4792,
        4793
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7402": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4788,
        4789
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7403": {
      "branch": 154,
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4788,
        4793
      ],
      "op": "GT",
      "path": "2"
    },
    "7404": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4785,
        4803
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7405": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4785,
        4803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CF7"
    },
    "7408": {
      "branch": 154,
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4785,
        4803
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7409": {
      "op": "POP"
    },
    "7410": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4802,
        4803
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 116
    },
    "7411": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4795,
        4803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6DA"
    },
    "7414": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4795,
        4803
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7415": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4785,
        4803
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7416": {
      "op": "POP"
    },
    "7417": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4821,
        4822
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 117
    },
    "7418": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4821,
        4822
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7419": {
      "fn": "ExtendedMath2.limitLessThan",
      "offset": [
        4704,
        4830
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7420": {
      "op": "POP"
    },
    "7421": {
      "fn": "ExtendedMath2.limitLessThan",
      "jump": "o",
      "offset": [
        4704,
        4830
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7422": {
      "op": "JUMPDEST"
    },
    "7423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7427": {
      "op": "DUP1"
    },
    "7428": {
      "op": "DUP4"
    },
    "7429": {
      "op": "MSTORE"
    },
    "7430": {
      "op": "DUP4"
    },
    "7431": {
      "op": "MLOAD"
    },
    "7432": {
      "op": "DUP1"
    },
    "7433": {
      "op": "DUP3"
    },
    "7434": {
      "op": "DUP6"
    },
    "7435": {
      "op": "ADD"
    },
    "7436": {
      "op": "MSTORE"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7439": {
      "op": "JUMPDEST"
    },
    "7440": {
      "op": "DUP2"
    },
    "7441": {
      "op": "DUP2"
    },
    "7442": {
      "op": "LT"
    },
    "7443": {
      "op": "ISZERO"
    },
    "7444": {
      "op": "PUSH2",
      "value": "0x1D2B"
    },
    "7447": {
      "op": "JUMPI"
    },
    "7448": {
      "op": "DUP6"
    },
    "7449": {
      "op": "DUP2"
    },
    "7450": {
      "op": "ADD"
    },
    "7451": {
      "op": "DUP4"
    },
    "7452": {
      "op": "ADD"
    },
    "7453": {
      "op": "MLOAD"
    },
    "7454": {
      "op": "DUP6"
    },
    "7455": {
      "op": "DUP3"
    },
    "7456": {
      "op": "ADD"
    },
    "7457": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7459": {
      "op": "ADD"
    },
    "7460": {
      "op": "MSTORE"
    },
    "7461": {
      "op": "DUP3"
    },
    "7462": {
      "op": "ADD"
    },
    "7463": {
      "op": "PUSH2",
      "value": "0x1D0F"
    },
    "7466": {
      "op": "JUMP"
    },
    "7467": {
      "op": "JUMPDEST"
    },
    "7468": {
      "op": "DUP2"
    },
    "7469": {
      "op": "DUP2"
    },
    "7470": {
      "op": "GT"
    },
    "7471": {
      "op": "ISZERO"
    },
    "7472": {
      "op": "PUSH2",
      "value": "0x1D3D"
    },
    "7475": {
      "op": "JUMPI"
    },
    "7476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7478": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7480": {
      "op": "DUP4"
    },
    "7481": {
      "op": "DUP8"
    },
    "7482": {
      "op": "ADD"
    },
    "7483": {
      "op": "ADD"
    },
    "7484": {
      "op": "MSTORE"
    },
    "7485": {
      "op": "JUMPDEST"
    },
    "7486": {
      "op": "POP"
    },
    "7487": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7489": {
      "op": "ADD"
    },
    "7490": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7492": {
      "op": "NOT"
    },
    "7493": {
      "op": "AND"
    },
    "7494": {
      "op": "SWAP3"
    },
    "7495": {
      "op": "SWAP1"
    },
    "7496": {
      "op": "SWAP3"
    },
    "7497": {
      "op": "ADD"
    },
    "7498": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7500": {
      "op": "ADD"
    },
    "7501": {
      "op": "SWAP4"
    },
    "7502": {
      "op": "SWAP3"
    },
    "7503": {
      "op": "POP"
    },
    "7504": {
      "op": "POP"
    },
    "7505": {
      "op": "POP"
    },
    "7506": {
      "jump": "o",
      "op": "JUMP"
    },
    "7507": {
      "op": "JUMPDEST"
    },
    "7508": {
      "op": "DUP1"
    },
    "7509": {
      "op": "CALLDATALOAD"
    },
    "7510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7516": {
      "op": "SHL"
    },
    "7517": {
      "op": "SUB"
    },
    "7518": {
      "op": "DUP2"
    },
    "7519": {
      "op": "AND"
    },
    "7520": {
      "op": "DUP2"
    },
    "7521": {
      "op": "EQ"
    },
    "7522": {
      "op": "PUSH2",
      "value": "0x1D6A"
    },
    "7525": {
      "op": "JUMPI"
    },
    "7526": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7528": {
      "op": "DUP1"
    },
    "7529": {
      "op": "REVERT"
    },
    "7530": {
      "op": "JUMPDEST"
    },
    "7531": {
      "op": "SWAP2"
    },
    "7532": {
      "op": "SWAP1"
    },
    "7533": {
      "op": "POP"
    },
    "7534": {
      "jump": "o",
      "op": "JUMP"
    },
    "7535": {
      "op": "JUMPDEST"
    },
    "7536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7538": {
      "op": "DUP1"
    },
    "7539": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7541": {
      "op": "DUP4"
    },
    "7542": {
      "op": "DUP6"
    },
    "7543": {
      "op": "SUB"
    },
    "7544": {
      "op": "SLT"
    },
    "7545": {
      "op": "ISZERO"
    },
    "7546": {
      "op": "PUSH2",
      "value": "0x1D82"
    },
    "7549": {
      "op": "JUMPI"
    },
    "7550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7552": {
      "op": "DUP1"
    },
    "7553": {
      "op": "REVERT"
    },
    "7554": {
      "op": "JUMPDEST"
    },
    "7555": {
      "op": "PUSH2",
      "value": "0x1D8B"
    },
    "7558": {
      "op": "DUP4"
    },
    "7559": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "7562": {
      "jump": "i",
      "op": "JUMP"
    },
    "7563": {
      "op": "JUMPDEST"
    },
    "7564": {
      "op": "SWAP5"
    },
    "7565": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7567": {
      "op": "SWAP4"
    },
    "7568": {
      "op": "SWAP1"
    },
    "7569": {
      "op": "SWAP4"
    },
    "7570": {
      "op": "ADD"
    },
    "7571": {
      "op": "CALLDATALOAD"
    },
    "7572": {
      "op": "SWAP4"
    },
    "7573": {
      "op": "POP"
    },
    "7574": {
      "op": "POP"
    },
    "7575": {
      "op": "POP"
    },
    "7576": {
      "jump": "o",
      "op": "JUMP"
    },
    "7577": {
      "op": "JUMPDEST"
    },
    "7578": {
      "op": "DUP1"
    },
    "7579": {
      "op": "ISZERO"
    },
    "7580": {
      "op": "ISZERO"
    },
    "7581": {
      "op": "DUP2"
    },
    "7582": {
      "op": "EQ"
    },
    "7583": {
      "op": "PUSH2",
      "value": "0x1DA7"
    },
    "7586": {
      "op": "JUMPI"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7589": {
      "op": "DUP1"
    },
    "7590": {
      "op": "REVERT"
    },
    "7591": {
      "op": "JUMPDEST"
    },
    "7592": {
      "op": "POP"
    },
    "7593": {
      "jump": "o",
      "op": "JUMP"
    },
    "7594": {
      "op": "JUMPDEST"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7597": {
      "op": "DUP1"
    },
    "7598": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7600": {
      "op": "DUP4"
    },
    "7601": {
      "op": "DUP6"
    },
    "7602": {
      "op": "SUB"
    },
    "7603": {
      "op": "SLT"
    },
    "7604": {
      "op": "ISZERO"
    },
    "7605": {
      "op": "PUSH2",
      "value": "0x1DBD"
    },
    "7608": {
      "op": "JUMPI"
    },
    "7609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7611": {
      "op": "DUP1"
    },
    "7612": {
      "op": "REVERT"
    },
    "7613": {
      "op": "JUMPDEST"
    },
    "7614": {
      "op": "DUP3"
    },
    "7615": {
      "op": "CALLDATALOAD"
    },
    "7616": {
      "op": "PUSH2",
      "value": "0x1DC8"
    },
    "7619": {
      "op": "DUP2"
    },
    "7620": {
      "op": "PUSH2",
      "value": "0x1D99"
    },
    "7623": {
      "jump": "i",
      "op": "JUMP"
    },
    "7624": {
      "op": "JUMPDEST"
    },
    "7625": {
      "op": "SWAP2"
    },
    "7626": {
      "op": "POP"
    },
    "7627": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7629": {
      "op": "DUP4"
    },
    "7630": {
      "op": "ADD"
    },
    "7631": {
      "op": "CALLDATALOAD"
    },
    "7632": {
      "op": "PUSH2",
      "value": "0x1DD8"
    },
    "7635": {
      "op": "DUP2"
    },
    "7636": {
      "op": "PUSH2",
      "value": "0x1D99"
    },
    "7639": {
      "jump": "i",
      "op": "JUMP"
    },
    "7640": {
      "op": "JUMPDEST"
    },
    "7641": {
      "op": "DUP1"
    },
    "7642": {
      "op": "SWAP2"
    },
    "7643": {
      "op": "POP"
    },
    "7644": {
      "op": "POP"
    },
    "7645": {
      "op": "SWAP3"
    },
    "7646": {
      "op": "POP"
    },
    "7647": {
      "op": "SWAP3"
    },
    "7648": {
      "op": "SWAP1"
    },
    "7649": {
      "op": "POP"
    },
    "7650": {
      "jump": "o",
      "op": "JUMP"
    },
    "7651": {
      "op": "JUMPDEST"
    },
    "7652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7654": {
      "op": "DUP1"
    },
    "7655": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7657": {
      "op": "DUP4"
    },
    "7658": {
      "op": "DUP6"
    },
    "7659": {
      "op": "SUB"
    },
    "7660": {
      "op": "SLT"
    },
    "7661": {
      "op": "ISZERO"
    },
    "7662": {
      "op": "PUSH2",
      "value": "0x1DF6"
    },
    "7665": {
      "op": "JUMPI"
    },
    "7666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7668": {
      "op": "DUP1"
    },
    "7669": {
      "op": "REVERT"
    },
    "7670": {
      "op": "JUMPDEST"
    },
    "7671": {
      "op": "POP"
    },
    "7672": {
      "op": "POP"
    },
    "7673": {
      "op": "DUP1"
    },
    "7674": {
      "op": "CALLDATALOAD"
    },
    "7675": {
      "op": "SWAP3"
    },
    "7676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7678": {
      "op": "SWAP1"
    },
    "7679": {
      "op": "SWAP2"
    },
    "7680": {
      "op": "ADD"
    },
    "7681": {
      "op": "CALLDATALOAD"
    },
    "7682": {
      "op": "SWAP2"
    },
    "7683": {
      "op": "POP"
    },
    "7684": {
      "jump": "o",
      "op": "JUMP"
    },
    "7685": {
      "op": "JUMPDEST"
    },
    "7686": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7691": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7693": {
      "op": "SHL"
    },
    "7694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7696": {
      "op": "MSTORE"
    },
    "7697": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7699": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7701": {
      "op": "MSTORE"
    },
    "7702": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7704": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7706": {
      "op": "REVERT"
    },
    "7707": {
      "op": "JUMPDEST"
    },
    "7708": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7710": {
      "op": "MLOAD"
    },
    "7711": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7713": {
      "op": "DUP3"
    },
    "7714": {
      "op": "ADD"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7717": {
      "op": "NOT"
    },
    "7718": {
      "op": "AND"
    },
    "7719": {
      "op": "DUP2"
    },
    "7720": {
      "op": "ADD"
    },
    "7721": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7730": {
      "op": "DUP2"
    },
    "7731": {
      "op": "GT"
    },
    "7732": {
      "op": "DUP3"
    },
    "7733": {
      "op": "DUP3"
    },
    "7734": {
      "op": "LT"
    },
    "7735": {
      "op": "OR"
    },
    "7736": {
      "op": "ISZERO"
    },
    "7737": {
      "op": "PUSH2",
      "value": "0x1E44"
    },
    "7740": {
      "op": "JUMPI"
    },
    "7741": {
      "op": "PUSH2",
      "value": "0x1E44"
    },
    "7744": {
      "op": "PUSH2",
      "value": "0x1E05"
    },
    "7747": {
      "jump": "i",
      "op": "JUMP"
    },
    "7748": {
      "op": "JUMPDEST"
    },
    "7749": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7751": {
      "op": "MSTORE"
    },
    "7752": {
      "op": "SWAP2"
    },
    "7753": {
      "op": "SWAP1"
    },
    "7754": {
      "op": "POP"
    },
    "7755": {
      "jump": "o",
      "op": "JUMP"
    },
    "7756": {
      "op": "JUMPDEST"
    },
    "7757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7759": {
      "op": "DUP3"
    },
    "7760": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7762": {
      "op": "DUP4"
    },
    "7763": {
      "op": "ADD"
    },
    "7764": {
      "op": "SLT"
    },
    "7765": {
      "op": "PUSH2",
      "value": "0x1E5D"
    },
    "7768": {
      "op": "JUMPI"
    },
    "7769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7771": {
      "op": "DUP1"
    },
    "7772": {
      "op": "REVERT"
    },
    "7773": {
      "op": "JUMPDEST"
    },
    "7774": {
      "op": "DUP2"
    },
    "7775": {
      "op": "CALLDATALOAD"
    },
    "7776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7778": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7787": {
      "op": "DUP3"
    },
    "7788": {
      "op": "GT"
    },
    "7789": {
      "op": "ISZERO"
    },
    "7790": {
      "op": "PUSH2",
      "value": "0x1E79"
    },
    "7793": {
      "op": "JUMPI"
    },
    "7794": {
      "op": "PUSH2",
      "value": "0x1E79"
    },
    "7797": {
      "op": "PUSH2",
      "value": "0x1E05"
    },
    "7800": {
      "jump": "i",
      "op": "JUMP"
    },
    "7801": {
      "op": "JUMPDEST"
    },
    "7802": {
      "op": "DUP2"
    },
    "7803": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "7805": {
      "op": "SHL"
    },
    "7806": {
      "op": "PUSH2",
      "value": "0x1E88"
    },
    "7809": {
      "op": "DUP3"
    },
    "7810": {
      "op": "DUP3"
    },
    "7811": {
      "op": "ADD"
    },
    "7812": {
      "op": "PUSH2",
      "value": "0x1E1B"
    },
    "7815": {
      "jump": "i",
      "op": "JUMP"
    },
    "7816": {
      "op": "JUMPDEST"
    },
    "7817": {
      "op": "SWAP3"
    },
    "7818": {
      "op": "DUP4"
    },
    "7819": {
      "op": "MSTORE"
    },
    "7820": {
      "op": "DUP5"
    },
    "7821": {
      "op": "DUP2"
    },
    "7822": {
      "op": "ADD"
    },
    "7823": {
      "op": "DUP3"
    },
    "7824": {
      "op": "ADD"
    },
    "7825": {
      "op": "SWAP3"
    },
    "7826": {
      "op": "DUP3"
    },
    "7827": {
      "op": "DUP2"
    },
    "7828": {
      "op": "ADD"
    },
    "7829": {
      "op": "SWAP1"
    },
    "7830": {
      "op": "DUP8"
    },
    "7831": {
      "op": "DUP6"
    },
    "7832": {
      "op": "GT"
    },
    "7833": {
      "op": "ISZERO"
    },
    "7834": {
      "op": "PUSH2",
      "value": "0x1EA2"
    },
    "7837": {
      "op": "JUMPI"
    },
    "7838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7840": {
      "op": "DUP1"
    },
    "7841": {
      "op": "REVERT"
    },
    "7842": {
      "op": "JUMPDEST"
    },
    "7843": {
      "op": "DUP4"
    },
    "7844": {
      "op": "DUP8"
    },
    "7845": {
      "op": "ADD"
    },
    "7846": {
      "op": "SWAP3"
    },
    "7847": {
      "op": "POP"
    },
    "7848": {
      "op": "JUMPDEST"
    },
    "7849": {
      "op": "DUP5"
    },
    "7850": {
      "op": "DUP4"
    },
    "7851": {
      "op": "LT"
    },
    "7852": {
      "op": "ISZERO"
    },
    "7853": {
      "op": "PUSH2",
      "value": "0x1EC8"
    },
    "7856": {
      "op": "JUMPI"
    },
    "7857": {
      "op": "PUSH2",
      "value": "0x1EB9"
    },
    "7860": {
      "op": "DUP4"
    },
    "7861": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "7864": {
      "jump": "i",
      "op": "JUMP"
    },
    "7865": {
      "op": "JUMPDEST"
    },
    "7866": {
      "op": "DUP3"
    },
    "7867": {
      "op": "MSTORE"
    },
    "7868": {
      "op": "SWAP2"
    },
    "7869": {
      "op": "DUP4"
    },
    "7870": {
      "op": "ADD"
    },
    "7871": {
      "op": "SWAP2"
    },
    "7872": {
      "op": "SWAP1"
    },
    "7873": {
      "op": "DUP4"
    },
    "7874": {
      "op": "ADD"
    },
    "7875": {
      "op": "SWAP1"
    },
    "7876": {
      "op": "PUSH2",
      "value": "0x1EA8"
    },
    "7879": {
      "op": "JUMP"
    },
    "7880": {
      "op": "JUMPDEST"
    },
    "7881": {
      "op": "SWAP8"
    },
    "7882": {
      "op": "SWAP7"
    },
    "7883": {
      "op": "POP"
    },
    "7884": {
      "op": "POP"
    },
    "7885": {
      "op": "POP"
    },
    "7886": {
      "op": "POP"
    },
    "7887": {
      "op": "POP"
    },
    "7888": {
      "op": "POP"
    },
    "7889": {
      "op": "POP"
    },
    "7890": {
      "jump": "o",
      "op": "JUMP"
    },
    "7891": {
      "op": "JUMPDEST"
    },
    "7892": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7894": {
      "op": "DUP1"
    },
    "7895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7897": {
      "op": "DUP1"
    },
    "7898": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7900": {
      "op": "DUP6"
    },
    "7901": {
      "op": "DUP8"
    },
    "7902": {
      "op": "SUB"
    },
    "7903": {
      "op": "SLT"
    },
    "7904": {
      "op": "ISZERO"
    },
    "7905": {
      "op": "PUSH2",
      "value": "0x1EE9"
    },
    "7908": {
      "op": "JUMPI"
    },
    "7909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7911": {
      "op": "DUP1"
    },
    "7912": {
      "op": "REVERT"
    },
    "7913": {
      "op": "JUMPDEST"
    },
    "7914": {
      "op": "DUP5"
    },
    "7915": {
      "op": "CALLDATALOAD"
    },
    "7916": {
      "op": "SWAP4"
    },
    "7917": {
      "op": "POP"
    },
    "7918": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7920": {
      "op": "DUP6"
    },
    "7921": {
      "op": "ADD"
    },
    "7922": {
      "op": "CALLDATALOAD"
    },
    "7923": {
      "op": "SWAP3"
    },
    "7924": {
      "op": "POP"
    },
    "7925": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7927": {
      "op": "DUP6"
    },
    "7928": {
      "op": "ADD"
    },
    "7929": {
      "op": "CALLDATALOAD"
    },
    "7930": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "7939": {
      "op": "DUP2"
    },
    "7940": {
      "op": "GT"
    },
    "7941": {
      "op": "ISZERO"
    },
    "7942": {
      "op": "PUSH2",
      "value": "0x1F0E"
    },
    "7945": {
      "op": "JUMPI"
    },
    "7946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7948": {
      "op": "DUP1"
    },
    "7949": {
      "op": "REVERT"
    },
    "7950": {
      "op": "JUMPDEST"
    },
    "7951": {
      "op": "PUSH2",
      "value": "0x1F1A"
    },
    "7954": {
      "op": "DUP8"
    },
    "7955": {
      "op": "DUP3"
    },
    "7956": {
      "op": "DUP9"
    },
    "7957": {
      "op": "ADD"
    },
    "7958": {
      "op": "PUSH2",
      "value": "0x1E4C"
    },
    "7961": {
      "jump": "i",
      "op": "JUMP"
    },
    "7962": {
      "op": "JUMPDEST"
    },
    "7963": {
      "op": "SWAP3"
    },
    "7964": {
      "op": "POP"
    },
    "7965": {
      "op": "POP"
    },
    "7966": {
      "op": "PUSH2",
      "value": "0x1F29"
    },
    "7969": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7971": {
      "op": "DUP7"
    },
    "7972": {
      "op": "ADD"
    },
    "7973": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "7976": {
      "jump": "i",
      "op": "JUMP"
    },
    "7977": {
      "op": "JUMPDEST"
    },
    "7978": {
      "op": "SWAP1"
    },
    "7979": {
      "op": "POP"
    },
    "7980": {
      "op": "SWAP3"
    },
    "7981": {
      "op": "SWAP6"
    },
    "7982": {
      "op": "SWAP2"
    },
    "7983": {
      "op": "SWAP5"
    },
    "7984": {
      "op": "POP"
    },
    "7985": {
      "op": "SWAP3"
    },
    "7986": {
      "op": "POP"
    },
    "7987": {
      "jump": "o",
      "op": "JUMP"
    },
    "7988": {
      "op": "JUMPDEST"
    },
    "7989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7991": {
      "op": "DUP1"
    },
    "7992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7994": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7996": {
      "op": "DUP5"
    },
    "7997": {
      "op": "DUP7"
    },
    "7998": {
      "op": "SUB"
    },
    "7999": {
      "op": "SLT"
    },
    "8000": {
      "op": "ISZERO"
    },
    "8001": {
      "op": "PUSH2",
      "value": "0x1F49"
    },
    "8004": {
      "op": "JUMPI"
    },
    "8005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8007": {
      "op": "DUP1"
    },
    "8008": {
      "op": "REVERT"
    },
    "8009": {
      "op": "JUMPDEST"
    },
    "8010": {
      "op": "PUSH2",
      "value": "0x1F52"
    },
    "8013": {
      "op": "DUP5"
    },
    "8014": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "8017": {
      "jump": "i",
      "op": "JUMP"
    },
    "8018": {
      "op": "JUMPDEST"
    },
    "8019": {
      "op": "SWAP3"
    },
    "8020": {
      "op": "POP"
    },
    "8021": {
      "op": "PUSH2",
      "value": "0x1F60"
    },
    "8024": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8026": {
      "op": "DUP6"
    },
    "8027": {
      "op": "ADD"
    },
    "8028": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "8031": {
      "jump": "i",
      "op": "JUMP"
    },
    "8032": {
      "op": "JUMPDEST"
    },
    "8033": {
      "op": "SWAP2"
    },
    "8034": {
      "op": "POP"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8037": {
      "op": "DUP5"
    },
    "8038": {
      "op": "ADD"
    },
    "8039": {
      "op": "CALLDATALOAD"
    },
    "8040": {
      "op": "SWAP1"
    },
    "8041": {
      "op": "POP"
    },
    "8042": {
      "op": "SWAP3"
    },
    "8043": {
      "op": "POP"
    },
    "8044": {
      "op": "SWAP3"
    },
    "8045": {
      "op": "POP"
    },
    "8046": {
      "op": "SWAP3"
    },
    "8047": {
      "jump": "o",
      "op": "JUMP"
    },
    "8048": {
      "op": "JUMPDEST"
    },
    "8049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8051": {
      "op": "DUP1"
    },
    "8052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8054": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8056": {
      "op": "DUP5"
    },
    "8057": {
      "op": "DUP7"
    },
    "8058": {
      "op": "SUB"
    },
    "8059": {
      "op": "SLT"
    },
    "8060": {
      "op": "ISZERO"
    },
    "8061": {
      "op": "PUSH2",
      "value": "0x1F85"
    },
    "8064": {
      "op": "JUMPI"
    },
    "8065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8067": {
      "op": "DUP1"
    },
    "8068": {
      "op": "REVERT"
    },
    "8069": {
      "op": "JUMPDEST"
    },
    "8070": {
      "op": "PUSH2",
      "value": "0x1F8E"
    },
    "8073": {
      "op": "DUP5"
    },
    "8074": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "8077": {
      "jump": "i",
      "op": "JUMP"
    },
    "8078": {
      "op": "JUMPDEST"
    },
    "8079": {
      "op": "SWAP3"
    },
    "8080": {
      "op": "POP"
    },
    "8081": {
      "op": "PUSH2",
      "value": "0x1F9C"
    },
    "8084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8086": {
      "op": "DUP6"
    },
    "8087": {
      "op": "ADD"
    },
    "8088": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "8091": {
      "jump": "i",
      "op": "JUMP"
    },
    "8092": {
      "op": "JUMPDEST"
    },
    "8093": {
      "op": "SWAP2"
    },
    "8094": {
      "op": "POP"
    },
    "8095": {
      "op": "PUSH2",
      "value": "0x1FAA"
    },
    "8098": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8100": {
      "op": "DUP6"
    },
    "8101": {
      "op": "ADD"
    },
    "8102": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "8105": {
      "jump": "i",
      "op": "JUMP"
    },
    "8106": {
      "op": "JUMPDEST"
    },
    "8107": {
      "op": "SWAP1"
    },
    "8108": {
      "op": "POP"
    },
    "8109": {
      "op": "SWAP3"
    },
    "8110": {
      "op": "POP"
    },
    "8111": {
      "op": "SWAP3"
    },
    "8112": {
      "op": "POP"
    },
    "8113": {
      "op": "SWAP3"
    },
    "8114": {
      "jump": "o",
      "op": "JUMP"
    },
    "8115": {
      "op": "JUMPDEST"
    },
    "8116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8120": {
      "op": "DUP3"
    },
    "8121": {
      "op": "DUP5"
    },
    "8122": {
      "op": "SUB"
    },
    "8123": {
      "op": "SLT"
    },
    "8124": {
      "op": "ISZERO"
    },
    "8125": {
      "op": "PUSH2",
      "value": "0x1FC5"
    },
    "8128": {
      "op": "JUMPI"
    },
    "8129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8131": {
      "op": "DUP1"
    },
    "8132": {
      "op": "REVERT"
    },
    "8133": {
      "op": "JUMPDEST"
    },
    "8134": {
      "op": "POP"
    },
    "8135": {
      "op": "CALLDATALOAD"
    },
    "8136": {
      "op": "SWAP2"
    },
    "8137": {
      "op": "SWAP1"
    },
    "8138": {
      "op": "POP"
    },
    "8139": {
      "jump": "o",
      "op": "JUMP"
    },
    "8140": {
      "op": "JUMPDEST"
    },
    "8141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8145": {
      "op": "DUP3"
    },
    "8146": {
      "op": "DUP5"
    },
    "8147": {
      "op": "SUB"
    },
    "8148": {
      "op": "SLT"
    },
    "8149": {
      "op": "ISZERO"
    },
    "8150": {
      "op": "PUSH2",
      "value": "0x1FDE"
    },
    "8153": {
      "op": "JUMPI"
    },
    "8154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8156": {
      "op": "DUP1"
    },
    "8157": {
      "op": "REVERT"
    },
    "8158": {
      "op": "JUMPDEST"
    },
    "8159": {
      "op": "PUSH2",
      "value": "0x189B"
    },
    "8162": {
      "op": "DUP3"
    },
    "8163": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "8166": {
      "jump": "i",
      "op": "JUMP"
    },
    "8167": {
      "op": "JUMPDEST"
    },
    "8168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8170": {
      "op": "DUP1"
    },
    "8171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8173": {
      "op": "DUP1"
    },
    "8174": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8176": {
      "op": "DUP6"
    },
    "8177": {
      "op": "DUP8"
    },
    "8178": {
      "op": "SUB"
    },
    "8179": {
      "op": "SLT"
    },
    "8180": {
      "op": "ISZERO"
    },
    "8181": {
      "op": "PUSH2",
      "value": "0x1FFD"
    },
    "8184": {
      "op": "JUMPI"
    },
    "8185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8187": {
      "op": "DUP1"
    },
    "8188": {
      "op": "REVERT"
    },
    "8189": {
      "op": "JUMPDEST"
    },
    "8190": {
      "op": "POP"
    },
    "8191": {
      "op": "POP"
    },
    "8192": {
      "op": "DUP3"
    },
    "8193": {
      "op": "CALLDATALOAD"
    },
    "8194": {
      "op": "SWAP5"
    },
    "8195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8197": {
      "op": "DUP5"
    },
    "8198": {
      "op": "ADD"
    },
    "8199": {
      "op": "CALLDATALOAD"
    },
    "8200": {
      "op": "SWAP5"
    },
    "8201": {
      "op": "POP"
    },
    "8202": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8204": {
      "op": "DUP5"
    },
    "8205": {
      "op": "ADD"
    },
    "8206": {
      "op": "CALLDATALOAD"
    },
    "8207": {
      "op": "SWAP4"
    },
    "8208": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8210": {
      "op": "ADD"
    },
    "8211": {
      "op": "CALLDATALOAD"
    },
    "8212": {
      "op": "SWAP3"
    },
    "8213": {
      "op": "POP"
    },
    "8214": {
      "op": "SWAP1"
    },
    "8215": {
      "op": "POP"
    },
    "8216": {
      "jump": "o",
      "op": "JUMP"
    },
    "8217": {
      "op": "JUMPDEST"
    },
    "8218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8220": {
      "op": "DUP1"
    },
    "8221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8223": {
      "op": "DUP1"
    },
    "8224": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8226": {
      "op": "DUP6"
    },
    "8227": {
      "op": "DUP8"
    },
    "8228": {
      "op": "SUB"
    },
    "8229": {
      "op": "SLT"
    },
    "8230": {
      "op": "ISZERO"
    },
    "8231": {
      "op": "PUSH2",
      "value": "0x202F"
    },
    "8234": {
      "op": "JUMPI"
    },
    "8235": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8237": {
      "op": "DUP1"
    },
    "8238": {
      "op": "REVERT"
    },
    "8239": {
      "op": "JUMPDEST"
    },
    "8240": {
      "op": "PUSH2",
      "value": "0x2038"
    },
    "8243": {
      "op": "DUP6"
    },
    "8244": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "8247": {
      "jump": "i",
      "op": "JUMP"
    },
    "8248": {
      "op": "JUMPDEST"
    },
    "8249": {
      "op": "SWAP4"
    },
    "8250": {
      "op": "POP"
    },
    "8251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8253": {
      "op": "DUP1"
    },
    "8254": {
      "op": "DUP7"
    },
    "8255": {
      "op": "ADD"
    },
    "8256": {
      "op": "CALLDATALOAD"
    },
    "8257": {
      "op": "SWAP4"
    },
    "8258": {
      "op": "POP"
    },
    "8259": {
      "op": "PUSH2",
      "value": "0x204E"
    },
    "8262": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8264": {
      "op": "DUP8"
    },
    "8265": {
      "op": "ADD"
    },
    "8266": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "8269": {
      "jump": "i",
      "op": "JUMP"
    },
    "8270": {
      "op": "JUMPDEST"
    },
    "8271": {
      "op": "SWAP3"
    },
    "8272": {
      "op": "POP"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8275": {
      "op": "DUP7"
    },
    "8276": {
      "op": "ADD"
    },
    "8277": {
      "op": "CALLDATALOAD"
    },
    "8278": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8287": {
      "op": "DUP1"
    },
    "8288": {
      "op": "DUP3"
    },
    "8289": {
      "op": "GT"
    },
    "8290": {
      "op": "ISZERO"
    },
    "8291": {
      "op": "PUSH2",
      "value": "0x206B"
    },
    "8294": {
      "op": "JUMPI"
    },
    "8295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8297": {
      "op": "DUP1"
    },
    "8298": {
      "op": "REVERT"
    },
    "8299": {
      "op": "JUMPDEST"
    },
    "8300": {
      "op": "DUP2"
    },
    "8301": {
      "op": "DUP9"
    },
    "8302": {
      "op": "ADD"
    },
    "8303": {
      "op": "SWAP2"
    },
    "8304": {
      "op": "POP"
    },
    "8305": {
      "op": "DUP9"
    },
    "8306": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8308": {
      "op": "DUP4"
    },
    "8309": {
      "op": "ADD"
    },
    "8310": {
      "op": "SLT"
    },
    "8311": {
      "op": "PUSH2",
      "value": "0x207F"
    },
    "8314": {
      "op": "JUMPI"
    },
    "8315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8317": {
      "op": "DUP1"
    },
    "8318": {
      "op": "REVERT"
    },
    "8319": {
      "op": "JUMPDEST"
    },
    "8320": {
      "op": "DUP2"
    },
    "8321": {
      "op": "CALLDATALOAD"
    },
    "8322": {
      "op": "DUP2"
    },
    "8323": {
      "op": "DUP2"
    },
    "8324": {
      "op": "GT"
    },
    "8325": {
      "op": "ISZERO"
    },
    "8326": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "8329": {
      "op": "JUMPI"
    },
    "8330": {
      "op": "PUSH2",
      "value": "0x2091"
    },
    "8333": {
      "op": "PUSH2",
      "value": "0x1E05"
    },
    "8336": {
      "jump": "i",
      "op": "JUMP"
    },
    "8337": {
      "op": "JUMPDEST"
    },
    "8338": {
      "op": "PUSH2",
      "value": "0x20A3"
    },
    "8341": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8343": {
      "op": "DUP3"
    },
    "8344": {
      "op": "ADD"
    },
    "8345": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8347": {
      "op": "NOT"
    },
    "8348": {
      "op": "AND"
    },
    "8349": {
      "op": "DUP6"
    },
    "8350": {
      "op": "ADD"
    },
    "8351": {
      "op": "PUSH2",
      "value": "0x1E1B"
    },
    "8354": {
      "jump": "i",
      "op": "JUMP"
    },
    "8355": {
      "op": "JUMPDEST"
    },
    "8356": {
      "op": "SWAP2"
    },
    "8357": {
      "op": "POP"
    },
    "8358": {
      "op": "DUP1"
    },
    "8359": {
      "op": "DUP3"
    },
    "8360": {
      "op": "MSTORE"
    },
    "8361": {
      "op": "DUP10"
    },
    "8362": {
      "op": "DUP5"
    },
    "8363": {
      "op": "DUP3"
    },
    "8364": {
      "op": "DUP6"
    },
    "8365": {
      "op": "ADD"
    },
    "8366": {
      "op": "ADD"
    },
    "8367": {
      "op": "GT"
    },
    "8368": {
      "op": "ISZERO"
    },
    "8369": {
      "op": "PUSH2",
      "value": "0x20B9"
    },
    "8372": {
      "op": "JUMPI"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8375": {
      "op": "DUP1"
    },
    "8376": {
      "op": "REVERT"
    },
    "8377": {
      "op": "JUMPDEST"
    },
    "8378": {
      "op": "DUP1"
    },
    "8379": {
      "op": "DUP5"
    },
    "8380": {
      "op": "DUP5"
    },
    "8381": {
      "op": "ADD"
    },
    "8382": {
      "op": "DUP6"
    },
    "8383": {
      "op": "DUP5"
    },
    "8384": {
      "op": "ADD"
    },
    "8385": {
      "op": "CALLDATACOPY"
    },
    "8386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8388": {
      "op": "DUP5"
    },
    "8389": {
      "op": "DUP3"
    },
    "8390": {
      "op": "DUP5"
    },
    "8391": {
      "op": "ADD"
    },
    "8392": {
      "op": "ADD"
    },
    "8393": {
      "op": "MSTORE"
    },
    "8394": {
      "op": "POP"
    },
    "8395": {
      "op": "DUP1"
    },
    "8396": {
      "op": "SWAP4"
    },
    "8397": {
      "op": "POP"
    },
    "8398": {
      "op": "POP"
    },
    "8399": {
      "op": "POP"
    },
    "8400": {
      "op": "POP"
    },
    "8401": {
      "op": "SWAP3"
    },
    "8402": {
      "op": "SWAP6"
    },
    "8403": {
      "op": "SWAP2"
    },
    "8404": {
      "op": "SWAP5"
    },
    "8405": {
      "op": "POP"
    },
    "8406": {
      "op": "SWAP3"
    },
    "8407": {
      "op": "POP"
    },
    "8408": {
      "jump": "o",
      "op": "JUMP"
    },
    "8409": {
      "op": "JUMPDEST"
    },
    "8410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8412": {
      "op": "DUP1"
    },
    "8413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8415": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8417": {
      "op": "DUP5"
    },
    "8418": {
      "op": "DUP7"
    },
    "8419": {
      "op": "SUB"
    },
    "8420": {
      "op": "SLT"
    },
    "8421": {
      "op": "ISZERO"
    },
    "8422": {
      "op": "PUSH2",
      "value": "0x20EE"
    },
    "8425": {
      "op": "JUMPI"
    },
    "8426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8428": {
      "op": "DUP1"
    },
    "8429": {
      "op": "REVERT"
    },
    "8430": {
      "op": "JUMPDEST"
    },
    "8431": {
      "op": "POP"
    },
    "8432": {
      "op": "POP"
    },
    "8433": {
      "op": "DUP2"
    },
    "8434": {
      "op": "CALLDATALOAD"
    },
    "8435": {
      "op": "SWAP4"
    },
    "8436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8438": {
      "op": "DUP4"
    },
    "8439": {
      "op": "ADD"
    },
    "8440": {
      "op": "CALLDATALOAD"
    },
    "8441": {
      "op": "SWAP4"
    },
    "8442": {
      "op": "POP"
    },
    "8443": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8445": {
      "op": "SWAP1"
    },
    "8446": {
      "op": "SWAP3"
    },
    "8447": {
      "op": "ADD"
    },
    "8448": {
      "op": "CALLDATALOAD"
    },
    "8449": {
      "op": "SWAP2"
    },
    "8450": {
      "op": "SWAP1"
    },
    "8451": {
      "op": "POP"
    },
    "8452": {
      "jump": "o",
      "op": "JUMP"
    },
    "8453": {
      "op": "JUMPDEST"
    },
    "8454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8456": {
      "op": "DUP1"
    },
    "8457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8459": {
      "op": "DUP1"
    },
    "8460": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8462": {
      "op": "DUP6"
    },
    "8463": {
      "op": "DUP8"
    },
    "8464": {
      "op": "SUB"
    },
    "8465": {
      "op": "SLT"
    },
    "8466": {
      "op": "ISZERO"
    },
    "8467": {
      "op": "PUSH2",
      "value": "0x211B"
    },
    "8470": {
      "op": "JUMPI"
    },
    "8471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8473": {
      "op": "DUP1"
    },
    "8474": {
      "op": "REVERT"
    },
    "8475": {
      "op": "JUMPDEST"
    },
    "8476": {
      "op": "DUP5"
    },
    "8477": {
      "op": "CALLDATALOAD"
    },
    "8478": {
      "op": "SWAP4"
    },
    "8479": {
      "op": "POP"
    },
    "8480": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8482": {
      "op": "DUP6"
    },
    "8483": {
      "op": "ADD"
    },
    "8484": {
      "op": "CALLDATALOAD"
    },
    "8485": {
      "op": "SWAP3"
    },
    "8486": {
      "op": "POP"
    },
    "8487": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8489": {
      "op": "DUP6"
    },
    "8490": {
      "op": "ADD"
    },
    "8491": {
      "op": "CALLDATALOAD"
    },
    "8492": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8501": {
      "op": "DUP1"
    },
    "8502": {
      "op": "DUP3"
    },
    "8503": {
      "op": "GT"
    },
    "8504": {
      "op": "ISZERO"
    },
    "8505": {
      "op": "PUSH2",
      "value": "0x2141"
    },
    "8508": {
      "op": "JUMPI"
    },
    "8509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8511": {
      "op": "DUP1"
    },
    "8512": {
      "op": "REVERT"
    },
    "8513": {
      "op": "JUMPDEST"
    },
    "8514": {
      "op": "PUSH2",
      "value": "0x214D"
    },
    "8517": {
      "op": "DUP9"
    },
    "8518": {
      "op": "DUP4"
    },
    "8519": {
      "op": "DUP10"
    },
    "8520": {
      "op": "ADD"
    },
    "8521": {
      "op": "PUSH2",
      "value": "0x1E4C"
    },
    "8524": {
      "jump": "i",
      "op": "JUMP"
    },
    "8525": {
      "op": "JUMPDEST"
    },
    "8526": {
      "op": "SWAP4"
    },
    "8527": {
      "op": "POP"
    },
    "8528": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8530": {
      "op": "DUP8"
    },
    "8531": {
      "op": "ADD"
    },
    "8532": {
      "op": "CALLDATALOAD"
    },
    "8533": {
      "op": "SWAP2"
    },
    "8534": {
      "op": "POP"
    },
    "8535": {
      "op": "DUP1"
    },
    "8536": {
      "op": "DUP3"
    },
    "8537": {
      "op": "GT"
    },
    "8538": {
      "op": "ISZERO"
    },
    "8539": {
      "op": "PUSH2",
      "value": "0x2163"
    },
    "8542": {
      "op": "JUMPI"
    },
    "8543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8545": {
      "op": "DUP1"
    },
    "8546": {
      "op": "REVERT"
    },
    "8547": {
      "op": "JUMPDEST"
    },
    "8548": {
      "op": "POP"
    },
    "8549": {
      "op": "PUSH2",
      "value": "0x2170"
    },
    "8552": {
      "op": "DUP8"
    },
    "8553": {
      "op": "DUP3"
    },
    "8554": {
      "op": "DUP9"
    },
    "8555": {
      "op": "ADD"
    },
    "8556": {
      "op": "PUSH2",
      "value": "0x1E4C"
    },
    "8559": {
      "jump": "i",
      "op": "JUMP"
    },
    "8560": {
      "op": "JUMPDEST"
    },
    "8561": {
      "op": "SWAP2"
    },
    "8562": {
      "op": "POP"
    },
    "8563": {
      "op": "POP"
    },
    "8564": {
      "op": "SWAP3"
    },
    "8565": {
      "op": "SWAP6"
    },
    "8566": {
      "op": "SWAP2"
    },
    "8567": {
      "op": "SWAP5"
    },
    "8568": {
      "op": "POP"
    },
    "8569": {
      "op": "SWAP3"
    },
    "8570": {
      "op": "POP"
    },
    "8571": {
      "jump": "o",
      "op": "JUMP"
    },
    "8572": {
      "op": "JUMPDEST"
    },
    "8573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8575": {
      "op": "DUP1"
    },
    "8576": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8578": {
      "op": "DUP4"
    },
    "8579": {
      "op": "DUP6"
    },
    "8580": {
      "op": "SUB"
    },
    "8581": {
      "op": "SLT"
    },
    "8582": {
      "op": "ISZERO"
    },
    "8583": {
      "op": "PUSH2",
      "value": "0x218F"
    },
    "8586": {
      "op": "JUMPI"
    },
    "8587": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8589": {
      "op": "DUP1"
    },
    "8590": {
      "op": "REVERT"
    },
    "8591": {
      "op": "JUMPDEST"
    },
    "8592": {
      "op": "PUSH2",
      "value": "0x2198"
    },
    "8595": {
      "op": "DUP4"
    },
    "8596": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "8599": {
      "jump": "i",
      "op": "JUMP"
    },
    "8600": {
      "op": "JUMPDEST"
    },
    "8601": {
      "op": "SWAP2"
    },
    "8602": {
      "op": "POP"
    },
    "8603": {
      "op": "PUSH2",
      "value": "0x21A6"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8608": {
      "op": "DUP5"
    },
    "8609": {
      "op": "ADD"
    },
    "8610": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "8613": {
      "jump": "i",
      "op": "JUMP"
    },
    "8614": {
      "op": "JUMPDEST"
    },
    "8615": {
      "op": "SWAP1"
    },
    "8616": {
      "op": "POP"
    },
    "8617": {
      "op": "SWAP3"
    },
    "8618": {
      "op": "POP"
    },
    "8619": {
      "op": "SWAP3"
    },
    "8620": {
      "op": "SWAP1"
    },
    "8621": {
      "op": "POP"
    },
    "8622": {
      "jump": "o",
      "op": "JUMP"
    },
    "8623": {
      "op": "JUMPDEST"
    },
    "8624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8626": {
      "op": "DUP1"
    },
    "8627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8629": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8631": {
      "op": "DUP5"
    },
    "8632": {
      "op": "DUP7"
    },
    "8633": {
      "op": "SUB"
    },
    "8634": {
      "op": "SLT"
    },
    "8635": {
      "op": "ISZERO"
    },
    "8636": {
      "op": "PUSH2",
      "value": "0x21C4"
    },
    "8639": {
      "op": "JUMPI"
    },
    "8640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8642": {
      "op": "DUP1"
    },
    "8643": {
      "op": "REVERT"
    },
    "8644": {
      "op": "JUMPDEST"
    },
    "8645": {
      "op": "DUP4"
    },
    "8646": {
      "op": "CALLDATALOAD"
    },
    "8647": {
      "op": "SWAP3"
    },
    "8648": {
      "op": "POP"
    },
    "8649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8651": {
      "op": "DUP5"
    },
    "8652": {
      "op": "ADD"
    },
    "8653": {
      "op": "CALLDATALOAD"
    },
    "8654": {
      "op": "SWAP2"
    },
    "8655": {
      "op": "POP"
    },
    "8656": {
      "op": "PUSH2",
      "value": "0x1FAA"
    },
    "8659": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8661": {
      "op": "DUP6"
    },
    "8662": {
      "op": "ADD"
    },
    "8663": {
      "op": "PUSH2",
      "value": "0x1D53"
    },
    "8666": {
      "jump": "i",
      "op": "JUMP"
    },
    "8667": {
      "op": "JUMPDEST"
    },
    "8668": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8670": {
      "op": "DUP2"
    },
    "8671": {
      "op": "DUP2"
    },
    "8672": {
      "op": "SHR"
    },
    "8673": {
      "op": "SWAP1"
    },
    "8674": {
      "op": "DUP3"
    },
    "8675": {
      "op": "AND"
    },
    "8676": {
      "op": "DUP1"
    },
    "8677": {
      "op": "PUSH2",
      "value": "0x21EF"
    },
    "8680": {
      "op": "JUMPI"
    },
    "8681": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "8683": {
      "op": "DUP3"
    },
    "8684": {
      "op": "AND"
    },
    "8685": {
      "op": "SWAP2"
    },
    "8686": {
      "op": "POP"
    },
    "8687": {
      "op": "JUMPDEST"
    },
    "8688": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8690": {
      "op": "DUP3"
    },
    "8691": {
      "op": "LT"
    },
    "8692": {
      "op": "DUP2"
    },
    "8693": {
      "op": "EQ"
    },
    "8694": {
      "op": "ISZERO"
    },
    "8695": {
      "op": "PUSH2",
      "value": "0x2210"
    },
    "8698": {
      "op": "JUMPI"
    },
    "8699": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8704": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8706": {
      "op": "SHL"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8709": {
      "op": "MSTORE"
    },
    "8710": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "8712": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8714": {
      "op": "MSTORE"
    },
    "8715": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8719": {
      "op": "REVERT"
    },
    "8720": {
      "op": "JUMPDEST"
    },
    "8721": {
      "op": "POP"
    },
    "8722": {
      "op": "SWAP2"
    },
    "8723": {
      "op": "SWAP1"
    },
    "8724": {
      "op": "POP"
    },
    "8725": {
      "jump": "o",
      "op": "JUMP"
    },
    "8726": {
      "op": "JUMPDEST"
    },
    "8727": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8732": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8734": {
      "op": "SHL"
    },
    "8735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8737": {
      "op": "MSTORE"
    },
    "8738": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "8740": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8742": {
      "op": "MSTORE"
    },
    "8743": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8747": {
      "op": "REVERT"
    },
    "8748": {
      "op": "JUMPDEST"
    },
    "8749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8751": {
      "op": "DUP3"
    },
    "8752": {
      "op": "DUP3"
    },
    "8753": {
      "op": "LT"
    },
    "8754": {
      "op": "ISZERO"
    },
    "8755": {
      "op": "PUSH2",
      "value": "0x223E"
    },
    "8758": {
      "op": "JUMPI"
    },
    "8759": {
      "op": "PUSH2",
      "value": "0x223E"
    },
    "8762": {
      "op": "PUSH2",
      "value": "0x2216"
    },
    "8765": {
      "jump": "i",
      "op": "JUMP"
    },
    "8766": {
      "op": "JUMPDEST"
    },
    "8767": {
      "op": "POP"
    },
    "8768": {
      "op": "SUB"
    },
    "8769": {
      "op": "SWAP1"
    },
    "8770": {
      "jump": "o",
      "op": "JUMP"
    },
    "8771": {
      "op": "JUMPDEST"
    },
    "8772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8774": {
      "op": "DUP2"
    },
    "8775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8777": {
      "op": "NOT"
    },
    "8778": {
      "op": "DIV"
    },
    "8779": {
      "op": "DUP4"
    },
    "8780": {
      "op": "GT"
    },
    "8781": {
      "op": "DUP3"
    },
    "8782": {
      "op": "ISZERO"
    },
    "8783": {
      "op": "ISZERO"
    },
    "8784": {
      "op": "AND"
    },
    "8785": {
      "op": "ISZERO"
    },
    "8786": {
      "op": "PUSH2",
      "value": "0x225D"
    },
    "8789": {
      "op": "JUMPI"
    },
    "8790": {
      "op": "PUSH2",
      "value": "0x225D"
    },
    "8793": {
      "op": "PUSH2",
      "value": "0x2216"
    },
    "8796": {
      "jump": "i",
      "op": "JUMP"
    },
    "8797": {
      "op": "JUMPDEST"
    },
    "8798": {
      "op": "POP"
    },
    "8799": {
      "op": "MUL"
    },
    "8800": {
      "op": "SWAP1"
    },
    "8801": {
      "jump": "o",
      "op": "JUMP"
    },
    "8802": {
      "op": "JUMPDEST"
    },
    "8803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8807": {
      "op": "NOT"
    },
    "8808": {
      "op": "DUP3"
    },
    "8809": {
      "op": "EQ"
    },
    "8810": {
      "op": "ISZERO"
    },
    "8811": {
      "op": "PUSH2",
      "value": "0x2276"
    },
    "8814": {
      "op": "JUMPI"
    },
    "8815": {
      "op": "PUSH2",
      "value": "0x2276"
    },
    "8818": {
      "op": "PUSH2",
      "value": "0x2216"
    },
    "8821": {
      "jump": "i",
      "op": "JUMP"
    },
    "8822": {
      "op": "JUMPDEST"
    },
    "8823": {
      "op": "POP"
    },
    "8824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8826": {
      "op": "ADD"
    },
    "8827": {
      "op": "SWAP1"
    },
    "8828": {
      "jump": "o",
      "op": "JUMP"
    },
    "8829": {
      "op": "JUMPDEST"
    },
    "8830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8832": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8834": {
      "op": "DUP3"
    },
    "8835": {
      "op": "DUP5"
    },
    "8836": {
      "op": "SUB"
    },
    "8837": {
      "op": "SLT"
    },
    "8838": {
      "op": "ISZERO"
    },
    "8839": {
      "op": "PUSH2",
      "value": "0x228F"
    },
    "8842": {
      "op": "JUMPI"
    },
    "8843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8845": {
      "op": "DUP1"
    },
    "8846": {
      "op": "REVERT"
    },
    "8847": {
      "op": "JUMPDEST"
    },
    "8848": {
      "op": "DUP2"
    },
    "8849": {
      "op": "MLOAD"
    },
    "8850": {
      "op": "PUSH2",
      "value": "0x189B"
    },
    "8853": {
      "op": "DUP2"
    },
    "8854": {
      "op": "PUSH2",
      "value": "0x1D99"
    },
    "8857": {
      "jump": "i",
      "op": "JUMP"
    },
    "8858": {
      "op": "JUMPDEST"
    },
    "8859": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8864": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8866": {
      "op": "SHL"
    },
    "8867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8869": {
      "op": "MSTORE"
    },
    "8870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8872": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8874": {
      "op": "MSTORE"
    },
    "8875": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8877": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8879": {
      "op": "REVERT"
    },
    "8880": {
      "op": "JUMPDEST"
    },
    "8881": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8883": {
      "op": "DUP3"
    },
    "8884": {
      "op": "NOT"
    },
    "8885": {
      "op": "DUP3"
    },
    "8886": {
      "op": "GT"
    },
    "8887": {
      "op": "ISZERO"
    },
    "8888": {
      "op": "PUSH2",
      "value": "0x22C3"
    },
    "8891": {
      "op": "JUMPI"
    },
    "8892": {
      "op": "PUSH2",
      "value": "0x22C3"
    },
    "8895": {
      "op": "PUSH2",
      "value": "0x2216"
    },
    "8898": {
      "jump": "i",
      "op": "JUMP"
    },
    "8899": {
      "op": "JUMPDEST"
    },
    "8900": {
      "op": "POP"
    },
    "8901": {
      "op": "ADD"
    },
    "8902": {
      "op": "SWAP1"
    },
    "8903": {
      "jump": "o",
      "op": "JUMP"
    },
    "8904": {
      "op": "JUMPDEST"
    },
    "8905": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8910": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8912": {
      "op": "SHL"
    },
    "8913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8915": {
      "op": "MSTORE"
    },
    "8916": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "8918": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8920": {
      "op": "MSTORE"
    },
    "8921": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8923": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8925": {
      "op": "REVERT"
    },
    "8926": {
      "op": "JUMPDEST"
    },
    "8927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8929": {
      "op": "DUP2"
    },
    "8930": {
      "op": "DUP2"
    },
    "8931": {
      "op": "JUMPDEST"
    },
    "8932": {
      "op": "DUP1"
    },
    "8933": {
      "op": "DUP6"
    },
    "8934": {
      "op": "GT"
    },
    "8935": {
      "op": "ISZERO"
    },
    "8936": {
      "op": "PUSH2",
      "value": "0x2319"
    },
    "8939": {
      "op": "JUMPI"
    },
    "8940": {
      "op": "DUP2"
    },
    "8941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8943": {
      "op": "NOT"
    },
    "8944": {
      "op": "DIV"
    },
    "8945": {
      "op": "DUP3"
    },
    "8946": {
      "op": "GT"
    },
    "8947": {
      "op": "ISZERO"
    },
    "8948": {
      "op": "PUSH2",
      "value": "0x22FF"
    },
    "8951": {
      "op": "JUMPI"
    },
    "8952": {
      "op": "PUSH2",
      "value": "0x22FF"
    },
    "8955": {
      "op": "PUSH2",
      "value": "0x2216"
    },
    "8958": {
      "jump": "i",
      "op": "JUMP"
    },
    "8959": {
      "op": "JUMPDEST"
    },
    "8960": {
      "op": "DUP1"
    },
    "8961": {
      "op": "DUP6"
    },
    "8962": {
      "op": "AND"
    },
    "8963": {
      "op": "ISZERO"
    },
    "8964": {
      "op": "PUSH2",
      "value": "0x230C"
    },
    "8967": {
      "op": "JUMPI"
    },
    "8968": {
      "op": "SWAP2"
    },
    "8969": {
      "op": "DUP2"
    },
    "8970": {
      "op": "MUL"
    },
    "8971": {
      "op": "SWAP2"
    },
    "8972": {
      "op": "JUMPDEST"
    },
    "8973": {
      "op": "SWAP4"
    },
    "8974": {
      "op": "DUP5"
    },
    "8975": {
      "op": "SHR"
    },
    "8976": {
      "op": "SWAP4"
    },
    "8977": {
      "op": "SWAP1"
    },
    "8978": {
      "op": "DUP1"
    },
    "8979": {
      "op": "MUL"
    },
    "8980": {
      "op": "SWAP1"
    },
    "8981": {
      "op": "PUSH2",
      "value": "0x22E3"
    },
    "8984": {
      "op": "JUMP"
    },
    "8985": {
      "op": "JUMPDEST"
    },
    "8986": {
      "op": "POP"
    },
    "8987": {
      "op": "SWAP3"
    },
    "8988": {
      "op": "POP"
    },
    "8989": {
      "op": "SWAP3"
    },
    "8990": {
      "op": "SWAP1"
    },
    "8991": {
      "op": "POP"
    },
    "8992": {
      "jump": "o",
      "op": "JUMP"
    },
    "8993": {
      "op": "JUMPDEST"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8996": {
      "op": "DUP3"
    },
    "8997": {
      "op": "PUSH2",
      "value": "0x2330"
    },
    "9000": {
      "op": "JUMPI"
    },
    "9001": {
      "op": "POP"
    },
    "9002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9004": {
      "op": "PUSH2",
      "value": "0x6DA"
    },
    "9007": {
      "op": "JUMP"
    },
    "9008": {
      "op": "JUMPDEST"
    },
    "9009": {
      "op": "DUP2"
    },
    "9010": {
      "op": "PUSH2",
      "value": "0x233D"
    },
    "9013": {
      "op": "JUMPI"
    },
    "9014": {
      "op": "POP"
    },
    "9015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9017": {
      "op": "PUSH2",
      "value": "0x6DA"
    },
    "9020": {
      "op": "JUMP"
    },
    "9021": {
      "op": "JUMPDEST"
    },
    "9022": {
      "op": "DUP2"
    },
    "9023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9025": {
      "op": "DUP2"
    },
    "9026": {
      "op": "EQ"
    },
    "9027": {
      "op": "PUSH2",
      "value": "0x2353"
    },
    "9030": {
      "op": "JUMPI"
    },
    "9031": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "9033": {
      "op": "DUP2"
    },
    "9034": {
      "op": "EQ"
    },
    "9035": {
      "op": "PUSH2",
      "value": "0x235D"
    },
    "9038": {
      "op": "JUMPI"
    },
    "9039": {
      "op": "PUSH2",
      "value": "0x2379"
    },
    "9042": {
      "op": "JUMP"
    },
    "9043": {
      "op": "JUMPDEST"
    },
    "9044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9046": {
      "op": "SWAP2"
    },
    "9047": {
      "op": "POP"
    },
    "9048": {
      "op": "POP"
    },
    "9049": {
      "op": "PUSH2",
      "value": "0x6DA"
    },
    "9052": {
      "op": "JUMP"
    },
    "9053": {
      "op": "JUMPDEST"
    },
    "9054": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9056": {
      "op": "DUP5"
    },
    "9057": {
      "op": "GT"
    },
    "9058": {
      "op": "ISZERO"
    },
    "9059": {
      "op": "PUSH2",
      "value": "0x236E"
    },
    "9062": {
      "op": "JUMPI"
    },
    "9063": {
      "op": "PUSH2",
      "value": "0x236E"
    },
    "9066": {
      "op": "PUSH2",
      "value": "0x2216"
    },
    "9069": {
      "jump": "i",
      "op": "JUMP"
    },
    "9070": {
      "op": "JUMPDEST"
    },
    "9071": {
      "op": "POP"
    },
    "9072": {
      "op": "POP"
    },
    "9073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9075": {
      "op": "DUP3"
    },
    "9076": {
      "op": "SHL"
    },
    "9077": {
      "op": "PUSH2",
      "value": "0x6DA"
    },
    "9080": {
      "op": "JUMP"
    },
    "9081": {
      "op": "JUMPDEST"
    },
    "9082": {
      "op": "POP"
    },
    "9083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9085": {
      "op": "DUP4"
    },
    "9086": {
      "op": "LT"
    },
    "9087": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "9090": {
      "op": "DUP4"
    },
    "9091": {
      "op": "LT"
    },
    "9092": {
      "op": "AND"
    },
    "9093": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "9095": {
      "op": "DUP5"
    },
    "9096": {
      "op": "LT"
    },
    "9097": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "9099": {
      "op": "DUP5"
    },
    "9100": {
      "op": "LT"
    },
    "9101": {
      "op": "AND"
    },
    "9102": {
      "op": "OR"
    },
    "9103": {
      "op": "ISZERO"
    },
    "9104": {
      "op": "PUSH2",
      "value": "0x239C"
    },
    "9107": {
      "op": "JUMPI"
    },
    "9108": {
      "op": "POP"
    },
    "9109": {
      "op": "DUP2"
    },
    "9110": {
      "op": "DUP2"
    },
    "9111": {
      "op": "EXP"
    },
    "9112": {
      "op": "PUSH2",
      "value": "0x6DA"
    },
    "9115": {
      "op": "JUMP"
    },
    "9116": {
      "op": "JUMPDEST"
    },
    "9117": {
      "op": "PUSH2",
      "value": "0x23A6"
    },
    "9120": {
      "op": "DUP4"
    },
    "9121": {
      "op": "DUP4"
    },
    "9122": {
      "op": "PUSH2",
      "value": "0x22DE"
    },
    "9125": {
      "jump": "i",
      "op": "JUMP"
    },
    "9126": {
      "op": "JUMPDEST"
    },
    "9127": {
      "op": "DUP1"
    },
    "9128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9130": {
      "op": "NOT"
    },
    "9131": {
      "op": "DIV"
    },
    "9132": {
      "op": "DUP3"
    },
    "9133": {
      "op": "GT"
    },
    "9134": {
      "op": "ISZERO"
    },
    "9135": {
      "op": "PUSH2",
      "value": "0x23BA"
    },
    "9138": {
      "op": "JUMPI"
    },
    "9139": {
      "op": "PUSH2",
      "value": "0x23BA"
    },
    "9142": {
      "op": "PUSH2",
      "value": "0x2216"
    },
    "9145": {
      "jump": "i",
      "op": "JUMP"
    },
    "9146": {
      "op": "JUMPDEST"
    },
    "9147": {
      "op": "MUL"
    },
    "9148": {
      "op": "SWAP4"
    },
    "9149": {
      "op": "SWAP3"
    },
    "9150": {
      "op": "POP"
    },
    "9151": {
      "op": "POP"
    },
    "9152": {
      "op": "POP"
    },
    "9153": {
      "jump": "o",
      "op": "JUMP"
    },
    "9154": {
      "op": "JUMPDEST"
    },
    "9155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9157": {
      "op": "PUSH2",
      "value": "0x189B"
    },
    "9160": {
      "op": "DUP4"
    },
    "9161": {
      "op": "DUP4"
    },
    "9162": {
      "op": "PUSH2",
      "value": "0x2321"
    },
    "9165": {
      "jump": "i",
      "op": "JUMP"
    },
    "9166": {
      "op": "JUMPDEST"
    },
    "9167": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9172": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9174": {
      "op": "SHL"
    },
    "9175": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9177": {
      "op": "MSTORE"
    },
    "9178": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9180": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9182": {
      "op": "MSTORE"
    },
    "9183": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9187": {
      "op": "REVERT"
    },
    "9188": {
      "op": "JUMPDEST"
    },
    "9189": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9191": {
      "op": "DUP3"
    },
    "9192": {
      "op": "PUSH2",
      "value": "0x23F3"
    },
    "9195": {
      "op": "JUMPI"
    },
    "9196": {
      "op": "PUSH2",
      "value": "0x23F3"
    },
    "9199": {
      "op": "PUSH2",
      "value": "0x23CE"
    },
    "9202": {
      "jump": "i",
      "op": "JUMP"
    },
    "9203": {
      "op": "JUMPDEST"
    },
    "9204": {
      "op": "POP"
    },
    "9205": {
      "op": "DIV"
    },
    "9206": {
      "op": "SWAP1"
    },
    "9207": {
      "jump": "o",
      "op": "JUMP"
    },
    "9208": {
      "op": "JUMPDEST"
    },
    "9209": {
      "op": "SWAP3"
    },
    "9210": {
      "op": "DUP4"
    },
    "9211": {
      "op": "MSTORE"
    },
    "9212": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9214": {
      "op": "SWAP2"
    },
    "9215": {
      "op": "SWAP1"
    },
    "9216": {
      "op": "SWAP2"
    },
    "9217": {
      "op": "SHL"
    },
    "9218": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "9231": {
      "op": "NOT"
    },
    "9232": {
      "op": "AND"
    },
    "9233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9235": {
      "op": "DUP4"
    },
    "9236": {
      "op": "ADD"
    },
    "9237": {
      "op": "MSTORE"
    },
    "9238": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "9240": {
      "op": "DUP3"
    },
    "9241": {
      "op": "ADD"
    },
    "9242": {
      "op": "MSTORE"
    },
    "9243": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "9245": {
      "op": "ADD"
    },
    "9246": {
      "op": "SWAP1"
    },
    "9247": {
      "jump": "o",
      "op": "JUMP"
    },
    "9248": {
      "op": "JUMPDEST"
    },
    "9249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9251": {
      "op": "DUP3"
    },
    "9252": {
      "op": "PUSH2",
      "value": "0x242F"
    },
    "9255": {
      "op": "JUMPI"
    },
    "9256": {
      "op": "PUSH2",
      "value": "0x242F"
    },
    "9259": {
      "op": "PUSH2",
      "value": "0x23CE"
    },
    "9262": {
      "jump": "i",
      "op": "JUMP"
    },
    "9263": {
      "op": "JUMPDEST"
    },
    "9264": {
      "op": "POP"
    },
    "9265": {
      "op": "MOD"
    },
    "9266": {
      "op": "SWAP1"
    },
    "9267": {
      "jump": "o",
      "op": "JUMP"
    },
    "9268": {
      "op": "JUMPDEST"
    },
    "9269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9273": {
      "op": "DUP3"
    },
    "9274": {
      "op": "DUP5"
    },
    "9275": {
      "op": "SUB"
    },
    "9276": {
      "op": "SLT"
    },
    "9277": {
      "op": "ISZERO"
    },
    "9278": {
      "op": "PUSH2",
      "value": "0x2446"
    },
    "9281": {
      "op": "JUMPI"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9284": {
      "op": "DUP1"
    },
    "9285": {
      "op": "REVERT"
    },
    "9286": {
      "op": "JUMPDEST"
    },
    "9287": {
      "op": "POP"
    },
    "9288": {
      "op": "MLOAD"
    },
    "9289": {
      "op": "SWAP2"
    },
    "9290": {
      "op": "SWAP1"
    },
    "9291": {
      "op": "POP"
    },
    "9292": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "3933295430107bc64fbd745f1e69acbf940f38a2",
  "source": "// Forge - Proof of Work Mining Contract\n// MUST REMOVE AOPENMINT\n// Distrubtion of Forge Token is as follows:\n// 25% of Forge Token is Auctioned in the ForgeAuctions Contract which distributes tokens to users who use 0xBitcoin to buy tokens in fair price. Each auction lasts ~3 days. Using the Auctions contract\n// +\n// 25% of Forge Token is distributed as Liquidiy Pool rewards in the ForgeRewards Contract which distributes tokens to users who deposit the SpiritSwap Liquidity Pool tokens into the LPRewards contract.\n// +\n// 50% of Forge Token is distributed using ForgeMining Contract(this Contract) which distributes tokens to users by using GPUs/FPGAs to solve a complicated problem to gain tokens!  Uses this contract\n//\n// = 100% Of the Token is distributed to the users! No dev fee or premine!\n//\n// All distributions happen fairly using Bitcoins model of distribution for over 100+ years, on-chain, decentralized, trustless, ownerless contracts!\n//\n// Network: Polygon Chain \n// ChainID = 89\n//\n//\n// Name: Forge\n// Symbol: Frg\n// Decimals: 18 \n//\n// Total supply: 42,000,001.000000000000000000\n//   =\n// 21,000,000 Mined over 100+ years using Bitcoins Distrubtion halvings every 4 years. Uses Proof-oF-Work to distribute the tokens. Public Miner is available.  Uses this contract.\n//   +\n// 10,500,000 Auctioned over 100+ years into 4 day auctions split fairly among all buyers. ALL 0xBitcoin proceeds go into THIS contract which it fairly distributes to miners.  Uses the ForgeAuctions contract\n//   +\n// 10,500,000 tokens goes to Liquidity Providers of the token over 100+ year using Bitcoins distribution!  Helps prevent LP losses!  Uses the ForgeRewards Contract\n//\n//  =\n//\n// 42,000,001 Tokens is the max Supply\n//      \n// 50% of the 0xBitcoin Token from this contract goes to the Miner to pay for the transaction cost and if the token grows enough earn 0xBitcoin per mint!!\n// 50% of the 0xBitcoin TOken from this contract goes to the Liquidity Providers via ForgeRewards Contract.  Helps prevent Impermant Loss! Larger Liquidity!\n//\n// No premine, dev cut, or advantage taken at launch. Public miner available at launch.  100% of the token is given away fairly over 100+ years using Bitcoins model!\n//\n// Send this contract any ERC20 token and it will become instantly mineable and able to distribute using proof-of-work for 1 year!!!!\n//\n//Viva la Mineables!!! Send this contract any ERC20 complient token (Wrapped NFTs incoming!) and we will fairly to miners and Holders(\n//  Each Mint prints (1/10000) of any ERC20.\n//pThirdDifficulty allows for the difficulty to be cut in a third.  So difficulty 10,000 becomes 3,333.  Costs 333 Fantom  Makes mining 3x easier\n//* 1 tokens in LP are burned to create the LP pool.\n//\n// Credits: 0xBitcoin, Vether, Synethix\n\n\npragma solidity ^0.8.0;\n\ncontract Ownable {\n    address public owner;\n\n    event TransferOwnership(address _from, address _to);\n\n    constructor() public {\n        owner = msg.sender;\n        emit TransferOwnership(address(0), msg.sender);\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"only owner\");\n        _;\n    }\n\n    function setOwner(address _owner) internal onlyOwner {\n        emit TransferOwnership(owner, _owner);\n        owner = _owner;\n    }\n}\n\n\n\n\nlibrary IsContract {\n    function isContract(address _addr) internal view returns (bool) {\n        bytes32 codehash;\n        /* solium-disable-next-line */\n        assembly { codehash := extcodehash(_addr) }\n        return codehash != bytes32(0) && codehash != bytes32(0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470);\n    }\n}\n\n// File: contracts/utils/SafeMath.sol\n\nlibrary SafeMath2 {\n    function add(uint256 x, uint256 y) internal pure returns (uint256) {\n        uint256 z = x + y;\n        require(z >= x, \"Add overflow\");\n        return z;\n    }\n\n    function sub(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(x >= y, \"Sub underflow\");\n        return x - y;\n    }\n\n    function mult(uint256 x, uint256 y) internal pure returns (uint256) {\n        if (x == 0) {\n            return 0;\n        }\n\n        uint256 z = x * y;\n        require(z / x == y, \"Mult overflow\");\n        return z;\n    }\n\n    function div(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(y != 0, \"Div by zero\");\n        return x / y;\n    }\n\n    function divRound(uint256 x, uint256 y) internal pure returns (uint256) {\n        require(y != 0, \"Div by zero\");\n        uint256 r = x / y;\n        if (x % y != 0) {\n            r = r + 1;\n        }\n\n        return r;\n    }\n}\n\n// File: contracts/utils/Math.sol\n\nlibrary ExtendedMath2 {\n\n\n    //return the smaller of the two inputs (a or b)\n    function limitLessThan(uint a, uint b) internal pure returns (uint c) {\n\n        if(a > b) return b;\n\n        return a;\n\n    }\n}\n\n// File: contracts/interfaces/IERC20.sol\n\ninterface IERC20 {\n\tfunction totalSupply() external view returns (uint256);\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\n    function transfer(address _to, uint _value) external returns (bool success);\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\n    function allowance(address _owner, address _spender) external view returns (uint256 remaining);\n    function approve(address _spender, uint256 _value) external returns (bool success);\n    function balanceOf(address _owner) external view returns (uint256 balance);\n    \n}\n\n\n// File: contracts/commons/AddressMinHeap.sol\n\n\n\nabstract contract ApproveAndCallFallBack {\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) virtual public;\n}\n\n\n//Main contract\n\ncontract ForgeMining is Ownable, IERC20, ApproveAndCallFallBack {\n\tuint constant public targetTime = 36 * 60; //= 36 minutes\n\n// SUPPORTING CONTRACTS\n    address public AddressAuction;\n    address public AddressLPReward;\n    address public AddressZeroXBTC;\n//Events\n    using SafeMath2 for uint256;\n    using ExtendedMath2 for uint;\n    event Mint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber);\n    event MegaMint(address indexed from, uint reward_amount, uint epochCount, bytes32 newChallengeNumber, uint NumberOfTokensMinted);\n\n// Managment events\n    uint256 override public totalSupply = 42000001000000000000000000;\n    bytes32 private constant BALANCE_KEY = keccak256(\"balance\");\n\n    //BITCOIN INITALIZE Start\n\t\n    uint _totalSupply = 21000000000000000000000000;\n    uint public latestDifficultyPeriodStarted2 = block.timestamp;\n    uint public epochCount = 0;//number of 'blocks' mined\n\n    uint public _BLOCKS_PER_READJUSTMENT = 256;\n\n    //a little number\n    uint public  _MINIMUM_TARGET = 2**16;\n    \n    uint public  _MAXIMUM_TARGET = 2**234;\n    uint public miningTarget = _MAXIMUM_TARGET.div(200000000000*25);  //1000 million difficulty to start until i enable mining\n    \n    bytes32 public challengeNumber;   //generate a new one when a new reward is minted\n    uint public rewardEra = 0;\n    uint public maxSupplyForEra = (_totalSupply - _totalSupply.div( 2**(rewardEra + 1)));\n    uint public reward_amount = (150 * 10**uint(decimals) ).div( 2**rewardEra );\n    //Stuff for Functions\n    uint oldecount = 0;\n    uint previousBlockTime = block.timestamp;\n    uint oneEthUnit =    1000000000000000000;\n    uint one8unit   =              100000000;\n    uint public Token2Per=           3000000;\n    uint Token2Min=                       10;\n    mapping(bytes32 => bytes32) public solutionForChallenge;\n    mapping(bytes32 => uint) public EpochForChallenge;\n    mapping(uint => bytes32) public ChallengeForEpoch;\n    uint public tokensMinted;\n    mapping(address => uint) balances;\n    mapping(address => mapping(address => uint)) allowed;\n    //mapping(address => uint) Token_balances;\n    uint give0xBTC = 0;\n    uint give = 1;\n    // metadata\n    string public name = \"Forge\";\n    string public constant symbol = \"Fge\";\n    uint8 public constant decimals = 18;\n    uint public totalLifetimes = 0;\n\n\n    bool inited = false;\n    function zinit(address AuctionAddress2, address LPGuild2, address _ZeroXBTCAddress) public onlyOwner{\n        uint x = 21000000000000000000000000 / (2* (2 ** totalLifetimes)); //half supply for LP Mine and Burn\n        // Only init once\n        assert(!inited);\n        inited = true;\n\t\n    \trewardEra = 0;\n\ttokensMinted = 0;\n    \t//bitcoin commands short and sweet //sets to previous difficulty\n    \tminingTarget = _MAXIMUM_TARGET.div(1001); //5000000 = 31gh/s @ 7 min for FPGA mining, 2000000 if GPU only\n        //latestDifficultyPeriodStarted2 = block.timestamp;\n    \t\n    \t_startNewMiningEpoch();\n    \t\n    \t\n        // Init contract variables and mint\n        balances[AuctionAddress2] = x;\n        emit Transfer(address(0), AuctionAddress2, x);\n    \tAddressAuction = AuctionAddress2;\n\t\n        AddressLPReward = payable(LPGuild2);\n        AddressZeroXBTC = _ZeroXBTCAddress;\n        oldecount = epochCount;\n        // mint 1 token to setup LPs\n        balances[msg.sender] = 100000000;\n        emit Transfer(address(0), msg.sender, 100000000);\n        \n        \n        \n    }\n\n    ///\n    // Managment\n    ///\n    // first\n    // TO SETUP  LP with 0xBTC, only able to be run before contract starts with inited\nfunction zFIRST() public onlyOwner{\n        assert(!inited);\n        balances[msg.sender] = 10 ** 18;\n        emit Transfer(address(0), msg.sender, 10 ** 18);\n}\n//MUST REMOVE MUST REMOVE\nfunction AOpenMint(bool nonce, bool challenge_digest) public returns (bool success) {\n\n     \t    _startNewMiningEpoch();\n\n        \tuint diff = block.timestamp - previousBlockTime;\n\t    \tuint x = 4;\n\t    \tif(diff  > targetTime)\n\t    \t{\n\t    \t\tfor(x = 4; x< 10; x++){\n\t    \t\tif(diff <= (targetTime * x).div(3)){\n\t    \t\t \tbreak;\n\t    \t\t}}\n\t    \t}\n            uint reward = (x * reward_amount).div(4);\n\t\n\t    \tbalances[msg.sender] = balances[msg.sender].add(reward);\n\t        balances[AddressLPReward] = balances[AddressLPReward].add((reward).div(2));\n\n\n\t    \ttokensMinted = tokensMinted.add(reward);\n            previousBlockTime = block.timestamp;\n            if(give0xBTC > 0){\n            IERC20(AddressZeroXBTC).transfer(msg.sender, Token2Per*give0xBTC);\n           }\n           emit Mint(msg.sender, reward_amount, epochCount, challengeNumber );\n           return true;\n    }\n\n\nfunction ARewardSender() public {\n    //runs every _BLOCKS_PER_READJUSTMENT / 4\n    uint256 epochsPast = epochCount - oldecount; //actually epoch\n    reward_amount = (150 * 10**uint(decimals)).div( 2**rewardEra );\n\n    if(IERC20(AddressZeroXBTC).balanceOf(address(this)) > (6 * (Token2Per * _BLOCKS_PER_READJUSTMENT)/4)) // at least enough blocks to rerun this function for both LPRewards and Users\n    {\n        give0xBTC = 1 * give;\n        IERC20(AddressZeroXBTC).transfer(AddressLPReward, ((epochsPast) * Token2Per * give0xBTC));\n    }\n    else{\n        give0xBTC = 0;\n    }\n    oldecount = epochCount; //actually epoch\n}\n\n\n//Mints to the payee Forge, 0xBitcoin always to the sender. Making it the heaviest currency in here.\n//\n//function mint(bool nonce, bool challenge_digest) public returns (bool success) {\nfunction mint(uint256 nonce, bytes32 challenge_digest) public returns (bool success) {\n    mintTo(nonce, challenge_digest, msg.sender);\n}\n\n//function mintTo(bool nonce, bool challenge_digest,  address mintTo) public returns (bool success) {\nfunction mintTo(uint256 nonce, bytes32 challenge_digest,  address mintTo) public returns (bool success) {\n\n    \t\ttokensMinted.add(reward_amount);\n            bytes32 digest =  keccak256(abi.encodePacked(challengeNumber, msg.sender, nonce));\n\n            //the challenge digest must match the expected\n            require(digest == challenge_digest, \"Old challenge_digest or wrong challenge_digest\");\n\n            //the digest must be smaller than the target\n            require(uint256(digest) < miningTarget, \"Digest must be smaller than miningTarget\");\n\t\t    _startNewMiningEpoch();\n\n        \tuint diff = block.timestamp - previousBlockTime;\n\t    \tuint x = 4;\n\t    \tif(diff  > targetTime)\n\t    \t{\n\t    \t\tfor(x = 4; x< 10; x++){\n\t    \t\tif(diff <= (targetTime * x).div(3)){\n\t    \t\t \tbreak;\n\t    \t\t}}\n\t    \t}\n            uint reward = (x * reward_amount).div(4);\n\t\n\t    \tbalances[mintTo] = balances[mintTo].add(reward);\n\t        balances[AddressLPReward] = balances[AddressLPReward].add((reward).div(2));\n\n\n\t    \ttokensMinted = tokensMinted.add(reward);\n            previousBlockTime = block.timestamp;\n            if(give0xBTC > 0){\n            IERC20(AddressZeroXBTC).transfer(mintTo, Token2Per*give0xBTC);\n           }\n           emit Mint(msg.sender, reward_amount, epochCount, challengeNumber );\n           return true;\n}\n\n//First address for mintSend(Forge + 0xBitcoin), Second address+ for other tokens\n// REPALCE WITH LINE BELOW in production\n//function mintTokensArrayTo(bool nonce, bool challenge_digest, address[] memory ExtraFunds, address[] memory MintTo) public returns (bool success) {\nfunction mintTokensArrayTo(uint256 nonce, bytes32 challenge_digest, address[] memory ExtraFunds, address[] memory MintTo) public returns (bool success) {\n\t\tuint xx = 4;\n        uint diff = block.timestamp - previousBlockTime;\n\t\tif(diff  > targetTime)\n\t\t{\n\t\t\tfor(xx = 4; xx< 10; xx++){\n\t\t\tif(diff <= (targetTime * xx).div(3)){\n\t\t\t \tbreak;\n\t\t\t}\n            }\n\t\t}\n        require(MintTo.length == ExtraFunds.length + 1,\"So MintTo has to have same number of addressses as ExtraFunds\");\n       for(uint x=0; x< ExtraFunds.length; x++)\n        {\n        require(ExtraFunds[x] != address(this) && ExtraFunds[x] != AddressZeroXBTC, \"No base printing of tokens\");\n        \n            for(uint y=1; y< ExtraFunds.length; y++){\n                require(ExtraFunds[y] != ExtraFunds[x] || x == y, \"No printing The same tokens\");\n            }\n\n    \t}\n\t\n    require(mintTo(nonce,challenge_digest, MintTo[0]), \"mint issue\");\n\n    \n    uint savex=0;\n    for(uint x=0; x<ExtraFunds.length; x++)\n    {\n        //exponentialy more valueable\nif(epochCount % (2**(x+1)) == 0){\n    uint256 TotalOwned = IERC20(ExtraFunds[x]).balanceOf(address(this));\n    if(TotalOwned != 0)\n    {\n        uint256 totalOwed = 0;\n        if( (x+1) % 3 == 0 && x != 0){\n            totalOwed = (TotalOwned*xx).divRound(4*2500);\n        }\n        else{\n            totalOwed = (TotalOwned*xx).div(4*2500);  //2500 was chosen to give each token a ~1/4 year per token of distribution using Proof-of-Work\n        }\n            IERC20(ExtraFunds[x]).transfer(MintTo[x], totalOwed);\n        \n    }\n    savex = x;\n    }\n\t\t\t\t\n        \n    }\n    \n    emit MegaMint(msg.sender, reward_amount, epochCount, challengeNumber, savex );\n    return true;\n}\n    \n\n\nfunction mintTokensSameAddress(uint256 nonce, bytes32 challenge_digest, address[] memory ExtraFunds, address MintTo) public returns (bool success) {\n        address[] memory dd = new address[](ExtraFunds.length + 1); \n        uint y=0;\n        for(uint x=0; x< (ExtraFunds.length + 1); x++)\n        {\n            dd[x] = MintTo;\n        }\n        mintTokensArrayTo(nonce, challenge_digest, ExtraFunds, dd);\n        return true;\n}\n\n\n\nfunction _startNewMiningEpoch() internal {\n        \n \n      //if max supply for the era will be exceeded next reward round then enter the new era before that happens\n\n      //40 is the final reward era, almost all tokens minted\n      //once the final era is reached, more tokens will not be given out because the assert function\n      if( tokensMinted.add((reward_amount)) > maxSupplyForEra && rewardEra < 39)\n      {\n        rewardEra = rewardEra + 1;\n        miningTarget = miningTarget.div(2 ** rewardEra);\n        \n      }\n\n      //set the next minted supply at which the era will change\n      // total supply of MINED tokens is 21000000000000000000000000  because of 16 decimal places\n\n      epochCount = epochCount.add(1);\n\n      //every so often, readjust difficulty. Dont readjust when deploying\n    if((epochCount) % (_BLOCKS_PER_READJUSTMENT / 4) == 0)\n    {\n        \tARewardSender();\n\t\tmaxSupplyForEra = _totalSupply - _totalSupply.div( 2**(rewardEra + 1));\n\n    if((epochCount % _BLOCKS_PER_READJUSTMENT== 0))\n    {\n         if(( IERC20(AddressZeroXBTC).balanceOf(address(this)) / Token2Per) <= 10000) //chosen to give keep 125 days payouts in reserve at current payout\n         {\n             if(Token2Per.div(2) > Token2Min)\n             {\n             Token2Per = Token2Per.div(2);\n            }\n         }\n         else\n         {\n             Token2Per = Token2Per.mult(3);\n         }\n         \n        _reAdjustDifficulty();\n    }\n    }\n\n    challengeNumber = blockhash(block.number - 1);\n}\n\n\n\n\n    //https://en.bitcoin.it/wiki/Difficulty#What_is_the_formula_for_difficulty.3F\n    //as of 2017 the bitcoin difficulty was up to 17 zeroes, it was only 8 in the early days\n\n    function _reAdjustDifficulty() internal {\n\n        uint256 blktimestamp = block.timestamp;\n        uint ethBlocksSinceLastDifficultyPeriod2 = blktimestamp - latestDifficultyPeriodStarted2;\n\n        uint epochsMined = _BLOCKS_PER_READJUSTMENT; //256\n\n        uint adjusDiffTargetTime = targetTime * epochsMined; //36 min per block 60 sec * 12\n\n        //if there were less eth blocks passed in time than expected\n        if( ethBlocksSinceLastDifficultyPeriod2 < adjusDiffTargetTime )\n        {\n          uint excess_block_pct = (adjusDiffTargetTime.mult(100)).div( ethBlocksSinceLastDifficultyPeriod2 );\n\tgive = 1;\n          uint excess_block_pct_extra = excess_block_pct.sub(100).limitLessThan(1000);\n          // If there were 5% more blocks mined than expected then this is 5.  If there were 100% more blocks mined than expected then this is 100.\n\n          //make it harder q\n          miningTarget = miningTarget.sub(miningTarget.div(2000).mult(excess_block_pct_extra));   //by up to 50 %\n        }else{\n          uint shortage_block_pct = (ethBlocksSinceLastDifficultyPeriod2.mult(100)).div( adjusDiffTargetTime );\n\tgive = 2;\n          uint shortage_block_pct_extra = shortage_block_pct.sub(100).limitLessThan(1000); //always between 0 and 1000\n          //make it easier\n          miningTarget = miningTarget.add(miningTarget.div(2000).mult(shortage_block_pct_extra));   //by up to 50 %\n        }\n\n\n        latestDifficultyPeriodStarted2 = blktimestamp;\n\n        if(miningTarget < _MINIMUM_TARGET) //very difficult\n        {\n          miningTarget = _MINIMUM_TARGET;\n        }\n\n        if(miningTarget > _MAXIMUM_TARGET) //very easy\n        {\n          miningTarget = _MAXIMUM_TARGET;\n        }\n    }\n\n\n    //42 m coins total\n    // = \n    //21 million proof of work\n    // + \n    //10.5 million proof of burn\n    // +\n    //10.5 million rewards for Liquidity Providers\n\n\n\n\n        //help debug mining software\n     function checkMintSolution(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number, uint testTarget) public view returns (bool success) {\n\n        bytes32 digest = bytes32(keccak256(abi.encodePacked(challenge_number,msg.sender,nonce)));\n\n        if(uint256(digest) > testTarget) revert();\n\n        return (digest == challenge_digest);\n        }\n\t\t\n\t\t\n\n    //this is a recent ethereum block hash, used to prevent pre-mining future blocks\n    function getChallengeNumber() public view returns (bytes32) {\n        return challengeNumber;\n    }\n\n    //the number of zeroes the digest of the PoW solution requires.  Auto adjusts\n     function getMiningDifficulty() public view returns (uint) {\n        return _MAXIMUM_TARGET.div(miningTarget);\n    }\n\n    function getMiningTarget() public view returns (uint) {\n       return miningTarget;\n   }\n   \n    function getMiningMinted() public view returns (uint) {\n      return tokensMinted;\n    }\n\n\n    //21m coins total\n    //reward begins at 150 and is cut in half every reward era (as tokens are mined)\n    function getMiningReward() public view returns (uint) {\n        //once we get half way thru the coins, only get 25 per block\n\n         //every reward era, the reward amount halves.\n\n         return (150 * 10**uint(decimals) ).div( 2**rewardEra ) ;\n\n    }\n\n\n    //21m coins total\n    //reward begins at 150 and is cut in half every reward era (as tokens are mined)\n    function getEpoch() public view returns (uint) {\n        //once we get half way thru the coins, only get 25 per block\n\n         //every reward era, the reward amount halves.\n\n         return epochCount ;\n\n    }\n\n\n\n\n\n    //help debug mining software\n    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {\n\n            bytes32 digest =  keccak256(abi.encodePacked(challengeNumber, msg.sender, nonce));\n\n        return digest;\n\n      }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Total supply\n\n    // ------------------------------------------------------------------------\n\n\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Get the token balance for account `tokenOwner`\n\n    // ------------------------------------------------------------------------\n\n    function balanceOf(address tokenOwner) public override view returns (uint balance) {\n\n        return balances[tokenOwner];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Transfer the balance from token owner's account to `to` account\n\n    // - Owner's account must have sufficient balance to transfer\n\n    // - 0 value transfers are allowed\n\n    // ------------------------------------------------------------------------\n\n    function transfer(address to, uint tokens) public override returns (bool success) {\n\n        balances[msg.sender] = balances[msg.sender].sub(tokens);\n\n        balances[to] = balances[to].add(tokens);\n\n        emit Transfer(msg.sender, to, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n    // from the token owner's account\n\n    //\n\n    // https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20-token-standard.md\n\n    // recommends that there are no checks for the approval double-spend attack\n\n    // as this should be implemented in user interfaces\n\n    // ------------------------------------------------------------------------\n\n    function approve(address spender, uint tokens) public override returns (bool success) {\n\n        allowed[msg.sender][spender] = tokens;\n\n        emit Approval(msg.sender, spender, tokens);\n\n        return true;\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Transfer `tokens` from the `from` account to the `to` account\n\n    //\n\n    // The calling account must already have sufficient tokens approve(...)-d\n\n    // for spending from the `from` account and\n\n    // - From account must have sufficient balance to transfer\n\n    // - Spender must have sufficient allowance to transfer\n\n    // - 0 value transfers are allowed\n\n    // ------------------------------------------------------------------------\n\n    function transferFrom(address from, address to, uint tokens) public override returns (bool success) {\n\n        balances[from] = balances[from].sub(tokens);\n\n        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\n\n        balances[to] = balances[to].add(tokens);\n\n        emit Transfer(from, to, tokens);\n\n        return true;\n\n    }\n\n\n    // ------------------------------------------------------------------------\n\n    // Returns the amount of tokens approved by the owner that can be\n\n    // transferred to the spender's account\n\n    // ------------------------------------------------------------------------\n\n    function allowance(address tokenOwner, address spender) public override view returns (uint remaining) {\n\n        return allowed[tokenOwner][spender];\n\n    }\n\n\n\n    // ------------------------------------------------------------------------\n\n    // Token owner can approve for `spender` to transferFrom(...) `tokens`\n\n    // from the token owner's account. The `spender` contract function\n\n    // `receiveApproval(...)` is then executed\n\n    // ------------------------------------------------------------------------\n\n    function receiveApproval(address from, uint256 tokens, address token, bytes memory data) public override{\n      require(token == address(this));\n      \n       IERC20(address(this)).transfer(from, tokens);  \n    }\n    \n\n\n\n\n        \n}\n",
  "sourceMap": "5801:18853:2:-:0;;;6434:26;6396:64;;6584:26;6564:46;;6661:15;6616:60;;6707:1;6682:26;;6780:3;6741:42;;6843:5;6812:36;;-1:-1:-1;;;6859:37:2;;6929:36;6949:15;6929;;:19;;;;;;:36;;;;:::i;:::-;6902:63;;7145:1;7121:25;;7198:37;7220:9;;7232:1;7220:13;;;;:::i;:::-;7216:18;;:1;:18;:::i;:::-;7198:12;;:16;;;;;;:37;;;;:::i;:::-;7183:12;;:52;;;;:::i;:::-;7152:84;;7270:47;7306:9;;7303:1;:12;;;;:::i;:::-;7277:18;8117:2;7277;:18;:::i;:::-;7271:24;;:3;:24;:::i;:::-;7270:31;;;;;;:47;;;;:::i;:::-;7242:75;;7366:1;7349:18;;;;7398:15;7373:40;;7440:19;7419:40;;7496:9;7465:40;;7544:7;7511:40;;7595:2;7557:40;;7948:18;;7984:1;7972:13;;8007:28;;;;;;;;;;;;;-1:-1:-1;;;8007:28:2;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8154:1:2;8125:30;;8163:19;;;-1:-1:-1;;8163:19:2;;;5801:18853;;;;;;;;;-1:-1:-1;2948:5:2;:18;;-1:-1:-1;;;;;;2948:18:2;2956:10;2948:18;;;;;2981:41;;;2168:34:3;;;2233:2;2218:18;;2211:43;;;;2981:41:2;;2103:18:3;2981:41:2;;;;;;;5801:18853;;4217:136;4275:7;4302:6;4294:30;;;;-1:-1:-1;;;4294:30:2;;2467:2:3;4294:30:2;;;2449:21:3;2506:2;2486:18;;;2479:30;-1:-1:-1;;;2525:18:3;;;2518:41;2576:18;;4294:30:2;;;;;;;;4341:5;4345:1;4341;:5;:::i;:::-;4334:12;;4217:136;;;;;:::o;5801:18853::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5801:18853:2;;;-1:-1:-1;5801:18853:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:3;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:128;186:3;217:1;213:6;210:1;207:13;204:39;;;223:18;;:::i;:::-;-1:-1:-1;259:9:3;;146:128::o;279:422::-;368:1;411:5;368:1;425:270;446:7;436:8;433:21;425:270;;;505:4;501:1;497:6;493:17;487:4;484:27;481:53;;;514:18;;:::i;:::-;564:7;554:8;550:22;547:55;;;584:16;;;;547:55;663:22;;;;623:15;;;;425:270;;;429:3;279:422;;;;;:::o;706:806::-;755:5;785:8;775:80;;-1:-1:-1;826:1:3;840:5;;775:80;874:4;864:76;;-1:-1:-1;911:1:3;925:5;;864:76;956:4;974:1;969:59;;;;1042:1;1037:130;;;;949:218;;969:59;999:1;990:10;;1013:5;;;1037:130;1074:3;1064:8;1061:17;1058:43;;;1081:18;;:::i;:::-;-1:-1:-1;;1137:1:3;1123:16;;1152:5;;949:218;;1251:2;1241:8;1238:16;1232:3;1226:4;1223:13;1219:36;1213:2;1203:8;1200:16;1195:2;1189:4;1186:12;1182:35;1179:77;1176:159;;;-1:-1:-1;1288:19:3;;;1320:5;;1176:159;1367:34;1392:8;1386:4;1367:34;:::i;:::-;1437:6;1433:1;1429:6;1425:19;1416:7;1413:32;1410:58;;;1448:18;;:::i;:::-;1486:20;;706:806;-1:-1:-1;;;706:806:3:o;1517:131::-;1577:5;1606:36;1633:8;1627:4;1606:36;:::i;1653:125::-;1693:4;1721:1;1718;1715:8;1712:34;;;1726:18;;:::i;:::-;-1:-1:-1;1763:9:3;;1653:125::o;1783:168::-;1823:7;1889:1;1885;1881:6;1877:14;1874:1;1871:21;1866:1;1859:9;1852:17;1848:45;1845:71;;;1896:18;;:::i;:::-;-1:-1:-1;1936:9:3;;1783:168::o;2605:217::-;2645:1;2671;2661:132;;2715:10;2710:3;2706:20;2703:1;2696:31;2750:4;2747:1;2740:15;2778:4;2775:1;2768:15;2661:132;-1:-1:-1;2807:9:3;;2605:217::o;2827:380::-;2906:1;2902:12;;;;2949;;;2970:61;;3024:4;3016:6;3012:17;3002:27;;2970:61;3077:2;3069:6;3066:14;3046:18;3043:38;3040:161;;;3123:10;3118:3;3114:20;3111:1;3104:31;3158:4;3155:1;3148:15;3186:4;3183:1;3176:15;3040:161;;2827:380;;;:::o;:::-;5801:18853:2;;;;;;",
  "sourcePath": "contracts/mining.sol",
  "type": "contract"
}