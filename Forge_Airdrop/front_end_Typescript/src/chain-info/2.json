{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "merkleRootTop",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRootMid",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "merkleRootBot",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ForgeGuessContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ForgeTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ForgeTokenAddressREAL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_merkleRootAll",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "choice",
          "type": "uint256"
        }
      ],
      "name": "amountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "out",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "amtClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "choice",
          "type": "uint256"
        }
      ],
      "name": "amtOutForChoiceInForge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "out",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "depo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getThree",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "claim",
          "type": "uint256"
        }
      ],
      "name": "mintWithProofALL",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "mintWithProofMid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "mintWithProofTop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "perfect",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amtz",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "starttime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claim",
          "type": "uint256"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ver",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/Merkletree.sol"
  },
  "ast": {
    "absolutePath": "contracts/Merkletree.sol",
    "exportedSymbols": {
      "AirdropToken": [
        2047
      ],
      "ForgeGuess2": [
        1418
      ],
      "IERC20": [
        1391
      ],
      "MerkleProof": [
        1324
      ]
    },
    "id": 2048,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1256,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "301:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MerkleProof",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 1324,
        "linearizedBaseContracts": [
          1324
        ],
        "name": "MerkleProof",
        "nameLocation": "334:11:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1322,
              "nodeType": "Block",
              "src": "807:693:1",
              "statements": [
                {
                  "assignments": [
                    1270
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1270,
                      "mutability": "mutable",
                      "name": "computedHash",
                      "nameLocation": "825:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1322,
                      "src": "817:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1269,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "817:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1272,
                  "initialValue": {
                    "id": 1271,
                    "name": "leaf",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1264,
                    "src": "840:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "817:27:1"
                },
                {
                  "body": {
                    "id": 1316,
                    "nodeType": "Block",
                    "src": "898:483:1",
                    "statements": [
                      {
                        "assignments": [
                          1285
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1285,
                            "mutability": "mutable",
                            "name": "proofElement",
                            "nameLocation": "920:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1316,
                            "src": "912:20:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1284,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "912:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1289,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1286,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "935:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 1288,
                          "indexExpression": {
                            "id": 1287,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1274,
                            "src": "941:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "935:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "912:31:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1290,
                            "name": "computedHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1270,
                            "src": "973:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1291,
                            "name": "proofElement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1285,
                            "src": "989:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "973:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1314,
                          "nodeType": "Block",
                          "src": "1190:181:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 1312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1304,
                                  "name": "computedHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1270,
                                  "src": "1286:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1308,
                                          "name": "proofElement",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1285,
                                          "src": "1328:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 1309,
                                          "name": "computedHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1270,
                                          "src": "1342:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1306,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "1311:3:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1307,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "1311:16:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1310,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1311:44:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1305,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "1301:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1311,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1301:55:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "1286:70:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1313,
                              "nodeType": "ExpressionStatement",
                              "src": "1286:70:1"
                            }
                          ]
                        },
                        "id": 1315,
                        "nodeType": "IfStatement",
                        "src": "969:402:1",
                        "trueBody": {
                          "id": 1303,
                          "nodeType": "Block",
                          "src": "1003:181:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 1301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1293,
                                  "name": "computedHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1270,
                                  "src": "1099:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1297,
                                          "name": "computedHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1270,
                                          "src": "1141:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 1298,
                                          "name": "proofElement",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1285,
                                          "src": "1155:12:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1295,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "1124:3:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 1296,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "1124:16:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 1299,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1124:44:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1294,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "1114:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1300,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1114:55:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "1099:70:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1302,
                              "nodeType": "ExpressionStatement",
                              "src": "1099:70:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1277,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1274,
                      "src": "875:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1278,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1260,
                        "src": "879:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 1279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "879:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "875:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1317,
                  "initializationExpression": {
                    "assignments": [
                      1274
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1274,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "868:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "860:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1273,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "860:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1276,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "872:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "860:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "893:3:1",
                      "subExpression": {
                        "id": 1281,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1274,
                        "src": "893:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1283,
                    "nodeType": "ExpressionStatement",
                    "src": "893:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "855:526:1"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 1320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1318,
                      "name": "computedHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1270,
                      "src": "1473:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1319,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1262,
                      "src": "1489:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1473:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1268,
                  "id": 1321,
                  "nodeType": "Return",
                  "src": "1466:27:1"
                }
              ]
            },
            "documentation": {
              "id": 1257,
              "nodeType": "StructuredDocumentation",
              "src": "352:323:1",
              "text": " @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."
            },
            "id": 1323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "689:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1260,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "722:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1323,
                  "src": "705:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1258,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "705:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1259,
                    "nodeType": "ArrayTypeName",
                    "src": "705:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1262,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "745:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1323,
                  "src": "737:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1261,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "737:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1264,
                  "mutability": "mutable",
                  "name": "leaf",
                  "nameLocation": "767:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1323,
                  "src": "759:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1263,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "759:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "695:82:1"
            },
            "returnParameters": {
              "id": 1268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1267,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1323,
                  "src": "801:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "801:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "800:6:1"
            },
            "scope": 1324,
            "src": "680:820:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2048,
        "src": "326:1176:1",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1391,
        "linearizedBaseContracts": [
          1391
        ],
        "name": "IERC20",
        "nameLocation": "1516:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "18160ddd",
            "id": 1329,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1538:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1549:2:1"
            },
            "returnParameters": {
              "id": 1328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1327,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1329,
                  "src": "1575:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1575:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1574:9:1"
            },
            "scope": 1391,
            "src": "1529:55:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "70a08231",
            "id": 1336,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1598:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1332,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1331,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1616:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1336,
                  "src": "1608:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1608:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1607:17:1"
            },
            "returnParameters": {
              "id": 1335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1334,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1336,
                  "src": "1648:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1647:9:1"
            },
            "scope": 1391,
            "src": "1589:68:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "a9059cbb",
            "id": 1345,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1671:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1338,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1688:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1345,
                  "src": "1680:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1340,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1707:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1345,
                  "src": "1699:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1699:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1679:35:1"
            },
            "returnParameters": {
              "id": 1344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1343,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1345,
                  "src": "1733:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1342,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1732:6:1"
            },
            "scope": 1391,
            "src": "1662:77:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "dd62ed3e",
            "id": 1354,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "1753:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1347,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1771:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "1763:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1349,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1786:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "1778:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1762:32:1"
            },
            "returnParameters": {
              "id": 1353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1352,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1354,
                  "src": "1818:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1817:9:1"
            },
            "scope": 1391,
            "src": "1744:83:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 1363,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "1841:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1356,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1857:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "1849:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1355,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1358,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1874:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "1866:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1866:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1848:33:1"
            },
            "returnParameters": {
              "id": 1362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1361,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "1900:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1360,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1900:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1899:6:1"
            },
            "scope": 1391,
            "src": "1832:74:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 1374,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "1920:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1365,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1941:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1374,
                  "src": "1933:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1364,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1933:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1367,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1957:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1374,
                  "src": "1949:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1369,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1976:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1374,
                  "src": "1968:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1968:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1932:51:1"
            },
            "returnParameters": {
              "id": 1373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1372,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1374,
                  "src": "2002:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1371,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2002:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2001:6:1"
            },
            "scope": 1391,
            "src": "1911:97:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 1382,
            "name": "Transfer",
            "nameLocation": "2024:8:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1376,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2049:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "2033:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2033:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1378,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2071:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "2055:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1380,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2083:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1382,
                  "src": "2075:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2075:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2032:57:1"
            },
            "src": "2018:72:1"
          },
          {
            "anonymous": false,
            "id": 1390,
            "name": "Approval",
            "nameLocation": "2101:8:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1384,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2126:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1390,
                  "src": "2110:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2110:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1386,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2149:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1390,
                  "src": "2133:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1388,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2166:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1390,
                  "src": "2158:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2109:63:1"
            },
            "src": "2095:78:1"
          }
        ],
        "scope": 2048,
        "src": "1506:669:1",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ForgeGuess2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1418,
        "linearizedBaseContracts": [
          1418
        ],
        "name": "ForgeGuess2",
        "nameLocation": "2185:11:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "f03d6672",
            "id": 1393,
            "mutability": "mutable",
            "name": "unreleased",
            "nameLocation": "2222:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "2207:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1392,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2207:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 1395,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "2253:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 1418,
            "src": "2238:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1394,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2238:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1402,
              "nodeType": "Block",
              "src": "2336:2:1",
              "statements": []
            },
            "functionSelector": "2ee40908",
            "id": 1403,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeFor",
            "nameLocation": "2279:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1397,
                  "mutability": "mutable",
                  "name": "forWhom",
                  "nameLocation": "2296:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1403,
                  "src": "2288:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2288:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1399,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2313:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1403,
                  "src": "2305:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2305:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2287:33:1"
            },
            "returnParameters": {
              "id": 1401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2336:0:1"
            },
            "scope": 1418,
            "src": "2270:68:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1408,
              "nodeType": "Block",
              "src": "2392:2:1",
              "statements": []
            },
            "functionSelector": "2e1a7d4d",
            "id": 1409,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2352:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1405,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2369:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1409,
                  "src": "2361:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1404,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2361:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2360:16:1"
            },
            "returnParameters": {
              "id": 1407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2392:0:1"
            },
            "scope": 1418,
            "src": "2343:51:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1416,
              "nodeType": "Block",
              "src": "2476:2:1",
              "statements": []
            },
            "functionSelector": "afcf89aa",
            "id": 1417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withEstimator",
            "nameLocation": "2413:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1411,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "2435:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1417,
                  "src": "2427:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2427:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2426:19:1"
            },
            "returnParameters": {
              "id": 1415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1414,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1417,
                  "src": "2467:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2467:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2466:9:1"
            },
            "scope": 1418,
            "src": "2404:74:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2048,
        "src": "2176:308:1",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AirdropToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2047,
        "linearizedBaseContracts": [
          2047
        ],
        "name": "AirdropToken",
        "nameLocation": "2494:12:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5b9ea9e5",
            "id": 1424,
            "mutability": "mutable",
            "name": "ForgeTokenAddressREAL",
            "nameLocation": "2538:21:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "2523:90:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1419,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2523:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846343466423433303636463745434339313035384533413631344662384131354132373335323736",
                  "id": 1422,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2570:42:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xF44fB43066F7ECC91058E3A614Fb8A15A2735276"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 1421,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2562:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 1420,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2562:7:1",
                  "typeDescriptions": {}
                }
              },
              "id": 1423,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2562:51:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "647e03b7",
            "id": 1430,
            "mutability": "mutable",
            "name": "ForgeTokenAddress",
            "nameLocation": "2634:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "2619:86:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1425,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2619:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307862463434393334313566443145373944634461386344306341643745354564363544436537303734",
                  "id": 1428,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2662:42:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xbF4493415fD1E79DcDa8cD0cAd7E5Ed65DCe7074"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 1427,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2654:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 1426,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2654:7:1",
                  "typeDescriptions": {}
                }
              },
              "id": 1429,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2654:51:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "60138460",
            "id": 1436,
            "mutability": "mutable",
            "name": "ForgeGuessContractAddress",
            "nameLocation": "2726:25:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "2711:94:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1431,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2711:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307832624331373365353444663961334134343739304145383931323034333437303137633632423642",
                  "id": 1434,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2762:42:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x2bC173e54Df9a3A44790AE891204347017c62B6B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 1433,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2754:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 1432,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2754:7:1",
                  "typeDescriptions": {}
                }
              },
              "id": 1435,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2754:51:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d49b9216",
            "id": 1439,
            "mutability": "mutable",
            "name": "_merkleRootAll",
            "nameLocation": "2829:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "2811:32:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 1437,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2811:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 1438,
              "nodeType": "ArrayTypeName",
              "src": "2811:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1441,
            "mutability": "mutable",
            "name": "_merkleRootTop",
            "nameLocation": "2866:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "2849:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1440,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2849:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1443,
            "mutability": "mutable",
            "name": "_merkleRootMid",
            "nameLocation": "2903:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "2886:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1442,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2886:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1445,
            "mutability": "mutable",
            "name": "_merkleRootBot",
            "nameLocation": "2940:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "2923:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1444,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2923:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "290812c2",
            "id": 1448,
            "mutability": "mutable",
            "name": "amtClaim",
            "nameLocation": "3020:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "3002:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 1446,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3002:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 1447,
              "nodeType": "ArrayTypeName",
              "src": "3002:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1451,
            "mutability": "mutable",
            "name": "nextTokenId",
            "nameLocation": "3051:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "3034:32:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1449,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3034:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1450,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3065:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "73b2e80e",
            "id": 1455,
            "mutability": "mutable",
            "name": "hasClaimed",
            "nameLocation": "3104:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "3072:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1454,
              "keyType": {
                "id": 1452,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3080:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3072:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1453,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3091:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "54fac919",
            "id": 1464,
            "mutability": "mutable",
            "name": "decay",
            "nameLocation": "3135:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "3120:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1456,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3120:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              },
              "id": 1463,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "id": 1461,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "commonType": {
                    "typeIdentifier": "t_rational_1440_by_1",
                    "typeString": "int_const 1440"
                  },
                  "id": 1459,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "3234",
                    "id": 1457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3143:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_24_by_1",
                      "typeString": "int_const 24"
                    },
                    "value": "24"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "hexValue": "3630",
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3147:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60_by_1",
                      "typeString": "int_const 60"
                    },
                    "value": "60"
                  },
                  "src": "3143:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1440_by_1",
                    "typeString": "int_const 1440"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "hexValue": "3630",
                  "id": 1460,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3152:2:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_60_by_1",
                    "typeString": "int_const 60"
                  },
                  "value": "60"
                },
                "src": "3143:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3330",
                "id": 1462,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3157:2:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_30_by_1",
                  "typeString": "int_const 30"
                },
                "value": "30"
              },
              "src": "3143:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1471,
            "mutability": "mutable",
            "name": "rewardTOP",
            "nameLocation": "3173:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "3165:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1465,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3165:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "id": 1470,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "313030",
                "id": 1466,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3185:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "100"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 1469,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 1467,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3191:2:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 1468,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3197:2:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "3191:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "3185:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1478,
            "mutability": "mutable",
            "name": "rewardMID",
            "nameLocation": "3218:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "3210:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1472,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3210:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_26214400000000000000000000_by_1",
                "typeString": "int_const 26214400000000000000000000"
              },
              "id": 1477,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "313030",
                "id": 1473,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3230:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "100"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_262144000000000000000000_by_1",
                  "typeString": "int_const 262144000000000000000000"
                },
                "id": 1476,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3230",
                  "id": 1474,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3236:2:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_20_by_1",
                    "typeString": "int_const 20"
                  },
                  "value": "20"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 1475,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3242:2:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "3236:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_262144000000000000000000_by_1",
                  "typeString": "int_const 262144000000000000000000"
                }
              },
              "src": "3230:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_26214400000000000000000000_by_1",
                "typeString": "int_const 26214400000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1485,
            "mutability": "mutable",
            "name": "rewardBOT",
            "nameLocation": "3263:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "3255:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1479,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3255:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "id": 1484,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "hexValue": "313030",
                "id": 1480,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3275:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_100_by_1",
                  "typeString": "int_const 100"
                },
                "value": "100"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                },
                "id": 1483,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3130",
                  "id": 1481,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3281:2:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "hexValue": "3138",
                  "id": 1482,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3287:2:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_18_by_1",
                    "typeString": "int_const 18"
                  },
                  "value": "18"
                },
                "src": "3281:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                  "typeString": "int_const 1000000000000000000"
                }
              },
              "src": "3275:14:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "8da58897",
            "id": 1489,
            "mutability": "mutable",
            "name": "starttime",
            "nameLocation": "3310:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 2047,
            "src": "3295:42:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1486,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3295:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 1487,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "3322:5:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 1488,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "3322:15:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1546,
              "nodeType": "Block",
              "src": "3432:362:1",
              "statements": [
                {
                  "expression": {
                    "id": 1500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1498,
                      "name": "_merkleRootTop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1441,
                      "src": "3442:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1499,
                      "name": "merkleRootTop",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1491,
                      "src": "3459:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3442:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1501,
                  "nodeType": "ExpressionStatement",
                  "src": "3442:30:1"
                },
                {
                  "expression": {
                    "id": 1504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1502,
                      "name": "_merkleRootMid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1443,
                      "src": "3482:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1503,
                      "name": "merkleRootMid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1493,
                      "src": "3499:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3482:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1505,
                  "nodeType": "ExpressionStatement",
                  "src": "3482:30:1"
                },
                {
                  "expression": {
                    "id": 1508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1506,
                      "name": "_merkleRootBot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1445,
                      "src": "3522:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1507,
                      "name": "merkleRootBot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1495,
                      "src": "3539:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "3522:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1509,
                  "nodeType": "ExpressionStatement",
                  "src": "3522:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1513,
                        "name": "merkleRootTop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1491,
                        "src": "3582:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1510,
                        "name": "_merkleRootAll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "3562:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 1512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3562:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3562:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1515,
                  "nodeType": "ExpressionStatement",
                  "src": "3562:34:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1519,
                        "name": "merkleRootMid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1493,
                        "src": "3626:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1516,
                        "name": "_merkleRootAll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "3606:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 1518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3606:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 1520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3606:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1521,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:34:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1525,
                        "name": "merkleRootBot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1495,
                        "src": "3670:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 1522,
                        "name": "_merkleRootAll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1439,
                        "src": "3650:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 1524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3650:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 1526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3650:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1527,
                  "nodeType": "ExpressionStatement",
                  "src": "3650:34:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030303030303030",
                        "id": 1531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3708:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        },
                        "value": "1000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        }
                      ],
                      "expression": {
                        "id": 1528,
                        "name": "amtClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "3694:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3694:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 1532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3694:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1533,
                  "nodeType": "ExpressionStatement",
                  "src": "3694:28:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030303030303030",
                        "id": 1537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3746:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000_by_1",
                          "typeString": "int_const 100000000"
                        },
                        "value": "100000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000_by_1",
                          "typeString": "int_const 100000000"
                        }
                      ],
                      "expression": {
                        "id": 1534,
                        "name": "amtClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "3732:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3732:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 1538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3732:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1539,
                  "nodeType": "ExpressionStatement",
                  "src": "3732:24:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030303030",
                        "id": 1543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3780:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "expression": {
                        "id": 1540,
                        "name": "amtClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "3766:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3766:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 1544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3766:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1545,
                  "nodeType": "ExpressionStatement",
                  "src": "3766:21:1"
                }
              ]
            },
            "id": 1547,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1491,
                  "mutability": "mutable",
                  "name": "merkleRootTop",
                  "nameLocation": "3370:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "3362:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1490,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3362:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1493,
                  "mutability": "mutable",
                  "name": "merkleRootMid",
                  "nameLocation": "3393:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "3385:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1492,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3385:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1495,
                  "mutability": "mutable",
                  "name": "merkleRootBot",
                  "nameLocation": "3416:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1547,
                  "src": "3408:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1494,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3360:70:1"
            },
            "returnParameters": {
              "id": 1497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3432:0:1"
            },
            "scope": 2047,
            "src": "3349:445:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1657,
              "nodeType": "Block",
              "src": "3899:682:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1556,
                          "name": "amt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1550,
                          "src": "3917:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1563,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3967:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AirdropToken_$2047",
                                    "typeString": "contract AirdropToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AirdropToken_$2047",
                                    "typeString": "contract AirdropToken"
                                  }
                                ],
                                "id": 1562,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3959:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1561,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3959:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3959:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1558,
                                  "name": "ForgeTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1430,
                                  "src": "3930:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1557,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1391,
                                "src": "3923:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1391_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3923:25:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1391",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1336,
                            "src": "3923:35:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3923:50:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3917:56:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d7573742062652067726561746572207468616e2070726576696f757320746f207265736574",
                        "id": 1567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3975:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70f915303440e65dc3e76717a2ff76eaa4e4ec8946e6394ece51a2d249734006",
                          "typeString": "literal_string \"must be greater than previous to reset\""
                        },
                        "value": "must be greater than previous to reset"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70f915303440e65dc3e76717a2ff76eaa4e4ec8946e6394ece51a2d249734006",
                          "typeString": "literal_string \"must be greater than previous to reset\""
                        }
                      ],
                      "id": 1555,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3909:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3909:107:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1569,
                  "nodeType": "ExpressionStatement",
                  "src": "3909:107:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1575,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4073:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4073:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1579,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4093:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AirdropToken_$2047",
                                  "typeString": "contract AirdropToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AirdropToken_$2047",
                                  "typeString": "contract AirdropToken"
                                }
                              ],
                              "id": 1578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4085:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1577,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4085:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4085:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1581,
                            "name": "amt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1550,
                            "src": "4100:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1572,
                                "name": "ForgeTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1430,
                                "src": "4041:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1571,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1391,
                              "src": "4034:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1391_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4034:25:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1391",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1374,
                          "src": "4034:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4034:70:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c",
                        "id": 1583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4106:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
                          "typeString": "literal_string \"transfer fail\""
                        },
                        "value": "transfer fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
                          "typeString": "literal_string \"transfer fail\""
                        }
                      ],
                      "id": 1570,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4026:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4026:96:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1585,
                  "nodeType": "ExpressionStatement",
                  "src": "4026:96:1"
                },
                {
                  "expression": {
                    "id": 1589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1586,
                      "name": "starttime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "4132:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1587,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4144:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4144:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4132:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1590,
                  "nodeType": "ExpressionStatement",
                  "src": "4132:27:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1595,
                        "name": "ForgeGuessContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1436,
                        "src": "4203:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "393939393939393939393939393939393939393939393939393939393939393939393939393939393939393939393939393939",
                        "id": 1596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4230:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_999999999999999999999999999999999999999999999999999_by_1",
                          "typeString": "int_const 9999...(43 digits omitted)...9999"
                        },
                        "value": "999999999999999999999999999999999999999999999999999"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_999999999999999999999999999999999999999999999999999_by_1",
                          "typeString": "int_const 9999...(43 digits omitted)...9999"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1592,
                            "name": "ForgeTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1430,
                            "src": "4176:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1591,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1391,
                          "src": "4169:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1391_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4169:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1391",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1363,
                      "src": "4169:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4169:113:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1598,
                  "nodeType": "ExpressionStatement",
                  "src": "4169:113:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1605,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4348:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AirdropToken_$2047",
                              "typeString": "contract AirdropToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AirdropToken_$2047",
                              "typeString": "contract AirdropToken"
                            }
                          ],
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4340:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1603,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4340:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4340:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1607,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1550,
                        "src": "4355:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1600,
                            "name": "ForgeGuessContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "4304:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1599,
                          "name": "ForgeGuess2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1418,
                          "src": "4292:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ForgeGuess2_$1418_$",
                            "typeString": "type(contract ForgeGuess2)"
                          }
                        },
                        "id": 1601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4292:38:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForgeGuess2_$1418",
                          "typeString": "contract ForgeGuess2"
                        }
                      },
                      "id": 1602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakeFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1403,
                      "src": "4292:47:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4292:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1609,
                  "nodeType": "ExpressionStatement",
                  "src": "4292:67:1"
                },
                {
                  "assignments": [
                    1611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1611,
                      "mutability": "mutable",
                      "name": "x",
                      "nameLocation": "4374:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1657,
                      "src": "4369:6:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1610,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4369:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1614,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1612,
                      "name": "perfect",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1704,
                      "src": "4378:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 1613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4378:9:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4369:18:1"
                },
                {
                  "expression": {
                    "id": 1621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1615,
                        "name": "amtClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "4397:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1617,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 1616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4406:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4397:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1618,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "4411:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 1619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4415:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "4411:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4397:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1622,
                  "nodeType": "ExpressionStatement",
                  "src": "4397:20:1"
                },
                {
                  "expression": {
                    "id": 1629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1623,
                        "name": "amtClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "4427:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1625,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 1624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4436:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4427:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1626,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "4441:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 1627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4445:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "src": "4441:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4427:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1630,
                  "nodeType": "ExpressionStatement",
                  "src": "4427:19:1"
                },
                {
                  "expression": {
                    "id": 1637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1631,
                        "name": "amtClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "4456:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 1633,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 1632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4465:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4456:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1634,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "4470:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4474:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4470:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4456:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1638,
                  "nodeType": "ExpressionStatement",
                  "src": "4456:19:1"
                },
                {
                  "expression": {
                    "id": 1643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1639,
                      "name": "rewardTOP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1471,
                      "src": "4485:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1640,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "4497:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3130",
                        "id": 1641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4501:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "src": "4497:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4485:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1644,
                  "nodeType": "ExpressionStatement",
                  "src": "4485:18:1"
                },
                {
                  "expression": {
                    "id": 1649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1645,
                      "name": "rewardMID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1478,
                      "src": "4513:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1646,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1611,
                        "src": "4525:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 1647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4529:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "src": "4525:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4513:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1650,
                  "nodeType": "ExpressionStatement",
                  "src": "4513:17:1"
                },
                {
                  "expression": {
                    "id": 1653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1651,
                      "name": "rewardBOT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1485,
                      "src": "4540:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1652,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1611,
                      "src": "4552:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4540:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1654,
                  "nodeType": "ExpressionStatement",
                  "src": "4540:13:1"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4570:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1554,
                  "id": 1656,
                  "nodeType": "Return",
                  "src": "4563:11:1"
                }
              ]
            },
            "documentation": {
              "id": 1548,
              "nodeType": "StructuredDocumentation",
              "src": "3805:36:1",
              "text": " @dev Mints new NFTs"
            },
            "functionSelector": "f6fba66d",
            "id": 1658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depo",
            "nameLocation": "3855:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1550,
                  "mutability": "mutable",
                  "name": "amt",
                  "nameLocation": "3865:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1658,
                  "src": "3860:8:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1549,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3860:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3859:10:1"
            },
            "returnParameters": {
              "id": 1554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1553,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "3891:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1658,
                  "src": "3886:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1552,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3886:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3885:14:1"
            },
            "scope": 2047,
            "src": "3846:735:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1703,
              "nodeType": "Block",
              "src": "4640:282:1",
              "statements": [
                {
                  "assignments": [
                    1664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1664,
                      "mutability": "mutable",
                      "name": "test",
                      "nameLocation": "4667:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1703,
                      "src": "4659:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1663,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4659:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1700,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000000"
                          },
                          "id": 1671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "id": 1669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4675:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 1668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 1666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4680:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 1667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4686:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "4680:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "4675:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 1670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4691:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "4675:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000000"
                          }
                        }
                      ],
                      "id": 1672,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4674:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                        "typeString": "int_const 10000000000000000000000"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1690,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "393735",
                                  "id": 1673,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4701:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_975_by_1",
                                    "typeString": "int_const 975"
                                  },
                                  "value": "975"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1688,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 1681,
                                            "name": "ForgeGuessContractAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1436,
                                            "src": "4753:25:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 1677,
                                                    "name": "ForgeTokenAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1430,
                                                    "src": "4723:17:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "id": 1676,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "4715:7:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 1675,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "4715:7:1",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 1678,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "4715:26:1",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 1674,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1391,
                                              "src": "4708:6:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1391_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 1679,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4708:34:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$1391",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 1680,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1336,
                                          "src": "4708:44:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 1682,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4708:71:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 1684,
                                                "name": "ForgeGuessContractAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1436,
                                                "src": "4794:25:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 1683,
                                              "name": "ForgeGuess2",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1418,
                                              "src": "4782:11:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_ForgeGuess2_$1418_$",
                                                "typeString": "type(contract ForgeGuess2)"
                                              }
                                            },
                                            "id": 1685,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4782:38:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ForgeGuess2_$1418",
                                              "typeString": "contract ForgeGuess2"
                                            }
                                          },
                                          "id": 1686,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "unreleased",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1393,
                                          "src": "4782:49:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view external returns (uint256)"
                                          }
                                        },
                                        "id": 1687,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4782:51:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4708:125:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1689,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4707:128:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4701:134:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1692,
                                        "name": "ForgeGuessContractAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1436,
                                        "src": "4850:25:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 1691,
                                      "name": "ForgeGuess2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1418,
                                      "src": "4838:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ForgeGuess2_$1418_$",
                                        "typeString": "type(contract ForgeGuess2)"
                                      }
                                    },
                                    "id": 1693,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4838:38:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ForgeGuess2_$1418",
                                      "typeString": "contract ForgeGuess2"
                                    }
                                  },
                                  "id": 1694,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1395,
                                  "src": "4838:50:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 1695,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4838:52:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4701:189:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1697,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4700:191:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1698,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4699:193:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4674:218:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4659:233:1"
                },
                {
                  "expression": {
                    "id": 1701,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1664,
                    "src": "4911:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1662,
                  "id": 1702,
                  "nodeType": "Return",
                  "src": "4904:11:1"
                }
              ]
            },
            "functionSelector": "8912ed0b",
            "id": 1704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "perfect",
            "nameLocation": "4596:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4603:2:1"
            },
            "returnParameters": {
              "id": 1662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1661,
                  "mutability": "mutable",
                  "name": "amtz",
                  "nameLocation": "4635:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1704,
                  "src": "4627:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4627:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4626:14:1"
            },
            "scope": 2047,
            "src": "4587:335:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1720,
              "nodeType": "Block",
              "src": "5006:96:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1716,
                            "name": "choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1706,
                            "src": "5087:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1715,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1789,
                          "src": "5077:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 1717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5077:17:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1712,
                            "name": "ForgeGuessContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "5036:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1711,
                          "name": "ForgeGuess2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1418,
                          "src": "5024:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ForgeGuess2_$1418_$",
                            "typeString": "type(contract ForgeGuess2)"
                          }
                        },
                        "id": 1713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5024:38:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForgeGuess2_$1418",
                          "typeString": "contract ForgeGuess2"
                        }
                      },
                      "id": 1714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withEstimator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1417,
                      "src": "5024:52:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 1718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5024:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1710,
                  "id": 1719,
                  "nodeType": "Return",
                  "src": "5017:78:1"
                }
              ]
            },
            "functionSelector": "2d8590c7",
            "id": 1721,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "amtOutForChoiceInForge",
            "nameLocation": "4937:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1706,
                  "mutability": "mutable",
                  "name": "choice",
                  "nameLocation": "4965:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "4960:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1705,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4960:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4959:13:1"
            },
            "returnParameters": {
              "id": 1710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1709,
                  "mutability": "mutable",
                  "name": "out",
                  "nameLocation": "5002:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1721,
                  "src": "4994:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4994:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4993:13:1"
            },
            "scope": 2047,
            "src": "4928:174:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1788,
              "nodeType": "Block",
              "src": "5173:389:1",
              "statements": [
                {
                  "assignments": [
                    1729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1729,
                      "mutability": "mutable",
                      "name": "durdur",
                      "nameLocation": "5191:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1788,
                      "src": "5183:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1728,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5183:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1734,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1730,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5200:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5200:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 1732,
                      "name": "starttime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1489,
                      "src": "5218:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5200:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5183:44:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1735,
                      "name": "durdur",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "5240:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1736,
                      "name": "decay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1464,
                      "src": "5249:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5240:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1743,
                  "nodeType": "IfStatement",
                  "src": "5237:57:1",
                  "trueBody": {
                    "id": 1742,
                    "nodeType": "Block",
                    "src": "5255:39:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 1740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1738,
                            "name": "durdur",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1729,
                            "src": "5269:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1739,
                            "name": "decay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1464,
                            "src": "5278:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5269:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1741,
                        "nodeType": "ExpressionStatement",
                        "src": "5269:14:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1744,
                      "name": "choice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1723,
                      "src": "5306:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5316:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5306:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1757,
                        "name": "choice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1723,
                        "src": "5387:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5396:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5387:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1770,
                          "name": "choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1723,
                          "src": "5467:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 1771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5476:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5467:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1783,
                      "nodeType": "IfStatement",
                      "src": "5464:75:1",
                      "trueBody": {
                        "id": 1782,
                        "nodeType": "Block",
                        "src": "5478:61:1",
                        "statements": [
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1777,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 1773,
                                        "name": "amtClaim",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1448,
                                        "src": "5499:8:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 1775,
                                      "indexExpression": {
                                        "hexValue": "32",
                                        "id": 1774,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5508:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5499:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 1776,
                                      "name": "durdur",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1729,
                                      "src": "5513:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5499:20:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1778,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "5498:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 1779,
                                "name": "decay",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1464,
                                "src": "5523:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5498:30:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 1727,
                            "id": 1781,
                            "nodeType": "Return",
                            "src": "5491:37:1"
                          }
                        ]
                      }
                    },
                    "id": 1784,
                    "nodeType": "IfStatement",
                    "src": "5384:155:1",
                    "trueBody": {
                      "id": 1769,
                      "nodeType": "Block",
                      "src": "5398:61:1",
                      "statements": [
                        {
                          "expression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1764,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 1760,
                                      "name": "amtClaim",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1448,
                                      "src": "5419:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 1762,
                                    "indexExpression": {
                                      "hexValue": "31",
                                      "id": 1761,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5428:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5419:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 1763,
                                    "name": "durdur",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1729,
                                    "src": "5433:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5419:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1765,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5418:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1766,
                              "name": "decay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1464,
                              "src": "5443:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5418:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1727,
                          "id": 1768,
                          "nodeType": "Return",
                          "src": "5411:37:1"
                        }
                      ]
                    }
                  },
                  "id": 1785,
                  "nodeType": "IfStatement",
                  "src": "5303:236:1",
                  "trueBody": {
                    "id": 1756,
                    "nodeType": "Block",
                    "src": "5318:61:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1751,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1747,
                                    "name": "amtClaim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1448,
                                    "src": "5339:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 1749,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 1748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5348:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5339:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1750,
                                  "name": "durdur",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1729,
                                  "src": "5353:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5339:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1752,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5338:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 1753,
                            "name": "decay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1464,
                            "src": "5363:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5338:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1727,
                        "id": 1755,
                        "nodeType": "Return",
                        "src": "5331:37:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 1786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5555:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 1727,
                  "id": 1787,
                  "nodeType": "Return",
                  "src": "5548:8:1"
                }
              ]
            },
            "functionSelector": "75fe9fba",
            "id": 1789,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "amountOut",
            "nameLocation": "5117:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1723,
                  "mutability": "mutable",
                  "name": "choice",
                  "nameLocation": "5132:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1789,
                  "src": "5127:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1722,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5127:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5126:13:1"
            },
            "returnParameters": {
              "id": 1727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1726,
                  "mutability": "mutable",
                  "name": "out",
                  "nameLocation": "5169:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1789,
                  "src": "5161:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5161:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5160:13:1"
            },
            "scope": 2047,
            "src": "5108:454:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1839,
              "nodeType": "Block",
              "src": "5635:337:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1798,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1792,
                            "src": "5687:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "id": 1799,
                            "name": "_merkleRootTop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1441,
                            "src": "5700:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1803,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5744:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5744:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1801,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "5727:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "5727:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1805,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5727:28:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1800,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5716:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5716:40:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1796,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1324,
                            "src": "5668:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$1324_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 1797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1323,
                          "src": "5668:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 1807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5668:90:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f6f66206661696c757265",
                        "id": 1808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5761:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378191bf8a12e9d7314877f6fa10917c7688a2ea0e5692dcfbbbd15a171122d5",
                          "typeString": "literal_string \"proof failure\""
                        },
                        "value": "proof failure"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378191bf8a12e9d7314877f6fa10917c7688a2ea0e5692dcfbbbd15a171122d5",
                          "typeString": "literal_string \"proof failure\""
                        }
                      ],
                      "id": 1795,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5659:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5659:118:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1810,
                  "nodeType": "ExpressionStatement",
                  "src": "5659:118:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1812,
                            "name": "hasClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "5796:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1815,
                          "indexExpression": {
                            "expression": {
                              "id": 1813,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5807:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5807:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5796:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5822:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5796:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920636c61696d6564",
                        "id": 1818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5829:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        },
                        "value": "already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        }
                      ],
                      "id": 1811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5788:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5788:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1820,
                  "nodeType": "ExpressionStatement",
                  "src": "5788:59:1"
                },
                {
                  "expression": {
                    "id": 1826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1821,
                        "name": "hasClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1455,
                        "src": "5858:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1824,
                      "indexExpression": {
                        "expression": {
                          "id": 1822,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5869:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5869:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5858:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5881:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5858:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1827,
                  "nodeType": "ExpressionStatement",
                  "src": "5858:27:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1832,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5939:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5939:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 1835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5962:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 1834,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1789,
                          "src": "5952:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 1836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5952:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1829,
                            "name": "ForgeTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1430,
                            "src": "5911:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1828,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1391,
                          "src": "5904:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1391_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5904:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1391",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1345,
                      "src": "5904:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5904:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1838,
                  "nodeType": "ExpressionStatement",
                  "src": "5904:61:1"
                }
              ]
            },
            "functionSelector": "f14ddabf",
            "id": 1840,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithProofTop",
            "nameLocation": "5580:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1792,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "5614:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1840,
                  "src": "5597:28:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1790,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5597:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1791,
                    "nodeType": "ArrayTypeName",
                    "src": "5597:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5596:31:1"
            },
            "returnParameters": {
              "id": 1794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5635:0:1"
            },
            "scope": 2047,
            "src": "5571:401:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1890,
              "nodeType": "Block",
              "src": "6046:325:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1849,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1843,
                            "src": "6086:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "id": 1850,
                            "name": "_merkleRootMid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1443,
                            "src": "6099:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1854,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6143:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6143:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1852,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6126:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1853,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "6126:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6126:28:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 1851,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "6115:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6115:40:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 1847,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1324,
                            "src": "6067:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$1324_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 1848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1323,
                          "src": "6067:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 1858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6067:90:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f6f66206661696c757265",
                        "id": 1859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6160:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378191bf8a12e9d7314877f6fa10917c7688a2ea0e5692dcfbbbd15a171122d5",
                          "typeString": "literal_string \"proof failure\""
                        },
                        "value": "proof failure"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378191bf8a12e9d7314877f6fa10917c7688a2ea0e5692dcfbbbd15a171122d5",
                          "typeString": "literal_string \"proof failure\""
                        }
                      ],
                      "id": 1846,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6058:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6058:118:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1861,
                  "nodeType": "ExpressionStatement",
                  "src": "6058:118:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1863,
                            "name": "hasClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "6195:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1866,
                          "indexExpression": {
                            "expression": {
                              "id": 1864,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6206:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6206:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6195:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6221:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "6195:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920636c61696d6564",
                        "id": 1869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6228:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        },
                        "value": "already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        }
                      ],
                      "id": 1862,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6187:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6187:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1871,
                  "nodeType": "ExpressionStatement",
                  "src": "6187:59:1"
                },
                {
                  "expression": {
                    "id": 1877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1872,
                        "name": "hasClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1455,
                        "src": "6257:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1875,
                      "indexExpression": {
                        "expression": {
                          "id": 1873,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6268:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6268:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6257:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6280:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6257:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1878,
                  "nodeType": "ExpressionStatement",
                  "src": "6257:27:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1883,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6338:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6338:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 1886,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6361:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 1885,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1789,
                          "src": "6351:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 1887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6351:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1880,
                            "name": "ForgeTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1430,
                            "src": "6310:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1879,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1391,
                          "src": "6303:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$1391_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 1881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6303:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1391",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1345,
                      "src": "6303:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6303:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1889,
                  "nodeType": "ExpressionStatement",
                  "src": "6303:61:1"
                }
              ]
            },
            "functionSelector": "75c53c04",
            "id": 1891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithProofMid",
            "nameLocation": "5991:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1843,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "6025:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1891,
                  "src": "6008:28:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1841,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6008:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1842,
                    "nodeType": "ArrayTypeName",
                    "src": "6008:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6007:31:1"
            },
            "returnParameters": {
              "id": 1845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6046:0:1"
            },
            "scope": 2047,
            "src": "5982:389:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1955,
              "nodeType": "Block",
              "src": "6492:427:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1901,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1894,
                            "src": "6520:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 1902,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6533:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6533:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1904,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1896,
                            "src": "6545:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1900,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2028,
                          "src": "6513:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6513:38:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f6f66206661696c757265",
                        "id": 1906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6555:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378191bf8a12e9d7314877f6fa10917c7688a2ea0e5692dcfbbbd15a171122d5",
                          "typeString": "literal_string \"proof failure\""
                        },
                        "value": "proof failure"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378191bf8a12e9d7314877f6fa10917c7688a2ea0e5692dcfbbbd15a171122d5",
                          "typeString": "literal_string \"proof failure\""
                        }
                      ],
                      "id": 1899,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6504:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6504:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1908,
                  "nodeType": "ExpressionStatement",
                  "src": "6504:67:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1910,
                            "name": "hasClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1455,
                            "src": "6590:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1913,
                          "indexExpression": {
                            "expression": {
                              "id": 1911,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6601:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6601:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6590:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6616:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "6590:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920636c61696d6564",
                        "id": 1916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6623:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        },
                        "value": "already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        }
                      ],
                      "id": 1909,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6582:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6582:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1918,
                  "nodeType": "ExpressionStatement",
                  "src": "6582:59:1"
                },
                {
                  "expression": {
                    "id": 1924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1919,
                        "name": "hasClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1455,
                        "src": "6652:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1922,
                      "indexExpression": {
                        "expression": {
                          "id": 1920,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6663:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6663:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6652:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6675:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6652:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1925,
                  "nodeType": "ExpressionStatement",
                  "src": "6652:27:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1931,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1896,
                            "src": "6756:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1930,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1789,
                          "src": "6746:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 1932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6746:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1927,
                            "name": "ForgeGuessContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1436,
                            "src": "6710:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1926,
                          "name": "ForgeGuess2",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1418,
                          "src": "6698:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ForgeGuess2_$1418_$",
                            "typeString": "type(contract ForgeGuess2)"
                          }
                        },
                        "id": 1928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6698:38:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForgeGuess2_$1418",
                          "typeString": "contract ForgeGuess2"
                        }
                      },
                      "id": 1929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1409,
                      "src": "6698:47:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 1933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6698:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1934,
                  "nodeType": "ExpressionStatement",
                  "src": "6698:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1940,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6816:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6816:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1948,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "6872:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AirdropToken_$2047",
                                      "typeString": "contract AirdropToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_AirdropToken_$2047",
                                      "typeString": "contract AirdropToken"
                                    }
                                  ],
                                  "id": 1947,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6864:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1946,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6864:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1949,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6864:13:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1943,
                                    "name": "ForgeTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1430,
                                    "src": "6835:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1942,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1391,
                                  "src": "6828:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$1391_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 1944,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6828:25:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$1391",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 1945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1336,
                              "src": "6828:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 1950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6828:50:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1937,
                                "name": "ForgeTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1430,
                                "src": "6788:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1936,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1391,
                              "src": "6781:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1391_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6781:25:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1391",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1345,
                          "src": "6781:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6781:98:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6e7472616374206d6179206265206f7574206f662066756e6473",
                        "id": 1952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6881:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c0645f299dcc01be5825c8d58ff739e41f41c9dfd5caa64f7b662919572172c",
                          "typeString": "literal_string \"contract may be out of funds\""
                        },
                        "value": "contract may be out of funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c0645f299dcc01be5825c8d58ff739e41f41c9dfd5caa64f7b662919572172c",
                          "typeString": "literal_string \"contract may be out of funds\""
                        }
                      ],
                      "id": 1935,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6773:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6773:139:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1954,
                  "nodeType": "ExpressionStatement",
                  "src": "6773:139:1"
                }
              ]
            },
            "functionSelector": "4f2add4f",
            "id": 1956,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithProofALL",
            "nameLocation": "6425:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1894,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "6459:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1956,
                  "src": "6442:28:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1892,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6442:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1893,
                    "nodeType": "ArrayTypeName",
                    "src": "6442:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1896,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "6477:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1956,
                  "src": "6472:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1895,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6472:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6441:43:1"
            },
            "returnParameters": {
              "id": 1898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6492:0:1"
            },
            "scope": 2047,
            "src": "6416:503:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2027,
              "nodeType": "Block",
              "src": "7048:432:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1968,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1963,
                      "src": "7057:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7066:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7057:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1986,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1963,
                        "src": "7194:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7202:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "7194:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2004,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1963,
                          "src": "7327:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 2005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7336:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "7327:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2022,
                      "nodeType": "IfStatement",
                      "src": "7324:132:1",
                      "trueBody": {
                        "id": 2021,
                        "nodeType": "Block",
                        "src": "7338:118:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2009,
                                  "name": "merkleProof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1959,
                                  "src": "7379:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 2010,
                                    "name": "_merkleRootAll",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1439,
                                    "src": "7392:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                      "typeString": "bytes32[] storage ref"
                                    }
                                  },
                                  "id": 2012,
                                  "indexExpression": {
                                    "hexValue": "32",
                                    "id": 2011,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7407:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7392:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 2016,
                                          "name": "claimer",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1961,
                                          "src": "7439:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 2014,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "7422:3:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 2015,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "7422:16:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 2017,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7422:25:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 2013,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "7411:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 2018,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7411:37:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 2007,
                                  "name": "MerkleProof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1324,
                                  "src": "7360:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_MerkleProof_$1324_$",
                                    "typeString": "type(library MerkleProof)"
                                  }
                                },
                                "id": 2008,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verify",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1323,
                                "src": "7360:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                                  "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                                }
                              },
                              "id": 2019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7360:89:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "functionReturnParameters": 1967,
                            "id": 2020,
                            "nodeType": "Return",
                            "src": "7353:96:1"
                          }
                        ]
                      }
                    },
                    "id": 2023,
                    "nodeType": "IfStatement",
                    "src": "7191:265:1",
                    "trueBody": {
                      "id": 2003,
                      "nodeType": "Block",
                      "src": "7205:114:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1991,
                                "name": "merkleProof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1959,
                                "src": "7242:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 1992,
                                  "name": "_merkleRootAll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1439,
                                  "src": "7255:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                    "typeString": "bytes32[] storage ref"
                                  }
                                },
                                "id": 1994,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 1993,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7270:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7255:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 1998,
                                        "name": "claimer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1961,
                                        "src": "7302:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 1996,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "7285:3:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1997,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "7285:16:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 1999,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7285:25:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 1995,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "7274:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 2000,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7274:37:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 1989,
                                "name": "MerkleProof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1324,
                                "src": "7223:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MerkleProof_$1324_$",
                                  "typeString": "type(library MerkleProof)"
                                }
                              },
                              "id": 1990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verify",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1323,
                              "src": "7223:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                                "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                              }
                            },
                            "id": 2001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7223:89:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 1967,
                          "id": 2002,
                          "nodeType": "Return",
                          "src": "7216:96:1"
                        }
                      ]
                    }
                  },
                  "id": 2024,
                  "nodeType": "IfStatement",
                  "src": "7054:402:1",
                  "trueBody": {
                    "id": 1985,
                    "nodeType": "Block",
                    "src": "7068:118:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1973,
                              "name": "merkleProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "7109:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1974,
                                "name": "_merkleRootAll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1439,
                                "src": "7122:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 1976,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 1975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7137:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7122:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1980,
                                      "name": "claimer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1961,
                                      "src": "7169:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1978,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "7152:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 1979,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "7152:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 1981,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7152:25:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 1977,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "7141:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 1982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7141:37:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 1971,
                              "name": "MerkleProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1324,
                              "src": "7090:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MerkleProof_$1324_$",
                                "typeString": "type(library MerkleProof)"
                              }
                            },
                            "id": 1972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1323,
                            "src": "7090:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                              "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                            }
                          },
                          "id": 1983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7090:89:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1967,
                        "id": 1984,
                        "nodeType": "Return",
                        "src": "7083:96:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 2025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7468:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1967,
                  "id": 2026,
                  "nodeType": "Return",
                  "src": "7461:12:1"
                }
              ]
            },
            "functionSelector": "04b38ce0",
            "id": 2028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "6953:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1959,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "6977:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "6960:28:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1957,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6960:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1958,
                    "nodeType": "ArrayTypeName",
                    "src": "6960:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1961,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "6998:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "6990:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6990:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1963,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "7012:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "7007:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1962,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7007:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6959:59:1"
            },
            "returnParameters": {
              "id": 1967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1966,
                  "mutability": "mutable",
                  "name": "ver",
                  "nameLocation": "7044:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2028,
                  "src": "7039:8:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1965,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7039:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7038:10:1"
            },
            "scope": 2047,
            "src": "6944:536:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2035,
              "nodeType": "Block",
              "src": "7545:27:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "33",
                    "id": 2033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7564:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "functionReturnParameters": 2032,
                  "id": 2034,
                  "nodeType": "Return",
                  "src": "7557:8:1"
                }
              ]
            },
            "functionSelector": "0e2f5fb3",
            "id": 2036,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getThree",
            "nameLocation": "7504:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7512:2:1"
            },
            "returnParameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2031,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2036,
                  "src": "7536:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7536:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7535:9:1"
            },
            "scope": 2047,
            "src": "7495:77:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2045,
              "nodeType": "Block",
              "src": "7655:87:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "697066733a2f2f516d624c724c4d66386537565a54634b637134706a6b7637796a4c454e375247384e714b51344e47507450756333",
                    "id": 2043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7676:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_74152cc1c0bc35f2abf139f333be9afb84e184e645d68bf65627d6eac97501db",
                      "typeString": "literal_string \"ipfs://QmbLrLMf8e7VZTcKcq4pjkv7yjLEN7RG8NqKQ4NGPtPuc3\""
                    },
                    "value": "ipfs://QmbLrLMf8e7VZTcKcq4pjkv7yjLEN7RG8NqKQ4NGPtPuc3"
                  },
                  "functionReturnParameters": 2042,
                  "id": 2044,
                  "nodeType": "Return",
                  "src": "7669:62:1"
                }
              ]
            },
            "functionSelector": "c87b56dd",
            "id": 2046,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "7592:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2038,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7609:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2046,
                  "src": "7601:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7601:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7600:17:1"
            },
            "returnParameters": {
              "id": 2042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2041,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2046,
                  "src": "7640:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2040,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7640:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7639:15:1"
            },
            "scope": 2047,
            "src": "7583:159:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2048,
        "src": "2485:5259:1",
        "usedErrors": []
      }
    ],
    "src": "301:7445:1"
  },
  "bytecode": "6080604052600080546001600160a01b031990811673f44fb43066f7ecc91058e3a614fb8a15a273527617825560018054821673bf4493415fd1e79dcda8cd0cad7e5ed65dce707417905560028054909116732bc173e54df9a3a44790ae891204347017c62b6b17905560085562278d00600a5568056bc75e2d63100000600b8190556a15af1d78b58c4000000000600c55600d5542600e553480156100a457600080fd5b506040516113a03803806113a08339810160408190526100c39161017b565b60048390556005829055600681905560038054600181810183557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9182019590955581548086018355810193909355805480850190915590910155600780548083018255600082905264e8d4a510007fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68891820155815480840183556305f5e100908201558154928301909155620186a09101556101a9565b60008060006060848603121561019057600080fd5b8351925060208401519150604084015190509250925092565b6111e8806101b86000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806373b2e80e116100a25780638da58897116100715780638da588971461023a578063c87b56dd14610243578063d49b921614610263578063f14ddabf14610276578063f6fba66d1461028957600080fd5b806373b2e80e146101e957806375c53c041461020c57806375fe9fba1461021f5780638912ed0b1461023257600080fd5b80634f2add4f116100e95780634f2add4f1461017a57806354fac9191461018f5780635b9ea9e51461019857806360138460146101c3578063647e03b7146101d657600080fd5b806304b38ce01461011b5780630e2f5fb314610143578063290812c2146101545780632d8590c714610167575b600080fd5b61012e610129366004610ef1565b61029c565b60405190151581526020015b60405180910390f35b60035b60405190815260200161013a565b610146610162366004610f48565b610359565b610146610175366004610f48565b61037a565b61018d610188366004610f61565b6103fc565b005b610146600a5481565b6000546101ab906001600160a01b031681565b6040516001600160a01b03909116815260200161013a565b6002546101ab906001600160a01b031681565b6001546101ab906001600160a01b031681565b61012e6101f7366004610fa6565b60096020526000908152604090205460ff1681565b61018d61021a366004610fc1565b610615565b61014661022d366004610f48565b61072f565b6101466107d8565b610146600e5481565b610256610251366004610f48565b61096d565b60405161013a9190610ffe565b610146610271366004610f48565b61098e565b61018d610284366004610fc1565b61099e565b61012e610297366004610f48565b610a49565b60008161030c576103058460036000815481106102bb576102bb611053565b9060005260206000200154856040516020016102ea919060609190911b6001600160601b031916815260140190565b60405160208183030381529060405280519060200120610d75565b9050610352565b816001141561032d576103058460036001815481106102bb576102bb611053565b816002141561034e576103058460036002815481106102bb576102bb611053565b5060005b9392505050565b6007818154811061036957600080fd5b600091825260209091200154905081565b6002546000906001600160a01b031663afcf89aa6103978461072f565b6040518263ffffffff1660e01b81526004016103b591815260200190565b602060405180830381865afa1580156103d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f69190611069565b92915050565b61040782338361029c565b61042c5760405162461bcd60e51b815260040161042390611082565b60405180910390fd5b3360009081526009602052604090205460ff161561045c5760405162461bcd60e51b8152600401610423906110a9565b336000908152600960205260409020805460ff191660011790556002546001600160a01b0316632e1a7d4d6104908361072f565b6040518263ffffffff1660e01b81526004016104ae91815260200190565b600060405180830381600087803b1580156104c857600080fd5b505af11580156104dc573d6000803e3d6000fd5b50506001546040516370a0823160e01b81523060048201526001600160a01b03909116925063a9059cbb9150339083906370a0823190602401602060405180830381865afa158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190611069565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156105a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c591906110d2565b6106115760405162461bcd60e51b815260206004820152601c60248201527f636f6e7472616374206d6179206265206f7574206f662066756e6473000000006044820152606401610423565b5050565b6005546040516001600160601b03193360601b16602082015261063c9183916034016102ea565b6106585760405162461bcd60e51b815260040161042390611082565b3360009081526009602052604090205460ff16156106885760405162461bcd60e51b8152600401610423906110a9565b336000818152600960205260409020805460ff19166001908117909155546001600160a01b03169063a9059cbb906106c0600261072f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561070b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061191906110d2565b600080600e5442610740919061110a565b9050600a548111156107515750600a545b8261078d57600a5481600760008154811061076e5761076e611053565b90600052602060002001546107839190611121565b6103529190611140565b82600114156107ae57600a5481600760018154811061076e5761076e611053565b82600214156107cf57600a5481600760028154811061076e5761076e611053565b50600092915050565b600080600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108529190611069565b600260009054906101000a90046001600160a01b03166001600160a01b031663f03d66726040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c99190611069565b6001546002546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190611069565b610943919061110a565b61094f906103cf611121565b6109599190611140565b6103f69069021e19e0c9bab2400000611140565b606060405180606001604052806035815260200161117e6035913992915050565b6003818154811061036957600080fd5b6004546040516001600160601b03193360601b1660208201526109c59183916034016102ea565b6109e15760405162461bcd60e51b815260040161042390611082565b3360009081526009602052604090205460ff1615610a115760405162461bcd60e51b8152600401610423906110a9565b336000818152600960205260409020805460ff1916600190811790915580546001600160a01b03169163a9059cbb916106c09061072f565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab69190611069565b8211610b135760405162461bcd60e51b815260206004820152602660248201527f6d7573742062652067726561746572207468616e2070726576696f757320746f604482015265081c995cd95d60d21b6064820152608401610423565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e91906110d2565b610bca5760405162461bcd60e51b815260206004820152600d60248201526c1d1c985b9cd9995c8819985a5b609a1b6044820152606401610423565b42600e5560015460025460405163095ea7b360e01b81526001600160a01b0391821660048201527502ac3a4edbbfb8014e3ba83411e915e7ffffffffffff602482015291169063095ea7b3906044016020604051808303816000875af1158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c91906110d2565b506002546040516305dc812160e31b8152306004820152602481018490526001600160a01b0390911690632ee4090890604401600060405180830381600087803b158015610ca957600080fd5b505af1158015610cbd573d6000803e3d6000fd5b505050506000610ccb6107d8565b9050610cd881600a611121565b6007600081548110610cec57610cec611053565b600091825260209091200155610d03816003611121565b6007600181548110610d1757610d17611053565b600091825260209091200155610d2e816001611121565b6007600281548110610d4257610d42611053565b600091825260209091200155610d5981600a611121565b600b55610d67816003611121565b600c55600d55506001919050565b600081815b8551811015610e19576000868281518110610d9757610d97611053565b60200260200101519050808311610dd9576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250610e06565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080610e1181611162565b915050610d7a565b509092149392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e4b57600080fd5b8135602067ffffffffffffffff80831115610e6857610e68610e24565b8260051b604051601f19603f83011681018181108482111715610e8d57610e8d610e24565b604052938452858101830193838101925087851115610eab57600080fd5b83870191505b84821015610eca57813583529183019190830190610eb1565b979650505050505050565b80356001600160a01b0381168114610eec57600080fd5b919050565b600080600060608486031215610f0657600080fd5b833567ffffffffffffffff811115610f1d57600080fd5b610f2986828701610e3a565b935050610f3860208501610ed5565b9150604084013590509250925092565b600060208284031215610f5a57600080fd5b5035919050565b60008060408385031215610f7457600080fd5b823567ffffffffffffffff811115610f8b57600080fd5b610f9785828601610e3a565b95602094909401359450505050565b600060208284031215610fb857600080fd5b61035282610ed5565b600060208284031215610fd357600080fd5b813567ffffffffffffffff811115610fea57600080fd5b610ff684828501610e3a565b949350505050565b600060208083528351808285015260005b8181101561102b5785810183015185820160400152820161100f565b8181111561103d576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561107b57600080fd5b5051919050565b6020808252600d908201526c70726f6f66206661696c75726560981b604082015260600190565b6020808252600f908201526e185b1c9958591e4818db185a5b5959608a1b604082015260600190565b6000602082840312156110e457600080fd5b8151801515811461035257600080fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561111c5761111c6110f4565b500390565b600081600019048311821515161561113b5761113b6110f4565b500290565b60008261115d57634e487b7160e01b600052601260045260246000fd5b500490565b6000600019821415611176576111766110f4565b506001019056fe697066733a2f2f516d624c724c4d66386537565a54634b637134706a6b7637796a4c454e375247384e714b51344e47507450756333a264697066735822122073692a656ed9ea424eddff807c37dee366c46c15dc0bb94e0a446237354a383864736f6c634300080b0033",
  "bytecodeSha1": "b2b8229cbc89723fdeff94ca1648eb26437ba8e8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "AirdropToken",
  "coverageMap": {
    "branches": {
      "1": {
        "AirdropToken.amountOut": {
          "49": [
            5240,
            5254,
            false
          ],
          "50": [
            5306,
            5317,
            false
          ],
          "51": [
            5387,
            5397,
            false
          ],
          "52": [
            5467,
            5477,
            false
          ]
        },
        "AirdropToken.depo": {
          "55": [
            3917,
            3973,
            true
          ],
          "56": [
            4034,
            4104,
            true
          ]
        },
        "AirdropToken.mintWithProofALL": {
          "44": [
            6513,
            6551,
            true
          ],
          "45": [
            6590,
            6621,
            true
          ],
          "46": [
            6781,
            6879,
            true
          ]
        },
        "AirdropToken.mintWithProofMid": {
          "47": [
            6067,
            6157,
            true
          ],
          "48": [
            6195,
            6226,
            true
          ]
        },
        "AirdropToken.mintWithProofTop": {
          "53": [
            5668,
            5758,
            true
          ],
          "54": [
            5796,
            5827,
            true
          ]
        },
        "AirdropToken.verify": {
          "41": [
            7057,
            7067,
            false
          ],
          "42": [
            7194,
            7203,
            false
          ],
          "43": [
            7327,
            7337,
            false
          ]
        },
        "MerkleProof.verify": {
          "57": [
            973,
            1001,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "AirdropToken.amountOut": {
          "15": [
            5269,
            5283
          ],
          "16": [
            5331,
            5368
          ],
          "17": [
            5411,
            5448
          ],
          "18": [
            5491,
            5528
          ],
          "19": [
            5548,
            5556
          ]
        },
        "AirdropToken.amtOutForChoiceInForge": {
          "5": [
            5017,
            5095
          ]
        },
        "AirdropToken.depo": {
          "25": [
            3909,
            4016
          ],
          "26": [
            4026,
            4122
          ],
          "27": [
            4132,
            4159
          ],
          "28": [
            4169,
            4282
          ],
          "29": [
            4292,
            4359
          ],
          "30": [
            4397,
            4417
          ],
          "31": [
            4427,
            4446
          ],
          "32": [
            4456,
            4475
          ],
          "33": [
            4485,
            4503
          ],
          "34": [
            4513,
            4530
          ],
          "35": [
            4540,
            4553
          ],
          "36": [
            4563,
            4574
          ]
        },
        "AirdropToken.getThree": {
          "0": [
            7557,
            7565
          ]
        },
        "AirdropToken.mintWithProofALL": {
          "6": [
            6504,
            6571
          ],
          "7": [
            6582,
            6641
          ],
          "8": [
            6652,
            6679
          ],
          "9": [
            6698,
            6763
          ],
          "10": [
            6773,
            6912
          ]
        },
        "AirdropToken.mintWithProofMid": {
          "11": [
            6058,
            6176
          ],
          "12": [
            6187,
            6246
          ],
          "13": [
            6257,
            6284
          ],
          "14": [
            6303,
            6364
          ]
        },
        "AirdropToken.mintWithProofTop": {
          "21": [
            5659,
            5777
          ],
          "22": [
            5788,
            5847
          ],
          "23": [
            5858,
            5885
          ],
          "24": [
            5904,
            5965
          ]
        },
        "AirdropToken.tokenURI": {
          "20": [
            7669,
            7731
          ]
        },
        "AirdropToken.verify": {
          "1": [
            7083,
            7179
          ],
          "2": [
            7216,
            7312
          ],
          "3": [
            7353,
            7449
          ],
          "4": [
            7461,
            7473
          ]
        },
        "MerkleProof.verify": {
          "37": [
            1099,
            1169
          ],
          "38": [
            1286,
            1356
          ],
          "39": [
            893,
            896
          ],
          "40": [
            1466,
            1493
          ]
        }
      }
    }
  },
  "dependencies": [
    "ForgeGuess2",
    "IERC20",
    "MerkleProof"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c806373b2e80e116100a25780638da58897116100715780638da588971461023a578063c87b56dd14610243578063d49b921614610263578063f14ddabf14610276578063f6fba66d1461028957600080fd5b806373b2e80e146101e957806375c53c041461020c57806375fe9fba1461021f5780638912ed0b1461023257600080fd5b80634f2add4f116100e95780634f2add4f1461017a57806354fac9191461018f5780635b9ea9e51461019857806360138460146101c3578063647e03b7146101d657600080fd5b806304b38ce01461011b5780630e2f5fb314610143578063290812c2146101545780632d8590c714610167575b600080fd5b61012e610129366004610ef1565b61029c565b60405190151581526020015b60405180910390f35b60035b60405190815260200161013a565b610146610162366004610f48565b610359565b610146610175366004610f48565b61037a565b61018d610188366004610f61565b6103fc565b005b610146600a5481565b6000546101ab906001600160a01b031681565b6040516001600160a01b03909116815260200161013a565b6002546101ab906001600160a01b031681565b6001546101ab906001600160a01b031681565b61012e6101f7366004610fa6565b60096020526000908152604090205460ff1681565b61018d61021a366004610fc1565b610615565b61014661022d366004610f48565b61072f565b6101466107d8565b610146600e5481565b610256610251366004610f48565b61096d565b60405161013a9190610ffe565b610146610271366004610f48565b61098e565b61018d610284366004610fc1565b61099e565b61012e610297366004610f48565b610a49565b60008161030c576103058460036000815481106102bb576102bb611053565b9060005260206000200154856040516020016102ea919060609190911b6001600160601b031916815260140190565b60405160208183030381529060405280519060200120610d75565b9050610352565b816001141561032d576103058460036001815481106102bb576102bb611053565b816002141561034e576103058460036002815481106102bb576102bb611053565b5060005b9392505050565b6007818154811061036957600080fd5b600091825260209091200154905081565b6002546000906001600160a01b031663afcf89aa6103978461072f565b6040518263ffffffff1660e01b81526004016103b591815260200190565b602060405180830381865afa1580156103d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f69190611069565b92915050565b61040782338361029c565b61042c5760405162461bcd60e51b815260040161042390611082565b60405180910390fd5b3360009081526009602052604090205460ff161561045c5760405162461bcd60e51b8152600401610423906110a9565b336000908152600960205260409020805460ff191660011790556002546001600160a01b0316632e1a7d4d6104908361072f565b6040518263ffffffff1660e01b81526004016104ae91815260200190565b600060405180830381600087803b1580156104c857600080fd5b505af11580156104dc573d6000803e3d6000fd5b50506001546040516370a0823160e01b81523060048201526001600160a01b03909116925063a9059cbb9150339083906370a0823190602401602060405180830381865afa158015610532573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105569190611069565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156105a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c591906110d2565b6106115760405162461bcd60e51b815260206004820152601c60248201527f636f6e7472616374206d6179206265206f7574206f662066756e6473000000006044820152606401610423565b5050565b6005546040516001600160601b03193360601b16602082015261063c9183916034016102ea565b6106585760405162461bcd60e51b815260040161042390611082565b3360009081526009602052604090205460ff16156106885760405162461bcd60e51b8152600401610423906110a9565b336000818152600960205260409020805460ff19166001908117909155546001600160a01b03169063a9059cbb906106c0600261072f565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561070b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061191906110d2565b600080600e5442610740919061110a565b9050600a548111156107515750600a545b8261078d57600a5481600760008154811061076e5761076e611053565b90600052602060002001546107839190611121565b6103529190611140565b82600114156107ae57600a5481600760018154811061076e5761076e611053565b82600214156107cf57600a5481600760028154811061076e5761076e611053565b50600092915050565b600080600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561082e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108529190611069565b600260009054906101000a90046001600160a01b03166001600160a01b031663f03d66726040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c99190611069565b6001546002546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109399190611069565b610943919061110a565b61094f906103cf611121565b6109599190611140565b6103f69069021e19e0c9bab2400000611140565b606060405180606001604052806035815260200161117e6035913992915050565b6003818154811061036957600080fd5b6004546040516001600160601b03193360601b1660208201526109c59183916034016102ea565b6109e15760405162461bcd60e51b815260040161042390611082565b3360009081526009602052604090205460ff1615610a115760405162461bcd60e51b8152600401610423906110a9565b336000818152600960205260409020805460ff1916600190811790915580546001600160a01b03169163a9059cbb916106c09061072f565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab69190611069565b8211610b135760405162461bcd60e51b815260206004820152602660248201527f6d7573742062652067726561746572207468616e2070726576696f757320746f604482015265081c995cd95d60d21b6064820152608401610423565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8e91906110d2565b610bca5760405162461bcd60e51b815260206004820152600d60248201526c1d1c985b9cd9995c8819985a5b609a1b6044820152606401610423565b42600e5560015460025460405163095ea7b360e01b81526001600160a01b0391821660048201527502ac3a4edbbfb8014e3ba83411e915e7ffffffffffff602482015291169063095ea7b3906044016020604051808303816000875af1158015610c38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5c91906110d2565b506002546040516305dc812160e31b8152306004820152602481018490526001600160a01b0390911690632ee4090890604401600060405180830381600087803b158015610ca957600080fd5b505af1158015610cbd573d6000803e3d6000fd5b505050506000610ccb6107d8565b9050610cd881600a611121565b6007600081548110610cec57610cec611053565b600091825260209091200155610d03816003611121565b6007600181548110610d1757610d17611053565b600091825260209091200155610d2e816001611121565b6007600281548110610d4257610d42611053565b600091825260209091200155610d5981600a611121565b600b55610d67816003611121565b600c55600d55506001919050565b600081815b8551811015610e19576000868281518110610d9757610d97611053565b60200260200101519050808311610dd9576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250610e06565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080610e1181611162565b915050610d7a565b509092149392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e4b57600080fd5b8135602067ffffffffffffffff80831115610e6857610e68610e24565b8260051b604051601f19603f83011681018181108482111715610e8d57610e8d610e24565b604052938452858101830193838101925087851115610eab57600080fd5b83870191505b84821015610eca57813583529183019190830190610eb1565b979650505050505050565b80356001600160a01b0381168114610eec57600080fd5b919050565b600080600060608486031215610f0657600080fd5b833567ffffffffffffffff811115610f1d57600080fd5b610f2986828701610e3a565b935050610f3860208501610ed5565b9150604084013590509250925092565b600060208284031215610f5a57600080fd5b5035919050565b60008060408385031215610f7457600080fd5b823567ffffffffffffffff811115610f8b57600080fd5b610f9785828601610e3a565b95602094909401359450505050565b600060208284031215610fb857600080fd5b61035282610ed5565b600060208284031215610fd357600080fd5b813567ffffffffffffffff811115610fea57600080fd5b610ff684828501610e3a565b949350505050565b600060208083528351808285015260005b8181101561102b5785810183015185820160400152820161100f565b8181111561103d576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561107b57600080fd5b5051919050565b6020808252600d908201526c70726f6f66206661696c75726560981b604082015260600190565b6020808252600f908201526e185b1c9958591e4818db185a5b5959608a1b604082015260600190565b6000602082840312156110e457600080fd5b8151801515811461035257600080fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561111c5761111c6110f4565b500390565b600081600019048311821515161561113b5761113b6110f4565b500290565b60008261115d57634e487b7160e01b600052601260045260246000fd5b500490565b6000600019821415611176576111766110f4565b506001019056fe697066733a2f2f516d624c724c4d66386537565a54634b637134706a6b7637796a4c454e375247384e714b51344e47507450756333a264697066735822122073692a656ed9ea424eddff807c37dee366c46c15dc0bb94e0a446237354a383864736f6c634300080b0033",
  "deployedSourceMap": "2485:5259:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6944:536;;;;;;:::i;:::-;;:::i;:::-;;;1891:14:5;;1884:22;1866:41;;1854:2;1839:18;6944:536:1;;;;;;;;7495:77;7564:1;7495:77;;;2064:25:5;;;2052:2;2037:18;7495:77:1;1918:177:5;3002:26:1;;;;;;:::i;:::-;;:::i;4928:174::-;;;;;;:::i;:::-;;:::i;6416:503::-;;;;;;:::i;:::-;;:::i;:::-;;3120:39;;;;;;2523:90;;;;;-1:-1:-1;;;;;2523:90:1;;;;;;-1:-1:-1;;;;;2870:32:5;;;2852:51;;2840:2;2825:18;2523:90:1;2706:203:5;2711:94:1;;;;;-1:-1:-1;;;;;2711:94:1;;;2619:86;;;;;-1:-1:-1;;;;;2619:86:1;;;3072:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5982:389;;;;;;:::i;:::-;;:::i;5108:454::-;;;;;;:::i;:::-;;:::i;4587:335::-;;;:::i;3295:42::-;;;;;;7583:159;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2811:32::-;;;;;;:::i;:::-;;:::i;5571:401::-;;;;;;:::i;:::-;;:::i;3846:735::-;;;;;;:::i;:::-;;:::i;6944:536::-;7039:8;7057:10;7054:402;;7090:89;7109:11;7122:14;7137:1;7122:17;;;;;;;;:::i;:::-;;;;;;;;;7169:7;7152:25;;;;;;;4523:2:5;4519:15;;;;-1:-1:-1;;;;;;4515:53:5;4503:66;;4594:2;4585:12;;4374:229;7152:25:1;;;;;;;;;;;;;7141:37;;;;;;7090:18;:89::i;:::-;7083:96;;;;7054:402;7194:5;7202:1;7194:9;7191:265;;;7223:89;7242:11;7255:14;7270:1;7255:17;;;;;;;;:::i;7191:265::-;7327:5;7336:1;7327:10;7324:132;;;7360:89;7379:11;7392:14;7407:1;7392:17;;;;;;;;:::i;7324:132::-;-1:-1:-1;7468:5:1;6944:536;;;;;;:::o;3002:26::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3002:26:1;:::o;4928:174::-;5036:25;;4994:11;;-1:-1:-1;;;;;5036:25:1;5024:52;5077:17;5087:6;5077:9;:17::i;:::-;5024:71;;;;;;;;;;;;;2064:25:5;;2052:2;2037:18;;1918:177;5024:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5017:78;4928:174;-1:-1:-1;;4928:174:1:o;6416:503::-;6513:38;6520:11;6533:10;6545:5;6513:6;:38::i;:::-;6504:67;;;;-1:-1:-1;;;6504:67:1;;;;;;;:::i;:::-;;;;;;;;;6601:10;6590:22;;;;:10;:22;;;;;;;;:31;6582:59;;;;-1:-1:-1;;;6582:59:1;;;;;;;:::i;:::-;6663:10;6652:22;;;;:10;:22;;;;;:27;;-1:-1:-1;;6652:27:1;6675:4;6652:27;;;6710:25;;-1:-1:-1;;;;;6710:25:1;6698:47;6746:16;6756:5;6746:9;:16::i;:::-;6698:65;;;;;;;;;;;;;2064:25:5;;2052:2;2037:18;;1918:177;6698:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6788:17:1;;6828:50;;-1:-1:-1;;;6828:50:1;;6872:4;6828:50;;;2852:51:5;-1:-1:-1;;;;;6788:17:1;;;;-1:-1:-1;6781:34:1;;-1:-1:-1;6816:10:1;;6788:17;;6828:35;;2825:18:5;;6828:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6781:98;;-1:-1:-1;;;;;;6781:98:1;;;;;;;-1:-1:-1;;;;;5675:32:5;;;6781:98:1;;;5657:51:5;5724:18;;;5717:34;5630:18;;6781:98:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6773:139;;;;-1:-1:-1;;;6773:139:1;;6246:2:5;6773:139:1;;;6228:21:5;6285:2;6265:18;;;6258:30;6324;6304:18;;;6297:58;6372:18;;6773:139:1;6044:352:5;6773:139:1;6416:503;;:::o;5982:389::-;6099:14;;6126:28;;-1:-1:-1;;;;;;6143:10:1;4523:2:5;4519:15;4515:53;6126:28:1;;;4503:66:5;6067:90:1;;6086:11;;4585:12:5;;6126:28:1;4374:229:5;6067:90:1;6058:118;;;;-1:-1:-1;;;6058:118:1;;;;;;;:::i;:::-;6206:10;6195:22;;;;:10;:22;;;;;;;;:31;6187:59;;;;-1:-1:-1;;;6187:59:1;;;;;;;:::i;:::-;6268:10;6257:22;;;;:10;:22;;;;;:27;;-1:-1:-1;;6257:27:1;6280:4;6257:27;;;;;;6310:17;-1:-1:-1;;;;;6310:17:1;;6303:34;;6351:12;6361:1;6351:9;:12::i;:::-;6303:61;;-1:-1:-1;;;;;;6303:61:1;;;;;;;-1:-1:-1;;;;;5675:32:5;;;6303:61:1;;;5657:51:5;5724:18;;;5717:34;5630:18;;6303:61:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5108:454::-;5161:11;5183:14;5218:9;;5200:15;:27;;;;:::i;:::-;5183:44;;5249:5;;5240:6;:14;5237:57;;;-1:-1:-1;5278:5:1;;5237:57;5306:11;5303:236;;5363:5;;5353:6;5339:8;5348:1;5339:11;;;;;;;;:::i;:::-;;;;;;;;;:20;;;;:::i;:::-;5338:30;;;;:::i;5303:236::-;5387:6;5396:1;5387:10;5384:155;;;5443:5;;5433:6;5419:8;5428:1;5419:11;;;;;;;;:::i;5384:155::-;5467:6;5476:1;5467:10;5464:75;;;5523:5;;5513:6;5499:8;5508:1;5499:11;;;;;;;;:::i;5464:75::-;-1:-1:-1;5555:1:1;;5108:454;-1:-1:-1;;5108:454:1:o;4587:335::-;4627:12;4659;4850:25;;;;;;;;;-1:-1:-1;;;;;4850:25:1;-1:-1:-1;;;;;4838:50:1;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4794:25;;;;;;;;;-1:-1:-1;;;;;4794:25:1;-1:-1:-1;;;;;4782:49:1;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4723:17;;4753:25;;4708:71;;-1:-1:-1;;;4708:71:1;;-1:-1:-1;;;;;4753:25:1;;;4708:71;;;2852:51:5;4723:17:1;;;4708:44;;2825:18:5;;4708:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:125;;;;:::i;:::-;4701:134;;:3;:134;:::i;:::-;:189;;;;:::i;:::-;4674:218;;4675:20;4674:218;:::i;7583:159::-;7640:13;7669:62;;;;;;;;;;;;;;;;;;7583:159;-1:-1:-1;;7583:159:1:o;2811:32::-;;;;;;;;;;;;5571:401;5700:14;;5727:28;;-1:-1:-1;;;;;;5744:10:1;4523:2:5;4519:15;4515:53;5727:28:1;;;4503:66:5;5668:90:1;;5687:11;;4585:12:5;;5727:28:1;4374:229:5;5668:90:1;5659:118;;;;-1:-1:-1;;;5659:118:1;;;;;;;:::i;:::-;5807:10;5796:22;;;;:10;:22;;;;;;;;:31;5788:59;;;;-1:-1:-1;;;5788:59:1;;;;;;;:::i;:::-;5869:10;5858:22;;;;:10;:22;;;;;:27;;-1:-1:-1;;5858:27:1;5881:4;5858:27;;;;;;5911:17;;-1:-1:-1;;;;;5911:17:1;;5904:34;;5952:12;;:9;:12::i;3846:735::-;3930:17;;3923:50;;-1:-1:-1;;;3923:50:1;;3967:4;3923:50;;;2852:51:5;3886:12:1;;-1:-1:-1;;;;;3930:17:1;;3923:35;;2825:18:5;;3923:50:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3917:3;:56;3909:107;;;;-1:-1:-1;;;3909:107:1;;7260:2:5;3909:107:1;;;7242:21:5;7299:2;7279:18;;;7272:30;7338:34;7318:18;;;7311:62;-1:-1:-1;;;7389:18:5;;;7382:36;7435:19;;3909:107:1;7058:402:5;3909:107:1;4041:17;;4034:70;;-1:-1:-1;;;4034:70:1;;4073:10;4034:70;;;7705:34:5;4093:4:1;7755:18:5;;;7748:43;7807:18;;;7800:34;;;-1:-1:-1;;;;;4041:17:1;;;;4034:38;;7640:18:5;;4034:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4026:96;;;;-1:-1:-1;;;4026:96:1;;8047:2:5;4026:96:1;;;8029:21:5;8086:2;8066:18;;;8059:30;-1:-1:-1;;;8105:18:5;;;8098:43;8158:18;;4026:96:1;7845:337:5;4026:96:1;4144:15;4132:9;:27;4176:17;;4203:25;;4169:113;;-1:-1:-1;;;4169:113:1;;-1:-1:-1;;;;;4203:25:1;;;4169:113;;;5657:51:5;4230::1;5724:18:5;;;5717:34;4176:17:1;;;4169:33;;5630:18:5;;4169:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4304:25:1;;4292:67;;-1:-1:-1;;;4292:67:1;;4348:4;4292:67;;;5657:51:5;5724:18;;;5717:34;;;-1:-1:-1;;;;;4304:25:1;;;;4292:47;;5630:18:5;;4292:67:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4369:6;4378:9;:7;:9::i;:::-;4369:18;-1:-1:-1;4411:6:1;4369:18;4415:2;4411:6;:::i;:::-;4397:8;4406:1;4397:11;;;;;;;;:::i;:::-;;;;;;;;;;:20;4441:5;:1;4445;4441:5;:::i;:::-;4427:8;4436:1;4427:11;;;;;;;;:::i;:::-;;;;;;;;;;:19;4470:5;:1;4474;4470:5;:::i;:::-;4456:8;4465:1;4456:11;;;;;;;;:::i;:::-;;;;;;;;;;:19;4497:6;:1;4501:2;4497:6;:::i;:::-;4485:9;:18;4525:5;:1;4529;4525:5;:::i;:::-;4513:9;:17;4540:9;:13;-1:-1:-1;4570:4:1;;3846:735;-1:-1:-1;3846:735:1:o;680:820::-;801:4;840;801;855:526;879:5;:12;875:1;:16;855:526;;;912:20;935:5;941:1;935:8;;;;;;;;:::i;:::-;;;;;;;912:31;;989:12;973;:28;969:402;;1124:44;;;;;;8681:19:5;;;8716:12;;;8709:28;;;8753:12;;1124:44:1;;;;;;;;;;;;1114:55;;;;;;1099:70;;969:402;;;1311:44;;;;;;8681:19:5;;;8716:12;;;8709:28;;;8753:12;;1311:44:1;;;;;;;;;;;;1301:55;;;;;;1286:70;;969:402;-1:-1:-1;893:3:1;;;;:::i;:::-;;;;855:526;;;-1:-1:-1;1473:20:1;;;;680:820;-1:-1:-1;;;680:820:1:o;14:127:5:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:902;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;307:6;294:20;333:4;356:18;393:2;389;386:10;383:36;;;399:18;;:::i;:::-;445:2;442:1;438:10;477:2;471:9;540:2;536:7;531:2;527;523:11;519:25;511:6;507:38;595:6;583:10;580:22;575:2;563:10;560:18;557:46;554:72;;;606:18;;:::i;:::-;642:2;635:22;692:18;;;768:15;;;764:24;;;726:15;;;;-1:-1:-1;800:15:5;;;797:35;;;828:1;825;818:12;797:35;864:2;856:6;852:15;841:26;;876:142;892:6;887:3;884:15;876:142;;;958:17;;946:30;;996:12;;;;909;;;;876:142;;;1036:6;146:902;-1:-1:-1;;;;;;;146:902:5:o;1053:173::-;1121:20;;-1:-1:-1;;;;;1170:31:5;;1160:42;;1150:70;;1216:1;1213;1206:12;1150:70;1053:173;;;:::o;1231:490::-;1333:6;1341;1349;1402:2;1390:9;1381:7;1377:23;1373:32;1370:52;;;1418:1;1415;1408:12;1370:52;1458:9;1445:23;1491:18;1483:6;1480:30;1477:50;;;1523:1;1520;1513:12;1477:50;1546:61;1599:7;1590:6;1579:9;1575:22;1546:61;:::i;:::-;1536:71;;;1626:38;1660:2;1649:9;1645:18;1626:38;:::i;:::-;1616:48;;1711:2;1700:9;1696:18;1683:32;1673:42;;1231:490;;;;;:::o;2100:180::-;2159:6;2212:2;2200:9;2191:7;2187:23;2183:32;2180:52;;;2228:1;2225;2218:12;2180:52;-1:-1:-1;2251:23:5;;2100:180;-1:-1:-1;2100:180:5:o;2285:416::-;2378:6;2386;2439:2;2427:9;2418:7;2414:23;2410:32;2407:52;;;2455:1;2452;2445:12;2407:52;2495:9;2482:23;2528:18;2520:6;2517:30;2514:50;;;2560:1;2557;2550:12;2514:50;2583:61;2636:7;2627:6;2616:9;2612:22;2583:61;:::i;:::-;2573:71;2691:2;2676:18;;;;2663:32;;-1:-1:-1;;;;2285:416:5:o;2914:186::-;2973:6;3026:2;3014:9;3005:7;3001:23;2997:32;2994:52;;;3042:1;3039;3032:12;2994:52;3065:29;3084:9;3065:29;:::i;3105:348::-;3189:6;3242:2;3230:9;3221:7;3217:23;3213:32;3210:52;;;3258:1;3255;3248:12;3210:52;3298:9;3285:23;3331:18;3323:6;3320:30;3317:50;;;3363:1;3360;3353:12;3317:50;3386:61;3439:7;3430:6;3419:9;3415:22;3386:61;:::i;:::-;3376:71;3105:348;-1:-1:-1;;;;3105:348:5:o;3458:597::-;3570:4;3599:2;3628;3617:9;3610:21;3660:6;3654:13;3703:6;3698:2;3687:9;3683:18;3676:34;3728:1;3738:140;3752:6;3749:1;3746:13;3738:140;;;3847:14;;;3843:23;;3837:30;3813:17;;;3832:2;3809:26;3802:66;3767:10;;3738:140;;;3896:6;3893:1;3890:13;3887:91;;;3966:1;3961:2;3952:6;3941:9;3937:22;3933:31;3926:42;3887:91;-1:-1:-1;4039:2:5;4018:15;-1:-1:-1;;4014:29:5;3999:45;;;;4046:2;3995:54;;3458:597;-1:-1:-1;;;3458:597:5:o;4242:127::-;4303:10;4298:3;4294:20;4291:1;4284:31;4334:4;4331:1;4324:15;4358:4;4355:1;4348:15;4608:184;4678:6;4731:2;4719:9;4710:7;4706:23;4702:32;4699:52;;;4747:1;4744;4737:12;4699:52;-1:-1:-1;4770:16:5;;4608:184;-1:-1:-1;4608:184:5:o;4797:337::-;4999:2;4981:21;;;5038:2;5018:18;;;5011:30;-1:-1:-1;;;5072:2:5;5057:18;;5050:43;5125:2;5110:18;;4797:337::o;5139:339::-;5341:2;5323:21;;;5380:2;5360:18;;;5353:30;-1:-1:-1;;;5414:2:5;5399:18;;5392:45;5469:2;5454:18;;5139:339::o;5762:277::-;5829:6;5882:2;5870:9;5861:7;5857:23;5853:32;5850:52;;;5898:1;5895;5888:12;5850:52;5930:9;5924:16;5983:5;5976:13;5969:21;5962:5;5959:32;5949:60;;6005:1;6002;5995:12;6401:127;6462:10;6457:3;6453:20;6450:1;6443:31;6493:4;6490:1;6483:15;6517:4;6514:1;6507:15;6533:125;6573:4;6601:1;6598;6595:8;6592:34;;;6606:18;;:::i;:::-;-1:-1:-1;6643:9:5;;6533:125::o;6663:168::-;6703:7;6769:1;6765;6761:6;6757:14;6754:1;6751:21;6746:1;6739:9;6732:17;6728:45;6725:71;;;6776:18;;:::i;:::-;-1:-1:-1;6816:9:5;;6663:168::o;6836:217::-;6876:1;6902;6892:132;;6946:10;6941:3;6937:20;6934:1;6927:31;6981:4;6978:1;6971:15;7009:4;7006:1;6999:15;6892:132;-1:-1:-1;7038:9:5;;6836:217::o;8776:135::-;8815:3;-1:-1:-1;;8836:17:5;;8833:43;;;8856:18;;:::i;:::-;-1:-1:-1;8903:1:5;8892:13;;8776:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "depo(uint256)": {
        "details": "Mints new NFTs"
      }
    },
    "version": 1
  },
  "offset": [
    2485,
    7744
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73B2E80E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA58897 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA58897 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xD49B9216 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xF14DDABF EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xF6FBA66D EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x73B2E80E EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x75C53C04 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x75FE9FBA EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x8912ED0B EQ PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F2ADD4F GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4F2ADD4F EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x54FAC919 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x5B9EA9E5 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x60138460 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x647E03B7 EQ PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4B38CE0 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xE2F5FB3 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x290812C2 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x2D8590C7 EQ PUSH2 0x167 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x146 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x37A JUMP JUMPDEST PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xF61 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x146 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1AB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1AB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1AB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xFA6 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x21A CALLDATASIZE PUSH1 0x4 PUSH2 0xFC1 JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST PUSH2 0x146 PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x146 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x96D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13A SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH2 0x146 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x98E JUMP JUMPDEST PUSH2 0x18D PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC1 JUMP JUMPDEST PUSH2 0x99E JUMP JUMPDEST PUSH2 0x12E PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0xF48 JUMP JUMPDEST PUSH2 0xA49 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x30C JUMPI PUSH2 0x305 DUP5 PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x2BB JUMPI PUSH2 0x2BB PUSH2 0x1053 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2EA SWAP2 SWAP1 PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0xD75 JUMP JUMPDEST SWAP1 POP PUSH2 0x352 JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0x32D JUMPI PUSH2 0x305 DUP5 PUSH1 0x3 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x2BB JUMPI PUSH2 0x2BB PUSH2 0x1053 JUMP JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0x34E JUMPI PUSH2 0x305 DUP5 PUSH1 0x3 PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0x2BB JUMPI PUSH2 0x2BB PUSH2 0x1053 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFCF89AA PUSH2 0x397 DUP5 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B5 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x407 DUP3 CALLER DUP4 PUSH2 0x29C JUMP JUMPDEST PUSH2 0x42C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x423 SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x45C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x423 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2E1A7D4D PUSH2 0x490 DUP4 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C5 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x611 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F6E7472616374206D6179206265206F7574206F662066756E647300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x63C SWAP2 DUP4 SWAP2 PUSH1 0x34 ADD PUSH2 0x2EA JUMP JUMPDEST PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x423 SWAP1 PUSH2 0x1082 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x688 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x423 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x6C0 PUSH1 0x2 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x70B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD TIMESTAMP PUSH2 0x740 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 GT ISZERO PUSH2 0x751 JUMPI POP PUSH1 0xA SLOAD JUMPDEST DUP3 PUSH2 0x78D JUMPI PUSH1 0xA SLOAD DUP2 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x76E JUMPI PUSH2 0x76E PUSH2 0x1053 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1140 JUMP JUMPDEST DUP3 PUSH1 0x1 EQ ISZERO PUSH2 0x7AE JUMPI PUSH1 0xA SLOAD DUP2 PUSH1 0x7 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x76E JUMPI PUSH2 0x76E PUSH2 0x1053 JUMP JUMPDEST DUP3 PUSH1 0x2 EQ ISZERO PUSH2 0x7CF JUMPI PUSH1 0xA SLOAD DUP2 PUSH1 0x7 PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0x76E JUMPI PUSH2 0x76E PUSH2 0x1053 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF03D6672 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C9 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x915 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x939 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x110A JUMP JUMPDEST PUSH2 0x94F SWAP1 PUSH2 0x3CF PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x959 SWAP2 SWAP1 PUSH2 0x1140 JUMP JUMPDEST PUSH2 0x3F6 SWAP1 PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x1140 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x117E PUSH1 0x35 SWAP2 CODECOPY SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x9C5 SWAP2 DUP4 SWAP2 PUSH1 0x34 ADD PUSH2 0x2EA JUMP JUMPDEST PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x423 SWAP1 PUSH2 0x1082 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x423 SWAP1 PUSH2 0x10A9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x6C0 SWAP1 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB6 SWAP2 SWAP1 PUSH2 0x1069 JUMP JUMPDEST DUP3 GT PUSH2 0xB13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D7573742062652067726561746572207468616E2070726576696F757320746F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x81C995CD95D PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x423 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB6A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8E SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0xBCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1D1C985B9CD9995C8819985A5B PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x423 JUMP JUMPDEST TIMESTAMP PUSH1 0xE SSTORE PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH22 0x2AC3A4EDBBFB8014E3BA83411E915E7FFFFFFFFFFFF PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC5C SWAP2 SWAP1 PUSH2 0x10D2 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5DC8121 PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2EE40908 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0xCCB PUSH2 0x7D8 JUMP JUMPDEST SWAP1 POP PUSH2 0xCD8 DUP2 PUSH1 0xA PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xCEC JUMPI PUSH2 0xCEC PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH2 0xD03 DUP2 PUSH1 0x3 PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0xD17 JUMPI PUSH2 0xD17 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH2 0xD2E DUP2 PUSH1 0x1 PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0xD42 JUMPI PUSH2 0xD42 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH2 0xD59 DUP2 PUSH1 0xA PUSH2 0x1121 JUMP JUMPDEST PUSH1 0xB SSTORE PUSH2 0xD67 DUP2 PUSH1 0x3 PUSH2 0x1121 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0xD SSTORE POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xE19 JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD97 JUMPI PUSH2 0xD97 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0xDD9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0xE11 DUP2 PUSH2 0x1162 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD7A JUMP JUMPDEST POP SWAP1 SWAP3 EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0xE68 JUMPI PUSH2 0xE68 PUSH2 0xE24 JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0xE8D JUMPI PUSH2 0xE8D PUSH2 0xE24 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP4 DUP5 MSTORE DUP6 DUP2 ADD DUP4 ADD SWAP4 DUP4 DUP2 ADD SWAP3 POP DUP8 DUP6 GT ISZERO PUSH2 0xEAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0xECA JUMPI DUP2 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0xEB1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF29 DUP7 DUP3 DUP8 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP4 POP POP PUSH2 0xF38 PUSH1 0x20 DUP6 ADD PUSH2 0xED5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF97 DUP6 DUP3 DUP7 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x352 DUP3 PUSH2 0xED5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFF6 DUP5 DUP3 DUP6 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x102B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x100F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x103D JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x107B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x70726F6F66206661696C757265 PUSH1 0x98 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x185B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x111C JUMPI PUSH2 0x111C PUSH2 0x10F4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x113B JUMPI PUSH2 0x113B PUSH2 0x10F4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x115D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1176 JUMPI PUSH2 0x1176 PUSH2 0x10F4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID PUSH10 0x7066733A2F2F516D624C PUSH19 0x4C4D66386537565A54634B637134706A6B7637 PUSH26 0x6A4C454E375247384E714B51344E47507450756333A264697066 PUSH20 0x5822122073692A656ED9EA424EDDFF807C37DEE3 PUSH7 0xC46C15DC0BB94E EXP DIFFICULTY PUSH3 0x37354A CODESIZE CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x73B2E80E"
    },
    "38": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8DA58897"
    },
    "49": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "GT",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8DA58897"
    },
    "60": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23A"
    },
    "64": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC87B56DD"
    },
    "71": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x243"
    },
    "75": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xD49B9216"
    },
    "82": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x263"
    },
    "86": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF14DDABF"
    },
    "93": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x276"
    },
    "97": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF6FBA66D"
    },
    "104": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "105": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "108": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "109": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "REVERT",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x73B2E80E"
    },
    "120": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E9"
    },
    "124": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x75C53C04"
    },
    "131": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20C"
    },
    "135": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x75FE9FBA"
    },
    "142": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21F"
    },
    "146": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8912ED0B"
    },
    "153": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "154": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x232"
    },
    "157": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "158": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "161": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "REVERT",
      "path": "1"
    },
    "162": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4F2ADD4F"
    },
    "169": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "GT",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "174": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "175": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4F2ADD4F"
    },
    "180": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17A"
    },
    "184": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "185": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "186": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x54FAC919"
    },
    "191": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "192": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18F"
    },
    "195": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "196": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "197": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5B9EA9E5"
    },
    "202": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "203": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x198"
    },
    "206": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "207": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "208": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x60138460"
    },
    "213": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "214": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C3"
    },
    "217": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "218": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "219": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x647E03B7"
    },
    "224": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "225": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D6"
    },
    "228": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "229": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "232": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "REVERT",
      "path": "1"
    },
    "233": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "234": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "235": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4B38CE0"
    },
    "240": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "241": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "245": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "246": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE2F5FB3"
    },
    "251": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "252": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x143"
    },
    "255": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "256": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "257": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x290812C2"
    },
    "262": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "263": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x154"
    },
    "266": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "267": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "268": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2D8590C7"
    },
    "273": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "EQ",
      "path": "1"
    },
    "274": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x167"
    },
    "277": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "278": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "279": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "DUP1",
      "path": "1"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2485,
        7744
      ],
      "op": "REVERT",
      "path": "1"
    },
    "283": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "284": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12E"
    },
    "287": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x129"
    },
    "290": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "291": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "293": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF1"
    },
    "296": {
      "fn": "AirdropToken.verify",
      "jump": "i",
      "offset": [
        6944,
        7480
      ],
      "op": "JUMP",
      "path": "1"
    },
    "297": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "298": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29C"
    },
    "301": {
      "fn": "AirdropToken.verify",
      "jump": "i",
      "offset": [
        6944,
        7480
      ],
      "op": "JUMP",
      "path": "1"
    },
    "302": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "303": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "305": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "306": {
      "op": "SWAP1"
    },
    "307": {
      "op": "ISZERO"
    },
    "308": {
      "op": "ISZERO"
    },
    "309": {
      "op": "DUP2"
    },
    "310": {
      "op": "MSTORE"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "313": {
      "op": "ADD"
    },
    "314": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "315": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "317": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "318": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "DUP1",
      "path": "1"
    },
    "319": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "320": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "SUB",
      "path": "1"
    },
    "321": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "322": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "RETURN",
      "path": "1"
    },
    "323": {
      "fn": "AirdropToken.getThree",
      "offset": [
        7495,
        7572
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "324": {
      "fn": "AirdropToken.getThree",
      "offset": [
        7564,
        7565
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x3"
    },
    "326": {
      "fn": "AirdropToken.getThree",
      "offset": [
        7495,
        7572
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "327": {
      "fn": "AirdropToken.getThree",
      "offset": [
        7495,
        7572
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "329": {
      "fn": "AirdropToken.getThree",
      "offset": [
        7495,
        7572
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "330": {
      "op": "SWAP1"
    },
    "331": {
      "op": "DUP2"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "335": {
      "op": "ADD"
    },
    "336": {
      "fn": "AirdropToken.getThree",
      "offset": [
        7495,
        7572
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13A"
    },
    "339": {
      "op": "JUMP"
    },
    "340": {
      "offset": [
        3002,
        3028
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "341": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3002,
        3028
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "344": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3002,
        3028
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x162"
    },
    "347": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3002,
        3028
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "348": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3002,
        3028
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "350": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3002,
        3028
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF48"
    },
    "353": {
      "fn": "AirdropToken.getThree",
      "jump": "i",
      "offset": [
        3002,
        3028
      ],
      "op": "JUMP",
      "path": "1"
    },
    "354": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3002,
        3028
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "355": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3002,
        3028
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x359"
    },
    "358": {
      "fn": "AirdropToken.getThree",
      "jump": "i",
      "offset": [
        3002,
        3028
      ],
      "op": "JUMP",
      "path": "1"
    },
    "359": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        4928,
        5102
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "360": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        4928,
        5102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "363": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        4928,
        5102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x175"
    },
    "366": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        4928,
        5102
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "367": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        4928,
        5102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "369": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        4928,
        5102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF48"
    },
    "372": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "jump": "i",
      "offset": [
        4928,
        5102
      ],
      "op": "JUMP",
      "path": "1"
    },
    "373": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        4928,
        5102
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "374": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        4928,
        5102
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37A"
    },
    "377": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "jump": "i",
      "offset": [
        4928,
        5102
      ],
      "op": "JUMP",
      "path": "1"
    },
    "378": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6416,
        6919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "379": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6416,
        6919
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18D"
    },
    "382": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6416,
        6919
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x188"
    },
    "385": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6416,
        6919
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "386": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6416,
        6919
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "388": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6416,
        6919
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF61"
    },
    "391": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        6416,
        6919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "392": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6416,
        6919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "393": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6416,
        6919
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FC"
    },
    "396": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        6416,
        6919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "397": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6416,
        6919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "398": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6416,
        6919
      ],
      "op": "STOP",
      "path": "1"
    },
    "399": {
      "offset": [
        3120,
        3159
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "400": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3120,
        3159
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "403": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3120,
        3159
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "405": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3120,
        3159
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "406": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3120,
        3159
      ],
      "op": "DUP2",
      "path": "1"
    },
    "407": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3120,
        3159
      ],
      "op": "JUMP",
      "path": "1"
    },
    "408": {
      "offset": [
        2523,
        2613
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "409": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2523,
        2613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "411": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2523,
        2613
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "412": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2523,
        2613
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AB"
    },
    "415": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2523,
        2613
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "422": {
      "op": "SHL"
    },
    "423": {
      "op": "SUB"
    },
    "424": {
      "offset": [
        2523,
        2613
      ],
      "op": "AND",
      "path": "1"
    },
    "425": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2523,
        2613
      ],
      "op": "DUP2",
      "path": "1"
    },
    "426": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2523,
        2613
      ],
      "op": "JUMP",
      "path": "1"
    },
    "427": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2523,
        2613
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "428": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2523,
        2613
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "430": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2523,
        2613
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "437": {
      "op": "SHL"
    },
    "438": {
      "op": "SUB"
    },
    "439": {
      "op": "SWAP1"
    },
    "440": {
      "op": "SWAP2"
    },
    "441": {
      "op": "AND"
    },
    "442": {
      "op": "DUP2"
    },
    "443": {
      "op": "MSTORE"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "446": {
      "op": "ADD"
    },
    "447": {
      "offset": [
        2523,
        2613
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13A"
    },
    "450": {
      "op": "JUMP"
    },
    "451": {
      "offset": [
        2711,
        2805
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "452": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2711,
        2805
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "454": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2711,
        2805
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "455": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2711,
        2805
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AB"
    },
    "458": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2711,
        2805
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "463": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "465": {
      "op": "SHL"
    },
    "466": {
      "op": "SUB"
    },
    "467": {
      "offset": [
        2711,
        2805
      ],
      "op": "AND",
      "path": "1"
    },
    "468": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2711,
        2805
      ],
      "op": "DUP2",
      "path": "1"
    },
    "469": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2711,
        2805
      ],
      "op": "JUMP",
      "path": "1"
    },
    "470": {
      "offset": [
        2619,
        2705
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "471": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2619,
        2705
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "473": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2619,
        2705
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "474": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2619,
        2705
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AB"
    },
    "477": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2619,
        2705
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "484": {
      "op": "SHL"
    },
    "485": {
      "op": "SUB"
    },
    "486": {
      "offset": [
        2619,
        2705
      ],
      "op": "AND",
      "path": "1"
    },
    "487": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2619,
        2705
      ],
      "op": "DUP2",
      "path": "1"
    },
    "488": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        2619,
        2705
      ],
      "op": "JUMP",
      "path": "1"
    },
    "489": {
      "offset": [
        3072,
        3114
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "490": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12E"
    },
    "493": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F7"
    },
    "496": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "497": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "499": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFA6"
    },
    "502": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        3072,
        3114
      ],
      "op": "JUMP",
      "path": "1"
    },
    "503": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "504": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "506": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "508": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "509": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "511": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "512": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "DUP2",
      "path": "1"
    },
    "513": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "514": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "516": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "517": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "518": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "519": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "521": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "AND",
      "path": "1"
    },
    "522": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "DUP2",
      "path": "1"
    },
    "523": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        3072,
        3114
      ],
      "op": "JUMP",
      "path": "1"
    },
    "524": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        5982,
        6371
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "525": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        5982,
        6371
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18D"
    },
    "528": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        5982,
        6371
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21A"
    },
    "531": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        5982,
        6371
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "532": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        5982,
        6371
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "534": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        5982,
        6371
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFC1"
    },
    "537": {
      "fn": "AirdropToken.mintWithProofMid",
      "jump": "i",
      "offset": [
        5982,
        6371
      ],
      "op": "JUMP",
      "path": "1"
    },
    "538": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        5982,
        6371
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "539": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        5982,
        6371
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x615"
    },
    "542": {
      "fn": "AirdropToken.mintWithProofMid",
      "jump": "i",
      "offset": [
        5982,
        6371
      ],
      "op": "JUMP",
      "path": "1"
    },
    "543": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5108,
        5562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "544": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5108,
        5562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "547": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5108,
        5562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22D"
    },
    "550": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5108,
        5562
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "551": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5108,
        5562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "553": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5108,
        5562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF48"
    },
    "556": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5108,
        5562
      ],
      "op": "JUMP",
      "path": "1"
    },
    "557": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5108,
        5562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "558": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5108,
        5562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72F"
    },
    "561": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5108,
        5562
      ],
      "op": "JUMP",
      "path": "1"
    },
    "562": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4587,
        4922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "563": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4587,
        4922
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "566": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4587,
        4922
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D8"
    },
    "569": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        4587,
        4922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "570": {
      "offset": [
        3295,
        3337
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "571": {
      "fn": "AirdropToken.perfect",
      "offset": [
        3295,
        3337
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "574": {
      "fn": "AirdropToken.perfect",
      "offset": [
        3295,
        3337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE"
    },
    "576": {
      "fn": "AirdropToken.perfect",
      "offset": [
        3295,
        3337
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "577": {
      "fn": "AirdropToken.perfect",
      "offset": [
        3295,
        3337
      ],
      "op": "DUP2",
      "path": "1"
    },
    "578": {
      "fn": "AirdropToken.perfect",
      "offset": [
        3295,
        3337
      ],
      "op": "JUMP",
      "path": "1"
    },
    "579": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "580": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x256"
    },
    "583": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x251"
    },
    "586": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "587": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "589": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF48"
    },
    "592": {
      "fn": "AirdropToken.tokenURI",
      "jump": "i",
      "offset": [
        7583,
        7742
      ],
      "op": "JUMP",
      "path": "1"
    },
    "593": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "594": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x96D"
    },
    "597": {
      "fn": "AirdropToken.tokenURI",
      "jump": "i",
      "offset": [
        7583,
        7742
      ],
      "op": "JUMP",
      "path": "1"
    },
    "598": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "599": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "601": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "602": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13A"
    },
    "605": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "606": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "607": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFFE"
    },
    "610": {
      "fn": "AirdropToken.tokenURI",
      "jump": "i",
      "offset": [
        7583,
        7742
      ],
      "op": "JUMP",
      "path": "1"
    },
    "611": {
      "offset": [
        2811,
        2843
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "612": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x146"
    },
    "615": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x271"
    },
    "618": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "619": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "621": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF48"
    },
    "624": {
      "fn": "AirdropToken.tokenURI",
      "jump": "i",
      "offset": [
        2811,
        2843
      ],
      "op": "JUMP",
      "path": "1"
    },
    "625": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "626": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x98E"
    },
    "629": {
      "fn": "AirdropToken.tokenURI",
      "jump": "i",
      "offset": [
        2811,
        2843
      ],
      "op": "JUMP",
      "path": "1"
    },
    "630": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5571,
        5972
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "631": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5571,
        5972
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18D"
    },
    "634": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5571,
        5972
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x284"
    },
    "637": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5571,
        5972
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "638": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5571,
        5972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "640": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5571,
        5972
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFC1"
    },
    "643": {
      "fn": "AirdropToken.mintWithProofTop",
      "jump": "i",
      "offset": [
        5571,
        5972
      ],
      "op": "JUMP",
      "path": "1"
    },
    "644": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5571,
        5972
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "645": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5571,
        5972
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x99E"
    },
    "648": {
      "fn": "AirdropToken.mintWithProofTop",
      "jump": "i",
      "offset": [
        5571,
        5972
      ],
      "op": "JUMP",
      "path": "1"
    },
    "649": {
      "fn": "AirdropToken.depo",
      "offset": [
        3846,
        4581
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "650": {
      "fn": "AirdropToken.depo",
      "offset": [
        3846,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12E"
    },
    "653": {
      "fn": "AirdropToken.depo",
      "offset": [
        3846,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x297"
    },
    "656": {
      "fn": "AirdropToken.depo",
      "offset": [
        3846,
        4581
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "657": {
      "fn": "AirdropToken.depo",
      "offset": [
        3846,
        4581
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "659": {
      "fn": "AirdropToken.depo",
      "offset": [
        3846,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF48"
    },
    "662": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        3846,
        4581
      ],
      "op": "JUMP",
      "path": "1"
    },
    "663": {
      "fn": "AirdropToken.depo",
      "offset": [
        3846,
        4581
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "664": {
      "fn": "AirdropToken.depo",
      "offset": [
        3846,
        4581
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA49"
    },
    "667": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        3846,
        4581
      ],
      "op": "JUMP",
      "path": "1"
    },
    "668": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "669": {
      "fn": "AirdropToken.verify",
      "offset": [
        7039,
        7047
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "671": {
      "branch": 41,
      "fn": "AirdropToken.verify",
      "offset": [
        7057,
        7067
      ],
      "op": "DUP2",
      "path": "1"
    },
    "672": {
      "fn": "AirdropToken.verify",
      "offset": [
        7054,
        7456
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C"
    },
    "675": {
      "branch": 41,
      "fn": "AirdropToken.verify",
      "offset": [
        7054,
        7456
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "676": {
      "fn": "AirdropToken.verify",
      "offset": [
        7090,
        7179
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 1,
      "value": "0x305"
    },
    "679": {
      "fn": "AirdropToken.verify",
      "offset": [
        7109,
        7120
      ],
      "op": "DUP5",
      "path": "1"
    },
    "680": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7136
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "682": {
      "fn": "AirdropToken.verify",
      "offset": [
        7137,
        7138
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "684": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "DUP2",
      "path": "1"
    },
    "685": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "686": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "DUP2",
      "path": "1"
    },
    "687": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "LT",
      "path": "1"
    },
    "688": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BB"
    },
    "691": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "692": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BB"
    },
    "695": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1053"
    },
    "698": {
      "fn": "AirdropToken.verify",
      "jump": "i",
      "offset": [
        7122,
        7139
      ],
      "op": "JUMP",
      "path": "1"
    },
    "699": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "700": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "701": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "703": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "704": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "706": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "708": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "709": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "ADD",
      "path": "1"
    },
    "710": {
      "fn": "AirdropToken.verify",
      "offset": [
        7122,
        7139
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "711": {
      "fn": "AirdropToken.verify",
      "offset": [
        7169,
        7176
      ],
      "op": "DUP6",
      "path": "1"
    },
    "712": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "714": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "715": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "717": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "ADD",
      "path": "1"
    },
    "718": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EA"
    },
    "721": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "722": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "723": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "725": {
      "op": "SWAP2"
    },
    "726": {
      "op": "SWAP1"
    },
    "727": {
      "op": "SWAP2"
    },
    "728": {
      "op": "SHL"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "733": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "735": {
      "op": "SHL"
    },
    "736": {
      "op": "SUB"
    },
    "737": {
      "op": "NOT"
    },
    "738": {
      "op": "AND"
    },
    "739": {
      "op": "DUP2"
    },
    "740": {
      "op": "MSTORE"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "SWAP1"
    },
    "745": {
      "op": "JUMP"
    },
    "746": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "747": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "749": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "750": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "752": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "DUP2",
      "path": "1"
    },
    "753": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "DUP4",
      "path": "1"
    },
    "754": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "SUB",
      "path": "1"
    },
    "755": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "SUB",
      "path": "1"
    },
    "756": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "DUP2",
      "path": "1"
    },
    "757": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "758": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "759": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "761": {
      "fn": "AirdropToken.verify",
      "offset": [
        7152,
        7177
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "762": {
      "fn": "AirdropToken.verify",
      "offset": [
        7141,
        7178
      ],
      "op": "DUP1",
      "path": "1"
    },
    "763": {
      "fn": "AirdropToken.verify",
      "offset": [
        7141,
        7178
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "764": {
      "fn": "AirdropToken.verify",
      "offset": [
        7141,
        7178
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "765": {
      "fn": "AirdropToken.verify",
      "offset": [
        7141,
        7178
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "767": {
      "fn": "AirdropToken.verify",
      "offset": [
        7141,
        7178
      ],
      "op": "ADD",
      "path": "1"
    },
    "768": {
      "fn": "AirdropToken.verify",
      "offset": [
        7141,
        7178
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "769": {
      "fn": "AirdropToken.verify",
      "offset": [
        7090,
        7108
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD75"
    },
    "772": {
      "fn": "AirdropToken.verify",
      "jump": "i",
      "offset": [
        7090,
        7179
      ],
      "op": "JUMP",
      "path": "1"
    },
    "773": {
      "fn": "AirdropToken.verify",
      "offset": [
        7090,
        7179
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "774": {
      "fn": "AirdropToken.verify",
      "offset": [
        7083,
        7179
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "775": {
      "fn": "AirdropToken.verify",
      "offset": [
        7083,
        7179
      ],
      "op": "POP",
      "path": "1"
    },
    "776": {
      "fn": "AirdropToken.verify",
      "offset": [
        7083,
        7179
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x352"
    },
    "779": {
      "fn": "AirdropToken.verify",
      "offset": [
        7083,
        7179
      ],
      "op": "JUMP",
      "path": "1"
    },
    "780": {
      "fn": "AirdropToken.verify",
      "offset": [
        7054,
        7456
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "781": {
      "fn": "AirdropToken.verify",
      "offset": [
        7194,
        7199
      ],
      "op": "DUP2",
      "path": "1"
    },
    "782": {
      "fn": "AirdropToken.verify",
      "offset": [
        7202,
        7203
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "784": {
      "branch": 42,
      "fn": "AirdropToken.verify",
      "offset": [
        7194,
        7203
      ],
      "op": "EQ",
      "path": "1"
    },
    "785": {
      "fn": "AirdropToken.verify",
      "offset": [
        7191,
        7456
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "786": {
      "fn": "AirdropToken.verify",
      "offset": [
        7191,
        7456
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32D"
    },
    "789": {
      "branch": 42,
      "fn": "AirdropToken.verify",
      "offset": [
        7191,
        7456
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "790": {
      "fn": "AirdropToken.verify",
      "offset": [
        7223,
        7312
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 2,
      "value": "0x305"
    },
    "793": {
      "fn": "AirdropToken.verify",
      "offset": [
        7242,
        7253
      ],
      "op": "DUP5",
      "path": "1"
    },
    "794": {
      "fn": "AirdropToken.verify",
      "offset": [
        7255,
        7269
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "796": {
      "fn": "AirdropToken.verify",
      "offset": [
        7270,
        7271
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "798": {
      "fn": "AirdropToken.verify",
      "offset": [
        7255,
        7272
      ],
      "op": "DUP2",
      "path": "1"
    },
    "799": {
      "fn": "AirdropToken.verify",
      "offset": [
        7255,
        7272
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "800": {
      "fn": "AirdropToken.verify",
      "offset": [
        7255,
        7272
      ],
      "op": "DUP2",
      "path": "1"
    },
    "801": {
      "fn": "AirdropToken.verify",
      "offset": [
        7255,
        7272
      ],
      "op": "LT",
      "path": "1"
    },
    "802": {
      "fn": "AirdropToken.verify",
      "offset": [
        7255,
        7272
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BB"
    },
    "805": {
      "fn": "AirdropToken.verify",
      "offset": [
        7255,
        7272
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "806": {
      "fn": "AirdropToken.verify",
      "offset": [
        7255,
        7272
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BB"
    },
    "809": {
      "fn": "AirdropToken.verify",
      "offset": [
        7255,
        7272
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1053"
    },
    "812": {
      "fn": "AirdropToken.verify",
      "jump": "i",
      "offset": [
        7255,
        7272
      ],
      "op": "JUMP",
      "path": "1"
    },
    "813": {
      "fn": "AirdropToken.verify",
      "offset": [
        7191,
        7456
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "814": {
      "fn": "AirdropToken.verify",
      "offset": [
        7327,
        7332
      ],
      "op": "DUP2",
      "path": "1"
    },
    "815": {
      "fn": "AirdropToken.verify",
      "offset": [
        7336,
        7337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "817": {
      "branch": 43,
      "fn": "AirdropToken.verify",
      "offset": [
        7327,
        7337
      ],
      "op": "EQ",
      "path": "1"
    },
    "818": {
      "fn": "AirdropToken.verify",
      "offset": [
        7324,
        7456
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "819": {
      "fn": "AirdropToken.verify",
      "offset": [
        7324,
        7456
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34E"
    },
    "822": {
      "branch": 43,
      "fn": "AirdropToken.verify",
      "offset": [
        7324,
        7456
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "823": {
      "fn": "AirdropToken.verify",
      "offset": [
        7360,
        7449
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 3,
      "value": "0x305"
    },
    "826": {
      "fn": "AirdropToken.verify",
      "offset": [
        7379,
        7390
      ],
      "op": "DUP5",
      "path": "1"
    },
    "827": {
      "fn": "AirdropToken.verify",
      "offset": [
        7392,
        7406
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "829": {
      "fn": "AirdropToken.verify",
      "offset": [
        7407,
        7408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "831": {
      "fn": "AirdropToken.verify",
      "offset": [
        7392,
        7409
      ],
      "op": "DUP2",
      "path": "1"
    },
    "832": {
      "fn": "AirdropToken.verify",
      "offset": [
        7392,
        7409
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "833": {
      "fn": "AirdropToken.verify",
      "offset": [
        7392,
        7409
      ],
      "op": "DUP2",
      "path": "1"
    },
    "834": {
      "fn": "AirdropToken.verify",
      "offset": [
        7392,
        7409
      ],
      "op": "LT",
      "path": "1"
    },
    "835": {
      "fn": "AirdropToken.verify",
      "offset": [
        7392,
        7409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BB"
    },
    "838": {
      "fn": "AirdropToken.verify",
      "offset": [
        7392,
        7409
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "839": {
      "fn": "AirdropToken.verify",
      "offset": [
        7392,
        7409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BB"
    },
    "842": {
      "fn": "AirdropToken.verify",
      "offset": [
        7392,
        7409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1053"
    },
    "845": {
      "fn": "AirdropToken.verify",
      "jump": "i",
      "offset": [
        7392,
        7409
      ],
      "op": "JUMP",
      "path": "1"
    },
    "846": {
      "fn": "AirdropToken.verify",
      "offset": [
        7324,
        7456
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "847": {
      "op": "POP"
    },
    "848": {
      "fn": "AirdropToken.verify",
      "offset": [
        7468,
        7473
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x0"
    },
    "850": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "851": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "852": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "853": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "POP",
      "path": "1"
    },
    "854": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "POP",
      "path": "1"
    },
    "855": {
      "fn": "AirdropToken.verify",
      "offset": [
        6944,
        7480
      ],
      "op": "POP",
      "path": "1"
    },
    "856": {
      "fn": "AirdropToken.verify",
      "jump": "o",
      "offset": [
        6944,
        7480
      ],
      "op": "JUMP",
      "path": "1"
    },
    "857": {
      "offset": [
        3002,
        3028
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "858": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "860": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "DUP2",
      "path": "1"
    },
    "861": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "DUP2",
      "path": "1"
    },
    "862": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "863": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "DUP2",
      "path": "1"
    },
    "864": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "LT",
      "path": "1"
    },
    "865": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x369"
    },
    "868": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "869": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "871": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "DUP1",
      "path": "1"
    },
    "872": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "REVERT",
      "path": "1"
    },
    "873": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "874": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "876": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "877": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "DUP3",
      "path": "1"
    },
    "878": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "879": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "881": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "882": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "883": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "884": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "ADD",
      "path": "1"
    },
    "885": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "886": {
      "fn": "AirdropToken.verify",
      "offset": [
        3002,
        3028
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "887": {
      "op": "POP"
    },
    "888": {
      "offset": [
        3002,
        3028
      ],
      "op": "DUP2",
      "path": "1"
    },
    "889": {
      "fn": "AirdropToken.verify",
      "jump": "o",
      "offset": [
        3002,
        3028
      ],
      "op": "JUMP",
      "path": "1"
    },
    "890": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        4928,
        5102
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "891": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5036,
        5061
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 5,
      "value": "0x2"
    },
    "893": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5036,
        5061
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "894": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        4994,
        5005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "896": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        4994,
        5005
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "903": {
      "op": "SHL"
    },
    "904": {
      "op": "SUB"
    },
    "905": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5036,
        5061
      ],
      "op": "AND",
      "path": "1"
    },
    "906": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5076
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xAFCF89AA"
    },
    "911": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5077,
        5094
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x397"
    },
    "914": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5087,
        5093
      ],
      "op": "DUP5",
      "path": "1"
    },
    "915": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5077,
        5086
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72F"
    },
    "918": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "jump": "i",
      "offset": [
        5077,
        5094
      ],
      "op": "JUMP",
      "path": "1"
    },
    "919": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5077,
        5094
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "920": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "922": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "923": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "DUP3",
      "path": "1"
    },
    "924": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "929": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "AND",
      "path": "1"
    },
    "930": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "932": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "SHL",
      "path": "1"
    },
    "933": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "DUP2",
      "path": "1"
    },
    "934": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "935": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "937": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "ADD",
      "path": "1"
    },
    "938": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B5"
    },
    "941": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "942": {
      "op": "DUP2"
    },
    "943": {
      "op": "MSTORE"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "946": {
      "op": "ADD"
    },
    "947": {
      "op": "SWAP1"
    },
    "948": {
      "op": "JUMP"
    },
    "949": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "950": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "952": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "954": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "955": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "DUP1",
      "path": "1"
    },
    "956": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "DUP4",
      "path": "1"
    },
    "957": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "SUB",
      "path": "1"
    },
    "958": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "DUP2",
      "path": "1"
    },
    "959": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "DUP7",
      "path": "1"
    },
    "960": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "GAS",
      "path": "1"
    },
    "961": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "962": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "963": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "DUP1",
      "path": "1"
    },
    "964": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "965": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D2"
    },
    "968": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "969": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "970": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "972": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "DUP1",
      "path": "1"
    },
    "973": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "974": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "975": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "977": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "REVERT",
      "path": "1"
    },
    "978": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "979": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "POP",
      "path": "1"
    },
    "980": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "POP",
      "path": "1"
    },
    "981": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "POP",
      "path": "1"
    },
    "982": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "POP",
      "path": "1"
    },
    "983": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "985": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "986": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "987": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "989": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "NOT",
      "path": "1"
    },
    "990": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "992": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "DUP3",
      "path": "1"
    },
    "993": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "ADD",
      "path": "1"
    },
    "994": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "AND",
      "path": "1"
    },
    "995": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "DUP3",
      "path": "1"
    },
    "996": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "ADD",
      "path": "1"
    },
    "997": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "DUP1",
      "path": "1"
    },
    "998": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1000": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1001": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "POP",
      "path": "1"
    },
    "1002": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1003": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "ADD",
      "path": "1"
    },
    "1004": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1005": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F6"
    },
    "1008": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1009": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1010": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1069"
    },
    "1013": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "jump": "i",
      "offset": [
        5024,
        5095
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1014": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5024,
        5095
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1015": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5017,
        5095
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1016": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        4928,
        5102
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1017": {
      "op": "POP"
    },
    "1018": {
      "op": "POP"
    },
    "1019": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "jump": "o",
      "offset": [
        4928,
        5102
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1020": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6416,
        6919
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1021": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6513,
        6551
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 6,
      "value": "0x407"
    },
    "1024": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6520,
        6531
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1025": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6533,
        6543
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1026": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6545,
        6550
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1027": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6513,
        6519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29C"
    },
    "1030": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        6513,
        6551
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1031": {
      "branch": 44,
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6513,
        6551
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1032": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x42C"
    },
    "1035": {
      "branch": 44,
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1036": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1038": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1039": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1045": {
      "op": "SHL"
    },
    "1046": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1047": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1048": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1050": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "ADD",
      "path": "1"
    },
    "1051": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x423"
    },
    "1054": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1055": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1082"
    },
    "1058": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        6504,
        6571
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1059": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1060": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1062": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1063": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1064": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1065": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "SUB",
      "path": "1"
    },
    "1066": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1067": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "1068": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6504,
        6571
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1069": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6601,
        6611
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 7
    },
    "1070": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6612
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1072": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1073": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6612
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1074": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6612
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1075": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6600
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "1077": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6612
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1079": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6612
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1080": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6612
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1082": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6612
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1083": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6612
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1084": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6612
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1085": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6612
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1087": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6612
      ],
      "op": "AND",
      "path": "1"
    },
    "1088": {
      "branch": 45,
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6590,
        6621
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1089": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6582,
        6641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x45C"
    },
    "1092": {
      "branch": 45,
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6582,
        6641
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1093": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6582,
        6641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1095": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6582,
        6641
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1102": {
      "op": "SHL"
    },
    "1103": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6582,
        6641
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1104": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6582,
        6641
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1105": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6582,
        6641
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1107": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6582,
        6641
      ],
      "op": "ADD",
      "path": "1"
    },
    "1108": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6582,
        6641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x423"
    },
    "1111": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6582,
        6641
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1112": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6582,
        6641
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A9"
    },
    "1115": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        6582,
        6641
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1116": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6582,
        6641
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1117": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6663,
        6673
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 8
    },
    "1118": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6674
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1120": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6674
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1121": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6674
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1122": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6674
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1123": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "1125": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6674
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1127": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6674
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1128": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6674
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1130": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6674
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1131": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6674
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1132": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6679
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1133": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6679
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1136": {
      "op": "NOT"
    },
    "1137": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6679
      ],
      "op": "AND",
      "path": "1"
    },
    "1138": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6675,
        6679
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1140": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6679
      ],
      "op": "OR",
      "path": "1"
    },
    "1141": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6679
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1142": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6652,
        6679
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1143": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6710,
        6735
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 9,
      "value": "0x2"
    },
    "1145": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6710,
        6735
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1152": {
      "op": "SHL"
    },
    "1153": {
      "op": "SUB"
    },
    "1154": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6710,
        6735
      ],
      "op": "AND",
      "path": "1"
    },
    "1155": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6745
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2E1A7D4D"
    },
    "1160": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6746,
        6762
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x490"
    },
    "1163": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6756,
        6761
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1164": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6746,
        6755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72F"
    },
    "1167": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        6746,
        6762
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1168": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6746,
        6762
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1169": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1171": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1172": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1173": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1178": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "AND",
      "path": "1"
    },
    "1179": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1181": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "SHL",
      "path": "1"
    },
    "1182": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1183": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1184": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1186": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "ADD",
      "path": "1"
    },
    "1187": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4AE"
    },
    "1190": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1191": {
      "op": "DUP2"
    },
    "1192": {
      "op": "MSTORE"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1195": {
      "op": "ADD"
    },
    "1196": {
      "op": "SWAP1"
    },
    "1197": {
      "op": "JUMP"
    },
    "1198": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1199": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1201": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1203": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1204": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1205": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1206": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "SUB",
      "path": "1"
    },
    "1207": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1208": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1210": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1211": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1212": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "1213": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1214": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1215": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1216": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4C8"
    },
    "1219": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1220": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1222": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1223": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1224": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1225": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "POP",
      "path": "1"
    },
    "1226": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "GAS",
      "path": "1"
    },
    "1227": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "CALL",
      "path": "1"
    },
    "1228": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1229": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1230": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1231": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4DC"
    },
    "1234": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1235": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1236": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1238": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1239": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1240": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1241": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1243": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1244": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6698,
        6763
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1245": {
      "op": "POP"
    },
    "1246": {
      "op": "POP"
    },
    "1247": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6788,
        6805
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 10,
      "value": "0x1"
    },
    "1249": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6788,
        6805
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1250": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1252": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1253": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1262": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1263": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6872,
        6876
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "1264": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1266": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1267": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "ADD",
      "path": "1"
    },
    "1268": {
      "op": "MSTORE"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1275": {
      "op": "SHL"
    },
    "1276": {
      "op": "SUB"
    },
    "1277": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6788,
        6805
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1278": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6788,
        6805
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1279": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6788,
        6805
      ],
      "op": "AND",
      "path": "1"
    },
    "1280": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6788,
        6805
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1281": {
      "op": "POP"
    },
    "1282": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6815
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "1287": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6815
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1288": {
      "op": "POP"
    },
    "1289": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6816,
        6826
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1290": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6816,
        6826
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1291": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6788,
        6805
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1292": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6788,
        6805
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1293": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6863
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "1298": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1301": {
      "op": "ADD"
    },
    "1302": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1304": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1306": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1307": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1308": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1309": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "SUB",
      "path": "1"
    },
    "1310": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1311": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1312": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "GAS",
      "path": "1"
    },
    "1313": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "1314": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1315": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1316": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1317": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x532"
    },
    "1320": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1321": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1322": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1324": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1325": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1326": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1327": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1329": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1330": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1331": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "POP",
      "path": "1"
    },
    "1332": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "POP",
      "path": "1"
    },
    "1333": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "POP",
      "path": "1"
    },
    "1334": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "POP",
      "path": "1"
    },
    "1335": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1337": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1338": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1339": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1341": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "NOT",
      "path": "1"
    },
    "1342": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1344": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1345": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "ADD",
      "path": "1"
    },
    "1346": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "AND",
      "path": "1"
    },
    "1347": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1348": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "ADD",
      "path": "1"
    },
    "1349": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1350": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1352": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1353": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "POP",
      "path": "1"
    },
    "1354": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1355": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "ADD",
      "path": "1"
    },
    "1356": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1357": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x556"
    },
    "1360": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1361": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1362": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1069"
    },
    "1365": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        6828,
        6878
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1366": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6828,
        6878
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1367": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1369": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1376": {
      "op": "SHL"
    },
    "1377": {
      "op": "SUB"
    },
    "1378": {
      "op": "NOT"
    },
    "1379": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1381": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1382": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1383": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "SHL",
      "path": "1"
    },
    "1384": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "AND",
      "path": "1"
    },
    "1385": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1386": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "op": "SUB"
    },
    "1395": {
      "op": "SWAP1"
    },
    "1396": {
      "op": "SWAP3"
    },
    "1397": {
      "op": "AND"
    },
    "1398": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1400": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1401": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "ADD",
      "path": "1"
    },
    "1402": {
      "op": "MSTORE"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1405": {
      "op": "DUP3"
    },
    "1406": {
      "op": "ADD"
    },
    "1407": {
      "op": "MSTORE"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1410": {
      "op": "ADD"
    },
    "1411": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1413": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1415": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1416": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1417": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1418": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "SUB",
      "path": "1"
    },
    "1419": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1420": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1422": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1423": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "GAS",
      "path": "1"
    },
    "1424": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "CALL",
      "path": "1"
    },
    "1425": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1426": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1427": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1428": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A1"
    },
    "1431": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1432": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1433": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1435": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1436": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1437": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1438": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1440": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1441": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1442": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "POP",
      "path": "1"
    },
    "1443": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "POP",
      "path": "1"
    },
    "1444": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "POP",
      "path": "1"
    },
    "1445": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "POP",
      "path": "1"
    },
    "1446": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1448": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1449": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1450": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1452": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "NOT",
      "path": "1"
    },
    "1453": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1455": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1456": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "ADD",
      "path": "1"
    },
    "1457": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "AND",
      "path": "1"
    },
    "1458": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1459": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "ADD",
      "path": "1"
    },
    "1460": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1461": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1463": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1464": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "POP",
      "path": "1"
    },
    "1465": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1466": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "ADD",
      "path": "1"
    },
    "1467": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1468": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C5"
    },
    "1471": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1472": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1473": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D2"
    },
    "1476": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        6781,
        6879
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1477": {
      "branch": 46,
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6781,
        6879
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1478": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6773,
        6912
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x611"
    },
    "1481": {
      "branch": 46,
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6773,
        6912
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1482": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6773,
        6912
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1484": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6773,
        6912
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1485": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1491": {
      "op": "SHL"
    },
    "1492": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6773,
        6912
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1493": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6773,
        6912
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1496": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6773,
        6912
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1498": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6773,
        6912
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1499": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6773,
        6912
      ],
      "op": "ADD",
      "path": "1"
    },
    "1500": {
      "op": "MSTORE"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1505": {
      "op": "DUP3"
    },
    "1506": {
      "op": "ADD"
    },
    "1507": {
      "op": "MSTORE"
    },
    "1508": {
      "op": "PUSH32",
      "value": "0x636F6E7472616374206D6179206265206F7574206F662066756E647300000000"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1543": {
      "op": "DUP3"
    },
    "1544": {
      "op": "ADD"
    },
    "1545": {
      "op": "MSTORE"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1548": {
      "op": "ADD"
    },
    "1549": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6773,
        6912
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x423"
    },
    "1552": {
      "op": "JUMP"
    },
    "1553": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6773,
        6912
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1554": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6416,
        6919
      ],
      "op": "POP",
      "path": "1"
    },
    "1555": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        6416,
        6919
      ],
      "op": "POP",
      "path": "1"
    },
    "1556": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "o",
      "offset": [
        6416,
        6919
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1557": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        5982,
        6371
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1558": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6099,
        6113
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 11,
      "value": "0x5"
    },
    "1560": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6099,
        6113
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1561": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6126,
        6154
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1563": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6126,
        6154
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "op": "SUB"
    },
    "1572": {
      "op": "NOT"
    },
    "1573": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6143,
        6153
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1576": {
      "op": "SHL"
    },
    "1577": {
      "op": "AND"
    },
    "1578": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6126,
        6154
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1580": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6126,
        6154
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1581": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6126,
        6154
      ],
      "op": "ADD",
      "path": "1"
    },
    "1582": {
      "op": "MSTORE"
    },
    "1583": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6067,
        6157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x63C"
    },
    "1586": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6067,
        6157
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1587": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6086,
        6097
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1588": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6086,
        6097
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1589": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1591": {
      "op": "ADD"
    },
    "1592": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6126,
        6154
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EA"
    },
    "1595": {
      "op": "JUMP"
    },
    "1596": {
      "branch": 47,
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6067,
        6157
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1597": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6058,
        6176
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x658"
    },
    "1600": {
      "branch": 47,
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6058,
        6176
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1601": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6058,
        6176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1603": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6058,
        6176
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1604": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1610": {
      "op": "SHL"
    },
    "1611": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6058,
        6176
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1612": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6058,
        6176
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1613": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6058,
        6176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1615": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6058,
        6176
      ],
      "op": "ADD",
      "path": "1"
    },
    "1616": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6058,
        6176
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x423"
    },
    "1619": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6058,
        6176
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1620": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6058,
        6176
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1082"
    },
    "1623": {
      "fn": "AirdropToken.mintWithProofMid",
      "jump": "i",
      "offset": [
        6058,
        6176
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1624": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6058,
        6176
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1625": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6206,
        6216
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 12
    },
    "1626": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6217
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1628": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6217
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1629": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6217
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1630": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6217
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1631": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6205
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "1633": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6217
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1635": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6217
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1636": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6217
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1638": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6217
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1639": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6217
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1640": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6217
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1641": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6217
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "1643": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6217
      ],
      "op": "AND",
      "path": "1"
    },
    "1644": {
      "branch": 48,
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6195,
        6226
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1645": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6187,
        6246
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x688"
    },
    "1648": {
      "branch": 48,
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6187,
        6246
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1649": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6187,
        6246
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1651": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6187,
        6246
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1658": {
      "op": "SHL"
    },
    "1659": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6187,
        6246
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1660": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6187,
        6246
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1661": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6187,
        6246
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1663": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6187,
        6246
      ],
      "op": "ADD",
      "path": "1"
    },
    "1664": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6187,
        6246
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x423"
    },
    "1667": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6187,
        6246
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1668": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6187,
        6246
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A9"
    },
    "1671": {
      "fn": "AirdropToken.mintWithProofMid",
      "jump": "i",
      "offset": [
        6187,
        6246
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1672": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6187,
        6246
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1673": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6268,
        6278
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 13
    },
    "1674": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1676": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6279
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1677": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6279
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1678": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6279
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1679": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6267
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "1681": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1683": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6279
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1684": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1686": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6279
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1687": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6279
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1688": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6284
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1689": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6284
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1692": {
      "op": "NOT"
    },
    "1693": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6284
      ],
      "op": "AND",
      "path": "1"
    },
    "1694": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6280,
        6284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1696": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6284
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1697": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6284
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1698": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6284
      ],
      "op": "OR",
      "path": "1"
    },
    "1699": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6284
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1700": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6284
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1701": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6257,
        6284
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1702": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6310,
        6327
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 14
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1709": {
      "op": "SHL"
    },
    "1710": {
      "op": "SUB"
    },
    "1711": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6310,
        6327
      ],
      "op": "AND",
      "path": "1"
    },
    "1712": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6310,
        6327
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1713": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6337
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "1718": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6337
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1719": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6351,
        6363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C0"
    },
    "1722": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6361,
        6362
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1724": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6351,
        6360
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72F"
    },
    "1727": {
      "fn": "AirdropToken.mintWithProofMid",
      "jump": "i",
      "offset": [
        6351,
        6363
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1728": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6351,
        6363
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1729": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1731": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1738": {
      "op": "SHL"
    },
    "1739": {
      "op": "SUB"
    },
    "1740": {
      "op": "NOT"
    },
    "1741": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1743": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1744": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1745": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "SHL",
      "path": "1"
    },
    "1746": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "AND",
      "path": "1"
    },
    "1747": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1748": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1755": {
      "op": "SHL"
    },
    "1756": {
      "op": "SUB"
    },
    "1757": {
      "op": "SWAP1"
    },
    "1758": {
      "op": "SWAP3"
    },
    "1759": {
      "op": "AND"
    },
    "1760": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1762": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1763": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "ADD",
      "path": "1"
    },
    "1764": {
      "op": "MSTORE"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1767": {
      "op": "DUP3"
    },
    "1768": {
      "op": "ADD"
    },
    "1769": {
      "op": "MSTORE"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1772": {
      "op": "ADD"
    },
    "1773": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1775": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1777": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1778": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1779": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1780": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "SUB",
      "path": "1"
    },
    "1781": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1782": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1784": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1785": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "GAS",
      "path": "1"
    },
    "1786": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "CALL",
      "path": "1"
    },
    "1787": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1788": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1789": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1790": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x70B"
    },
    "1793": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1794": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1795": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1797": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1798": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "1799": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1800": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1802": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1803": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1804": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "POP",
      "path": "1"
    },
    "1805": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "POP",
      "path": "1"
    },
    "1806": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "POP",
      "path": "1"
    },
    "1807": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "POP",
      "path": "1"
    },
    "1808": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1810": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1811": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "1812": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1814": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "NOT",
      "path": "1"
    },
    "1815": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1817": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1818": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "ADD",
      "path": "1"
    },
    "1819": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "AND",
      "path": "1"
    },
    "1820": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1821": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "ADD",
      "path": "1"
    },
    "1822": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1823": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1825": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1826": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "POP",
      "path": "1"
    },
    "1827": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1828": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "ADD",
      "path": "1"
    },
    "1829": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1830": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x611"
    },
    "1833": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1834": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1835": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6303,
        6364
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D2"
    },
    "1838": {
      "fn": "AirdropToken.mintWithProofMid",
      "jump": "i",
      "offset": [
        6303,
        6364
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1839": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5108,
        5562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1840": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5161,
        5172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1842": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5183,
        5197
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1843": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5218,
        5227
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE"
    },
    "1845": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5218,
        5227
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1846": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5200,
        5215
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "1847": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5200,
        5227
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x740"
    },
    "1850": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5200,
        5227
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1851": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5200,
        5227
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1852": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5200,
        5227
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x110A"
    },
    "1855": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5200,
        5227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1856": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5200,
        5227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1857": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5183,
        5227
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1858": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5183,
        5227
      ],
      "op": "POP",
      "path": "1"
    },
    "1859": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5249,
        5254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "1861": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5249,
        5254
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1862": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5240,
        5246
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1863": {
      "branch": 49,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5240,
        5254
      ],
      "op": "GT",
      "path": "1"
    },
    "1864": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5237,
        5294
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1865": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5237,
        5294
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x751"
    },
    "1868": {
      "branch": 49,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5237,
        5294
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1869": {
      "op": "POP"
    },
    "1870": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5278,
        5283
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 15,
      "value": "0xA"
    },
    "1872": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5278,
        5283
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1873": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5237,
        5294
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1874": {
      "branch": 50,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5306,
        5317
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1875": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5303,
        5539
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x78D"
    },
    "1878": {
      "branch": 50,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5303,
        5539
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1879": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5363,
        5368
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 16,
      "value": "0xA"
    },
    "1881": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5363,
        5368
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1882": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5353,
        5359
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1883": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5347
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "1885": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5348,
        5349
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1887": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1888": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1889": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1890": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "LT",
      "path": "1"
    },
    "1891": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x76E"
    },
    "1894": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1895": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x76E"
    },
    "1898": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1053"
    },
    "1901": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5339,
        5350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1902": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1903": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1904": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1906": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1907": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1909": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1911": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1912": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "ADD",
      "path": "1"
    },
    "1913": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5350
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1914": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5359
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x783"
    },
    "1917": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5359
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1918": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5359
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1919": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5359
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1121"
    },
    "1922": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5339,
        5359
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1923": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5339,
        5359
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1924": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5338,
        5368
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x352"
    },
    "1927": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5338,
        5368
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1928": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5338,
        5368
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1929": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5338,
        5368
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1140"
    },
    "1932": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5338,
        5368
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1933": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5303,
        5539
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1934": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5387,
        5393
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1935": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5396,
        5397
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1937": {
      "branch": 51,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5387,
        5397
      ],
      "op": "EQ",
      "path": "1"
    },
    "1938": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5384,
        5539
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1939": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5384,
        5539
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7AE"
    },
    "1942": {
      "branch": 51,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5384,
        5539
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1943": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5443,
        5448
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0xA"
    },
    "1945": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5443,
        5448
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1946": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5433,
        5439
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1947": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5419,
        5427
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "1949": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5428,
        5429
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1951": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5419,
        5430
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1952": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5419,
        5430
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1953": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5419,
        5430
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1954": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5419,
        5430
      ],
      "op": "LT",
      "path": "1"
    },
    "1955": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5419,
        5430
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x76E"
    },
    "1958": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5419,
        5430
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1959": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5419,
        5430
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x76E"
    },
    "1962": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5419,
        5430
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1053"
    },
    "1965": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5419,
        5430
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1966": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5384,
        5539
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1967": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5467,
        5473
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1968": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5476,
        5477
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1970": {
      "branch": 52,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5467,
        5477
      ],
      "op": "EQ",
      "path": "1"
    },
    "1971": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5464,
        5539
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1972": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5464,
        5539
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7CF"
    },
    "1975": {
      "branch": 52,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5464,
        5539
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1976": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5523,
        5528
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0xA"
    },
    "1978": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5523,
        5528
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1979": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5513,
        5519
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1980": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5499,
        5507
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "1982": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5508,
        5509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1984": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5499,
        5510
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1985": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5499,
        5510
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1986": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5499,
        5510
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1987": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5499,
        5510
      ],
      "op": "LT",
      "path": "1"
    },
    "1988": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5499,
        5510
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x76E"
    },
    "1991": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5499,
        5510
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1992": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5499,
        5510
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x76E"
    },
    "1995": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5499,
        5510
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1053"
    },
    "1998": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5499,
        5510
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1999": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5464,
        5539
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2000": {
      "op": "POP"
    },
    "2001": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5555,
        5556
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 19,
      "value": "0x0"
    },
    "2003": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5555,
        5556
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2004": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5108,
        5562
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2005": {
      "op": "POP"
    },
    "2006": {
      "op": "POP"
    },
    "2007": {
      "fn": "AirdropToken.amountOut",
      "jump": "o",
      "offset": [
        5108,
        5562
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2008": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4587,
        4922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2009": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4627,
        4639
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2011": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4659,
        4671
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2012": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4850,
        4875
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2014": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4850,
        4875
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2016": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4850,
        4875
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2017": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4850,
        4875
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2018": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4850,
        4875
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2019": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4850,
        4875
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2022": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4850,
        4875
      ],
      "op": "EXP",
      "path": "1"
    },
    "2023": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4850,
        4875
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2024": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4850,
        4875
      ],
      "op": "DIV",
      "path": "1"
    },
    "2025": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2031": {
      "op": "SHL"
    },
    "2032": {
      "op": "SUB"
    },
    "2033": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4850,
        4875
      ],
      "op": "AND",
      "path": "1"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2040": {
      "op": "SHL"
    },
    "2041": {
      "op": "SUB"
    },
    "2042": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4888
      ],
      "op": "AND",
      "path": "1"
    },
    "2043": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4888
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "2048": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2050": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2051": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2052": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2057": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "AND",
      "path": "1"
    },
    "2058": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2060": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "SHL",
      "path": "1"
    },
    "2061": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2062": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2063": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2065": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "ADD",
      "path": "1"
    },
    "2066": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2068": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2070": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2071": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2072": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2073": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "SUB",
      "path": "1"
    },
    "2074": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2075": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2076": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "GAS",
      "path": "1"
    },
    "2077": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2078": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2079": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2080": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2081": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x82E"
    },
    "2084": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2085": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2086": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2088": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2089": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2090": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2091": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2093": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2094": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2095": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "POP",
      "path": "1"
    },
    "2096": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "POP",
      "path": "1"
    },
    "2097": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "POP",
      "path": "1"
    },
    "2098": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "POP",
      "path": "1"
    },
    "2099": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2101": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2102": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2103": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2105": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "NOT",
      "path": "1"
    },
    "2106": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2108": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2109": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "ADD",
      "path": "1"
    },
    "2110": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "AND",
      "path": "1"
    },
    "2111": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2112": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "ADD",
      "path": "1"
    },
    "2113": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2114": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2116": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2117": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "POP",
      "path": "1"
    },
    "2118": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2119": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "ADD",
      "path": "1"
    },
    "2120": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2121": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x852"
    },
    "2124": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2125": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2126": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1069"
    },
    "2129": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        4838,
        4890
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2130": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4838,
        4890
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2131": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4794,
        4819
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2133": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4794,
        4819
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2135": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4794,
        4819
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2136": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4794,
        4819
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2137": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4794,
        4819
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2138": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4794,
        4819
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2141": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4794,
        4819
      ],
      "op": "EXP",
      "path": "1"
    },
    "2142": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4794,
        4819
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2143": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4794,
        4819
      ],
      "op": "DIV",
      "path": "1"
    },
    "2144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2150": {
      "op": "SHL"
    },
    "2151": {
      "op": "SUB"
    },
    "2152": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4794,
        4819
      ],
      "op": "AND",
      "path": "1"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2159": {
      "op": "SHL"
    },
    "2160": {
      "op": "SUB"
    },
    "2161": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4831
      ],
      "op": "AND",
      "path": "1"
    },
    "2162": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4831
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF03D6672"
    },
    "2167": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2169": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2170": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2171": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2176": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "AND",
      "path": "1"
    },
    "2177": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2179": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "SHL",
      "path": "1"
    },
    "2180": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2181": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2182": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2184": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "ADD",
      "path": "1"
    },
    "2185": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2187": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2189": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2190": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2191": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2192": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "SUB",
      "path": "1"
    },
    "2193": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2194": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2195": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "GAS",
      "path": "1"
    },
    "2196": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2197": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2198": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2199": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2200": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A5"
    },
    "2203": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2204": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2205": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2207": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2208": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2209": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2210": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2212": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2213": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2214": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "POP",
      "path": "1"
    },
    "2215": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "POP",
      "path": "1"
    },
    "2216": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "POP",
      "path": "1"
    },
    "2217": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "POP",
      "path": "1"
    },
    "2218": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2220": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2221": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2222": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2224": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "NOT",
      "path": "1"
    },
    "2225": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2227": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2228": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "ADD",
      "path": "1"
    },
    "2229": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "AND",
      "path": "1"
    },
    "2230": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2231": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "ADD",
      "path": "1"
    },
    "2232": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2233": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2235": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2236": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "POP",
      "path": "1"
    },
    "2237": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2238": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "ADD",
      "path": "1"
    },
    "2239": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2240": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C9"
    },
    "2243": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2244": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2245": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1069"
    },
    "2248": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        4782,
        4833
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2249": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4782,
        4833
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2250": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4723,
        4740
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2252": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4723,
        4740
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2253": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4753,
        4778
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2255": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4753,
        4778
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2256": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2258": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2259": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2266": {
      "op": "SHL"
    },
    "2267": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2268": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2275": {
      "op": "SHL"
    },
    "2276": {
      "op": "SUB"
    },
    "2277": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4753,
        4778
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2278": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4753,
        4778
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2279": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4753,
        4778
      ],
      "op": "AND",
      "path": "1"
    },
    "2280": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2282": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2283": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "ADD",
      "path": "1"
    },
    "2284": {
      "op": "MSTORE"
    },
    "2285": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4723,
        4740
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2286": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4723,
        4740
      ],
      "op": "AND",
      "path": "1"
    },
    "2287": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4723,
        4740
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2288": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4752
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "2293": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4752
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2296": {
      "op": "ADD"
    },
    "2297": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2299": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2301": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2302": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2303": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2304": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "SUB",
      "path": "1"
    },
    "2305": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2306": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2307": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "GAS",
      "path": "1"
    },
    "2308": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2309": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2310": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2311": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2312": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x915"
    },
    "2315": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2316": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2317": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2319": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2320": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2321": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2322": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2324": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2325": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2326": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "POP",
      "path": "1"
    },
    "2327": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "POP",
      "path": "1"
    },
    "2328": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "POP",
      "path": "1"
    },
    "2329": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "POP",
      "path": "1"
    },
    "2330": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2332": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2333": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2334": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2336": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "NOT",
      "path": "1"
    },
    "2337": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2339": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2340": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "ADD",
      "path": "1"
    },
    "2341": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "AND",
      "path": "1"
    },
    "2342": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2343": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "ADD",
      "path": "1"
    },
    "2344": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2345": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2347": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2348": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "POP",
      "path": "1"
    },
    "2349": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2350": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "ADD",
      "path": "1"
    },
    "2351": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2352": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x939"
    },
    "2355": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2356": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2357": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1069"
    },
    "2360": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        4708,
        4779
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2361": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4779
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2362": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4833
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x943"
    },
    "2365": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4833
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2366": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4833
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2367": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4833
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x110A"
    },
    "2370": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        4708,
        4833
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2371": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4708,
        4833
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2372": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4701,
        4835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x94F"
    },
    "2375": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4701,
        4835
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2376": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4701,
        4704
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3CF"
    },
    "2379": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4701,
        4835
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1121"
    },
    "2382": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        4701,
        4835
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2383": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4701,
        4835
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2384": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4701,
        4890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x959"
    },
    "2387": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4701,
        4890
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2388": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4701,
        4890
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2389": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4701,
        4890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1140"
    },
    "2392": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        4701,
        4890
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2393": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4701,
        4890
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2394": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4674,
        4892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F6"
    },
    "2397": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4674,
        4892
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2398": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4675,
        4695
      ],
      "op": "PUSH10",
      "path": "1",
      "value": "0x21E19E0C9BAB2400000"
    },
    "2409": {
      "fn": "AirdropToken.perfect",
      "offset": [
        4674,
        4892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1140"
    },
    "2412": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        4674,
        4892
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2413": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2414": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7640,
        7653
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2416": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 20,
      "value": "0x40"
    },
    "2418": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2419": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2420": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2422": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "ADD",
      "path": "1"
    },
    "2423": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2425": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2426": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2427": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x35"
    },
    "2429": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2430": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2431": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2433": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "ADD",
      "path": "1"
    },
    "2434": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x117E"
    },
    "2437": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x35"
    },
    "2439": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2440": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "CODECOPY",
      "path": "1"
    },
    "2441": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7669,
        7731
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2442": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        7583,
        7742
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2443": {
      "op": "POP"
    },
    "2444": {
      "op": "POP"
    },
    "2445": {
      "fn": "AirdropToken.tokenURI",
      "jump": "o",
      "offset": [
        7583,
        7742
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2446": {
      "offset": [
        2811,
        2843
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2447": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2449": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2450": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2451": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2452": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2453": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "LT",
      "path": "1"
    },
    "2454": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x369"
    },
    "2457": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2458": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2460": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2461": {
      "fn": "AirdropToken.tokenURI",
      "offset": [
        2811,
        2843
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2462": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5571,
        5972
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2463": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5700,
        5714
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0x4"
    },
    "2465": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5700,
        5714
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2466": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5727,
        5755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2468": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5727,
        5755
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2475": {
      "op": "SHL"
    },
    "2476": {
      "op": "SUB"
    },
    "2477": {
      "op": "NOT"
    },
    "2478": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5744,
        5754
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2481": {
      "op": "SHL"
    },
    "2482": {
      "op": "AND"
    },
    "2483": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5727,
        5755
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2485": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5727,
        5755
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2486": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5727,
        5755
      ],
      "op": "ADD",
      "path": "1"
    },
    "2487": {
      "op": "MSTORE"
    },
    "2488": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5668,
        5758
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9C5"
    },
    "2491": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5668,
        5758
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2492": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5687,
        5698
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2493": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5687,
        5698
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "2496": {
      "op": "ADD"
    },
    "2497": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5727,
        5755
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EA"
    },
    "2500": {
      "op": "JUMP"
    },
    "2501": {
      "branch": 53,
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5668,
        5758
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2502": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5659,
        5777
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9E1"
    },
    "2505": {
      "branch": 53,
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5659,
        5777
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2506": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5659,
        5777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2508": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5659,
        5777
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2509": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2515": {
      "op": "SHL"
    },
    "2516": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5659,
        5777
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2517": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5659,
        5777
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2518": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5659,
        5777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2520": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5659,
        5777
      ],
      "op": "ADD",
      "path": "1"
    },
    "2521": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5659,
        5777
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x423"
    },
    "2524": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5659,
        5777
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2525": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5659,
        5777
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1082"
    },
    "2528": {
      "fn": "AirdropToken.mintWithProofTop",
      "jump": "i",
      "offset": [
        5659,
        5777
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2529": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5659,
        5777
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2530": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5807,
        5817
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 22
    },
    "2531": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5818
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2533": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5818
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2534": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5818
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2535": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5818
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2536": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "2538": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5818
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2540": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5818
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2541": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5818
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2543": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5818
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2544": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5818
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2545": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5818
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2546": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5818
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2548": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5818
      ],
      "op": "AND",
      "path": "1"
    },
    "2549": {
      "branch": 54,
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5796,
        5827
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2550": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5788,
        5847
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA11"
    },
    "2553": {
      "branch": 54,
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5788,
        5847
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2554": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5788,
        5847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2556": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5788,
        5847
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2557": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2563": {
      "op": "SHL"
    },
    "2564": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5788,
        5847
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2565": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5788,
        5847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2566": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5788,
        5847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2568": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5788,
        5847
      ],
      "op": "ADD",
      "path": "1"
    },
    "2569": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5788,
        5847
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x423"
    },
    "2572": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5788,
        5847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2573": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5788,
        5847
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10A9"
    },
    "2576": {
      "fn": "AirdropToken.mintWithProofTop",
      "jump": "i",
      "offset": [
        5788,
        5847
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2577": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5788,
        5847
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2578": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5869,
        5879
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 23
    },
    "2579": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2581": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2582": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5880
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2583": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2584": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5868
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "2586": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2588": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5880
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2589": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5880
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2591": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5880
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2592": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5880
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2593": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5885
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2594": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5885
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2595": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2597": {
      "op": "NOT"
    },
    "2598": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5885
      ],
      "op": "AND",
      "path": "1"
    },
    "2599": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5881,
        5885
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2601": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5885
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2602": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5885
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2603": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5885
      ],
      "op": "OR",
      "path": "1"
    },
    "2604": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5885
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2605": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5885
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2606": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5858,
        5885
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2607": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5911,
        5928
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 24
    },
    "2608": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5911,
        5928
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2615": {
      "op": "SHL"
    },
    "2616": {
      "op": "SUB"
    },
    "2617": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5911,
        5928
      ],
      "op": "AND",
      "path": "1"
    },
    "2618": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5911,
        5928
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2619": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5904,
        5938
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "2624": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5904,
        5938
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2625": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5952,
        5964
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C0"
    },
    "2628": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5952,
        5964
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2629": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        5952,
        5961
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72F"
    },
    "2632": {
      "fn": "AirdropToken.mintWithProofTop",
      "jump": "i",
      "offset": [
        5952,
        5964
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2633": {
      "fn": "AirdropToken.depo",
      "offset": [
        3846,
        4581
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2634": {
      "fn": "AirdropToken.depo",
      "offset": [
        3930,
        3947
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x1"
    },
    "2636": {
      "fn": "AirdropToken.depo",
      "offset": [
        3930,
        3947
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2637": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2639": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2640": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2647": {
      "op": "SHL"
    },
    "2648": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2649": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2650": {
      "fn": "AirdropToken.depo",
      "offset": [
        3967,
        3971
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "2651": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2653": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2654": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "ADD",
      "path": "1"
    },
    "2655": {
      "op": "MSTORE"
    },
    "2656": {
      "fn": "AirdropToken.depo",
      "offset": [
        3886,
        3898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2658": {
      "fn": "AirdropToken.depo",
      "offset": [
        3886,
        3898
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2665": {
      "op": "SHL"
    },
    "2666": {
      "op": "SUB"
    },
    "2667": {
      "fn": "AirdropToken.depo",
      "offset": [
        3930,
        3947
      ],
      "op": "AND",
      "path": "1"
    },
    "2668": {
      "fn": "AirdropToken.depo",
      "offset": [
        3930,
        3947
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2669": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3958
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "2674": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3958
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2677": {
      "op": "ADD"
    },
    "2678": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2680": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2682": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2683": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2684": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2685": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "SUB",
      "path": "1"
    },
    "2686": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2687": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2688": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "GAS",
      "path": "1"
    },
    "2689": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "STATICCALL",
      "path": "1"
    },
    "2690": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2691": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2692": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2693": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA92"
    },
    "2696": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2697": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2698": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2700": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2701": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2702": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2703": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2705": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2706": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2707": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "POP",
      "path": "1"
    },
    "2708": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "POP",
      "path": "1"
    },
    "2709": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "POP",
      "path": "1"
    },
    "2710": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "POP",
      "path": "1"
    },
    "2711": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2713": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2714": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2715": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2717": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "NOT",
      "path": "1"
    },
    "2718": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2720": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2721": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "ADD",
      "path": "1"
    },
    "2722": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "AND",
      "path": "1"
    },
    "2723": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2724": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "ADD",
      "path": "1"
    },
    "2725": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2726": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2728": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2729": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "POP",
      "path": "1"
    },
    "2730": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2731": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "ADD",
      "path": "1"
    },
    "2732": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2733": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB6"
    },
    "2736": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2737": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2738": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1069"
    },
    "2741": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        3923,
        3973
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2742": {
      "fn": "AirdropToken.depo",
      "offset": [
        3923,
        3973
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2743": {
      "fn": "AirdropToken.depo",
      "offset": [
        3917,
        3920
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2744": {
      "branch": 55,
      "fn": "AirdropToken.depo",
      "offset": [
        3917,
        3973
      ],
      "op": "GT",
      "path": "1"
    },
    "2745": {
      "fn": "AirdropToken.depo",
      "offset": [
        3909,
        4016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB13"
    },
    "2748": {
      "branch": 55,
      "fn": "AirdropToken.depo",
      "offset": [
        3909,
        4016
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2749": {
      "fn": "AirdropToken.depo",
      "offset": [
        3909,
        4016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2751": {
      "fn": "AirdropToken.depo",
      "offset": [
        3909,
        4016
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2758": {
      "op": "SHL"
    },
    "2759": {
      "fn": "AirdropToken.depo",
      "offset": [
        3909,
        4016
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2760": {
      "fn": "AirdropToken.depo",
      "offset": [
        3909,
        4016
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2763": {
      "fn": "AirdropToken.depo",
      "offset": [
        3909,
        4016
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2765": {
      "fn": "AirdropToken.depo",
      "offset": [
        3909,
        4016
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2766": {
      "fn": "AirdropToken.depo",
      "offset": [
        3909,
        4016
      ],
      "op": "ADD",
      "path": "1"
    },
    "2767": {
      "op": "MSTORE"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2772": {
      "op": "DUP3"
    },
    "2773": {
      "op": "ADD"
    },
    "2774": {
      "op": "MSTORE"
    },
    "2775": {
      "op": "PUSH32",
      "value": "0x6D7573742062652067726561746572207468616E2070726576696F757320746F"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2810": {
      "op": "DUP3"
    },
    "2811": {
      "op": "ADD"
    },
    "2812": {
      "op": "MSTORE"
    },
    "2813": {
      "op": "PUSH6",
      "value": "0x81C995CD95D"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "2822": {
      "op": "SHL"
    },
    "2823": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2825": {
      "op": "DUP3"
    },
    "2826": {
      "op": "ADD"
    },
    "2827": {
      "op": "MSTORE"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2830": {
      "op": "ADD"
    },
    "2831": {
      "fn": "AirdropToken.depo",
      "offset": [
        3909,
        4016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x423"
    },
    "2834": {
      "op": "JUMP"
    },
    "2835": {
      "fn": "AirdropToken.depo",
      "offset": [
        3909,
        4016
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2836": {
      "fn": "AirdropToken.depo",
      "offset": [
        4041,
        4058
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 26,
      "value": "0x1"
    },
    "2838": {
      "fn": "AirdropToken.depo",
      "offset": [
        4041,
        4058
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2839": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2841": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2842": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2849": {
      "op": "SHL"
    },
    "2850": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2851": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2852": {
      "fn": "AirdropToken.depo",
      "offset": [
        4073,
        4083
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2853": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2855": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2856": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "ADD",
      "path": "1"
    },
    "2857": {
      "op": "MSTORE"
    },
    "2858": {
      "fn": "AirdropToken.depo",
      "offset": [
        4093,
        4097
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "2859": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2861": {
      "op": "DUP3"
    },
    "2862": {
      "op": "ADD"
    },
    "2863": {
      "op": "MSTORE"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2866": {
      "op": "DUP2"
    },
    "2867": {
      "op": "ADD"
    },
    "2868": {
      "op": "DUP5"
    },
    "2869": {
      "op": "SWAP1"
    },
    "2870": {
      "op": "MSTORE"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2877": {
      "op": "SHL"
    },
    "2878": {
      "op": "SUB"
    },
    "2879": {
      "fn": "AirdropToken.depo",
      "offset": [
        4041,
        4058
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2880": {
      "fn": "AirdropToken.depo",
      "offset": [
        4041,
        4058
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2881": {
      "fn": "AirdropToken.depo",
      "offset": [
        4041,
        4058
      ],
      "op": "AND",
      "path": "1"
    },
    "2882": {
      "fn": "AirdropToken.depo",
      "offset": [
        4041,
        4058
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2883": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4072
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "2888": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4072
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2891": {
      "op": "ADD"
    },
    "2892": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2894": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2896": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2897": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2898": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2899": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "SUB",
      "path": "1"
    },
    "2900": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2901": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2903": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2904": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "GAS",
      "path": "1"
    },
    "2905": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "CALL",
      "path": "1"
    },
    "2906": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2907": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2908": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2909": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB6A"
    },
    "2912": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2913": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2914": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2916": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2917": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2918": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2919": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2921": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2922": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2923": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "POP",
      "path": "1"
    },
    "2924": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "POP",
      "path": "1"
    },
    "2925": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "POP",
      "path": "1"
    },
    "2926": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "POP",
      "path": "1"
    },
    "2927": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2929": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2930": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2931": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2933": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "NOT",
      "path": "1"
    },
    "2934": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2936": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2937": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "ADD",
      "path": "1"
    },
    "2938": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "AND",
      "path": "1"
    },
    "2939": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2940": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "ADD",
      "path": "1"
    },
    "2941": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2942": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2944": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2945": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "POP",
      "path": "1"
    },
    "2946": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2947": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "ADD",
      "path": "1"
    },
    "2948": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2949": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB8E"
    },
    "2952": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2953": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2954": {
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D2"
    },
    "2957": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        4034,
        4104
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2958": {
      "branch": 56,
      "fn": "AirdropToken.depo",
      "offset": [
        4034,
        4104
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2959": {
      "fn": "AirdropToken.depo",
      "offset": [
        4026,
        4122
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBCA"
    },
    "2962": {
      "branch": 56,
      "fn": "AirdropToken.depo",
      "offset": [
        4026,
        4122
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2963": {
      "fn": "AirdropToken.depo",
      "offset": [
        4026,
        4122
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2965": {
      "fn": "AirdropToken.depo",
      "offset": [
        4026,
        4122
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2966": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2972": {
      "op": "SHL"
    },
    "2973": {
      "fn": "AirdropToken.depo",
      "offset": [
        4026,
        4122
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2974": {
      "fn": "AirdropToken.depo",
      "offset": [
        4026,
        4122
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2977": {
      "fn": "AirdropToken.depo",
      "offset": [
        4026,
        4122
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2979": {
      "fn": "AirdropToken.depo",
      "offset": [
        4026,
        4122
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2980": {
      "fn": "AirdropToken.depo",
      "offset": [
        4026,
        4122
      ],
      "op": "ADD",
      "path": "1"
    },
    "2981": {
      "op": "MSTORE"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2986": {
      "op": "DUP3"
    },
    "2987": {
      "op": "ADD"
    },
    "2988": {
      "op": "MSTORE"
    },
    "2989": {
      "op": "PUSH13",
      "value": "0x1D1C985B9CD9995C8819985A5B"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "3005": {
      "op": "SHL"
    },
    "3006": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3008": {
      "op": "DUP3"
    },
    "3009": {
      "op": "ADD"
    },
    "3010": {
      "op": "MSTORE"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3013": {
      "op": "ADD"
    },
    "3014": {
      "fn": "AirdropToken.depo",
      "offset": [
        4026,
        4122
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x423"
    },
    "3017": {
      "op": "JUMP"
    },
    "3018": {
      "fn": "AirdropToken.depo",
      "offset": [
        4026,
        4122
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3019": {
      "fn": "AirdropToken.depo",
      "offset": [
        4144,
        4159
      ],
      "op": "TIMESTAMP",
      "path": "1",
      "statement": 27
    },
    "3020": {
      "fn": "AirdropToken.depo",
      "offset": [
        4132,
        4141
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE"
    },
    "3022": {
      "fn": "AirdropToken.depo",
      "offset": [
        4132,
        4159
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3023": {
      "fn": "AirdropToken.depo",
      "offset": [
        4176,
        4193
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 28,
      "value": "0x1"
    },
    "3025": {
      "fn": "AirdropToken.depo",
      "offset": [
        4176,
        4193
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3026": {
      "fn": "AirdropToken.depo",
      "offset": [
        4203,
        4228
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3028": {
      "fn": "AirdropToken.depo",
      "offset": [
        4203,
        4228
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3029": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3031": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3032": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3039": {
      "op": "SHL"
    },
    "3040": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3041": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3046": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3048": {
      "op": "SHL"
    },
    "3049": {
      "op": "SUB"
    },
    "3050": {
      "fn": "AirdropToken.depo",
      "offset": [
        4203,
        4228
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3051": {
      "fn": "AirdropToken.depo",
      "offset": [
        4203,
        4228
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3052": {
      "fn": "AirdropToken.depo",
      "offset": [
        4203,
        4228
      ],
      "op": "AND",
      "path": "1"
    },
    "3053": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3055": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3056": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "ADD",
      "path": "1"
    },
    "3057": {
      "op": "MSTORE"
    },
    "3058": {
      "fn": "AirdropToken.depo",
      "offset": [
        4230,
        4281
      ],
      "op": "PUSH22",
      "path": "1",
      "value": "0x2AC3A4EDBBFB8014E3BA83411E915E7FFFFFFFFFFFF"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3083": {
      "op": "DUP3"
    },
    "3084": {
      "op": "ADD"
    },
    "3085": {
      "op": "MSTORE"
    },
    "3086": {
      "fn": "AirdropToken.depo",
      "offset": [
        4176,
        4193
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3087": {
      "fn": "AirdropToken.depo",
      "offset": [
        4176,
        4193
      ],
      "op": "AND",
      "path": "1"
    },
    "3088": {
      "fn": "AirdropToken.depo",
      "offset": [
        4176,
        4193
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3089": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4202
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "3094": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4202
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3097": {
      "op": "ADD"
    },
    "3098": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3100": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3102": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3103": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3104": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3105": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "SUB",
      "path": "1"
    },
    "3106": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3107": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3109": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3110": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "GAS",
      "path": "1"
    },
    "3111": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "CALL",
      "path": "1"
    },
    "3112": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3113": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3114": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3115": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC38"
    },
    "3118": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3119": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3120": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3122": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3123": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3124": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3125": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3127": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3128": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3129": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "POP",
      "path": "1"
    },
    "3130": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "POP",
      "path": "1"
    },
    "3131": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "POP",
      "path": "1"
    },
    "3132": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "POP",
      "path": "1"
    },
    "3133": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3135": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3136": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3137": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3139": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "NOT",
      "path": "1"
    },
    "3140": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3142": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3143": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "ADD",
      "path": "1"
    },
    "3144": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "AND",
      "path": "1"
    },
    "3145": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3146": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "ADD",
      "path": "1"
    },
    "3147": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3148": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3150": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3151": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "POP",
      "path": "1"
    },
    "3152": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3153": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "ADD",
      "path": "1"
    },
    "3154": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3155": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC5C"
    },
    "3158": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3159": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3160": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D2"
    },
    "3163": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        4169,
        4282
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3164": {
      "fn": "AirdropToken.depo",
      "offset": [
        4169,
        4282
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3165": {
      "op": "POP"
    },
    "3166": {
      "fn": "AirdropToken.depo",
      "offset": [
        4304,
        4329
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 29,
      "value": "0x2"
    },
    "3168": {
      "fn": "AirdropToken.depo",
      "offset": [
        4304,
        4329
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3169": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3171": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3172": {
      "op": "PUSH4",
      "value": "0x5DC8121"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3179": {
      "op": "SHL"
    },
    "3180": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3181": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3182": {
      "fn": "AirdropToken.depo",
      "offset": [
        4348,
        4352
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "3183": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3185": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3186": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "ADD",
      "path": "1"
    },
    "3187": {
      "op": "MSTORE"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3190": {
      "op": "DUP2"
    },
    "3191": {
      "op": "ADD"
    },
    "3192": {
      "op": "DUP5"
    },
    "3193": {
      "op": "SWAP1"
    },
    "3194": {
      "op": "MSTORE"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3201": {
      "op": "SHL"
    },
    "3202": {
      "op": "SUB"
    },
    "3203": {
      "fn": "AirdropToken.depo",
      "offset": [
        4304,
        4329
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3204": {
      "fn": "AirdropToken.depo",
      "offset": [
        4304,
        4329
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3205": {
      "fn": "AirdropToken.depo",
      "offset": [
        4304,
        4329
      ],
      "op": "AND",
      "path": "1"
    },
    "3206": {
      "fn": "AirdropToken.depo",
      "offset": [
        4304,
        4329
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3207": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4339
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2EE40908"
    },
    "3212": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4339
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3215": {
      "op": "ADD"
    },
    "3216": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3218": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3220": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3221": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3222": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3223": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "SUB",
      "path": "1"
    },
    "3224": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3225": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3227": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3228": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3229": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "3230": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3231": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3232": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3233": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCA9"
    },
    "3236": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3237": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3239": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3240": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3241": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3242": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "POP",
      "path": "1"
    },
    "3243": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "GAS",
      "path": "1"
    },
    "3244": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "CALL",
      "path": "1"
    },
    "3245": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3246": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3247": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3248": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCBD"
    },
    "3251": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3252": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3253": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3255": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3256": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3257": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3258": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3260": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3261": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3262": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "POP",
      "path": "1"
    },
    "3263": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "POP",
      "path": "1"
    },
    "3264": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "POP",
      "path": "1"
    },
    "3265": {
      "fn": "AirdropToken.depo",
      "offset": [
        4292,
        4359
      ],
      "op": "POP",
      "path": "1"
    },
    "3266": {
      "fn": "AirdropToken.depo",
      "offset": [
        4369,
        4375
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3268": {
      "fn": "AirdropToken.depo",
      "offset": [
        4378,
        4387
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCCB"
    },
    "3271": {
      "fn": "AirdropToken.depo",
      "offset": [
        4378,
        4385
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D8"
    },
    "3274": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        4378,
        4387
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3275": {
      "fn": "AirdropToken.depo",
      "offset": [
        4378,
        4387
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3276": {
      "fn": "AirdropToken.depo",
      "offset": [
        4369,
        4387
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3277": {
      "op": "POP"
    },
    "3278": {
      "fn": "AirdropToken.depo",
      "offset": [
        4411,
        4417
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 30,
      "value": "0xCD8"
    },
    "3281": {
      "fn": "AirdropToken.depo",
      "offset": [
        4369,
        4387
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3282": {
      "fn": "AirdropToken.depo",
      "offset": [
        4415,
        4417
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3284": {
      "fn": "AirdropToken.depo",
      "offset": [
        4411,
        4417
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1121"
    },
    "3287": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        4411,
        4417
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3288": {
      "fn": "AirdropToken.depo",
      "offset": [
        4411,
        4417
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3289": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4405
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "3291": {
      "fn": "AirdropToken.depo",
      "offset": [
        4406,
        4407
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3293": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3294": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3295": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3296": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "LT",
      "path": "1"
    },
    "3297": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCEC"
    },
    "3300": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3301": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCEC"
    },
    "3304": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1053"
    },
    "3307": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        4397,
        4408
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3308": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3309": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3311": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3312": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3313": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3314": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3316": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3317": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3318": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3319": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4408
      ],
      "op": "ADD",
      "path": "1"
    },
    "3320": {
      "fn": "AirdropToken.depo",
      "offset": [
        4397,
        4417
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3321": {
      "fn": "AirdropToken.depo",
      "offset": [
        4441,
        4446
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 31,
      "value": "0xD03"
    },
    "3324": {
      "fn": "AirdropToken.depo",
      "offset": [
        4441,
        4442
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3325": {
      "fn": "AirdropToken.depo",
      "offset": [
        4445,
        4446
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3327": {
      "fn": "AirdropToken.depo",
      "offset": [
        4441,
        4446
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1121"
    },
    "3330": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        4441,
        4446
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3331": {
      "fn": "AirdropToken.depo",
      "offset": [
        4441,
        4446
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3332": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4435
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "3334": {
      "fn": "AirdropToken.depo",
      "offset": [
        4436,
        4437
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3336": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3337": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3338": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3339": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "LT",
      "path": "1"
    },
    "3340": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD17"
    },
    "3343": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3344": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD17"
    },
    "3347": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1053"
    },
    "3350": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        4427,
        4438
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3351": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3352": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3354": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3355": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3356": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3357": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3359": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3360": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3361": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3362": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4438
      ],
      "op": "ADD",
      "path": "1"
    },
    "3363": {
      "fn": "AirdropToken.depo",
      "offset": [
        4427,
        4446
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3364": {
      "fn": "AirdropToken.depo",
      "offset": [
        4470,
        4475
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 32,
      "value": "0xD2E"
    },
    "3367": {
      "fn": "AirdropToken.depo",
      "offset": [
        4470,
        4471
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3368": {
      "fn": "AirdropToken.depo",
      "offset": [
        4474,
        4475
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3370": {
      "fn": "AirdropToken.depo",
      "offset": [
        4470,
        4475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1121"
    },
    "3373": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        4470,
        4475
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3374": {
      "fn": "AirdropToken.depo",
      "offset": [
        4470,
        4475
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3375": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4464
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "3377": {
      "fn": "AirdropToken.depo",
      "offset": [
        4465,
        4466
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3379": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3380": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3381": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3382": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "LT",
      "path": "1"
    },
    "3383": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD42"
    },
    "3386": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3387": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD42"
    },
    "3390": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1053"
    },
    "3393": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        4456,
        4467
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3394": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3395": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3397": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3398": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3399": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3400": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3402": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3403": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3404": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3405": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4467
      ],
      "op": "ADD",
      "path": "1"
    },
    "3406": {
      "fn": "AirdropToken.depo",
      "offset": [
        4456,
        4475
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3407": {
      "fn": "AirdropToken.depo",
      "offset": [
        4497,
        4503
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 33,
      "value": "0xD59"
    },
    "3410": {
      "fn": "AirdropToken.depo",
      "offset": [
        4497,
        4498
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3411": {
      "fn": "AirdropToken.depo",
      "offset": [
        4501,
        4503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3413": {
      "fn": "AirdropToken.depo",
      "offset": [
        4497,
        4503
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1121"
    },
    "3416": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        4497,
        4503
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3417": {
      "fn": "AirdropToken.depo",
      "offset": [
        4497,
        4503
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3418": {
      "fn": "AirdropToken.depo",
      "offset": [
        4485,
        4494
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB"
    },
    "3420": {
      "fn": "AirdropToken.depo",
      "offset": [
        4485,
        4503
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3421": {
      "fn": "AirdropToken.depo",
      "offset": [
        4525,
        4530
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 34,
      "value": "0xD67"
    },
    "3424": {
      "fn": "AirdropToken.depo",
      "offset": [
        4525,
        4526
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3425": {
      "fn": "AirdropToken.depo",
      "offset": [
        4529,
        4530
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3427": {
      "fn": "AirdropToken.depo",
      "offset": [
        4525,
        4530
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1121"
    },
    "3430": {
      "fn": "AirdropToken.depo",
      "jump": "i",
      "offset": [
        4525,
        4530
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3431": {
      "fn": "AirdropToken.depo",
      "offset": [
        4525,
        4530
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3432": {
      "fn": "AirdropToken.depo",
      "offset": [
        4513,
        4522
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC"
    },
    "3434": {
      "fn": "AirdropToken.depo",
      "offset": [
        4513,
        4530
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3435": {
      "fn": "AirdropToken.depo",
      "offset": [
        4540,
        4549
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 35,
      "value": "0xD"
    },
    "3437": {
      "fn": "AirdropToken.depo",
      "offset": [
        4540,
        4553
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3438": {
      "op": "POP"
    },
    "3439": {
      "fn": "AirdropToken.depo",
      "offset": [
        4570,
        4574
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 36,
      "value": "0x1"
    },
    "3441": {
      "fn": "AirdropToken.depo",
      "offset": [
        4570,
        4574
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3442": {
      "fn": "AirdropToken.depo",
      "offset": [
        3846,
        4581
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3443": {
      "op": "POP"
    },
    "3444": {
      "fn": "AirdropToken.depo",
      "jump": "o",
      "offset": [
        3846,
        4581
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3445": {
      "fn": "MerkleProof.verify",
      "offset": [
        680,
        1500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3446": {
      "fn": "MerkleProof.verify",
      "offset": [
        801,
        805
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3448": {
      "fn": "MerkleProof.verify",
      "offset": [
        840,
        844
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3449": {
      "fn": "MerkleProof.verify",
      "offset": [
        801,
        805
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3450": {
      "fn": "MerkleProof.verify",
      "offset": [
        855,
        1381
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3451": {
      "fn": "MerkleProof.verify",
      "offset": [
        879,
        884
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3452": {
      "fn": "MerkleProof.verify",
      "offset": [
        879,
        891
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3453": {
      "fn": "MerkleProof.verify",
      "offset": [
        875,
        876
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3454": {
      "fn": "MerkleProof.verify",
      "offset": [
        875,
        891
      ],
      "op": "LT",
      "path": "1"
    },
    "3455": {
      "fn": "MerkleProof.verify",
      "offset": [
        855,
        1381
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3456": {
      "fn": "MerkleProof.verify",
      "offset": [
        855,
        1381
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE19"
    },
    "3459": {
      "fn": "MerkleProof.verify",
      "offset": [
        855,
        1381
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3460": {
      "fn": "MerkleProof.verify",
      "offset": [
        912,
        932
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3462": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        940
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3463": {
      "fn": "MerkleProof.verify",
      "offset": [
        941,
        942
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3464": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3465": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3466": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3467": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "LT",
      "path": "1"
    },
    "3468": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD97"
    },
    "3471": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3472": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD97"
    },
    "3475": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1053"
    },
    "3478": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        935,
        943
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3479": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3480": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3482": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "MUL",
      "path": "1"
    },
    "3483": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3485": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "ADD",
      "path": "1"
    },
    "3486": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "ADD",
      "path": "1"
    },
    "3487": {
      "fn": "MerkleProof.verify",
      "offset": [
        935,
        943
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3488": {
      "fn": "MerkleProof.verify",
      "offset": [
        912,
        943
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3489": {
      "fn": "MerkleProof.verify",
      "offset": [
        912,
        943
      ],
      "op": "POP",
      "path": "1"
    },
    "3490": {
      "fn": "MerkleProof.verify",
      "offset": [
        989,
        1001
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3491": {
      "fn": "MerkleProof.verify",
      "offset": [
        973,
        985
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3492": {
      "branch": 57,
      "fn": "MerkleProof.verify",
      "offset": [
        973,
        1001
      ],
      "op": "GT",
      "path": "1"
    },
    "3493": {
      "fn": "MerkleProof.verify",
      "offset": [
        969,
        1371
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDD9"
    },
    "3496": {
      "branch": 57,
      "fn": "MerkleProof.verify",
      "offset": [
        969,
        1371
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3497": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 37,
      "value": "0x40"
    },
    "3499": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3500": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3501": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3503": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3504": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "ADD",
      "path": "1"
    },
    "3505": {
      "op": "DUP6"
    },
    "3506": {
      "op": "SWAP1"
    },
    "3507": {
      "op": "MSTORE"
    },
    "3508": {
      "op": "SWAP1"
    },
    "3509": {
      "op": "DUP2"
    },
    "3510": {
      "op": "ADD"
    },
    "3511": {
      "op": "DUP3"
    },
    "3512": {
      "op": "SWAP1"
    },
    "3513": {
      "op": "MSTORE"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3519": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3520": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3522": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3523": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3524": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "SUB",
      "path": "1"
    },
    "3525": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "SUB",
      "path": "1"
    },
    "3526": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3527": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3528": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3529": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3531": {
      "fn": "MerkleProof.verify",
      "offset": [
        1124,
        1168
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3532": {
      "fn": "MerkleProof.verify",
      "offset": [
        1114,
        1169
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3533": {
      "fn": "MerkleProof.verify",
      "offset": [
        1114,
        1169
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3534": {
      "fn": "MerkleProof.verify",
      "offset": [
        1114,
        1169
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3535": {
      "fn": "MerkleProof.verify",
      "offset": [
        1114,
        1169
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3537": {
      "fn": "MerkleProof.verify",
      "offset": [
        1114,
        1169
      ],
      "op": "ADD",
      "path": "1"
    },
    "3538": {
      "fn": "MerkleProof.verify",
      "offset": [
        1114,
        1169
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3539": {
      "fn": "MerkleProof.verify",
      "offset": [
        1099,
        1169
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3540": {
      "fn": "MerkleProof.verify",
      "offset": [
        1099,
        1169
      ],
      "op": "POP",
      "path": "1"
    },
    "3541": {
      "fn": "MerkleProof.verify",
      "offset": [
        969,
        1371
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE06"
    },
    "3544": {
      "fn": "MerkleProof.verify",
      "offset": [
        969,
        1371
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3545": {
      "fn": "MerkleProof.verify",
      "offset": [
        969,
        1371
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3546": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 38,
      "value": "0x40"
    },
    "3548": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3549": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3550": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3552": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3553": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "ADD",
      "path": "1"
    },
    "3554": {
      "op": "DUP4"
    },
    "3555": {
      "op": "SWAP1"
    },
    "3556": {
      "op": "MSTORE"
    },
    "3557": {
      "op": "SWAP1"
    },
    "3558": {
      "op": "DUP2"
    },
    "3559": {
      "op": "ADD"
    },
    "3560": {
      "op": "DUP5"
    },
    "3561": {
      "op": "SWAP1"
    },
    "3562": {
      "op": "MSTORE"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3565": {
      "op": "ADD"
    },
    "3566": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3568": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3569": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3571": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3572": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3573": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "SUB",
      "path": "1"
    },
    "3574": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "SUB",
      "path": "1"
    },
    "3575": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3576": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3577": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3578": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3580": {
      "fn": "MerkleProof.verify",
      "offset": [
        1311,
        1355
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3581": {
      "fn": "MerkleProof.verify",
      "offset": [
        1301,
        1356
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3582": {
      "fn": "MerkleProof.verify",
      "offset": [
        1301,
        1356
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3583": {
      "fn": "MerkleProof.verify",
      "offset": [
        1301,
        1356
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3584": {
      "fn": "MerkleProof.verify",
      "offset": [
        1301,
        1356
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3586": {
      "fn": "MerkleProof.verify",
      "offset": [
        1301,
        1356
      ],
      "op": "ADD",
      "path": "1"
    },
    "3587": {
      "fn": "MerkleProof.verify",
      "offset": [
        1301,
        1356
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3588": {
      "fn": "MerkleProof.verify",
      "offset": [
        1286,
        1356
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3589": {
      "fn": "MerkleProof.verify",
      "offset": [
        1286,
        1356
      ],
      "op": "POP",
      "path": "1"
    },
    "3590": {
      "fn": "MerkleProof.verify",
      "offset": [
        969,
        1371
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3591": {
      "op": "POP"
    },
    "3592": {
      "fn": "MerkleProof.verify",
      "offset": [
        893,
        896
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 39
    },
    "3593": {
      "fn": "MerkleProof.verify",
      "offset": [
        893,
        896
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE11"
    },
    "3596": {
      "fn": "MerkleProof.verify",
      "offset": [
        893,
        896
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3597": {
      "fn": "MerkleProof.verify",
      "offset": [
        893,
        896
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1162"
    },
    "3600": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        893,
        896
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3601": {
      "fn": "MerkleProof.verify",
      "offset": [
        893,
        896
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3602": {
      "fn": "MerkleProof.verify",
      "offset": [
        893,
        896
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3603": {
      "fn": "MerkleProof.verify",
      "offset": [
        893,
        896
      ],
      "op": "POP",
      "path": "1"
    },
    "3604": {
      "fn": "MerkleProof.verify",
      "offset": [
        893,
        896
      ],
      "op": "POP",
      "path": "1"
    },
    "3605": {
      "fn": "MerkleProof.verify",
      "offset": [
        855,
        1381
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD7A"
    },
    "3608": {
      "fn": "MerkleProof.verify",
      "offset": [
        855,
        1381
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3609": {
      "fn": "MerkleProof.verify",
      "offset": [
        855,
        1381
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3610": {
      "op": "POP"
    },
    "3611": {
      "fn": "MerkleProof.verify",
      "offset": [
        1473,
        1493
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 40
    },
    "3612": {
      "fn": "MerkleProof.verify",
      "offset": [
        1473,
        1493
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3613": {
      "fn": "MerkleProof.verify",
      "offset": [
        1473,
        1493
      ],
      "op": "EQ",
      "path": "1"
    },
    "3614": {
      "fn": "MerkleProof.verify",
      "offset": [
        1473,
        1493
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3615": {
      "fn": "MerkleProof.verify",
      "offset": [
        680,
        1500
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3616": {
      "op": "POP"
    },
    "3617": {
      "op": "POP"
    },
    "3618": {
      "op": "POP"
    },
    "3619": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        680,
        1500
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3620": {
      "op": "JUMPDEST"
    },
    "3621": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3628": {
      "op": "SHL"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3631": {
      "op": "MSTORE"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3636": {
      "op": "MSTORE"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3641": {
      "op": "REVERT"
    },
    "3642": {
      "op": "JUMPDEST"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3645": {
      "op": "DUP3"
    },
    "3646": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3648": {
      "op": "DUP4"
    },
    "3649": {
      "op": "ADD"
    },
    "3650": {
      "op": "SLT"
    },
    "3651": {
      "op": "PUSH2",
      "value": "0xE4B"
    },
    "3654": {
      "op": "JUMPI"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3657": {
      "op": "DUP1"
    },
    "3658": {
      "op": "REVERT"
    },
    "3659": {
      "op": "JUMPDEST"
    },
    "3660": {
      "op": "DUP2"
    },
    "3661": {
      "op": "CALLDATALOAD"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3664": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3673": {
      "op": "DUP1"
    },
    "3674": {
      "op": "DUP4"
    },
    "3675": {
      "op": "GT"
    },
    "3676": {
      "op": "ISZERO"
    },
    "3677": {
      "op": "PUSH2",
      "value": "0xE68"
    },
    "3680": {
      "op": "JUMPI"
    },
    "3681": {
      "op": "PUSH2",
      "value": "0xE68"
    },
    "3684": {
      "op": "PUSH2",
      "value": "0xE24"
    },
    "3687": {
      "jump": "i",
      "op": "JUMP"
    },
    "3688": {
      "op": "JUMPDEST"
    },
    "3689": {
      "op": "DUP3"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3692": {
      "op": "SHL"
    },
    "3693": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3695": {
      "op": "MLOAD"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3698": {
      "op": "NOT"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3701": {
      "op": "DUP4"
    },
    "3702": {
      "op": "ADD"
    },
    "3703": {
      "op": "AND"
    },
    "3704": {
      "op": "DUP2"
    },
    "3705": {
      "op": "ADD"
    },
    "3706": {
      "op": "DUP2"
    },
    "3707": {
      "op": "DUP2"
    },
    "3708": {
      "op": "LT"
    },
    "3709": {
      "op": "DUP5"
    },
    "3710": {
      "op": "DUP3"
    },
    "3711": {
      "op": "GT"
    },
    "3712": {
      "op": "OR"
    },
    "3713": {
      "op": "ISZERO"
    },
    "3714": {
      "op": "PUSH2",
      "value": "0xE8D"
    },
    "3717": {
      "op": "JUMPI"
    },
    "3718": {
      "op": "PUSH2",
      "value": "0xE8D"
    },
    "3721": {
      "op": "PUSH2",
      "value": "0xE24"
    },
    "3724": {
      "jump": "i",
      "op": "JUMP"
    },
    "3725": {
      "op": "JUMPDEST"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3728": {
      "op": "MSTORE"
    },
    "3729": {
      "op": "SWAP4"
    },
    "3730": {
      "op": "DUP5"
    },
    "3731": {
      "op": "MSTORE"
    },
    "3732": {
      "op": "DUP6"
    },
    "3733": {
      "op": "DUP2"
    },
    "3734": {
      "op": "ADD"
    },
    "3735": {
      "op": "DUP4"
    },
    "3736": {
      "op": "ADD"
    },
    "3737": {
      "op": "SWAP4"
    },
    "3738": {
      "op": "DUP4"
    },
    "3739": {
      "op": "DUP2"
    },
    "3740": {
      "op": "ADD"
    },
    "3741": {
      "op": "SWAP3"
    },
    "3742": {
      "op": "POP"
    },
    "3743": {
      "op": "DUP8"
    },
    "3744": {
      "op": "DUP6"
    },
    "3745": {
      "op": "GT"
    },
    "3746": {
      "op": "ISZERO"
    },
    "3747": {
      "op": "PUSH2",
      "value": "0xEAB"
    },
    "3750": {
      "op": "JUMPI"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3753": {
      "op": "DUP1"
    },
    "3754": {
      "op": "REVERT"
    },
    "3755": {
      "op": "JUMPDEST"
    },
    "3756": {
      "op": "DUP4"
    },
    "3757": {
      "op": "DUP8"
    },
    "3758": {
      "op": "ADD"
    },
    "3759": {
      "op": "SWAP2"
    },
    "3760": {
      "op": "POP"
    },
    "3761": {
      "op": "JUMPDEST"
    },
    "3762": {
      "op": "DUP5"
    },
    "3763": {
      "op": "DUP3"
    },
    "3764": {
      "op": "LT"
    },
    "3765": {
      "op": "ISZERO"
    },
    "3766": {
      "op": "PUSH2",
      "value": "0xECA"
    },
    "3769": {
      "op": "JUMPI"
    },
    "3770": {
      "op": "DUP2"
    },
    "3771": {
      "op": "CALLDATALOAD"
    },
    "3772": {
      "op": "DUP4"
    },
    "3773": {
      "op": "MSTORE"
    },
    "3774": {
      "op": "SWAP2"
    },
    "3775": {
      "op": "DUP4"
    },
    "3776": {
      "op": "ADD"
    },
    "3777": {
      "op": "SWAP2"
    },
    "3778": {
      "op": "SWAP1"
    },
    "3779": {
      "op": "DUP4"
    },
    "3780": {
      "op": "ADD"
    },
    "3781": {
      "op": "SWAP1"
    },
    "3782": {
      "op": "PUSH2",
      "value": "0xEB1"
    },
    "3785": {
      "op": "JUMP"
    },
    "3786": {
      "op": "JUMPDEST"
    },
    "3787": {
      "op": "SWAP8"
    },
    "3788": {
      "op": "SWAP7"
    },
    "3789": {
      "op": "POP"
    },
    "3790": {
      "op": "POP"
    },
    "3791": {
      "op": "POP"
    },
    "3792": {
      "op": "POP"
    },
    "3793": {
      "op": "POP"
    },
    "3794": {
      "op": "POP"
    },
    "3795": {
      "op": "POP"
    },
    "3796": {
      "jump": "o",
      "op": "JUMP"
    },
    "3797": {
      "op": "JUMPDEST"
    },
    "3798": {
      "op": "DUP1"
    },
    "3799": {
      "op": "CALLDATALOAD"
    },
    "3800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3806": {
      "op": "SHL"
    },
    "3807": {
      "op": "SUB"
    },
    "3808": {
      "op": "DUP2"
    },
    "3809": {
      "op": "AND"
    },
    "3810": {
      "op": "DUP2"
    },
    "3811": {
      "op": "EQ"
    },
    "3812": {
      "op": "PUSH2",
      "value": "0xEEC"
    },
    "3815": {
      "op": "JUMPI"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3818": {
      "op": "DUP1"
    },
    "3819": {
      "op": "REVERT"
    },
    "3820": {
      "op": "JUMPDEST"
    },
    "3821": {
      "op": "SWAP2"
    },
    "3822": {
      "op": "SWAP1"
    },
    "3823": {
      "op": "POP"
    },
    "3824": {
      "jump": "o",
      "op": "JUMP"
    },
    "3825": {
      "op": "JUMPDEST"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3828": {
      "op": "DUP1"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3833": {
      "op": "DUP5"
    },
    "3834": {
      "op": "DUP7"
    },
    "3835": {
      "op": "SUB"
    },
    "3836": {
      "op": "SLT"
    },
    "3837": {
      "op": "ISZERO"
    },
    "3838": {
      "op": "PUSH2",
      "value": "0xF06"
    },
    "3841": {
      "op": "JUMPI"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3844": {
      "op": "DUP1"
    },
    "3845": {
      "op": "REVERT"
    },
    "3846": {
      "op": "JUMPDEST"
    },
    "3847": {
      "op": "DUP4"
    },
    "3848": {
      "op": "CALLDATALOAD"
    },
    "3849": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3858": {
      "op": "DUP2"
    },
    "3859": {
      "op": "GT"
    },
    "3860": {
      "op": "ISZERO"
    },
    "3861": {
      "op": "PUSH2",
      "value": "0xF1D"
    },
    "3864": {
      "op": "JUMPI"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3867": {
      "op": "DUP1"
    },
    "3868": {
      "op": "REVERT"
    },
    "3869": {
      "op": "JUMPDEST"
    },
    "3870": {
      "op": "PUSH2",
      "value": "0xF29"
    },
    "3873": {
      "op": "DUP7"
    },
    "3874": {
      "op": "DUP3"
    },
    "3875": {
      "op": "DUP8"
    },
    "3876": {
      "op": "ADD"
    },
    "3877": {
      "op": "PUSH2",
      "value": "0xE3A"
    },
    "3880": {
      "jump": "i",
      "op": "JUMP"
    },
    "3881": {
      "op": "JUMPDEST"
    },
    "3882": {
      "op": "SWAP4"
    },
    "3883": {
      "op": "POP"
    },
    "3884": {
      "op": "POP"
    },
    "3885": {
      "op": "PUSH2",
      "value": "0xF38"
    },
    "3888": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3890": {
      "op": "DUP6"
    },
    "3891": {
      "op": "ADD"
    },
    "3892": {
      "op": "PUSH2",
      "value": "0xED5"
    },
    "3895": {
      "jump": "i",
      "op": "JUMP"
    },
    "3896": {
      "op": "JUMPDEST"
    },
    "3897": {
      "op": "SWAP2"
    },
    "3898": {
      "op": "POP"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3901": {
      "op": "DUP5"
    },
    "3902": {
      "op": "ADD"
    },
    "3903": {
      "op": "CALLDATALOAD"
    },
    "3904": {
      "op": "SWAP1"
    },
    "3905": {
      "op": "POP"
    },
    "3906": {
      "op": "SWAP3"
    },
    "3907": {
      "op": "POP"
    },
    "3908": {
      "op": "SWAP3"
    },
    "3909": {
      "op": "POP"
    },
    "3910": {
      "op": "SWAP3"
    },
    "3911": {
      "jump": "o",
      "op": "JUMP"
    },
    "3912": {
      "op": "JUMPDEST"
    },
    "3913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3917": {
      "op": "DUP3"
    },
    "3918": {
      "op": "DUP5"
    },
    "3919": {
      "op": "SUB"
    },
    "3920": {
      "op": "SLT"
    },
    "3921": {
      "op": "ISZERO"
    },
    "3922": {
      "op": "PUSH2",
      "value": "0xF5A"
    },
    "3925": {
      "op": "JUMPI"
    },
    "3926": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3928": {
      "op": "DUP1"
    },
    "3929": {
      "op": "REVERT"
    },
    "3930": {
      "op": "JUMPDEST"
    },
    "3931": {
      "op": "POP"
    },
    "3932": {
      "op": "CALLDATALOAD"
    },
    "3933": {
      "op": "SWAP2"
    },
    "3934": {
      "op": "SWAP1"
    },
    "3935": {
      "op": "POP"
    },
    "3936": {
      "jump": "o",
      "op": "JUMP"
    },
    "3937": {
      "op": "JUMPDEST"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3940": {
      "op": "DUP1"
    },
    "3941": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3943": {
      "op": "DUP4"
    },
    "3944": {
      "op": "DUP6"
    },
    "3945": {
      "op": "SUB"
    },
    "3946": {
      "op": "SLT"
    },
    "3947": {
      "op": "ISZERO"
    },
    "3948": {
      "op": "PUSH2",
      "value": "0xF74"
    },
    "3951": {
      "op": "JUMPI"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3954": {
      "op": "DUP1"
    },
    "3955": {
      "op": "REVERT"
    },
    "3956": {
      "op": "JUMPDEST"
    },
    "3957": {
      "op": "DUP3"
    },
    "3958": {
      "op": "CALLDATALOAD"
    },
    "3959": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3968": {
      "op": "DUP2"
    },
    "3969": {
      "op": "GT"
    },
    "3970": {
      "op": "ISZERO"
    },
    "3971": {
      "op": "PUSH2",
      "value": "0xF8B"
    },
    "3974": {
      "op": "JUMPI"
    },
    "3975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3977": {
      "op": "DUP1"
    },
    "3978": {
      "op": "REVERT"
    },
    "3979": {
      "op": "JUMPDEST"
    },
    "3980": {
      "op": "PUSH2",
      "value": "0xF97"
    },
    "3983": {
      "op": "DUP6"
    },
    "3984": {
      "op": "DUP3"
    },
    "3985": {
      "op": "DUP7"
    },
    "3986": {
      "op": "ADD"
    },
    "3987": {
      "op": "PUSH2",
      "value": "0xE3A"
    },
    "3990": {
      "jump": "i",
      "op": "JUMP"
    },
    "3991": {
      "op": "JUMPDEST"
    },
    "3992": {
      "op": "SWAP6"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3995": {
      "op": "SWAP5"
    },
    "3996": {
      "op": "SWAP1"
    },
    "3997": {
      "op": "SWAP5"
    },
    "3998": {
      "op": "ADD"
    },
    "3999": {
      "op": "CALLDATALOAD"
    },
    "4000": {
      "op": "SWAP5"
    },
    "4001": {
      "op": "POP"
    },
    "4002": {
      "op": "POP"
    },
    "4003": {
      "op": "POP"
    },
    "4004": {
      "op": "POP"
    },
    "4005": {
      "jump": "o",
      "op": "JUMP"
    },
    "4006": {
      "op": "JUMPDEST"
    },
    "4007": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4009": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4011": {
      "op": "DUP3"
    },
    "4012": {
      "op": "DUP5"
    },
    "4013": {
      "op": "SUB"
    },
    "4014": {
      "op": "SLT"
    },
    "4015": {
      "op": "ISZERO"
    },
    "4016": {
      "op": "PUSH2",
      "value": "0xFB8"
    },
    "4019": {
      "op": "JUMPI"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4022": {
      "op": "DUP1"
    },
    "4023": {
      "op": "REVERT"
    },
    "4024": {
      "op": "JUMPDEST"
    },
    "4025": {
      "op": "PUSH2",
      "value": "0x352"
    },
    "4028": {
      "op": "DUP3"
    },
    "4029": {
      "op": "PUSH2",
      "value": "0xED5"
    },
    "4032": {
      "jump": "i",
      "op": "JUMP"
    },
    "4033": {
      "op": "JUMPDEST"
    },
    "4034": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4038": {
      "op": "DUP3"
    },
    "4039": {
      "op": "DUP5"
    },
    "4040": {
      "op": "SUB"
    },
    "4041": {
      "op": "SLT"
    },
    "4042": {
      "op": "ISZERO"
    },
    "4043": {
      "op": "PUSH2",
      "value": "0xFD3"
    },
    "4046": {
      "op": "JUMPI"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4049": {
      "op": "DUP1"
    },
    "4050": {
      "op": "REVERT"
    },
    "4051": {
      "op": "JUMPDEST"
    },
    "4052": {
      "op": "DUP2"
    },
    "4053": {
      "op": "CALLDATALOAD"
    },
    "4054": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4063": {
      "op": "DUP2"
    },
    "4064": {
      "op": "GT"
    },
    "4065": {
      "op": "ISZERO"
    },
    "4066": {
      "op": "PUSH2",
      "value": "0xFEA"
    },
    "4069": {
      "op": "JUMPI"
    },
    "4070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4072": {
      "op": "DUP1"
    },
    "4073": {
      "op": "REVERT"
    },
    "4074": {
      "op": "JUMPDEST"
    },
    "4075": {
      "op": "PUSH2",
      "value": "0xFF6"
    },
    "4078": {
      "op": "DUP5"
    },
    "4079": {
      "op": "DUP3"
    },
    "4080": {
      "op": "DUP6"
    },
    "4081": {
      "op": "ADD"
    },
    "4082": {
      "op": "PUSH2",
      "value": "0xE3A"
    },
    "4085": {
      "jump": "i",
      "op": "JUMP"
    },
    "4086": {
      "op": "JUMPDEST"
    },
    "4087": {
      "op": "SWAP5"
    },
    "4088": {
      "op": "SWAP4"
    },
    "4089": {
      "op": "POP"
    },
    "4090": {
      "op": "POP"
    },
    "4091": {
      "op": "POP"
    },
    "4092": {
      "op": "POP"
    },
    "4093": {
      "jump": "o",
      "op": "JUMP"
    },
    "4094": {
      "op": "JUMPDEST"
    },
    "4095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4099": {
      "op": "DUP1"
    },
    "4100": {
      "op": "DUP4"
    },
    "4101": {
      "op": "MSTORE"
    },
    "4102": {
      "op": "DUP4"
    },
    "4103": {
      "op": "MLOAD"
    },
    "4104": {
      "op": "DUP1"
    },
    "4105": {
      "op": "DUP3"
    },
    "4106": {
      "op": "DUP6"
    },
    "4107": {
      "op": "ADD"
    },
    "4108": {
      "op": "MSTORE"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4111": {
      "op": "JUMPDEST"
    },
    "4112": {
      "op": "DUP2"
    },
    "4113": {
      "op": "DUP2"
    },
    "4114": {
      "op": "LT"
    },
    "4115": {
      "op": "ISZERO"
    },
    "4116": {
      "op": "PUSH2",
      "value": "0x102B"
    },
    "4119": {
      "op": "JUMPI"
    },
    "4120": {
      "op": "DUP6"
    },
    "4121": {
      "op": "DUP2"
    },
    "4122": {
      "op": "ADD"
    },
    "4123": {
      "op": "DUP4"
    },
    "4124": {
      "op": "ADD"
    },
    "4125": {
      "op": "MLOAD"
    },
    "4126": {
      "op": "DUP6"
    },
    "4127": {
      "op": "DUP3"
    },
    "4128": {
      "op": "ADD"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4131": {
      "op": "ADD"
    },
    "4132": {
      "op": "MSTORE"
    },
    "4133": {
      "op": "DUP3"
    },
    "4134": {
      "op": "ADD"
    },
    "4135": {
      "op": "PUSH2",
      "value": "0x100F"
    },
    "4138": {
      "op": "JUMP"
    },
    "4139": {
      "op": "JUMPDEST"
    },
    "4140": {
      "op": "DUP2"
    },
    "4141": {
      "op": "DUP2"
    },
    "4142": {
      "op": "GT"
    },
    "4143": {
      "op": "ISZERO"
    },
    "4144": {
      "op": "PUSH2",
      "value": "0x103D"
    },
    "4147": {
      "op": "JUMPI"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4152": {
      "op": "DUP4"
    },
    "4153": {
      "op": "DUP8"
    },
    "4154": {
      "op": "ADD"
    },
    "4155": {
      "op": "ADD"
    },
    "4156": {
      "op": "MSTORE"
    },
    "4157": {
      "op": "JUMPDEST"
    },
    "4158": {
      "op": "POP"
    },
    "4159": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4161": {
      "op": "ADD"
    },
    "4162": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4164": {
      "op": "NOT"
    },
    "4165": {
      "op": "AND"
    },
    "4166": {
      "op": "SWAP3"
    },
    "4167": {
      "op": "SWAP1"
    },
    "4168": {
      "op": "SWAP3"
    },
    "4169": {
      "op": "ADD"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4172": {
      "op": "ADD"
    },
    "4173": {
      "op": "SWAP4"
    },
    "4174": {
      "op": "SWAP3"
    },
    "4175": {
      "op": "POP"
    },
    "4176": {
      "op": "POP"
    },
    "4177": {
      "op": "POP"
    },
    "4178": {
      "jump": "o",
      "op": "JUMP"
    },
    "4179": {
      "op": "JUMPDEST"
    },
    "4180": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4187": {
      "op": "SHL"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4190": {
      "op": "MSTORE"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4195": {
      "op": "MSTORE"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4200": {
      "op": "REVERT"
    },
    "4201": {
      "op": "JUMPDEST"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4206": {
      "op": "DUP3"
    },
    "4207": {
      "op": "DUP5"
    },
    "4208": {
      "op": "SUB"
    },
    "4209": {
      "op": "SLT"
    },
    "4210": {
      "op": "ISZERO"
    },
    "4211": {
      "op": "PUSH2",
      "value": "0x107B"
    },
    "4214": {
      "op": "JUMPI"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4217": {
      "op": "DUP1"
    },
    "4218": {
      "op": "REVERT"
    },
    "4219": {
      "op": "JUMPDEST"
    },
    "4220": {
      "op": "POP"
    },
    "4221": {
      "op": "MLOAD"
    },
    "4222": {
      "op": "SWAP2"
    },
    "4223": {
      "op": "SWAP1"
    },
    "4224": {
      "op": "POP"
    },
    "4225": {
      "jump": "o",
      "op": "JUMP"
    },
    "4226": {
      "op": "JUMPDEST"
    },
    "4227": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4229": {
      "op": "DUP1"
    },
    "4230": {
      "op": "DUP3"
    },
    "4231": {
      "op": "MSTORE"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4234": {
      "op": "SWAP1"
    },
    "4235": {
      "op": "DUP3"
    },
    "4236": {
      "op": "ADD"
    },
    "4237": {
      "op": "MSTORE"
    },
    "4238": {
      "op": "PUSH13",
      "value": "0x70726F6F66206661696C757265"
    },
    "4252": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "4254": {
      "op": "SHL"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4257": {
      "op": "DUP3"
    },
    "4258": {
      "op": "ADD"
    },
    "4259": {
      "op": "MSTORE"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4262": {
      "op": "ADD"
    },
    "4263": {
      "op": "SWAP1"
    },
    "4264": {
      "jump": "o",
      "op": "JUMP"
    },
    "4265": {
      "op": "JUMPDEST"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4268": {
      "op": "DUP1"
    },
    "4269": {
      "op": "DUP3"
    },
    "4270": {
      "op": "MSTORE"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "4273": {
      "op": "SWAP1"
    },
    "4274": {
      "op": "DUP3"
    },
    "4275": {
      "op": "ADD"
    },
    "4276": {
      "op": "MSTORE"
    },
    "4277": {
      "op": "PUSH15",
      "value": "0x185B1C9958591E4818DB185A5B5959"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "4295": {
      "op": "SHL"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4298": {
      "op": "DUP3"
    },
    "4299": {
      "op": "ADD"
    },
    "4300": {
      "op": "MSTORE"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4303": {
      "op": "ADD"
    },
    "4304": {
      "op": "SWAP1"
    },
    "4305": {
      "jump": "o",
      "op": "JUMP"
    },
    "4306": {
      "op": "JUMPDEST"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "DUP5"
    },
    "4313": {
      "op": "SUB"
    },
    "4314": {
      "op": "SLT"
    },
    "4315": {
      "op": "ISZERO"
    },
    "4316": {
      "op": "PUSH2",
      "value": "0x10E4"
    },
    "4319": {
      "op": "JUMPI"
    },
    "4320": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4322": {
      "op": "DUP1"
    },
    "4323": {
      "op": "REVERT"
    },
    "4324": {
      "op": "JUMPDEST"
    },
    "4325": {
      "op": "DUP2"
    },
    "4326": {
      "op": "MLOAD"
    },
    "4327": {
      "op": "DUP1"
    },
    "4328": {
      "op": "ISZERO"
    },
    "4329": {
      "op": "ISZERO"
    },
    "4330": {
      "op": "DUP2"
    },
    "4331": {
      "op": "EQ"
    },
    "4332": {
      "op": "PUSH2",
      "value": "0x352"
    },
    "4335": {
      "op": "JUMPI"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4338": {
      "op": "DUP1"
    },
    "4339": {
      "op": "REVERT"
    },
    "4340": {
      "op": "JUMPDEST"
    },
    "4341": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4348": {
      "op": "SHL"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4351": {
      "op": "MSTORE"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4356": {
      "op": "MSTORE"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4361": {
      "op": "REVERT"
    },
    "4362": {
      "op": "JUMPDEST"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4365": {
      "op": "DUP3"
    },
    "4366": {
      "op": "DUP3"
    },
    "4367": {
      "op": "LT"
    },
    "4368": {
      "op": "ISZERO"
    },
    "4369": {
      "op": "PUSH2",
      "value": "0x111C"
    },
    "4372": {
      "op": "JUMPI"
    },
    "4373": {
      "op": "PUSH2",
      "value": "0x111C"
    },
    "4376": {
      "op": "PUSH2",
      "value": "0x10F4"
    },
    "4379": {
      "jump": "i",
      "op": "JUMP"
    },
    "4380": {
      "op": "JUMPDEST"
    },
    "4381": {
      "op": "POP"
    },
    "4382": {
      "op": "SUB"
    },
    "4383": {
      "op": "SWAP1"
    },
    "4384": {
      "jump": "o",
      "op": "JUMP"
    },
    "4385": {
      "op": "JUMPDEST"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4388": {
      "op": "DUP2"
    },
    "4389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4391": {
      "op": "NOT"
    },
    "4392": {
      "op": "DIV"
    },
    "4393": {
      "op": "DUP4"
    },
    "4394": {
      "op": "GT"
    },
    "4395": {
      "op": "DUP3"
    },
    "4396": {
      "op": "ISZERO"
    },
    "4397": {
      "op": "ISZERO"
    },
    "4398": {
      "op": "AND"
    },
    "4399": {
      "op": "ISZERO"
    },
    "4400": {
      "op": "PUSH2",
      "value": "0x113B"
    },
    "4403": {
      "op": "JUMPI"
    },
    "4404": {
      "op": "PUSH2",
      "value": "0x113B"
    },
    "4407": {
      "op": "PUSH2",
      "value": "0x10F4"
    },
    "4410": {
      "jump": "i",
      "op": "JUMP"
    },
    "4411": {
      "op": "JUMPDEST"
    },
    "4412": {
      "op": "POP"
    },
    "4413": {
      "op": "MUL"
    },
    "4414": {
      "op": "SWAP1"
    },
    "4415": {
      "jump": "o",
      "op": "JUMP"
    },
    "4416": {
      "op": "JUMPDEST"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4419": {
      "op": "DUP3"
    },
    "4420": {
      "op": "PUSH2",
      "value": "0x115D"
    },
    "4423": {
      "op": "JUMPI"
    },
    "4424": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4431": {
      "op": "SHL"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4434": {
      "op": "MSTORE"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4439": {
      "op": "MSTORE"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4444": {
      "op": "REVERT"
    },
    "4445": {
      "op": "JUMPDEST"
    },
    "4446": {
      "op": "POP"
    },
    "4447": {
      "op": "DIV"
    },
    "4448": {
      "op": "SWAP1"
    },
    "4449": {
      "jump": "o",
      "op": "JUMP"
    },
    "4450": {
      "op": "JUMPDEST"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4453": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4455": {
      "op": "NOT"
    },
    "4456": {
      "op": "DUP3"
    },
    "4457": {
      "op": "EQ"
    },
    "4458": {
      "op": "ISZERO"
    },
    "4459": {
      "op": "PUSH2",
      "value": "0x1176"
    },
    "4462": {
      "op": "JUMPI"
    },
    "4463": {
      "op": "PUSH2",
      "value": "0x1176"
    },
    "4466": {
      "op": "PUSH2",
      "value": "0x10F4"
    },
    "4469": {
      "jump": "i",
      "op": "JUMP"
    },
    "4470": {
      "op": "JUMPDEST"
    },
    "4471": {
      "op": "POP"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4474": {
      "op": "ADD"
    },
    "4475": {
      "op": "SWAP1"
    },
    "4476": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "e9b04d8d6eca08c7838a6fe4dafc38e87dce7b2f",
  "source": "// Forge Airdrop Contract\n// https://airdrop.forgetoken.org\n// Claim up to 100, 30 or 10 Forge in this new twist on airdrops! \n// The longer you wait the more your claim unlocks, but dont let the contract run dry without claiming!\n// Allows contract to be recharged by anyone to restart the Airdrop!\n\npragma solidity ^0.8.7;\n\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        bytes32 computedHash = leaf;\n\n        for (uint256 i = 0; i < proof.length; i++) {\n            bytes32 proofElement = proof[i];           \n\n            if (computedHash <= proofElement) {\n                // Hash(current computed hash + current element of the proof)\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\n            } else {\n                // Hash(current element of the proof + current computed hash)\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\n            }\n        }\n\n        // Check if the computed hash (root) is equal to the provided root\n        return computedHash == root;\n    }\n}\n\n\n interface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    \n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\ncontract ForgeGuess2{\n    \n    uint256 public unreleased;\n    uint256 public totalSupply;\n    function stakeFor(address forWhom, uint256 amount) public virtual {}\n    function withdraw(uint256 amount) public virtual {}\n    \n    function withEstimator(uint256 amountOut) public view returns (uint256) {}\n    }\ncontract AirdropToken {\n    \n    \n    address public ForgeTokenAddressREAL = address(0xF44fB43066F7ECC91058E3A614Fb8A15A2735276);\n    address public ForgeTokenAddress = address(0xbF4493415fD1E79DcDa8cD0cAd7E5Ed65DCe7074);\n    address public ForgeGuessContractAddress = address(0x2bC173e54Df9a3A44790AE891204347017c62B6B);\n    bytes32 [] public _merkleRootAll;\n    bytes32 internal _merkleRootTop;\n    bytes32 internal _merkleRootMid;\n    bytes32 internal _merkleRootBot;\n                                         \n    uint256 [] public amtClaim;\n    uint256 internal nextTokenId = 0;\n    mapping(address => bool) public hasClaimed;\n    uint256 public decay = 24* 60 * 60 * 30;\n    uint256 rewardTOP = 100 * 10 ** 18;\n    \n    uint256 rewardMID = 100 * 20 ** 18;\n    \n    uint256 rewardBOT = 100 * 10 ** 18;\n    uint256 public starttime = block.timestamp;\n    \n\n    constructor( bytes32 merkleRootTop, bytes32 merkleRootMid, bytes32 merkleRootBot)  {\n        _merkleRootTop = merkleRootTop;\n        _merkleRootMid = merkleRootMid;\n        _merkleRootBot = merkleRootBot;\n        _merkleRootAll.push(merkleRootTop);\n        _merkleRootAll.push(merkleRootMid);\n        _merkleRootAll.push(merkleRootBot);\n        amtClaim.push(1000000000000);\n        amtClaim.push(100000000);\n        amtClaim.push(100000);\n    }  \n\n \n\n    /**\n    * @dev Mints new NFTs\n    */\n    function depo(uint amt) public returns (bool success){\n        require(amt > IERC20(ForgeTokenAddress).balanceOf(address(this)), \"must be greater than previous to reset\");\n        require(IERC20(ForgeTokenAddress).transferFrom(msg.sender, address(this), amt), \"transfer fail\");\n        starttime = block.timestamp;\n        IERC20(ForgeTokenAddress).approve(ForgeGuessContractAddress, 999999999999999999999999999999999999999999999999999);\n        ForgeGuess2(ForgeGuessContractAddress).stakeFor(address(this), amt);\n        uint x = perfect();\n        amtClaim[0] = x * 10;\n        amtClaim[1] = x * 3;\n        amtClaim[2] = x * 1;\n        rewardTOP = x * 10;\n        rewardMID = x * 3;\n        rewardBOT = x;\n        return true;\n    }\n\n    function perfect() public view returns (uint256 amtz){\n        \n        uint256 test = (10 * 10 ** 18 * 1000) / ((975 * (IERC20(address(ForgeTokenAddress)).balanceOf(ForgeGuessContractAddress) - ForgeGuess2(ForgeGuessContractAddress).unreleased() ) / ForgeGuess2(ForgeGuessContractAddress).totalSupply()));\n\n\n        return test;\n    }\n\n    function amtOutForChoiceInForge(uint choice) public view returns (uint256 out){\n\n        return ForgeGuess2(ForgeGuessContractAddress).withEstimator(amountOut(choice));\n    }\n\n\n   function amountOut(uint choice) public view returns (uint256 out){\n        uint256 durdur = block.timestamp - starttime;\n        if(durdur > decay){\n            durdur = decay;\n        }\n        if(choice == 0){\n           return (amtClaim[0] * durdur) / decay;\n        }else if(choice ==1){\n           return (amtClaim[1] * durdur) / decay;\n        }else if(choice ==2){\n           return (amtClaim[2] * durdur) / decay;\n        }\n        return 0;\n   }\n   \n    function mintWithProofTop(bytes32[] memory merkleProof ) public {\n    \n        \n        require( MerkleProof.verify(merkleProof, _merkleRootTop, keccak256( abi.encodePacked(msg.sender)) ) , 'proof failure');\n\n        require(hasClaimed[msg.sender] == false, 'already claimed');\n\n        hasClaimed[msg.sender]=true;\n        \n        IERC20(ForgeTokenAddress).transfer(msg.sender,  amountOut(1));\n    }\n    \n    function mintWithProofMid(bytes32[] memory merkleProof ) public {\n \n        require( MerkleProof.verify(merkleProof, _merkleRootMid, keccak256( abi.encodePacked(msg.sender)) ) , 'proof failure');\n\n        require(hasClaimed[msg.sender] == false, 'already claimed');\n\n        hasClaimed[msg.sender]=true;\n        \n        IERC20(ForgeTokenAddress).transfer(msg.sender,  amountOut(2));\n    }\n    //0= 0%-10%, 1= 10%-40%, 2= 50%-90%\n    function mintWithProofALL(bytes32[] memory merkleProof, uint claim ) public {\n \n        require( verify(merkleProof, msg.sender, claim)  , 'proof failure');\n\n        require(hasClaimed[msg.sender] == false, 'already claimed');\n\n        hasClaimed[msg.sender]=true;\n        \n        ForgeGuess2(ForgeGuessContractAddress).withdraw(amountOut(claim));\n        require(IERC20(ForgeTokenAddress).transfer(msg.sender, IERC20(ForgeTokenAddress).balanceOf(address(this))), \"contract may be out of funds\");\n    }\n\n    //verify claim\n    function verify(bytes32[] memory merkleProof, address claimer, uint claim)public view returns (bool ver){\n    if(claim == 0){\n    \n        return MerkleProof.verify(merkleProof, _merkleRootAll[0], keccak256( abi.encodePacked(claimer)));\n    }else if(claim ==1 ){\n\n        return MerkleProof.verify(merkleProof, _merkleRootAll[1], keccak256( abi.encodePacked(claimer)));\n    }else if(claim == 2){\n    \n        return MerkleProof.verify(merkleProof, _merkleRootAll[2], keccak256( abi.encodePacked(claimer)));\n    }\n    return false;\n    }\n    \n    \n    function getThree() public view returns (uint256) {\n\n\n        return 3;\n    }\n    \n\n    function tokenURI(uint256 tokenId) public view  returns (string memory) {\n            return \"ipfs://QmbLrLMf8e7VZTcKcq4pjkv7yjLEN7RG8NqKQ4NGPtPuc3\";\n       \n}\n}\n\n",
  "sourceMap": "2485:5259:1:-:0;;;2523:90;;;-1:-1:-1;;;;;;2523:90:1;;;2570:42;2523:90;;;;2619:86;;;;2662:42;2619:86;;;2711:94;;;;;;2762:42;2711:94;;;3034:32;;3143:16;3120:39;;3185:14;3165:34;;;;3230:14;3210:34;;3255;;3322:15;3295:42;;3349:445;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3442:14;:30;;;3482:14;:30;;;3522:14;:30;;;3562:14;:34;;;;;;;;;;;;;;;;3606;;;;;;;;;;;;;3650;;;;;;;;;;;;3694:8;:28;;;;;;;-1:-1:-1;3694:28:1;;;3708:13;3694:28;;;;;3732:24;;;;;;;3746:9;3732:24;;;;3766:21;;;;;;;;3780:6;3766:21;;;2485:5259;;14:306:5;102:6;110;118;171:2;159:9;150:7;146:23;142:32;139:52;;;187:1;184;177:12;139:52;216:9;210:16;200:26;;266:2;255:9;251:18;245:25;235:35;;310:2;299:9;295:18;289:25;279:35;;14:306;;;;;:::o;:::-;2485:5259:1;;;;;;",
  "sourcePath": "contracts/Merkletree.sol",
  "type": "contract"
}