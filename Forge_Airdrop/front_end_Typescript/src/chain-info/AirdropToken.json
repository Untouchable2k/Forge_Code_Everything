{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "Donation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ForgeGuessContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ForgeTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ForgeTokenAddressREAL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_merkleRootAll",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "choice",
          "type": "uint256"
        }
      ],
      "name": "amountOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "out",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "amtClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "choice",
          "type": "uint256"
        }
      ],
      "name": "amtOutForChoiceInForge",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "out",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getThree",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint256",
          "name": "claim",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLoss",
          "type": "uint256"
        }
      ],
      "name": "mintWithProofALL",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "mintWithProofMid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        }
      ],
      "name": "mintWithProofTop",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "perfect",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amtz",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "starttime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "merkleProof",
          "type": "bytes32[]"
        },
        {
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "claim",
          "type": "uint256"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "ver",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Merkletree.sol"
  },
  "ast": {
    "absolutePath": "contracts/Merkletree.sol",
    "exportedSymbols": {
      "AirdropToken": [
        815
      ],
      "ForgeGuess": [
        173
      ],
      "IERC20": [
        136
      ],
      "MerkleProof": [
        69
      ]
    },
    "id": 816,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "333:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MerkleProof",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 69,
        "linearizedBaseContracts": [
          69
        ],
        "name": "MerkleProof",
        "nameLocation": "366:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "839:693:0",
              "statements": [
                {
                  "assignments": [
                    15
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15,
                      "mutability": "mutable",
                      "name": "computedHash",
                      "nameLocation": "857:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 67,
                      "src": "849:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "849:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17,
                  "initialValue": {
                    "id": 16,
                    "name": "leaf",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "872:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "849:27:0"
                },
                {
                  "body": {
                    "id": 61,
                    "nodeType": "Block",
                    "src": "930:483:0",
                    "statements": [
                      {
                        "assignments": [
                          30
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30,
                            "mutability": "mutable",
                            "name": "proofElement",
                            "nameLocation": "952:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 61,
                            "src": "944:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 29,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "944:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34,
                        "initialValue": {
                          "baseExpression": {
                            "id": 31,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "967:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          "id": 33,
                          "indexExpression": {
                            "id": 32,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "973:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "967:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "944:31:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 35,
                            "name": "computedHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1005:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 36,
                            "name": "proofElement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "1021:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1005:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 59,
                          "nodeType": "Block",
                          "src": "1222:181:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 57,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 49,
                                  "name": "computedHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15,
                                  "src": "1318:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 53,
                                          "name": "proofElement",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 30,
                                          "src": "1360:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 54,
                                          "name": "computedHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 15,
                                          "src": "1374:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 51,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "1343:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 52,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "1343:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 55,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1343:44:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 50,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "1333:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 56,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1333:55:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "1318:70:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 58,
                              "nodeType": "ExpressionStatement",
                              "src": "1318:70:0"
                            }
                          ]
                        },
                        "id": 60,
                        "nodeType": "IfStatement",
                        "src": "1001:402:0",
                        "trueBody": {
                          "id": 48,
                          "nodeType": "Block",
                          "src": "1035:181:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 46,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 38,
                                  "name": "computedHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 15,
                                  "src": "1131:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 42,
                                          "name": "computedHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 15,
                                          "src": "1173:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 43,
                                          "name": "proofElement",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 30,
                                          "src": "1187:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "expression": {
                                          "id": 40,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "1156:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 41,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "1156:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 44,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1156:44:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 39,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "1146:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 45,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1146:55:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "1131:70:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 47,
                              "nodeType": "ExpressionStatement",
                              "src": "1131:70:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 22,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "907:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 23,
                        "name": "proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "911:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "911:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "907:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 62,
                  "initializationExpression": {
                    "assignments": [
                      19
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "900:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "892:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "892:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 21,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 20,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "904:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "892:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 27,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "925:3:0",
                      "subExpression": {
                        "id": 26,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "925:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28,
                    "nodeType": "ExpressionStatement",
                    "src": "925:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "887:526:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63,
                      "name": "computedHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1505:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 64,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "1521:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1505:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13,
                  "id": 66,
                  "nodeType": "Return",
                  "src": "1498:27:0"
                }
              ]
            },
            "documentation": {
              "id": 2,
              "nodeType": "StructuredDocumentation",
              "src": "384:323:0",
              "text": " @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."
            },
            "id": 68,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "721:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "754:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "737:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 3,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "737:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 4,
                    "nodeType": "ArrayTypeName",
                    "src": "737:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "root",
                  "nameLocation": "777:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "769:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "769:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "leaf",
                  "nameLocation": "799:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "791:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "727:82:0"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "833:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "833:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "832:6:0"
            },
            "scope": 69,
            "src": "712:820:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 816,
        "src": "358:1176:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC20",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 136,
        "linearizedBaseContracts": [
          136
        ],
        "name": "IERC20",
        "nameLocation": "1548:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "18160ddd",
            "id": 74,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1570:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1581:2:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74,
                  "src": "1607:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1606:9:0"
            },
            "scope": 136,
            "src": "1561:55:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "70a08231",
            "id": 81,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1630:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1648:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1640:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1639:17:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "1680:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1679:9:0"
            },
            "scope": 136,
            "src": "1621:68:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "a9059cbb",
            "id": 90,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1703:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1720:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "1712:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1712:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1739:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "1731:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1711:35:0"
            },
            "returnParameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 90,
                  "src": "1765:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1765:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1764:6:0"
            },
            "scope": 136,
            "src": "1694:77:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "dd62ed3e",
            "id": 99,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "1785:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 92,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1803:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1795:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 91,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1818:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1810:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1794:32:0"
            },
            "returnParameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 99,
                  "src": "1850:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1849:9:0"
            },
            "scope": 136,
            "src": "1776:83:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "095ea7b3",
            "id": 108,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "1873:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 101,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1889:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "1881:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1906:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "1898:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1898:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1880:33:0"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 108,
                  "src": "1932:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1932:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1931:6:0"
            },
            "scope": 136,
            "src": "1864:74:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "23b872dd",
            "id": 119,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "1952:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1973:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1965:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1989:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1981:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1981:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2008:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "2000:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1964:51:0"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "2034:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 116,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2033:6:0"
            },
            "scope": 136,
            "src": "1943:97:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 127,
            "name": "Transfer",
            "nameLocation": "2056:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2081:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2065:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2065:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2103:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2087:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 125,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2115:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 127,
                  "src": "2107:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2064:57:0"
            },
            "src": "2050:72:0"
          },
          {
            "anonymous": false,
            "id": 135,
            "name": "Approval",
            "nameLocation": "2133:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2158:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2142:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2142:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "2181:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2165:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2165:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 133,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2198:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2190:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2141:63:0"
            },
            "src": "2127:78:0"
          }
        ],
        "scope": 816,
        "src": "1538:669:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ForgeGuess",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 173,
        "linearizedBaseContracts": [
          173
        ],
        "name": "ForgeGuess",
        "nameLocation": "2220:10:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "2302:2:0",
              "statements": []
            },
            "functionSelector": "70a08231",
            "id": 144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2245:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2263:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "2255:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2255:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2254:17:0"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "2293:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2292:9:0"
            },
            "scope": 173,
            "src": "2236:68:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f03d6672",
            "id": 146,
            "mutability": "mutable",
            "name": "unreleased",
            "nameLocation": "2324:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "2309:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 145,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2309:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 148,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "2355:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 173,
            "src": "2340:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 147,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2340:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 155,
              "nodeType": "Block",
              "src": "2438:2:0",
              "statements": []
            },
            "functionSelector": "2ee40908",
            "id": 156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeFor",
            "nameLocation": "2381:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "forWhom",
                  "nameLocation": "2398:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2390:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2390:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 152,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2415:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 156,
                  "src": "2407:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2407:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2389:33:0"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2438:0:0"
            },
            "scope": 173,
            "src": "2372:68:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "2511:2:0",
              "statements": []
            },
            "functionSelector": "441a3e70",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2454:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2471:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2463:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2463:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 160,
                  "mutability": "mutable",
                  "name": "maxLoss",
                  "nameLocation": "2487:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2479:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2479:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2462:33:0"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2511:0:0"
            },
            "scope": 173,
            "src": "2445:68:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "2595:2:0",
              "statements": []
            },
            "functionSelector": "afcf89aa",
            "id": 172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withEstimator",
            "nameLocation": "2532:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "2554:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "2546:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2546:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2545:19:0"
            },
            "returnParameters": {
              "id": 170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "2586:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2586:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2585:9:0"
            },
            "scope": 173,
            "src": "2523:74:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 816,
        "src": "2211:392:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AirdropToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 815,
        "linearizedBaseContracts": [
          815
        ],
        "name": "AirdropToken",
        "nameLocation": "2616:12:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "5b9ea9e5",
            "id": 179,
            "mutability": "mutable",
            "name": "ForgeTokenAddressREAL",
            "nameLocation": "2660:21:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "2645:90:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 174,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2645:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846343466423433303636463745434339313035384533413631344662384131354132373335323736",
                  "id": 177,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2692:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xF44fB43066F7ECC91058E3A614Fb8A15A2735276"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 176,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2684:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 175,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2684:7:0",
                  "typeDescriptions": {}
                }
              },
              "id": 178,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2684:51:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "647e03b7",
            "id": 185,
            "mutability": "mutable",
            "name": "ForgeTokenAddress",
            "nameLocation": "2756:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "2741:86:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 180,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2741:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307862463434393334313566443145373944634461386344306341643745354564363544436537303734",
                  "id": 183,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2784:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xbF4493415fD1E79DcDa8cD0cAd7E5Ed65DCe7074"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 182,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2776:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 181,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2776:7:0",
                  "typeDescriptions": {}
                }
              },
              "id": 184,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2776:51:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "60138460",
            "id": 191,
            "mutability": "mutable",
            "name": "ForgeGuessContractAddress",
            "nameLocation": "2848:25:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "2833:94:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 186,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2833:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307844653235364543353745383634654338343763303330653134633562393741423233334135323145",
                  "id": 189,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2884:42:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xDe256EC57E864eC847c030e14c5b97AB233A521E"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 188,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2876:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 187,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2876:7:0",
                  "typeDescriptions": {}
                }
              },
              "id": 190,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2876:51:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d49b9216",
            "id": 194,
            "mutability": "mutable",
            "name": "_merkleRootAll",
            "nameLocation": "2951:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "2933:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 192,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2933:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 193,
              "nodeType": "ArrayTypeName",
              "src": "2933:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 197,
            "mutability": "mutable",
            "name": "_merkleRootTop",
            "nameLocation": "2988:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "2971:100:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 195,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2971:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307864643832616632626334623732316266643562653038313131643466343232666430376431353738613030373264363730316632366561346666663333383435",
              "id": 196,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3005:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100192038640928002063148272310828067627996455410527015143226000379904206780485_by_1",
                "typeString": "int_const 1001...(70 digits omitted)...0485"
              },
              "value": "0xdd82af2bc4b721bfd5be08111d4f422fd07d1578a0072d6701f26ea4fff33845"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 200,
            "mutability": "mutable",
            "name": "_merkleRootMid",
            "nameLocation": "3094:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "3077:100:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 198,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3077:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307831353839336139623864333633383134396464393436316664653739663538396535363561326663373661383631656331616562623833373336313531353636",
              "id": 199,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3111:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_9741032363074417624774910834101753834832440615676253441853226277437707720038_by_1",
                "typeString": "int_const 9741...(68 digits omitted)...0038"
              },
              "value": "0x15893a9b8d3638149dd9461fde79f589e565a2fc76a861ec1aebb83736151566"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 203,
            "mutability": "mutable",
            "name": "_merkleRootBot",
            "nameLocation": "3200:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "3183:100:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 201,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3183:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307833313662343332336361393162613633333034613465306164613234623039663836383961633166383061636138653964356334323133666339626137383438",
              "id": 202,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3217:66:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_22352845598447740441949270597753764576667759800191410879094984310838034856008_by_1",
                "typeString": "int_const 2235...(69 digits omitted)...6008"
              },
              "value": "0x316b4323ca91ba63304a4e0ada24b09f8689ac1f80aca8e9d5c4213fc9ba7848"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "290812c2",
            "id": 206,
            "mutability": "mutable",
            "name": "amtClaim",
            "nameLocation": "3349:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "3331:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 204,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3331:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 205,
              "nodeType": "ArrayTypeName",
              "src": "3331:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 209,
            "mutability": "mutable",
            "name": "nextTokenId",
            "nameLocation": "3380:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "3363:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 207,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3363:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 208,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3394:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "73b2e80e",
            "id": 213,
            "mutability": "mutable",
            "name": "hasClaimed",
            "nameLocation": "3433:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "3401:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 212,
              "keyType": {
                "id": 210,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3409:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3401:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 211,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3420:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "54fac919",
            "id": 222,
            "mutability": "mutable",
            "name": "decay",
            "nameLocation": "3464:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "3449:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 214,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3449:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              },
              "id": 221,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "id": 219,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "commonType": {
                    "typeIdentifier": "t_rational_1440_by_1",
                    "typeString": "int_const 1440"
                  },
                  "id": 217,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "leftExpression": {
                    "hexValue": "3234",
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3472:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_24_by_1",
                      "typeString": "int_const 24"
                    },
                    "value": "24"
                  },
                  "nodeType": "BinaryOperation",
                  "operator": "*",
                  "rightExpression": {
                    "hexValue": "3630",
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3476:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_60_by_1",
                      "typeString": "int_const 60"
                    },
                    "value": "60"
                  },
                  "src": "3472:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1440_by_1",
                    "typeString": "int_const 1440"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "hexValue": "3630",
                  "id": 218,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3481:2:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_60_by_1",
                    "typeString": "int_const 60"
                  },
                  "value": "60"
                },
                "src": "3472:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3330",
                "id": 220,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3486:2:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_30_by_1",
                  "typeString": "int_const 30"
                },
                "value": "30"
              },
              "src": "3472:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2592000_by_1",
                "typeString": "int_const 2592000"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da58897",
            "id": 226,
            "mutability": "mutable",
            "name": "starttime",
            "nameLocation": "3510:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 815,
            "src": "3495:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 223,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3495:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 224,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -4,
                "src": "3522:5:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 225,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "3522:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "3564:245:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 232,
                        "name": "_merkleRootTop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 197,
                        "src": "3594:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 229,
                        "name": "_merkleRootAll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "3574:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3574:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3574:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "3574:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 238,
                        "name": "_merkleRootMid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "3639:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 235,
                        "name": "_merkleRootAll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "3619:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3619:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3619:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 240,
                  "nodeType": "ExpressionStatement",
                  "src": "3619:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 244,
                        "name": "_merkleRootBot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "3684:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 241,
                        "name": "_merkleRootAll",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 194,
                        "src": "3664:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3664:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3664:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "3664:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030303030303030303030",
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3723:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        },
                        "value": "1000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        }
                      ],
                      "expression": {
                        "id": 247,
                        "name": "amtClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "3709:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3709:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3709:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "3709:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030303030303030",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3761:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000_by_1",
                          "typeString": "int_const 100000000"
                        },
                        "value": "100000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000000_by_1",
                          "typeString": "int_const 100000000"
                        }
                      ],
                      "expression": {
                        "id": 253,
                        "name": "amtClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "3747:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3747:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3747:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "3747:24:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "313030303030",
                        "id": 262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3795:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "expression": {
                        "id": 259,
                        "name": "amtClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 206,
                        "src": "3781:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3781:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3781:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 264,
                  "nodeType": "ExpressionStatement",
                  "src": "3781:21:0"
                }
              ]
            },
            "id": 266,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3560:2:0"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3564:0:0"
            },
            "scope": 815,
            "src": "3549:260:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 387,
              "nodeType": "Block",
              "src": "3876:900:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 273,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "3890:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 284,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4005:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AirdropToken_$815",
                                    "typeString": "contract AirdropToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AirdropToken_$815",
                                    "typeString": "contract AirdropToken"
                                  }
                                ],
                                "id": 283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3997:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 282,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3997:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3997:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 279,
                                  "name": "ForgeGuessContractAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 191,
                                  "src": "3960:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 278,
                                "name": "ForgeGuess",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 173,
                                "src": "3949:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ForgeGuess_$173_$",
                                  "typeString": "type(contract ForgeGuess)"
                                }
                              },
                              "id": 280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3949:37:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeGuess_$173",
                                "typeString": "contract ForgeGuess"
                              }
                            },
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 144,
                            "src": "3949:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3949:62:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 275,
                              "name": "ForgeGuessContractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "3908:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 274,
                            "name": "ForgeGuess",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 173,
                            "src": "3897:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ForgeGuess_$173_$",
                              "typeString": "type(contract ForgeGuess)"
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3897:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ForgeGuess_$173",
                            "typeString": "contract ForgeGuess"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withEstimator",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 172,
                        "src": "3897:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256)"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3897:115:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3890:122:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 383,
                    "nodeType": "Block",
                    "src": "4055:693:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 295,
                                "name": "amt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 268,
                                "src": "4077:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 306,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "4191:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_AirdropToken_$815",
                                              "typeString": "contract AirdropToken"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_AirdropToken_$815",
                                              "typeString": "contract AirdropToken"
                                            }
                                          ],
                                          "id": 305,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4183:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 304,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4183:7:0",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 307,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4183:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 301,
                                            "name": "ForgeGuessContractAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 191,
                                            "src": "4146:25:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 300,
                                          "name": "ForgeGuess",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 173,
                                          "src": "4135:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_ForgeGuess_$173_$",
                                            "typeString": "type(contract ForgeGuess)"
                                          }
                                        },
                                        "id": 302,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4135:37:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ForgeGuess_$173",
                                          "typeString": "contract ForgeGuess"
                                        }
                                      },
                                      "id": 303,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "balanceOf",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 144,
                                      "src": "4135:47:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4135:62:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 297,
                                        "name": "ForgeGuessContractAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 191,
                                        "src": "4094:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 296,
                                      "name": "ForgeGuess",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 173,
                                      "src": "4083:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ForgeGuess_$173_$",
                                        "typeString": "type(contract ForgeGuess)"
                                      }
                                    },
                                    "id": 298,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4083:37:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ForgeGuess_$173",
                                      "typeString": "contract ForgeGuess"
                                    }
                                  },
                                  "id": 299,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "withEstimator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 172,
                                  "src": "4083:51:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view external returns (uint256)"
                                  }
                                },
                                "id": 309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4083:115:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4077:121:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6d7573742062652067726561746572207468616e2070726576696f757320746f74616c20746f207265736574",
                              "id": 311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4200:46:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_307ff9cf3cb440ac89a62a5e4b70b956e3f0184b0c4d4868eb74068e7d70831e",
                                "typeString": "literal_string \"must be greater than previous total to reset\""
                              },
                              "value": "must be greater than previous total to reset"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_307ff9cf3cb440ac89a62a5e4b70b956e3f0184b0c4d4868eb74068e7d70831e",
                                "typeString": "literal_string \"must be greater than previous total to reset\""
                              }
                            ],
                            "id": 294,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4069:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4069:178:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 313,
                        "nodeType": "ExpressionStatement",
                        "src": "4069:178:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 319,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4308:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4308:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 323,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4328:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AirdropToken_$815",
                                        "typeString": "contract AirdropToken"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_AirdropToken_$815",
                                        "typeString": "contract AirdropToken"
                                      }
                                    ],
                                    "id": 322,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4320:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 321,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4320:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 324,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4320:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 325,
                                  "name": "amt",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 268,
                                  "src": "4335:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 316,
                                      "name": "ForgeTokenAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 185,
                                      "src": "4276:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 315,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 136,
                                    "src": "4269:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$136_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4269:25:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$136",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 119,
                                "src": "4269:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4269:70:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "7472616e73666572206661696c",
                              "id": 327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4341:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
                                "typeString": "literal_string \"transfer fail\""
                              },
                              "value": "transfer fail"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
                                "typeString": "literal_string \"transfer fail\""
                              }
                            ],
                            "id": 314,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4261:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4261:96:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 329,
                        "nodeType": "ExpressionStatement",
                        "src": "4261:96:0"
                      },
                      {
                        "expression": {
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 330,
                            "name": "starttime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4371:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 331,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4383:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4383:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4371:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 334,
                        "nodeType": "ExpressionStatement",
                        "src": "4371:27:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 339,
                              "name": "ForgeGuessContractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 191,
                              "src": "4446:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "393939393939393939393939393939393939393939393939393939393939393939393939393939393939393939393939393939",
                              "id": 340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4473:51:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_999999999999999999999999999999999999999999999999999_by_1",
                                "typeString": "int_const 9999...(43 digits omitted)...9999"
                              },
                              "value": "999999999999999999999999999999999999999999999999999"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_999999999999999999999999999999999999999999999999999_by_1",
                                "typeString": "int_const 9999...(43 digits omitted)...9999"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 336,
                                  "name": "ForgeTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 185,
                                  "src": "4419:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 335,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 136,
                                "src": "4412:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$136_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4412:25:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$136",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 108,
                            "src": "4412:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4412:113:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 342,
                        "nodeType": "ExpressionStatement",
                        "src": "4412:113:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 349,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4594:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AirdropToken_$815",
                                    "typeString": "contract AirdropToken"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AirdropToken_$815",
                                    "typeString": "contract AirdropToken"
                                  }
                                ],
                                "id": 348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4586:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 347,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4586:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4586:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 351,
                              "name": "amt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "4601:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 344,
                                  "name": "ForgeGuessContractAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 191,
                                  "src": "4550:25:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 343,
                                "name": "ForgeGuess",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 173,
                                "src": "4539:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ForgeGuess_$173_$",
                                  "typeString": "type(contract ForgeGuess)"
                                }
                              },
                              "id": 345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4539:37:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ForgeGuess_$173",
                                "typeString": "contract ForgeGuess"
                              }
                            },
                            "id": 346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "stakeFor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 156,
                            "src": "4539:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4539:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 353,
                        "nodeType": "ExpressionStatement",
                        "src": "4539:66:0"
                      },
                      {
                        "assignments": [
                          355
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 355,
                            "mutability": "mutable",
                            "name": "x",
                            "nameLocation": "4624:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 383,
                            "src": "4619:6:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 354,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4619:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 358,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 356,
                            "name": "perfect",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 479,
                            "src": "4628:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4628:9:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4619:18:0"
                      },
                      {
                        "expression": {
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 359,
                              "name": "amtClaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "4651:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 361,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4660:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4651:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 362,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "4665:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4669:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "4665:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4651:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 366,
                        "nodeType": "ExpressionStatement",
                        "src": "4651:20:0"
                      },
                      {
                        "expression": {
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 367,
                              "name": "amtClaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "4685:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 369,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4694:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4685:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 370,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "4699:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "33",
                              "id": 371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4703:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3_by_1",
                                "typeString": "int_const 3"
                              },
                              "value": "3"
                            },
                            "src": "4699:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4685:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 374,
                        "nodeType": "ExpressionStatement",
                        "src": "4685:19:0"
                      },
                      {
                        "expression": {
                          "id": 381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 375,
                              "name": "amtClaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "4718:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 377,
                            "indexExpression": {
                              "hexValue": "32",
                              "id": 376,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4727:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4718:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 378,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "4732:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4736:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4732:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4718:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 382,
                        "nodeType": "ExpressionStatement",
                        "src": "4718:19:0"
                      }
                    ]
                  },
                  "id": 384,
                  "nodeType": "IfStatement",
                  "src": "3887:861:0",
                  "trueBody": {
                    "id": 293,
                    "nodeType": "Block",
                    "src": "4013:38:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 290,
                              "name": "amt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "4036:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 289,
                            "name": "Donation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "4027:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) returns (bool)"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4027:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 292,
                        "nodeType": "ExpressionStatement",
                        "src": "4027:13:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4765:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 272,
                  "id": 386,
                  "nodeType": "Return",
                  "src": "4758:11:0"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 388,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "3829:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "amt",
                  "nameLocation": "3842:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "3837:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3837:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3836:10:0"
            },
            "returnParameters": {
              "id": 272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 271,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "3868:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "3863:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3863:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3862:14:0"
            },
            "scope": 815,
            "src": "3820:956:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 432,
              "nodeType": "Block",
              "src": "4840:334:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 400,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4898:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4898:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 404,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4918:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AirdropToken_$815",
                                  "typeString": "contract AirdropToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AirdropToken_$815",
                                  "typeString": "contract AirdropToken"
                                }
                              ],
                              "id": 403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4910:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 402,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4910:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4910:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 406,
                            "name": "amt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "4925:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 397,
                                "name": "ForgeTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 185,
                                "src": "4866:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 396,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136,
                              "src": "4859:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$136_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4859:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$136",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 119,
                          "src": "4859:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4859:70:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c",
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4931:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
                          "typeString": "literal_string \"transfer fail\""
                        },
                        "value": "transfer fail"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d35fe8e3e3a4ab0323fd2dca45db261fa8c7ab4a56fb233745bca451cc78f27a",
                          "typeString": "literal_string \"transfer fail\""
                        }
                      ],
                      "id": 395,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4851:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4851:96:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 410,
                  "nodeType": "ExpressionStatement",
                  "src": "4851:96:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 415,
                        "name": "ForgeGuessContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 191,
                        "src": "4991:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "393939393939393939393939393939393939393939393939393939393939393939393939393939393939393939393939393939",
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5018:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_999999999999999999999999999999999999999999999999999_by_1",
                          "typeString": "int_const 9999...(43 digits omitted)...9999"
                        },
                        "value": "999999999999999999999999999999999999999999999999999"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_999999999999999999999999999999999999999999999999999_by_1",
                          "typeString": "int_const 9999...(43 digits omitted)...9999"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 412,
                            "name": "ForgeTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "4964:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 411,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "4957:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$136_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4957:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 108,
                      "src": "4957:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4957:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "4957:113:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 425,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5135:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AirdropToken_$815",
                              "typeString": "contract AirdropToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AirdropToken_$815",
                              "typeString": "contract AirdropToken"
                            }
                          ],
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5127:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 423,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5127:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5127:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 427,
                        "name": "amt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 390,
                        "src": "5142:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 420,
                            "name": "ForgeGuessContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "5091:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 419,
                          "name": "ForgeGuess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 173,
                          "src": "5080:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ForgeGuess_$173_$",
                            "typeString": "type(contract ForgeGuess)"
                          }
                        },
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5080:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForgeGuess_$173",
                          "typeString": "contract ForgeGuess"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stakeFor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 156,
                      "src": "5080:46:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5080:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "5080:66:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5163:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 394,
                  "id": 431,
                  "nodeType": "Return",
                  "src": "5156:11:0"
                }
              ]
            },
            "functionSelector": "4ad6d3cd",
            "id": 433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Donation",
            "nameLocation": "4792:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 390,
                  "mutability": "mutable",
                  "name": "amt",
                  "nameLocation": "4806:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "4801:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 389,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4801:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4800:10:0"
            },
            "returnParameters": {
              "id": 394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 393,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "4832:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "4827:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 392,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4827:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4826:14:0"
            },
            "scope": 815,
            "src": "4783:391:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 478,
              "nodeType": "Block",
              "src": "5234:280:0",
              "statements": [
                {
                  "assignments": [
                    439
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 439,
                      "mutability": "mutable",
                      "name": "test",
                      "nameLocation": "5261:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 478,
                      "src": "5253:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 438,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5253:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 475,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000000"
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "id": 444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5269:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 441,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5274:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5280:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "5274:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "5269:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 445,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5285:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "5269:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000000"
                          }
                        }
                      ],
                      "id": 447,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5268:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000000000000000_by_1",
                        "typeString": "int_const 10000000000000000000000"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "393735",
                                  "id": 448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5295:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_975_by_1",
                                    "typeString": "int_const 975"
                                  },
                                  "value": "975"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 463,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "id": 456,
                                            "name": "ForgeGuessContractAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 191,
                                            "src": "5347:25:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 452,
                                                    "name": "ForgeTokenAddress",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 185,
                                                    "src": "5317:17:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "id": 451,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "5309:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 450,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "5309:7:0",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 453,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "5309:26:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 449,
                                              "name": "IERC20",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 136,
                                              "src": "5302:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_IERC20_$136_$",
                                                "typeString": "type(contract IERC20)"
                                              }
                                            },
                                            "id": 454,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5302:34:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_IERC20_$136",
                                              "typeString": "contract IERC20"
                                            }
                                          },
                                          "id": 455,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 81,
                                          "src": "5302:44:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 457,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5302:71:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "arguments": [
                                              {
                                                "id": 459,
                                                "name": "ForgeGuessContractAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 191,
                                                "src": "5387:25:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "id": 458,
                                              "name": "ForgeGuess",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 173,
                                              "src": "5376:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_ForgeGuess_$173_$",
                                                "typeString": "type(contract ForgeGuess)"
                                              }
                                            },
                                            "id": 460,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "5376:37:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_ForgeGuess_$173",
                                              "typeString": "contract ForgeGuess"
                                            }
                                          },
                                          "id": 461,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "unreleased",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 146,
                                          "src": "5376:48:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                            "typeString": "function () view external returns (uint256)"
                                          }
                                        },
                                        "id": 462,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5376:50:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5302:124:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 464,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5301:127:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5295:133:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 467,
                                        "name": "ForgeGuessContractAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 191,
                                        "src": "5442:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 466,
                                      "name": "ForgeGuess",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 173,
                                      "src": "5431:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ForgeGuess_$173_$",
                                        "typeString": "type(contract ForgeGuess)"
                                      }
                                    },
                                    "id": 468,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5431:37:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ForgeGuess_$173",
                                      "typeString": "contract ForgeGuess"
                                    }
                                  },
                                  "id": 469,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 148,
                                  "src": "5431:49:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                    "typeString": "function () view external returns (uint256)"
                                  }
                                },
                                "id": 470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5431:51:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5295:187:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 472,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5294:189:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 473,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5293:191:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5268:216:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5253:231:0"
                },
                {
                  "expression": {
                    "id": 476,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 439,
                    "src": "5503:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 437,
                  "id": 477,
                  "nodeType": "Return",
                  "src": "5496:11:0"
                }
              ]
            },
            "functionSelector": "8912ed0b",
            "id": 479,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "perfect",
            "nameLocation": "5190:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5197:2:0"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "amtz",
                  "nameLocation": "5229:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 479,
                  "src": "5221:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5221:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5220:14:0"
            },
            "scope": 815,
            "src": "5181:333:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 495,
              "nodeType": "Block",
              "src": "5598:95:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 491,
                            "name": "choice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "5678:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 490,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 564,
                          "src": "5668:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5668:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 487,
                            "name": "ForgeGuessContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "5627:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 486,
                          "name": "ForgeGuess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 173,
                          "src": "5616:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ForgeGuess_$173_$",
                            "typeString": "type(contract ForgeGuess)"
                          }
                        },
                        "id": 488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5616:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForgeGuess_$173",
                          "typeString": "contract ForgeGuess"
                        }
                      },
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withEstimator",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 172,
                      "src": "5616:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view external returns (uint256)"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5616:70:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 485,
                  "id": 494,
                  "nodeType": "Return",
                  "src": "5609:77:0"
                }
              ]
            },
            "functionSelector": "2d8590c7",
            "id": 496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "amtOutForChoiceInForge",
            "nameLocation": "5529:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 481,
                  "mutability": "mutable",
                  "name": "choice",
                  "nameLocation": "5557:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "5552:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 480,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5552:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5551:13:0"
            },
            "returnParameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "out",
                  "nameLocation": "5594:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 496,
                  "src": "5586:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5586:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5585:13:0"
            },
            "scope": 815,
            "src": "5520:173:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "5764:389:0",
              "statements": [
                {
                  "assignments": [
                    504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 504,
                      "mutability": "mutable",
                      "name": "durdur",
                      "nameLocation": "5782:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 563,
                      "src": "5774:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 503,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5774:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 509,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 505,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5791:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "5791:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 507,
                      "name": "starttime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 226,
                      "src": "5809:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5791:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5774:44:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 510,
                      "name": "durdur",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 504,
                      "src": "5831:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 511,
                      "name": "decay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "5840:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5831:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 518,
                  "nodeType": "IfStatement",
                  "src": "5828:57:0",
                  "trueBody": {
                    "id": 517,
                    "nodeType": "Block",
                    "src": "5846:39:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 513,
                            "name": "durdur",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 504,
                            "src": "5860:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 514,
                            "name": "decay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "5869:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5860:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 516,
                        "nodeType": "ExpressionStatement",
                        "src": "5860:14:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 519,
                      "name": "choice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 498,
                      "src": "5897:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5907:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5897:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 532,
                        "name": "choice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 498,
                        "src": "5978:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5987:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5978:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 545,
                          "name": "choice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 498,
                          "src": "6058:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6067:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6058:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 558,
                      "nodeType": "IfStatement",
                      "src": "6055:75:0",
                      "trueBody": {
                        "id": 557,
                        "nodeType": "Block",
                        "src": "6069:61:0",
                        "statements": [
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 552,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 548,
                                        "name": "amtClaim",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 206,
                                        "src": "6090:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                          "typeString": "uint256[] storage ref"
                                        }
                                      },
                                      "id": 550,
                                      "indexExpression": {
                                        "hexValue": "32",
                                        "id": 549,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6099:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_2_by_1",
                                          "typeString": "int_const 2"
                                        },
                                        "value": "2"
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6090:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 551,
                                      "name": "durdur",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 504,
                                      "src": "6104:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6090:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 553,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6089:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 554,
                                "name": "decay",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "6114:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6089:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 502,
                            "id": 556,
                            "nodeType": "Return",
                            "src": "6082:37:0"
                          }
                        ]
                      }
                    },
                    "id": 559,
                    "nodeType": "IfStatement",
                    "src": "5975:155:0",
                    "trueBody": {
                      "id": 544,
                      "nodeType": "Block",
                      "src": "5989:61:0",
                      "statements": [
                        {
                          "expression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 539,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 535,
                                      "name": "amtClaim",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 206,
                                      "src": "6010:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 537,
                                    "indexExpression": {
                                      "hexValue": "31",
                                      "id": 536,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6019:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6010:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 538,
                                    "name": "durdur",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 504,
                                    "src": "6024:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6010:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 540,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6009:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 541,
                              "name": "decay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 222,
                              "src": "6034:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6009:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 502,
                          "id": 543,
                          "nodeType": "Return",
                          "src": "6002:37:0"
                        }
                      ]
                    }
                  },
                  "id": 560,
                  "nodeType": "IfStatement",
                  "src": "5894:236:0",
                  "trueBody": {
                    "id": 531,
                    "nodeType": "Block",
                    "src": "5909:61:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 526,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 522,
                                    "name": "amtClaim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 206,
                                    "src": "5930:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 524,
                                  "indexExpression": {
                                    "hexValue": "30",
                                    "id": 523,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5939:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5930:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 525,
                                  "name": "durdur",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 504,
                                  "src": "5944:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5930:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 527,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5929:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 528,
                            "name": "decay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "5954:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5929:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 502,
                        "id": 530,
                        "nodeType": "Return",
                        "src": "5922:37:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6146:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 502,
                  "id": 562,
                  "nodeType": "Return",
                  "src": "6139:8:0"
                }
              ]
            },
            "functionSelector": "75fe9fba",
            "id": 564,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "amountOut",
            "nameLocation": "5708:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 498,
                  "mutability": "mutable",
                  "name": "choice",
                  "nameLocation": "5723:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "5718:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 497,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5718:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5717:13:0"
            },
            "returnParameters": {
              "id": 502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 501,
                  "mutability": "mutable",
                  "name": "out",
                  "nameLocation": "5760:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 564,
                  "src": "5752:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5752:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5751:13:0"
            },
            "scope": 815,
            "src": "5699:454:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 614,
              "nodeType": "Block",
              "src": "6226:337:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 573,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 567,
                            "src": "6278:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "id": 574,
                            "name": "_merkleRootTop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 197,
                            "src": "6291:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 578,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6335:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 579,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6335:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 576,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6318:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 577,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "6318:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6318:28:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 575,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "6307:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6307:40:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 571,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "6259:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$69_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68,
                          "src": "6259:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6259:90:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f6f66206661696c757265",
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6352:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378191bf8a12e9d7314877f6fa10917c7688a2ea0e5692dcfbbbd15a171122d5",
                          "typeString": "literal_string \"proof failure\""
                        },
                        "value": "proof failure"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378191bf8a12e9d7314877f6fa10917c7688a2ea0e5692dcfbbbd15a171122d5",
                          "typeString": "literal_string \"proof failure\""
                        }
                      ],
                      "id": 570,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6250:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6250:118:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "6250:118:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 587,
                            "name": "hasClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "6387:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 590,
                          "indexExpression": {
                            "expression": {
                              "id": 588,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6398:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6398:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6387:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6413:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "6387:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920636c61696d6564",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6420:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        },
                        "value": "already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        }
                      ],
                      "id": 586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6379:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6379:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "6379:59:0"
                },
                {
                  "expression": {
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 596,
                        "name": "hasClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "6449:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 599,
                      "indexExpression": {
                        "expression": {
                          "id": 597,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6460:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6460:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6449:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6472:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6449:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 602,
                  "nodeType": "ExpressionStatement",
                  "src": "6449:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 607,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6530:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6530:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6553:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 609,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 564,
                          "src": "6543:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6543:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 604,
                            "name": "ForgeTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "6502:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 603,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "6495:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$136_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6495:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90,
                      "src": "6495:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6495:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 613,
                  "nodeType": "ExpressionStatement",
                  "src": "6495:61:0"
                }
              ]
            },
            "functionSelector": "f14ddabf",
            "id": 615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithProofTop",
            "nameLocation": "6171:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 567,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "6205:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 615,
                  "src": "6188:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 565,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6188:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 566,
                    "nodeType": "ArrayTypeName",
                    "src": "6188:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6187:31:0"
            },
            "returnParameters": {
              "id": 569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6226:0:0"
            },
            "scope": 815,
            "src": "6162:401:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 665,
              "nodeType": "Block",
              "src": "6637:325:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 624,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 618,
                            "src": "6677:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "id": 625,
                            "name": "_merkleRootMid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "6690:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 629,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "6734:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 630,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "6734:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 627,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "6717:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "6717:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6717:28:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 626,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "6706:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6706:40:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 622,
                            "name": "MerkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69,
                            "src": "6658:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MerkleProof_$69_$",
                              "typeString": "type(library MerkleProof)"
                            }
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verify",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68,
                          "src": "6658:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6658:90:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f6f66206661696c757265",
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6751:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378191bf8a12e9d7314877f6fa10917c7688a2ea0e5692dcfbbbd15a171122d5",
                          "typeString": "literal_string \"proof failure\""
                        },
                        "value": "proof failure"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378191bf8a12e9d7314877f6fa10917c7688a2ea0e5692dcfbbbd15a171122d5",
                          "typeString": "literal_string \"proof failure\""
                        }
                      ],
                      "id": 621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6649:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6649:118:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "6649:118:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 638,
                            "name": "hasClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "6786:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 641,
                          "indexExpression": {
                            "expression": {
                              "id": 639,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6797:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6797:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6786:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6812:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "6786:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920636c61696d6564",
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6819:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        },
                        "value": "already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        }
                      ],
                      "id": 637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6778:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6778:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "6778:59:0"
                },
                {
                  "expression": {
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 647,
                        "name": "hasClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "6848:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 650,
                      "indexExpression": {
                        "expression": {
                          "id": 648,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6859:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6859:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6848:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6871:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6848:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 653,
                  "nodeType": "ExpressionStatement",
                  "src": "6848:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 658,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6929:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6929:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6952:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 660,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 564,
                          "src": "6942:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6942:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 655,
                            "name": "ForgeTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 185,
                            "src": "6901:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 654,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 136,
                          "src": "6894:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$136_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6894:25:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$136",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90,
                      "src": "6894:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6894:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 664,
                  "nodeType": "ExpressionStatement",
                  "src": "6894:61:0"
                }
              ]
            },
            "functionSelector": "75c53c04",
            "id": 666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithProofMid",
            "nameLocation": "6582:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 618,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "6616:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 666,
                  "src": "6599:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 616,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6599:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 617,
                    "nodeType": "ArrayTypeName",
                    "src": "6599:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6598:31:0"
            },
            "returnParameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6637:0:0"
            },
            "scope": 815,
            "src": "6573:389:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 733,
              "nodeType": "Block",
              "src": "7097:435:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 678,
                            "name": "merkleProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 669,
                            "src": "7125:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 679,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7138:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7138:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 681,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "7150:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 677,
                          "name": "verify",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 806,
                          "src": "7118:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (bytes32[] memory,address,uint256) view returns (bool)"
                          }
                        },
                        "id": 682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7118:38:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f6f66206661696c757265",
                        "id": 683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7160:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378191bf8a12e9d7314877f6fa10917c7688a2ea0e5692dcfbbbd15a171122d5",
                          "typeString": "literal_string \"proof failure\""
                        },
                        "value": "proof failure"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378191bf8a12e9d7314877f6fa10917c7688a2ea0e5692dcfbbbd15a171122d5",
                          "typeString": "literal_string \"proof failure\""
                        }
                      ],
                      "id": 676,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7109:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7109:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 685,
                  "nodeType": "ExpressionStatement",
                  "src": "7109:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 687,
                            "name": "hasClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "7195:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 690,
                          "indexExpression": {
                            "expression": {
                              "id": 688,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7206:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7206:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7195:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7221:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "7195:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616c726561647920636c61696d6564",
                        "id": 693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7228:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        },
                        "value": "already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ab08c51d3c5f6dce9e2f229c8cce621755785a49ae5048c5948e3805dfc55b",
                          "typeString": "literal_string \"already claimed\""
                        }
                      ],
                      "id": 686,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7187:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7187:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "7187:59:0"
                },
                {
                  "expression": {
                    "id": 701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 696,
                        "name": "hasClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "7257:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 699,
                      "indexExpression": {
                        "expression": {
                          "id": 697,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7268:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7268:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7257:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7280:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7257:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 702,
                  "nodeType": "ExpressionStatement",
                  "src": "7257:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 708,
                            "name": "claim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "7360:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 707,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 564,
                          "src": "7350:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7350:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 710,
                        "name": "maxLoss",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 673,
                        "src": "7368:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 704,
                            "name": "ForgeGuessContractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 191,
                            "src": "7314:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 703,
                          "name": "ForgeGuess",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 173,
                          "src": "7303:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ForgeGuess_$173_$",
                            "typeString": "type(contract ForgeGuess)"
                          }
                        },
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7303:37:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ForgeGuess_$173",
                          "typeString": "contract ForgeGuess"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 164,
                      "src": "7303:46:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7303:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 712,
                  "nodeType": "ExpressionStatement",
                  "src": "7303:73:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 718,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7429:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7429:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 726,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "7485:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AirdropToken_$815",
                                      "typeString": "contract AirdropToken"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_AirdropToken_$815",
                                      "typeString": "contract AirdropToken"
                                    }
                                  ],
                                  "id": 725,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7477:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 724,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7477:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 727,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7477:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 721,
                                    "name": "ForgeTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 185,
                                    "src": "7448:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 720,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 136,
                                  "src": "7441:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$136_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7441:25:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$136",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 81,
                              "src": "7441:35:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7441:50:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 715,
                                "name": "ForgeTokenAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 185,
                                "src": "7401:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 714,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 136,
                              "src": "7394:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$136_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7394:25:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$136",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 90,
                          "src": "7394:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7394:98:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "636f6e7472616374206d6179206265206f7574206f662066756e6473",
                        "id": 730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7494:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0c0645f299dcc01be5825c8d58ff739e41f41c9dfd5caa64f7b662919572172c",
                          "typeString": "literal_string \"contract may be out of funds\""
                        },
                        "value": "contract may be out of funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0c0645f299dcc01be5825c8d58ff739e41f41c9dfd5caa64f7b662919572172c",
                          "typeString": "literal_string \"contract may be out of funds\""
                        }
                      ],
                      "id": 713,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7386:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7386:139:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 732,
                  "nodeType": "ExpressionStatement",
                  "src": "7386:139:0"
                }
              ]
            },
            "functionSelector": "f5f21aca",
            "id": 734,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintWithProofALL",
            "nameLocation": "7016:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "7050:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 734,
                  "src": "7033:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 667,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7033:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 668,
                    "nodeType": "ArrayTypeName",
                    "src": "7033:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 671,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "7068:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 734,
                  "src": "7063:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 670,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7063:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 673,
                  "mutability": "mutable",
                  "name": "maxLoss",
                  "nameLocation": "7080:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 734,
                  "src": "7075:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 672,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7075:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7032:57:0"
            },
            "returnParameters": {
              "id": 675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7097:0:0"
            },
            "scope": 815,
            "src": "7007:525:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 805,
              "nodeType": "Block",
              "src": "7661:432:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 746,
                      "name": "claim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 741,
                      "src": "7670:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7679:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7670:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 764,
                        "name": "claim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "7807:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7815:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "7807:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 782,
                          "name": "claim",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 741,
                          "src": "7940:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7949:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "7940:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 800,
                      "nodeType": "IfStatement",
                      "src": "7937:132:0",
                      "trueBody": {
                        "id": 799,
                        "nodeType": "Block",
                        "src": "7951:118:0",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 787,
                                  "name": "merkleProof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 737,
                                  "src": "7992:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                },
                                {
                                  "baseExpression": {
                                    "id": 788,
                                    "name": "_merkleRootAll",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 194,
                                    "src": "8005:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                      "typeString": "bytes32[] storage ref"
                                    }
                                  },
                                  "id": 790,
                                  "indexExpression": {
                                    "hexValue": "32",
                                    "id": 789,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8020:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "8005:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 794,
                                          "name": "claimer",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 739,
                                          "src": "8052:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 792,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "8035:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 793,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "8035:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 795,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8035:25:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 791,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "8024:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 796,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8024:37:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 785,
                                  "name": "MerkleProof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69,
                                  "src": "7973:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_MerkleProof_$69_$",
                                    "typeString": "type(library MerkleProof)"
                                  }
                                },
                                "id": 786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "verify",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 68,
                                "src": "7973:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                                  "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                                }
                              },
                              "id": 797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7973:89:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "functionReturnParameters": 745,
                            "id": 798,
                            "nodeType": "Return",
                            "src": "7966:96:0"
                          }
                        ]
                      }
                    },
                    "id": 801,
                    "nodeType": "IfStatement",
                    "src": "7804:265:0",
                    "trueBody": {
                      "id": 781,
                      "nodeType": "Block",
                      "src": "7818:114:0",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 769,
                                "name": "merkleProof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 737,
                                "src": "7855:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 770,
                                  "name": "_merkleRootAll",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 194,
                                  "src": "7868:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                    "typeString": "bytes32[] storage ref"
                                  }
                                },
                                "id": 772,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 771,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7883:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7868:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 776,
                                        "name": "claimer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 739,
                                        "src": "7915:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 774,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "7898:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 775,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "7898:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 777,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7898:25:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 773,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "7887:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7887:37:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                  "typeString": "bytes32[] memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 767,
                                "name": "MerkleProof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69,
                                "src": "7836:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MerkleProof_$69_$",
                                  "typeString": "type(library MerkleProof)"
                                }
                              },
                              "id": 768,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "verify",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 68,
                              "src": "7836:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                                "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                              }
                            },
                            "id": 779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7836:89:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "functionReturnParameters": 745,
                          "id": 780,
                          "nodeType": "Return",
                          "src": "7829:96:0"
                        }
                      ]
                    }
                  },
                  "id": 802,
                  "nodeType": "IfStatement",
                  "src": "7667:402:0",
                  "trueBody": {
                    "id": 763,
                    "nodeType": "Block",
                    "src": "7681:118:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 751,
                              "name": "merkleProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 737,
                              "src": "7722:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 752,
                                "name": "_merkleRootAll",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 194,
                                "src": "7735:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                  "typeString": "bytes32[] storage ref"
                                }
                              },
                              "id": 754,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 753,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7750:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7735:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 758,
                                      "name": "claimer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 739,
                                      "src": "7782:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 756,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "7765:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 757,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "7765:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 759,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7765:25:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 755,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "7754:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7754:37:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 749,
                              "name": "MerkleProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "7703:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MerkleProof_$69_$",
                                "typeString": "type(library MerkleProof)"
                              }
                            },
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 68,
                            "src": "7703:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                              "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                            }
                          },
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7703:89:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 745,
                        "id": 762,
                        "nodeType": "Return",
                        "src": "7696:96:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8081:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 745,
                  "id": 804,
                  "nodeType": "Return",
                  "src": "8074:12:0"
                }
              ]
            },
            "functionSelector": "04b38ce0",
            "id": 806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "7566:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "merkleProof",
                  "nameLocation": "7590:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "7573:28:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 735,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7573:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 736,
                    "nodeType": "ArrayTypeName",
                    "src": "7573:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "7611:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "7603:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7603:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "claim",
                  "nameLocation": "7625:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "7620:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7620:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7572:59:0"
            },
            "returnParameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "ver",
                  "nameLocation": "7657:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 806,
                  "src": "7652:8:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7652:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7651:10:0"
            },
            "scope": 815,
            "src": "7557:536:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 813,
              "nodeType": "Block",
              "src": "8158:26:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "33",
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8176:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "functionReturnParameters": 810,
                  "id": 812,
                  "nodeType": "Return",
                  "src": "8169:8:0"
                }
              ]
            },
            "functionSelector": "0e2f5fb3",
            "id": 814,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getThree",
            "nameLocation": "8117:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8125:2:0"
            },
            "returnParameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 809,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 814,
                  "src": "8149:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8149:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8148:9:0"
            },
            "scope": 815,
            "src": "8108:76:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 816,
        "src": "2607:5585:0",
        "usedErrors": []
      }
    ],
    "src": "333:7861:0"
  },
  "bytecode": "6080604052600080546001600160a01b031990811673f44fb43066f7ecc91058e3a614fb8a15a273527617825560018054821673bf4493415fd1e79dcda8cd0cad7e5ed65dce70741790556002805490911673de256ec57e864ec847c030e14c5b97ab233a521e1790557fdd82af2bc4b721bfd5be08111d4f422fd07d1578a0072d6701f26ea4fff338456004557f15893a9b8d3638149dd9461fde79f589e565a2fc76a861ec1aebb837361515666005557f316b4323ca91ba63304a4e0ada24b09f8689ac1f80aca8e9d5c4213fc9ba784860065560085562278d00600a5542600b553480156100ef57600080fd5b5060045460038054600181810183557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91820193909355600554825480850184558201556006548254808501909355910155600780548083018255600082905264e8d4a510007fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68891820155815480840183556305f5e100908201558154928301909155620186a091015561142e806101a86000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806373b2e80e116100a25780638da58897116100715780638da588971461023a578063b6b55f2514610243578063d49b921614610256578063f14ddabf14610269578063f5f21aca1461027c57600080fd5b806373b2e80e146101e757806375c53c041461020a57806375fe9fba1461021f5780638912ed0b1461023257600080fd5b80634ad6d3cd116100e95780634ad6d3cd1461017a57806354fac9191461018d5780635b9ea9e51461019657806360138460146101c1578063647e03b7146101d457600080fd5b806304b38ce01461011b5780630e2f5fb314610143578063290812c2146101545780632d8590c714610167575b600080fd5b61012e6101293660046111b8565b61028f565b60405190151581526020015b60405180910390f35b60035b60405190815260200161013a565b61014661016236600461120f565b61034c565b61014661017536600461120f565b61036d565b61012e61018836600461120f565b6103ef565b610146600a5481565b6000546101a9906001600160a01b031681565b6040516001600160a01b03909116815260200161013a565b6002546101a9906001600160a01b031681565b6001546101a9906001600160a01b031681565b61012e6101f5366004611228565b60096020526000908152604090205460ff1681565b61021d610218366004611243565b6105a7565b005b61014661022d36600461120f565b6106c5565b61014661076e565b610146600b5481565b61012e61025136600461120f565b610903565b61014661026436600461120f565b610d67565b61021d610277366004611243565b610d77565b61021d61028a366004611280565b610e22565b6000816102ff576102f88460036000815481106102ae576102ae6112ce565b9060005260206000200154856040516020016102dd919060609190911b6001600160601b031916815260140190565b6040516020818303038152906040528051906020012061103c565b9050610345565b8160011415610320576102f88460036001815481106102ae576102ae6112ce565b8160021415610341576102f88460036002815481106102ae576102ae6112ce565b5060005b9392505050565b6007818154811061035c57600080fd5b600091825260209091200154905081565b6002546000906001600160a01b031663afcf89aa61038a846106c5565b6040518263ffffffff1660e01b81526004016103a891815260200190565b602060405180830381865afa1580156103c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e991906112e4565b92915050565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526000916001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610447573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046b91906112fd565b6104ac5760405162461bcd60e51b815260206004820152600d60248201526c1d1c985b9cd9995c8819985a5b609a1b60448201526064015b60405180910390fd5b60015460025460405163095ea7b360e01b81526001600160a01b0391821660048201527502ac3a4edbbfb8014e3ba83411e915e7ffffffffffff602482015291169063095ea7b3906044016020604051808303816000875af1158015610516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053a91906112fd565b506002546040516305dc812160e31b8152306004820152602481018490526001600160a01b0390911690632ee4090890604401600060405180830381600087803b15801561058757600080fd5b505af115801561059b573d6000803e3d6000fd5b50600195945050505050565b6005546040516001600160601b03193360601b1660208201526105ce9183916034016102dd565b6105ea5760405162461bcd60e51b81526004016104a39061131f565b3360009081526009602052604090205460ff161561061a5760405162461bcd60e51b81526004016104a390611346565b336000818152600960205260409020805460ff19166001908117909155546001600160a01b03169063a9059cbb9061065260026106c5565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561069d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c191906112fd565b5050565b600080600b54426106d69190611385565b9050600a548111156106e75750600a545b8261072357600a54816007600081548110610704576107046112ce565b9060005260206000200154610719919061139c565b61034591906113bb565b826001141561074457600a54816007600181548110610704576107046112ce565b826002141561076557600a54816007600281548110610704576107046112ce565b50600092915050565b600080600260009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e891906112e4565b600260009054906101000a90046001600160a01b03166001600160a01b031663f03d66726040518163ffffffff1660e01b8152600401602060405180830381865afa15801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f91906112e4565b6001546002546040516370a0823160e01b81526001600160a01b0391821660048201529116906370a0823190602401602060405180830381865afa1580156108ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108cf91906112e4565b6108d99190611385565b6108e5906103cf61139c565b6108ef91906113bb565b6103e99069021e19e0c9bab24000006113bb565b6002546040516370a0823160e01b81523060048201526000916001600160a01b03169063afcf89aa9082906370a0823190602401602060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097891906112e4565b6040518263ffffffff1660e01b815260040161099691815260200190565b602060405180830381865afa1580156109b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d791906112e4565b82116109ec576109e6826103ef565b50610d5f565b6002546040516370a0823160e01b81523060048201526001600160a01b039091169063afcf89aa9082906370a0823190602401602060405180830381865afa158015610a3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6091906112e4565b6040518263ffffffff1660e01b8152600401610a7e91815260200190565b602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf91906112e4565b8211610b225760405162461bcd60e51b815260206004820152602c60248201527f6d7573742062652067726561746572207468616e2070726576696f757320746f60448201526b1d185b081d1bc81c995cd95d60a21b60648201526084016104a3565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9d91906112fd565b610bd95760405162461bcd60e51b815260206004820152600d60248201526c1d1c985b9cd9995c8819985a5b609a1b60448201526064016104a3565b42600b5560015460025460405163095ea7b360e01b81526001600160a01b0391821660048201527502ac3a4edbbfb8014e3ba83411e915e7ffffffffffff602482015291169063095ea7b3906044016020604051808303816000875af1158015610c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6b91906112fd565b506002546040516305dc812160e31b8152306004820152602481018490526001600160a01b0390911690632ee4090890604401600060405180830381600087803b158015610cb857600080fd5b505af1158015610ccc573d6000803e3d6000fd5b505050506000610cda61076e565b9050610ce781600a61139c565b6007600081548110610cfb57610cfb6112ce565b600091825260209091200155610d1281600361139c565b6007600181548110610d2657610d266112ce565b600091825260209091200155610d3d81600161139c565b6007600281548110610d5157610d516112ce565b600091825260209091200155505b506001919050565b6003818154811061035c57600080fd5b6004546040516001600160601b03193360601b166020820152610d9e9183916034016102dd565b610dba5760405162461bcd60e51b81526004016104a39061131f565b3360009081526009602052604090205460ff1615610dea5760405162461bcd60e51b81526004016104a390611346565b336000818152600960205260409020805460ff1916600190811790915580546001600160a01b03169163a9059cbb91610652906106c5565b610e2d83338461028f565b610e495760405162461bcd60e51b81526004016104a39061131f565b3360009081526009602052604090205460ff1615610e795760405162461bcd60e51b81526004016104a390611346565b336000908152600960205260409020805460ff191660011790556002546001600160a01b031663441a3e70610ead846106c5565b836040518363ffffffff1660e01b8152600401610ed4929190918252602082015260400190565b600060405180830381600087803b158015610eee57600080fd5b505af1158015610f02573d6000803e3d6000fd5b50506001546040516370a0823160e01b81523060048201526001600160a01b03909116925063a9059cbb9150339083906370a0823190602401602060405180830381865afa158015610f58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7c91906112e4565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610fc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610feb91906112fd565b6110375760405162461bcd60e51b815260206004820152601c60248201527f636f6e7472616374206d6179206265206f7574206f662066756e64730000000060448201526064016104a3565b505050565b600081815b85518110156110e057600086828151811061105e5761105e6112ce565b602002602001015190508083116110a05760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506110cd565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b50806110d8816113dd565b915050611041565b509092149392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261111257600080fd5b8135602067ffffffffffffffff8083111561112f5761112f6110eb565b8260051b604051601f19603f83011681018181108482111715611154576111546110eb565b60405293845285810183019383810192508785111561117257600080fd5b83870191505b8482101561119157813583529183019190830190611178565b979650505050505050565b80356001600160a01b03811681146111b357600080fd5b919050565b6000806000606084860312156111cd57600080fd5b833567ffffffffffffffff8111156111e457600080fd5b6111f086828701611101565b9350506111ff6020850161119c565b9150604084013590509250925092565b60006020828403121561122157600080fd5b5035919050565b60006020828403121561123a57600080fd5b6103458261119c565b60006020828403121561125557600080fd5b813567ffffffffffffffff81111561126c57600080fd5b61127884828501611101565b949350505050565b60008060006060848603121561129557600080fd5b833567ffffffffffffffff8111156112ac57600080fd5b6112b886828701611101565b9660208601359650604090950135949350505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156112f657600080fd5b5051919050565b60006020828403121561130f57600080fd5b8151801515811461034557600080fd5b6020808252600d908201526c70726f6f66206661696c75726560981b604082015260600190565b6020808252600f908201526e185b1c9958591e4818db185a5b5959608a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156113975761139761136f565b500390565b60008160001904831182151516156113b6576113b661136f565b500290565b6000826113d857634e487b7160e01b600052601260045260246000fd5b500490565b60006000198214156113f1576113f161136f565b506001019056fea264697066735822122090d2ec21e6b821146435f1c276556858ce800e2841261e36593aa3f702e7a56064736f6c634300080b0033",
  "bytecodeSha1": "0635c51ef8ec21d3ca54cb2ff29940b581057cad",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "AirdropToken",
  "coverageMap": {
    "branches": {
      "0": {
        "AirdropToken.Donation": {
          "45": [
            4859,
            4929,
            true
          ]
        },
        "AirdropToken.amountOut": {
          "48": [
            5831,
            5845,
            false
          ],
          "49": [
            5897,
            5908,
            false
          ],
          "50": [
            5978,
            5988,
            false
          ],
          "51": [
            6058,
            6068,
            false
          ]
        },
        "AirdropToken.deposit": {
          "52": [
            3890,
            4012,
            false
          ],
          "53": [
            4077,
            4198,
            true
          ],
          "54": [
            4269,
            4339,
            true
          ]
        },
        "AirdropToken.mintWithProofALL": {
          "57": [
            7118,
            7156,
            true
          ],
          "58": [
            7195,
            7226,
            true
          ],
          "59": [
            7394,
            7492,
            true
          ]
        },
        "AirdropToken.mintWithProofMid": {
          "46": [
            6658,
            6748,
            true
          ],
          "47": [
            6786,
            6817,
            true
          ]
        },
        "AirdropToken.mintWithProofTop": {
          "55": [
            6259,
            6349,
            true
          ],
          "56": [
            6387,
            6418,
            true
          ]
        },
        "AirdropToken.verify": {
          "42": [
            7670,
            7680,
            false
          ],
          "43": [
            7807,
            7816,
            false
          ],
          "44": [
            7940,
            7950,
            false
          ]
        },
        "MerkleProof.verify": {
          "60": [
            1005,
            1033,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "AirdropToken.Donation": {
          "6": [
            4851,
            4947
          ],
          "7": [
            4957,
            5070
          ],
          "8": [
            5080,
            5146
          ],
          "9": [
            5156,
            5167
          ]
        },
        "AirdropToken.amountOut": {
          "14": [
            5860,
            5874
          ],
          "15": [
            5922,
            5959
          ],
          "16": [
            6002,
            6039
          ],
          "17": [
            6082,
            6119
          ],
          "18": [
            6139,
            6147
          ]
        },
        "AirdropToken.amtOutForChoiceInForge": {
          "5": [
            5609,
            5686
          ]
        },
        "AirdropToken.deposit": {
          "19": [
            4027,
            4040
          ],
          "20": [
            4069,
            4247
          ],
          "21": [
            4261,
            4357
          ],
          "22": [
            4371,
            4398
          ],
          "23": [
            4412,
            4525
          ],
          "24": [
            4539,
            4605
          ],
          "25": [
            4651,
            4671
          ],
          "26": [
            4685,
            4704
          ],
          "27": [
            4718,
            4737
          ],
          "28": [
            4758,
            4769
          ]
        },
        "AirdropToken.getThree": {
          "0": [
            8169,
            8177
          ]
        },
        "AirdropToken.mintWithProofALL": {
          "33": [
            7109,
            7176
          ],
          "34": [
            7187,
            7246
          ],
          "35": [
            7257,
            7284
          ],
          "36": [
            7303,
            7376
          ],
          "37": [
            7386,
            7525
          ]
        },
        "AirdropToken.mintWithProofMid": {
          "10": [
            6649,
            6767
          ],
          "11": [
            6778,
            6837
          ],
          "12": [
            6848,
            6875
          ],
          "13": [
            6894,
            6955
          ]
        },
        "AirdropToken.mintWithProofTop": {
          "29": [
            6250,
            6368
          ],
          "30": [
            6379,
            6438
          ],
          "31": [
            6449,
            6476
          ],
          "32": [
            6495,
            6556
          ]
        },
        "AirdropToken.verify": {
          "1": [
            7696,
            7792
          ],
          "2": [
            7829,
            7925
          ],
          "3": [
            7966,
            8062
          ],
          "4": [
            8074,
            8086
          ]
        },
        "MerkleProof.verify": {
          "38": [
            1131,
            1201
          ],
          "39": [
            1318,
            1388
          ],
          "40": [
            925,
            928
          ],
          "41": [
            1498,
            1525
          ]
        }
      }
    }
  },
  "dependencies": [
    "ForgeGuess",
    "IERC20",
    "MerkleProof"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "2607:5585:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7557:536;;;;;;:::i;:::-;;:::i;:::-;;;1891:14:1;;1884:22;1866:41;;1854:2;1839:18;7557:536:0;;;;;;;;8108:76;8176:1;8108:76;;;2064:25:1;;;2052:2;2037:18;8108:76:0;1918:177:1;3331:26:0;;;;;;:::i;:::-;;:::i;5520:173::-;;;;;;:::i;:::-;;:::i;4783:391::-;;;;;;:::i;:::-;;:::i;3449:39::-;;;;;;2645:90;;;;;-1:-1:-1;;;;;2645:90:0;;;;;;-1:-1:-1;;;;;2449:32:1;;;2431:51;;2419:2;2404:18;2645:90:0;2285:203:1;2833:94:0;;;;;-1:-1:-1;;;;;2833:94:0;;;2741:86;;;;;-1:-1:-1;;;;;2741:86:0;;;3401:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6573:389;;;;;;:::i;:::-;;:::i;:::-;;5699:454;;;;;;:::i;:::-;;:::i;5181:333::-;;;:::i;3495:42::-;;;;;;3820:956;;;;;;:::i;:::-;;:::i;2933:32::-;;;;;;:::i;:::-;;:::i;6162:401::-;;;;;;:::i;:::-;;:::i;7007:525::-;;;;;;:::i;:::-;;:::i;7557:536::-;7652:8;7670:10;7667:402;;7703:89;7722:11;7735:14;7750:1;7735:17;;;;;;;;:::i;:::-;;;;;;;;;7782:7;7765:25;;;;;;;3989:2:1;3985:15;;;;-1:-1:-1;;;;;;3981:53:1;3969:66;;4060:2;4051:12;;3840:229;7765:25:0;;;;;;;;;;;;;7754:37;;;;;;7703:18;:89::i;:::-;7696:96;;;;7667:402;7807:5;7815:1;7807:9;7804:265;;;7836:89;7855:11;7868:14;7883:1;7868:17;;;;;;;;:::i;7804:265::-;7940:5;7949:1;7940:10;7937:132;;;7973:89;7992:11;8005:14;8020:1;8005:17;;;;;;;;:::i;7937:132::-;-1:-1:-1;8081:5:0;7557:536;;;;;;:::o;3331:26::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3331:26:0;:::o;5520:173::-;5627:25;;5586:11;;-1:-1:-1;;;;;5627:25:0;5616:51;5668:17;5678:6;5668:9;:17::i;:::-;5616:70;;;;;;;;;;;;;2064:25:1;;2052:2;2037:18;;1918:177;5616:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5609:77;5520:173;-1:-1:-1;;5520:173:0:o;4783:391::-;4866:17;;4859:70;;-1:-1:-1;;;4859:70:0;;4898:10;4859:70;;;4503:34:1;4918:4:0;4553:18:1;;;4546:43;4605:18;;;4598:34;;;4827:12:0;;-1:-1:-1;;;;;4866:17:0;;4859:38;;4438:18:1;;4859:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4851:96;;;;-1:-1:-1;;;4851:96:0;;5127:2:1;4851:96:0;;;5109:21:1;5166:2;5146:18;;;5139:30;-1:-1:-1;;;5185:18:1;;;5178:43;5238:18;;4851:96:0;;;;;;;;;4964:17;;4991:25;;4957:113;;-1:-1:-1;;;4957:113:0;;-1:-1:-1;;;;;4991:25:0;;;4957:113;;;5499:51:1;5018::0;5566:18:1;;;5559:34;4964:17:0;;;4957:33;;5472:18:1;;4957:113:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5091:25:0;;5080:66;;-1:-1:-1;;;5080:66:0;;5135:4;5080:66;;;5499:51:1;5566:18;;;5559:34;;;-1:-1:-1;;;;;5091:25:0;;;;5080:46;;5472:18:1;;5080:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5163:4:0;;4783:391;-1:-1:-1;;;;;4783:391:0:o;6573:389::-;6690:14;;6717:28;;-1:-1:-1;;;;;;6734:10:0;3989:2:1;3985:15;3981:53;6717:28:0;;;3969:66:1;6658:90:0;;6677:11;;4051:12:1;;6717:28:0;3840:229:1;6658:90:0;6649:118;;;;-1:-1:-1;;;6649:118:0;;;;;;;:::i;:::-;6797:10;6786:22;;;;:10;:22;;;;;;;;:31;6778:59;;;;-1:-1:-1;;;6778:59:0;;;;;;;:::i;:::-;6859:10;6848:22;;;;:10;:22;;;;;:27;;-1:-1:-1;;6848:27:0;6871:4;6848:27;;;;;;6901:17;-1:-1:-1;;;;;6901:17:0;;6894:34;;6942:12;6952:1;6942:9;:12::i;:::-;6894:61;;-1:-1:-1;;;;;;6894:61:0;;;;;;;-1:-1:-1;;;;;5517:32:1;;;6894:61:0;;;5499:51:1;5566:18;;;5559:34;5472:18;;6894:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6573:389;:::o;5699:454::-;5752:11;5774:14;5809:9;;5791:15;:27;;;;:::i;:::-;5774:44;;5840:5;;5831:6;:14;5828:57;;;-1:-1:-1;5869:5:0;;5828:57;5897:11;5894:236;;5954:5;;5944:6;5930:8;5939:1;5930:11;;;;;;;;:::i;:::-;;;;;;;;;:20;;;;:::i;:::-;5929:30;;;;:::i;5894:236::-;5978:6;5987:1;5978:10;5975:155;;;6034:5;;6024:6;6010:8;6019:1;6010:11;;;;;;;;:::i;5975:155::-;6058:6;6067:1;6058:10;6055:75;;;6114:5;;6104:6;6090:8;6099:1;6090:11;;;;;;;;:::i;6055:75::-;-1:-1:-1;6146:1:0;;5699:454;-1:-1:-1;;5699:454:0:o;5181:333::-;5221:12;5253;5442:25;;;;;;;;;-1:-1:-1;;;;;5442:25:0;-1:-1:-1;;;;;5431:49:0;;:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5387:25;;;;;;;;;-1:-1:-1;;;;;5387:25:0;-1:-1:-1;;;;;5376:48:0;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5317:17;;5347:25;;5302:71;;-1:-1:-1;;;5302:71:0;;-1:-1:-1;;;;;5347:25:0;;;5302:71;;;2431:51:1;5317:17:0;;;5302:44;;2404:18:1;;5302:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:124;;;;:::i;:::-;5295:133;;:3;:133;:::i;:::-;:187;;;;:::i;:::-;5268:216;;5269:20;5268:216;:::i;3820:956::-;3908:25;;3949:62;;-1:-1:-1;;;3949:62:0;;4005:4;3949:62;;;2431:51:1;3863:12:0;;-1:-1:-1;;;;;3908:25:0;;3897:51;;3908:25;;3949:47;;2404:18:1;;3949:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3897:115;;;;;;;;;;;;;2064:25:1;;2052:2;2037:18;;1918:177;3897:115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3890:3;:122;3887:861;;4027:13;4036:3;4027:8;:13::i;:::-;;3887:861;;;4094:25;;4135:62;;-1:-1:-1;;;4135:62:0;;4191:4;4135:62;;;2431:51:1;-1:-1:-1;;;;;4094:25:0;;;;4083:51;;4094:25;;4135:47;;2404:18:1;;4135:62:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4083:115;;;;;;;;;;;;;2064:25:1;;2052:2;2037:18;;1918:177;4083:115:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4077:3;:121;4069:178;;;;-1:-1:-1;;;4069:178:0;;7428:2:1;4069:178:0;;;7410:21:1;7467:2;7447:18;;;7440:30;7506:34;7486:18;;;7479:62;-1:-1:-1;;;7557:18:1;;;7550:42;7609:19;;4069:178:0;7226:408:1;4069:178:0;4276:17;;4269:70;;-1:-1:-1;;;4269:70:0;;4308:10;4269:70;;;4503:34:1;4328:4:0;4553:18:1;;;4546:43;4605:18;;;4598:34;;;-1:-1:-1;;;;;4276:17:0;;;;4269:38;;4438:18:1;;4269:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4261:96;;;;-1:-1:-1;;;4261:96:0;;5127:2:1;4261:96:0;;;5109:21:1;5166:2;5146:18;;;5139:30;-1:-1:-1;;;5185:18:1;;;5178:43;5238:18;;4261:96:0;4925:337:1;4261:96:0;4383:15;4371:9;:27;4419:17;;4446:25;;4412:113;;-1:-1:-1;;;4412:113:0;;-1:-1:-1;;;;;4446:25:0;;;4412:113;;;5499:51:1;4473::0;5566:18:1;;;5559:34;4419:17:0;;;4412:33;;5472:18:1;;4412:113:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4550:25:0;;4539:66;;-1:-1:-1;;;4539:66:0;;4594:4;4539:66;;;5499:51:1;5566:18;;;5559:34;;;-1:-1:-1;;;;;4550:25:0;;;;4539:46;;5472:18:1;;4539:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4619:6;4628:9;:7;:9::i;:::-;4619:18;-1:-1:-1;4665:6:0;4619:18;4669:2;4665:6;:::i;:::-;4651:8;4660:1;4651:11;;;;;;;;:::i;:::-;;;;;;;;;;:20;4699:5;:1;4703;4699:5;:::i;:::-;4685:8;4694:1;4685:11;;;;;;;;:::i;:::-;;;;;;;;;;:19;4732:5;:1;4736;4732:5;:::i;:::-;4718:8;4727:1;4718:11;;;;;;;;:::i;:::-;;;;;;;;;;:19;-1:-1:-1;3887:861:0;-1:-1:-1;4765:4:0;;3820:956;-1:-1:-1;3820:956:0:o;2933:32::-;;;;;;;;;;;;6162:401;6291:14;;6318:28;;-1:-1:-1;;;;;;6335:10:0;3989:2:1;3985:15;3981:53;6318:28:0;;;3969:66:1;6259:90:0;;6278:11;;4051:12:1;;6318:28:0;3840:229:1;6259:90:0;6250:118;;;;-1:-1:-1;;;6250:118:0;;;;;;;:::i;:::-;6398:10;6387:22;;;;:10;:22;;;;;;;;:31;6379:59;;;;-1:-1:-1;;;6379:59:0;;;;;;;:::i;:::-;6460:10;6449:22;;;;:10;:22;;;;;:27;;-1:-1:-1;;6449:27:0;6472:4;6449:27;;;;;;6502:17;;-1:-1:-1;;;;;6502:17:0;;6495:34;;6543:12;;:9;:12::i;7007:525::-;7118:38;7125:11;7138:10;7150:5;7118:6;:38::i;:::-;7109:67;;;;-1:-1:-1;;;7109:67:0;;;;;;;:::i;:::-;7206:10;7195:22;;;;:10;:22;;;;;;;;:31;7187:59;;;;-1:-1:-1;;;7187:59:0;;;;;;;:::i;:::-;7268:10;7257:22;;;;:10;:22;;;;;:27;;-1:-1:-1;;7257:27:0;7280:4;7257:27;;;7314:25;;-1:-1:-1;;;;;7314:25:0;7303:46;7350:16;7360:5;7350:9;:16::i;:::-;7368:7;7303:73;;;;;;;;;;;;;;;7813:25:1;;;7869:2;7854:18;;7847:34;7801:2;7786:18;;7639:248;7303:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7401:17:0;;7441:50;;-1:-1:-1;;;7441:50:0;;7485:4;7441:50;;;2431:51:1;-1:-1:-1;;;;;7401:17:0;;;;-1:-1:-1;7394:34:0;;-1:-1:-1;7429:10:0;;7401:17;;7441:35;;2404:18:1;;7441:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7394:98;;-1:-1:-1;;;;;;7394:98:0;;;;;;;-1:-1:-1;;;;;5517:32:1;;;7394:98:0;;;5499:51:1;5566:18;;;5559:34;5472:18;;7394:98:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7386:139;;;;-1:-1:-1;;;7386:139:0;;8094:2:1;7386:139:0;;;8076:21:1;8133:2;8113:18;;;8106:30;8172;8152:18;;;8145:58;8220:18;;7386:139:0;7892:352:1;7386:139:0;7007:525;;;:::o;712:820::-;833:4;872;833;887:526;911:5;:12;907:1;:16;887:526;;;944:20;967:5;973:1;967:8;;;;;;;;:::i;:::-;;;;;;;944:31;;1021:12;1005;:28;1001:402;;1156:44;;;;;;8406:19:1;;;8441:12;;;8434:28;;;8478:12;;1156:44:0;;;;;;;;;;;;1146:55;;;;;;1131:70;;1001:402;;;1343:44;;;;;;8406:19:1;;;8441:12;;;8434:28;;;8478:12;;1343:44:0;;;;;;;;;;;;1333:55;;;;;;1318:70;;1001:402;-1:-1:-1;925:3:0;;;;:::i;:::-;;;;887:526;;;-1:-1:-1;1505:20:0;;;;712:820;-1:-1:-1;;;712:820:0:o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:902;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;307:6;294:20;333:4;356:18;393:2;389;386:10;383:36;;;399:18;;:::i;:::-;445:2;442:1;438:10;477:2;471:9;540:2;536:7;531:2;527;523:11;519:25;511:6;507:38;595:6;583:10;580:22;575:2;563:10;560:18;557:46;554:72;;;606:18;;:::i;:::-;642:2;635:22;692:18;;;768:15;;;764:24;;;726:15;;;;-1:-1:-1;800:15:1;;;797:35;;;828:1;825;818:12;797:35;864:2;856:6;852:15;841:26;;876:142;892:6;887:3;884:15;876:142;;;958:17;;946:30;;996:12;;;;909;;;;876:142;;;1036:6;146:902;-1:-1:-1;;;;;;;146:902:1:o;1053:173::-;1121:20;;-1:-1:-1;;;;;1170:31:1;;1160:42;;1150:70;;1216:1;1213;1206:12;1150:70;1053:173;;;:::o;1231:490::-;1333:6;1341;1349;1402:2;1390:9;1381:7;1377:23;1373:32;1370:52;;;1418:1;1415;1408:12;1370:52;1458:9;1445:23;1491:18;1483:6;1480:30;1477:50;;;1523:1;1520;1513:12;1477:50;1546:61;1599:7;1590:6;1579:9;1575:22;1546:61;:::i;:::-;1536:71;;;1626:38;1660:2;1649:9;1645:18;1626:38;:::i;:::-;1616:48;;1711:2;1700:9;1696:18;1683:32;1673:42;;1231:490;;;;;:::o;2100:180::-;2159:6;2212:2;2200:9;2191:7;2187:23;2183:32;2180:52;;;2228:1;2225;2218:12;2180:52;-1:-1:-1;2251:23:1;;2100:180;-1:-1:-1;2100:180:1:o;2493:186::-;2552:6;2605:2;2593:9;2584:7;2580:23;2576:32;2573:52;;;2621:1;2618;2611:12;2573:52;2644:29;2663:9;2644:29;:::i;2684:348::-;2768:6;2821:2;2809:9;2800:7;2796:23;2792:32;2789:52;;;2837:1;2834;2827:12;2789:52;2877:9;2864:23;2910:18;2902:6;2899:30;2896:50;;;2942:1;2939;2932:12;2896:50;2965:61;3018:7;3009:6;2998:9;2994:22;2965:61;:::i;:::-;2955:71;2684:348;-1:-1:-1;;;;2684:348:1:o;3219:484::-;3321:6;3329;3337;3390:2;3378:9;3369:7;3365:23;3361:32;3358:52;;;3406:1;3403;3396:12;3358:52;3446:9;3433:23;3479:18;3471:6;3468:30;3465:50;;;3511:1;3508;3501:12;3465:50;3534:61;3587:7;3578:6;3567:9;3563:22;3534:61;:::i;:::-;3524:71;3642:2;3627:18;;3614:32;;-1:-1:-1;3693:2:1;3678:18;;;3665:32;;3219:484;-1:-1:-1;;;;3219:484:1:o;3708:127::-;3769:10;3764:3;3760:20;3757:1;3750:31;3800:4;3797:1;3790:15;3824:4;3821:1;3814:15;4074:184;4144:6;4197:2;4185:9;4176:7;4172:23;4168:32;4165:52;;;4213:1;4210;4203:12;4165:52;-1:-1:-1;4236:16:1;;4074:184;-1:-1:-1;4074:184:1:o;4643:277::-;4710:6;4763:2;4751:9;4742:7;4738:23;4734:32;4731:52;;;4779:1;4776;4769:12;4731:52;4811:9;4805:16;4864:5;4857:13;4850:21;4843:5;4840:32;4830:60;;4886:1;4883;4876:12;5883:337;6085:2;6067:21;;;6124:2;6104:18;;;6097:30;-1:-1:-1;;;6158:2:1;6143:18;;6136:43;6211:2;6196:18;;5883:337::o;6225:339::-;6427:2;6409:21;;;6466:2;6446:18;;;6439:30;-1:-1:-1;;;6500:2:1;6485:18;;6478:45;6555:2;6540:18;;6225:339::o;6569:127::-;6630:10;6625:3;6621:20;6618:1;6611:31;6661:4;6658:1;6651:15;6685:4;6682:1;6675:15;6701:125;6741:4;6769:1;6766;6763:8;6760:34;;;6774:18;;:::i;:::-;-1:-1:-1;6811:9:1;;6701:125::o;6831:168::-;6871:7;6937:1;6933;6929:6;6925:14;6922:1;6919:21;6914:1;6907:9;6900:17;6896:45;6893:71;;;6944:18;;:::i;:::-;-1:-1:-1;6984:9:1;;6831:168::o;7004:217::-;7044:1;7070;7060:132;;7114:10;7109:3;7105:20;7102:1;7095:31;7149:4;7146:1;7139:15;7177:4;7174:1;7167:15;7060:132;-1:-1:-1;7206:9:1;;7004:217::o;8501:135::-;8540:3;-1:-1:-1;;8561:17:1;;8558:43;;;8581:18;;:::i;:::-;-1:-1:-1;8628:1:1;8617:13;;8501:135::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    2607,
    8192
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x73B2E80E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x8DA58897 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA58897 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xD49B9216 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xF14DDABF EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xF5F21ACA EQ PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x73B2E80E EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x75C53C04 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x75FE9FBA EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x8912ED0B EQ PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4AD6D3CD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x4AD6D3CD EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x54FAC919 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x5B9EA9E5 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x60138460 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x647E03B7 EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4B38CE0 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xE2F5FB3 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x290812C2 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x2D8590C7 EQ PUSH2 0x167 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0x28F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH2 0x146 PUSH2 0x162 CALLDATASIZE PUSH1 0x4 PUSH2 0x120F JUMP JUMPDEST PUSH2 0x34C JUMP JUMPDEST PUSH2 0x146 PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x120F JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH2 0x12E PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x120F JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x146 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1A9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x13A JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1A9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1A9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x146 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x120F JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x146 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x251 CALLDATASIZE PUSH1 0x4 PUSH2 0x120F JUMP JUMPDEST PUSH2 0x903 JUMP JUMPDEST PUSH2 0x146 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x120F JUMP JUMPDEST PUSH2 0xD67 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x28A CALLDATASIZE PUSH1 0x4 PUSH2 0x1280 JUMP JUMPDEST PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2FF JUMPI PUSH2 0x2F8 DUP5 PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x2AE JUMPI PUSH2 0x2AE PUSH2 0x12CE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2DD SWAP2 SWAP1 PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x14 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x103C JUMP JUMPDEST SWAP1 POP PUSH2 0x345 JUMP JUMPDEST DUP2 PUSH1 0x1 EQ ISZERO PUSH2 0x320 JUMPI PUSH2 0x2F8 DUP5 PUSH1 0x3 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x2AE JUMPI PUSH2 0x2AE PUSH2 0x12CE JUMP JUMPDEST DUP2 PUSH1 0x2 EQ ISZERO PUSH2 0x341 JUMPI PUSH2 0x2F8 DUP5 PUSH1 0x3 PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0x2AE JUMPI PUSH2 0x2AE PUSH2 0x12CE JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAFCF89AA PUSH2 0x38A DUP5 PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A8 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x447 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1D1C985B9CD9995C8819985A5B PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH22 0x2AC3A4EDBBFB8014E3BA83411E915E7FFFFFFFFFFFF PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5DC8121 PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2EE40908 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x59B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x5CE SWAP2 DUP4 SWAP2 PUSH1 0x34 ADD PUSH2 0x2DD JUMP JUMPDEST PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A3 SWAP1 PUSH2 0x131F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x61A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A3 SWAP1 PUSH2 0x1346 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x652 PUSH1 0x2 PUSH2 0x6C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x69D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C1 SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB SLOAD TIMESTAMP PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x1385 JUMP JUMPDEST SWAP1 POP PUSH1 0xA SLOAD DUP2 GT ISZERO PUSH2 0x6E7 JUMPI POP PUSH1 0xA SLOAD JUMPDEST DUP3 PUSH2 0x723 JUMPI PUSH1 0xA SLOAD DUP2 PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x704 JUMPI PUSH2 0x704 PUSH2 0x12CE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x719 SWAP2 SWAP1 PUSH2 0x139C JUMP JUMPDEST PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x13BB JUMP JUMPDEST DUP3 PUSH1 0x1 EQ ISZERO PUSH2 0x744 JUMPI PUSH1 0xA SLOAD DUP2 PUSH1 0x7 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0x704 JUMPI PUSH2 0x704 PUSH2 0x12CE JUMP JUMPDEST DUP3 PUSH1 0x2 EQ ISZERO PUSH2 0x765 JUMPI PUSH1 0xA SLOAD DUP2 PUSH1 0x7 PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0x704 JUMPI PUSH2 0x704 PUSH2 0x12CE JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7E8 SWAP2 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF03D6672 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x85F SWAP2 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CF SWAP2 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH2 0x8D9 SWAP2 SWAP1 PUSH2 0x1385 JUMP JUMPDEST PUSH2 0x8E5 SWAP1 PUSH2 0x3CF PUSH2 0x139C JUMP JUMPDEST PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x3E9 SWAP1 PUSH10 0x21E19E0C9BAB2400000 PUSH2 0x13BB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xAFCF89AA SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x954 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x978 SWAP2 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x996 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9D7 SWAP2 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST DUP3 GT PUSH2 0x9EC JUMPI PUSH2 0x9E6 DUP3 PUSH2 0x3EF JUMP JUMPDEST POP PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xAFCF89AA SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA3C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABF SWAP2 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST DUP3 GT PUSH2 0xB22 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D7573742062652067726561746572207468616E2070726576696F757320746F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x1D185B081D1BC81C995CD95D PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9D SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x1D1C985B9CD9995C8819985A5B PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A3 JUMP JUMPDEST TIMESTAMP PUSH1 0xB SSTORE PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH22 0x2AC3A4EDBBFB8014E3BA83411E915E7FFFFFFFFFFFF PUSH1 0x24 DUP3 ADD MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC6B SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5DC8121 PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2EE40908 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH2 0xCDA PUSH2 0x76E JUMP JUMPDEST SWAP1 POP PUSH2 0xCE7 DUP2 PUSH1 0xA PUSH2 0x139C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xCFB JUMPI PUSH2 0xCFB PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH2 0xD12 DUP2 PUSH1 0x3 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x1 DUP2 SLOAD DUP2 LT PUSH2 0xD26 JUMPI PUSH2 0xD26 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE PUSH2 0xD3D DUP2 PUSH1 0x1 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x7 PUSH1 0x2 DUP2 SLOAD DUP2 LT PUSH2 0xD51 JUMPI PUSH2 0xD51 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE POP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x35C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT CALLER PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xD9E SWAP2 DUP4 SWAP2 PUSH1 0x34 ADD PUSH2 0x2DD JUMP JUMPDEST PUSH2 0xDBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A3 SWAP1 PUSH2 0x131F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A3 SWAP1 PUSH2 0x1346 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH2 0x652 SWAP1 PUSH2 0x6C5 JUMP JUMPDEST PUSH2 0xE2D DUP4 CALLER DUP5 PUSH2 0x28F JUMP JUMPDEST PUSH2 0xE49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A3 SWAP1 PUSH2 0x131F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A3 SWAP1 PUSH2 0x1346 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x441A3E70 PUSH2 0xEAD DUP5 PUSH2 0x6C5 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED4 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF02 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF7C SWAP2 SWAP1 PUSH2 0x12E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFEB SWAP2 SWAP1 PUSH2 0x12FD JUMP JUMPDEST PUSH2 0x1037 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x636F6E7472616374206D6179206265206F7574206F662066756E647300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4A3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x10E0 JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x105E JUMPI PUSH2 0x105E PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x10A0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x10CD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x10D8 DUP2 PUSH2 0x13DD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1041 JUMP JUMPDEST POP SWAP1 SWAP3 EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x112F JUMPI PUSH2 0x112F PUSH2 0x10EB JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x1154 JUMPI PUSH2 0x1154 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP4 DUP5 MSTORE DUP6 DUP2 ADD DUP4 ADD SWAP4 DUP4 DUP2 ADD SWAP3 POP DUP8 DUP6 GT ISZERO PUSH2 0x1172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x1191 JUMPI DUP2 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1178 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F0 DUP7 DUP3 DUP8 ADD PUSH2 0x1101 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x11FF PUSH1 0x20 DUP6 ADD PUSH2 0x119C JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x345 DUP3 PUSH2 0x119C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x126C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1278 DUP5 DUP3 DUP6 ADD PUSH2 0x1101 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12B8 DUP7 DUP3 DUP8 ADD PUSH2 0x1101 JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x70726F6F66206661696C757265 PUSH1 0x98 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x185B1C9958591E4818DB185A5B5959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1397 JUMPI PUSH2 0x1397 PUSH2 0x136F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x13B6 JUMPI PUSH2 0x13B6 PUSH2 0x136F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x13F1 JUMPI PUSH2 0x13F1 PUSH2 0x136F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xD2 0xEC 0x21 0xE6 0xB8 0x21 EQ PUSH5 0x35F1C27655 PUSH9 0x58CE800E2841261E36 MSIZE GASPRICE LOG3 0xF7 MUL 0xE7 0xA5 PUSH1 0x64 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x73B2E80E"
    },
    "38": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "GT",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA58897"
    },
    "49": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "GT",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA58897"
    },
    "60": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23A"
    },
    "64": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB6B55F25"
    },
    "71": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x243"
    },
    "75": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD49B9216"
    },
    "82": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x256"
    },
    "86": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF14DDABF"
    },
    "93": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "94": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x269"
    },
    "97": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF5F21ACA"
    },
    "104": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "105": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27C"
    },
    "108": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "REVERT",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "114": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x73B2E80E"
    },
    "120": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "121": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E7"
    },
    "124": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "125": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x75C53C04"
    },
    "131": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x20A"
    },
    "135": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x75FE9FBA"
    },
    "142": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "143": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21F"
    },
    "146": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "147": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8912ED0B"
    },
    "153": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "154": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x232"
    },
    "157": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "158": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "161": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "REVERT",
      "path": "0"
    },
    "162": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4AD6D3CD"
    },
    "169": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "GT",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4AD6D3CD"
    },
    "180": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17A"
    },
    "184": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x54FAC919"
    },
    "191": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x18D"
    },
    "195": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5B9EA9E5"
    },
    "202": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x196"
    },
    "206": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x60138460"
    },
    "213": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C1"
    },
    "217": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x647E03B7"
    },
    "224": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D4"
    },
    "228": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "232": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "REVERT",
      "path": "0"
    },
    "233": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "234": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "235": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4B38CE0"
    },
    "240": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "245": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "246": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE2F5FB3"
    },
    "251": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143"
    },
    "255": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "257": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x290812C2"
    },
    "262": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "263": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x154"
    },
    "266": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "267": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "268": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2D8590C7"
    },
    "273": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "EQ",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x167"
    },
    "277": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "278": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "279": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "DUP1",
      "path": "0"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2607,
        8192
      ],
      "op": "REVERT",
      "path": "0"
    },
    "283": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "284": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "287": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x129"
    },
    "290": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "291": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "293": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11B8"
    },
    "296": {
      "fn": "AirdropToken.verify",
      "jump": "i",
      "offset": [
        7557,
        8093
      ],
      "op": "JUMP",
      "path": "0"
    },
    "297": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "298": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28F"
    },
    "301": {
      "fn": "AirdropToken.verify",
      "jump": "i",
      "offset": [
        7557,
        8093
      ],
      "op": "JUMP",
      "path": "0"
    },
    "302": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "303": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "305": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "306": {
      "op": "SWAP1"
    },
    "307": {
      "op": "ISZERO"
    },
    "308": {
      "op": "ISZERO"
    },
    "309": {
      "op": "DUP2"
    },
    "310": {
      "op": "MSTORE"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "313": {
      "op": "ADD"
    },
    "314": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "315": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "317": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "318": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "DUP1",
      "path": "0"
    },
    "319": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "320": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "SUB",
      "path": "0"
    },
    "321": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "322": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "RETURN",
      "path": "0"
    },
    "323": {
      "fn": "AirdropToken.getThree",
      "offset": [
        8108,
        8184
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "324": {
      "fn": "AirdropToken.getThree",
      "offset": [
        8176,
        8177
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x3"
    },
    "326": {
      "fn": "AirdropToken.getThree",
      "offset": [
        8108,
        8184
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "327": {
      "fn": "AirdropToken.getThree",
      "offset": [
        8108,
        8184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "329": {
      "fn": "AirdropToken.getThree",
      "offset": [
        8108,
        8184
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "330": {
      "op": "SWAP1"
    },
    "331": {
      "op": "DUP2"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "335": {
      "op": "ADD"
    },
    "336": {
      "fn": "AirdropToken.getThree",
      "offset": [
        8108,
        8184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A"
    },
    "339": {
      "op": "JUMP"
    },
    "340": {
      "offset": [
        3331,
        3357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "341": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3331,
        3357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "344": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3331,
        3357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x162"
    },
    "347": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3331,
        3357
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "348": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3331,
        3357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "350": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3331,
        3357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120F"
    },
    "353": {
      "fn": "AirdropToken.getThree",
      "jump": "i",
      "offset": [
        3331,
        3357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "354": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3331,
        3357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "355": {
      "fn": "AirdropToken.getThree",
      "offset": [
        3331,
        3357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34C"
    },
    "358": {
      "fn": "AirdropToken.getThree",
      "jump": "i",
      "offset": [
        3331,
        3357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "359": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5520,
        5693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "360": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5520,
        5693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "363": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5520,
        5693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x175"
    },
    "366": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5520,
        5693
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "367": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5520,
        5693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "369": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5520,
        5693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120F"
    },
    "372": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "jump": "i",
      "offset": [
        5520,
        5693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "373": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5520,
        5693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "374": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5520,
        5693
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36D"
    },
    "377": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "jump": "i",
      "offset": [
        5520,
        5693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "378": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4783,
        5174
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "379": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4783,
        5174
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "382": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4783,
        5174
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x188"
    },
    "385": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4783,
        5174
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "386": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4783,
        5174
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "388": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4783,
        5174
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120F"
    },
    "391": {
      "fn": "AirdropToken.Donation",
      "jump": "i",
      "offset": [
        4783,
        5174
      ],
      "op": "JUMP",
      "path": "0"
    },
    "392": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4783,
        5174
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "393": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4783,
        5174
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EF"
    },
    "396": {
      "fn": "AirdropToken.Donation",
      "jump": "i",
      "offset": [
        4783,
        5174
      ],
      "op": "JUMP",
      "path": "0"
    },
    "397": {
      "offset": [
        3449,
        3488
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "398": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3449,
        3488
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "401": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3449,
        3488
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "403": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3449,
        3488
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "404": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3449,
        3488
      ],
      "op": "DUP2",
      "path": "0"
    },
    "405": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3449,
        3488
      ],
      "op": "JUMP",
      "path": "0"
    },
    "406": {
      "offset": [
        2645,
        2735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "407": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2645,
        2735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "409": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2645,
        2735
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "410": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2645,
        2735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9"
    },
    "413": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2645,
        2735
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "420": {
      "op": "SHL"
    },
    "421": {
      "op": "SUB"
    },
    "422": {
      "offset": [
        2645,
        2735
      ],
      "op": "AND",
      "path": "0"
    },
    "423": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2645,
        2735
      ],
      "op": "DUP2",
      "path": "0"
    },
    "424": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2645,
        2735
      ],
      "op": "JUMP",
      "path": "0"
    },
    "425": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2645,
        2735
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "426": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2645,
        2735
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "428": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2645,
        2735
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "435": {
      "op": "SHL"
    },
    "436": {
      "op": "SUB"
    },
    "437": {
      "op": "SWAP1"
    },
    "438": {
      "op": "SWAP2"
    },
    "439": {
      "op": "AND"
    },
    "440": {
      "op": "DUP2"
    },
    "441": {
      "op": "MSTORE"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "444": {
      "op": "ADD"
    },
    "445": {
      "offset": [
        2645,
        2735
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A"
    },
    "448": {
      "op": "JUMP"
    },
    "449": {
      "offset": [
        2833,
        2927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "450": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2833,
        2927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "452": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2833,
        2927
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "453": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2833,
        2927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9"
    },
    "456": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2833,
        2927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "463": {
      "op": "SHL"
    },
    "464": {
      "op": "SUB"
    },
    "465": {
      "offset": [
        2833,
        2927
      ],
      "op": "AND",
      "path": "0"
    },
    "466": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2833,
        2927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "467": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2833,
        2927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "468": {
      "offset": [
        2741,
        2827
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "469": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2741,
        2827
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "471": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2741,
        2827
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "472": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2741,
        2827
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A9"
    },
    "475": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2741,
        2827
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "482": {
      "op": "SHL"
    },
    "483": {
      "op": "SUB"
    },
    "484": {
      "offset": [
        2741,
        2827
      ],
      "op": "AND",
      "path": "0"
    },
    "485": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2741,
        2827
      ],
      "op": "DUP2",
      "path": "0"
    },
    "486": {
      "fn": "AirdropToken.Donation",
      "offset": [
        2741,
        2827
      ],
      "op": "JUMP",
      "path": "0"
    },
    "487": {
      "offset": [
        3401,
        3443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "488": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "491": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "494": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "495": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "497": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1228"
    },
    "500": {
      "fn": "AirdropToken.Donation",
      "jump": "i",
      "offset": [
        3401,
        3443
      ],
      "op": "JUMP",
      "path": "0"
    },
    "501": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "502": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "504": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "506": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "507": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "509": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "510": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "DUP2",
      "path": "0"
    },
    "511": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "512": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "514": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "515": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "516": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "517": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "519": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "AND",
      "path": "0"
    },
    "520": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "DUP2",
      "path": "0"
    },
    "521": {
      "fn": "AirdropToken.Donation",
      "offset": [
        3401,
        3443
      ],
      "op": "JUMP",
      "path": "0"
    },
    "522": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6573,
        6962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "523": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6573,
        6962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D"
    },
    "526": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6573,
        6962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218"
    },
    "529": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6573,
        6962
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "530": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6573,
        6962
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "532": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6573,
        6962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1243"
    },
    "535": {
      "fn": "AirdropToken.mintWithProofMid",
      "jump": "i",
      "offset": [
        6573,
        6962
      ],
      "op": "JUMP",
      "path": "0"
    },
    "536": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6573,
        6962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "537": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6573,
        6962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A7"
    },
    "540": {
      "fn": "AirdropToken.mintWithProofMid",
      "jump": "i",
      "offset": [
        6573,
        6962
      ],
      "op": "JUMP",
      "path": "0"
    },
    "541": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6573,
        6962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "542": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6573,
        6962
      ],
      "op": "STOP",
      "path": "0"
    },
    "543": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5699,
        6153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "544": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5699,
        6153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "547": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5699,
        6153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22D"
    },
    "550": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5699,
        6153
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "551": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5699,
        6153
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "553": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5699,
        6153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120F"
    },
    "556": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5699,
        6153
      ],
      "op": "JUMP",
      "path": "0"
    },
    "557": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5699,
        6153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "558": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5699,
        6153
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C5"
    },
    "561": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5699,
        6153
      ],
      "op": "JUMP",
      "path": "0"
    },
    "562": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5181,
        5514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "563": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5181,
        5514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "566": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5181,
        5514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76E"
    },
    "569": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        5181,
        5514
      ],
      "op": "JUMP",
      "path": "0"
    },
    "570": {
      "offset": [
        3495,
        3537
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "571": {
      "fn": "AirdropToken.perfect",
      "offset": [
        3495,
        3537
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "574": {
      "fn": "AirdropToken.perfect",
      "offset": [
        3495,
        3537
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "576": {
      "fn": "AirdropToken.perfect",
      "offset": [
        3495,
        3537
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "577": {
      "fn": "AirdropToken.perfect",
      "offset": [
        3495,
        3537
      ],
      "op": "DUP2",
      "path": "0"
    },
    "578": {
      "fn": "AirdropToken.perfect",
      "offset": [
        3495,
        3537
      ],
      "op": "JUMP",
      "path": "0"
    },
    "579": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3820,
        4776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "580": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3820,
        4776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E"
    },
    "583": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3820,
        4776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x251"
    },
    "586": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3820,
        4776
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "587": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3820,
        4776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "589": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3820,
        4776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120F"
    },
    "592": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        3820,
        4776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "593": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3820,
        4776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "594": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3820,
        4776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x903"
    },
    "597": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        3820,
        4776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "598": {
      "offset": [
        2933,
        2965
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "599": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146"
    },
    "602": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x264"
    },
    "605": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "606": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "608": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120F"
    },
    "611": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        2933,
        2965
      ],
      "op": "JUMP",
      "path": "0"
    },
    "612": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "613": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD67"
    },
    "616": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        2933,
        2965
      ],
      "op": "JUMP",
      "path": "0"
    },
    "617": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6162,
        6563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "618": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6162,
        6563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D"
    },
    "621": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6162,
        6563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x277"
    },
    "624": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6162,
        6563
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "625": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6162,
        6563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "627": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6162,
        6563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1243"
    },
    "630": {
      "fn": "AirdropToken.mintWithProofTop",
      "jump": "i",
      "offset": [
        6162,
        6563
      ],
      "op": "JUMP",
      "path": "0"
    },
    "631": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6162,
        6563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "632": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6162,
        6563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD77"
    },
    "635": {
      "fn": "AirdropToken.mintWithProofTop",
      "jump": "i",
      "offset": [
        6162,
        6563
      ],
      "op": "JUMP",
      "path": "0"
    },
    "636": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7007,
        7532
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "637": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7007,
        7532
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21D"
    },
    "640": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7007,
        7532
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28A"
    },
    "643": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7007,
        7532
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "644": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7007,
        7532
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "646": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7007,
        7532
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1280"
    },
    "649": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        7007,
        7532
      ],
      "op": "JUMP",
      "path": "0"
    },
    "650": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7007,
        7532
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "651": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7007,
        7532
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE22"
    },
    "654": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        7007,
        7532
      ],
      "op": "JUMP",
      "path": "0"
    },
    "655": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "656": {
      "fn": "AirdropToken.verify",
      "offset": [
        7652,
        7660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "658": {
      "branch": 42,
      "fn": "AirdropToken.verify",
      "offset": [
        7670,
        7680
      ],
      "op": "DUP2",
      "path": "0"
    },
    "659": {
      "fn": "AirdropToken.verify",
      "offset": [
        7667,
        8069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "662": {
      "branch": 42,
      "fn": "AirdropToken.verify",
      "offset": [
        7667,
        8069
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "663": {
      "fn": "AirdropToken.verify",
      "offset": [
        7703,
        7792
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 1,
      "value": "0x2F8"
    },
    "666": {
      "fn": "AirdropToken.verify",
      "offset": [
        7722,
        7733
      ],
      "op": "DUP5",
      "path": "0"
    },
    "667": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7749
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "669": {
      "fn": "AirdropToken.verify",
      "offset": [
        7750,
        7751
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "671": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "672": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "673": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "674": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "LT",
      "path": "0"
    },
    "675": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "678": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "679": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "682": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CE"
    },
    "685": {
      "fn": "AirdropToken.verify",
      "jump": "i",
      "offset": [
        7735,
        7752
      ],
      "op": "JUMP",
      "path": "0"
    },
    "686": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "687": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "688": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "690": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "691": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "693": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "695": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "696": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "ADD",
      "path": "0"
    },
    "697": {
      "fn": "AirdropToken.verify",
      "offset": [
        7735,
        7752
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "698": {
      "fn": "AirdropToken.verify",
      "offset": [
        7782,
        7789
      ],
      "op": "DUP6",
      "path": "0"
    },
    "699": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "701": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "702": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "704": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "ADD",
      "path": "0"
    },
    "705": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DD"
    },
    "708": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "709": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "712": {
      "op": "SWAP2"
    },
    "713": {
      "op": "SWAP1"
    },
    "714": {
      "op": "SWAP2"
    },
    "715": {
      "op": "SHL"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "722": {
      "op": "SHL"
    },
    "723": {
      "op": "SUB"
    },
    "724": {
      "op": "NOT"
    },
    "725": {
      "op": "AND"
    },
    "726": {
      "op": "DUP2"
    },
    "727": {
      "op": "MSTORE"
    },
    "728": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "730": {
      "op": "ADD"
    },
    "731": {
      "op": "SWAP1"
    },
    "732": {
      "op": "JUMP"
    },
    "733": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "734": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "736": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "737": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "739": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "DUP2",
      "path": "0"
    },
    "740": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "DUP4",
      "path": "0"
    },
    "741": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "SUB",
      "path": "0"
    },
    "742": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "SUB",
      "path": "0"
    },
    "743": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "DUP2",
      "path": "0"
    },
    "744": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "745": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "746": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "748": {
      "fn": "AirdropToken.verify",
      "offset": [
        7765,
        7790
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "749": {
      "fn": "AirdropToken.verify",
      "offset": [
        7754,
        7791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "750": {
      "fn": "AirdropToken.verify",
      "offset": [
        7754,
        7791
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "751": {
      "fn": "AirdropToken.verify",
      "offset": [
        7754,
        7791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "752": {
      "fn": "AirdropToken.verify",
      "offset": [
        7754,
        7791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "754": {
      "fn": "AirdropToken.verify",
      "offset": [
        7754,
        7791
      ],
      "op": "ADD",
      "path": "0"
    },
    "755": {
      "fn": "AirdropToken.verify",
      "offset": [
        7754,
        7791
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "756": {
      "fn": "AirdropToken.verify",
      "offset": [
        7703,
        7721
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x103C"
    },
    "759": {
      "fn": "AirdropToken.verify",
      "jump": "i",
      "offset": [
        7703,
        7792
      ],
      "op": "JUMP",
      "path": "0"
    },
    "760": {
      "fn": "AirdropToken.verify",
      "offset": [
        7703,
        7792
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "761": {
      "fn": "AirdropToken.verify",
      "offset": [
        7696,
        7792
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "762": {
      "fn": "AirdropToken.verify",
      "offset": [
        7696,
        7792
      ],
      "op": "POP",
      "path": "0"
    },
    "763": {
      "fn": "AirdropToken.verify",
      "offset": [
        7696,
        7792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345"
    },
    "766": {
      "fn": "AirdropToken.verify",
      "offset": [
        7696,
        7792
      ],
      "op": "JUMP",
      "path": "0"
    },
    "767": {
      "fn": "AirdropToken.verify",
      "offset": [
        7667,
        8069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "768": {
      "fn": "AirdropToken.verify",
      "offset": [
        7807,
        7812
      ],
      "op": "DUP2",
      "path": "0"
    },
    "769": {
      "fn": "AirdropToken.verify",
      "offset": [
        7815,
        7816
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "771": {
      "branch": 43,
      "fn": "AirdropToken.verify",
      "offset": [
        7807,
        7816
      ],
      "op": "EQ",
      "path": "0"
    },
    "772": {
      "fn": "AirdropToken.verify",
      "offset": [
        7804,
        8069
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "773": {
      "fn": "AirdropToken.verify",
      "offset": [
        7804,
        8069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x320"
    },
    "776": {
      "branch": 43,
      "fn": "AirdropToken.verify",
      "offset": [
        7804,
        8069
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "777": {
      "fn": "AirdropToken.verify",
      "offset": [
        7836,
        7925
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 2,
      "value": "0x2F8"
    },
    "780": {
      "fn": "AirdropToken.verify",
      "offset": [
        7855,
        7866
      ],
      "op": "DUP5",
      "path": "0"
    },
    "781": {
      "fn": "AirdropToken.verify",
      "offset": [
        7868,
        7882
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "783": {
      "fn": "AirdropToken.verify",
      "offset": [
        7883,
        7884
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "785": {
      "fn": "AirdropToken.verify",
      "offset": [
        7868,
        7885
      ],
      "op": "DUP2",
      "path": "0"
    },
    "786": {
      "fn": "AirdropToken.verify",
      "offset": [
        7868,
        7885
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "787": {
      "fn": "AirdropToken.verify",
      "offset": [
        7868,
        7885
      ],
      "op": "DUP2",
      "path": "0"
    },
    "788": {
      "fn": "AirdropToken.verify",
      "offset": [
        7868,
        7885
      ],
      "op": "LT",
      "path": "0"
    },
    "789": {
      "fn": "AirdropToken.verify",
      "offset": [
        7868,
        7885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "792": {
      "fn": "AirdropToken.verify",
      "offset": [
        7868,
        7885
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "793": {
      "fn": "AirdropToken.verify",
      "offset": [
        7868,
        7885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "796": {
      "fn": "AirdropToken.verify",
      "offset": [
        7868,
        7885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CE"
    },
    "799": {
      "fn": "AirdropToken.verify",
      "jump": "i",
      "offset": [
        7868,
        7885
      ],
      "op": "JUMP",
      "path": "0"
    },
    "800": {
      "fn": "AirdropToken.verify",
      "offset": [
        7804,
        8069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "801": {
      "fn": "AirdropToken.verify",
      "offset": [
        7940,
        7945
      ],
      "op": "DUP2",
      "path": "0"
    },
    "802": {
      "fn": "AirdropToken.verify",
      "offset": [
        7949,
        7950
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "804": {
      "branch": 44,
      "fn": "AirdropToken.verify",
      "offset": [
        7940,
        7950
      ],
      "op": "EQ",
      "path": "0"
    },
    "805": {
      "fn": "AirdropToken.verify",
      "offset": [
        7937,
        8069
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "806": {
      "fn": "AirdropToken.verify",
      "offset": [
        7937,
        8069
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x341"
    },
    "809": {
      "branch": 44,
      "fn": "AirdropToken.verify",
      "offset": [
        7937,
        8069
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "810": {
      "fn": "AirdropToken.verify",
      "offset": [
        7973,
        8062
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x2F8"
    },
    "813": {
      "fn": "AirdropToken.verify",
      "offset": [
        7992,
        8003
      ],
      "op": "DUP5",
      "path": "0"
    },
    "814": {
      "fn": "AirdropToken.verify",
      "offset": [
        8005,
        8019
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "816": {
      "fn": "AirdropToken.verify",
      "offset": [
        8020,
        8021
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "818": {
      "fn": "AirdropToken.verify",
      "offset": [
        8005,
        8022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "819": {
      "fn": "AirdropToken.verify",
      "offset": [
        8005,
        8022
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "820": {
      "fn": "AirdropToken.verify",
      "offset": [
        8005,
        8022
      ],
      "op": "DUP2",
      "path": "0"
    },
    "821": {
      "fn": "AirdropToken.verify",
      "offset": [
        8005,
        8022
      ],
      "op": "LT",
      "path": "0"
    },
    "822": {
      "fn": "AirdropToken.verify",
      "offset": [
        8005,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "825": {
      "fn": "AirdropToken.verify",
      "offset": [
        8005,
        8022
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "826": {
      "fn": "AirdropToken.verify",
      "offset": [
        8005,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AE"
    },
    "829": {
      "fn": "AirdropToken.verify",
      "offset": [
        8005,
        8022
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CE"
    },
    "832": {
      "fn": "AirdropToken.verify",
      "jump": "i",
      "offset": [
        8005,
        8022
      ],
      "op": "JUMP",
      "path": "0"
    },
    "833": {
      "fn": "AirdropToken.verify",
      "offset": [
        7937,
        8069
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "834": {
      "op": "POP"
    },
    "835": {
      "fn": "AirdropToken.verify",
      "offset": [
        8081,
        8086
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "837": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "838": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "839": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "840": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "POP",
      "path": "0"
    },
    "841": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "POP",
      "path": "0"
    },
    "842": {
      "fn": "AirdropToken.verify",
      "offset": [
        7557,
        8093
      ],
      "op": "POP",
      "path": "0"
    },
    "843": {
      "fn": "AirdropToken.verify",
      "jump": "o",
      "offset": [
        7557,
        8093
      ],
      "op": "JUMP",
      "path": "0"
    },
    "844": {
      "offset": [
        3331,
        3357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "845": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "847": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "848": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "849": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "850": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "851": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "LT",
      "path": "0"
    },
    "852": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35C"
    },
    "855": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "856": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "858": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "DUP1",
      "path": "0"
    },
    "859": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "REVERT",
      "path": "0"
    },
    "860": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "861": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "863": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "864": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "865": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "866": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "868": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "869": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "870": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "871": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "ADD",
      "path": "0"
    },
    "872": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "873": {
      "fn": "AirdropToken.verify",
      "offset": [
        3331,
        3357
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "874": {
      "op": "POP"
    },
    "875": {
      "offset": [
        3331,
        3357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "876": {
      "fn": "AirdropToken.verify",
      "jump": "o",
      "offset": [
        3331,
        3357
      ],
      "op": "JUMP",
      "path": "0"
    },
    "877": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5520,
        5693
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "878": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5627,
        5652
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 5,
      "value": "0x2"
    },
    "880": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5627,
        5652
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "881": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5586,
        5597
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "883": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5586,
        5597
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "888": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "890": {
      "op": "SHL"
    },
    "891": {
      "op": "SUB"
    },
    "892": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5627,
        5652
      ],
      "op": "AND",
      "path": "0"
    },
    "893": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5667
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAFCF89AA"
    },
    "898": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5668,
        5685
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x38A"
    },
    "901": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5678,
        5684
      ],
      "op": "DUP5",
      "path": "0"
    },
    "902": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5668,
        5677
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C5"
    },
    "905": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "jump": "i",
      "offset": [
        5668,
        5685
      ],
      "op": "JUMP",
      "path": "0"
    },
    "906": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5668,
        5685
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "907": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "909": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "910": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "DUP3",
      "path": "0"
    },
    "911": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "916": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "AND",
      "path": "0"
    },
    "917": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "919": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "SHL",
      "path": "0"
    },
    "920": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "DUP2",
      "path": "0"
    },
    "921": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "922": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "924": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "ADD",
      "path": "0"
    },
    "925": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A8"
    },
    "928": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "929": {
      "op": "DUP2"
    },
    "930": {
      "op": "MSTORE"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "933": {
      "op": "ADD"
    },
    "934": {
      "op": "SWAP1"
    },
    "935": {
      "op": "JUMP"
    },
    "936": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "937": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "939": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "941": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "942": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "DUP1",
      "path": "0"
    },
    "943": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "DUP4",
      "path": "0"
    },
    "944": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "SUB",
      "path": "0"
    },
    "945": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "DUP2",
      "path": "0"
    },
    "946": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "DUP7",
      "path": "0"
    },
    "947": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "GAS",
      "path": "0"
    },
    "948": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "949": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "950": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "DUP1",
      "path": "0"
    },
    "951": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "952": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C5"
    },
    "955": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "956": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "957": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "959": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "DUP1",
      "path": "0"
    },
    "960": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "961": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "962": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "964": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "REVERT",
      "path": "0"
    },
    "965": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "966": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "POP",
      "path": "0"
    },
    "967": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "POP",
      "path": "0"
    },
    "968": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "POP",
      "path": "0"
    },
    "969": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "POP",
      "path": "0"
    },
    "970": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "972": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "973": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "974": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "976": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "NOT",
      "path": "0"
    },
    "977": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "979": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "DUP3",
      "path": "0"
    },
    "980": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "ADD",
      "path": "0"
    },
    "981": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "AND",
      "path": "0"
    },
    "982": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "DUP3",
      "path": "0"
    },
    "983": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "ADD",
      "path": "0"
    },
    "984": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "DUP1",
      "path": "0"
    },
    "985": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "987": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "988": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "POP",
      "path": "0"
    },
    "989": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "DUP2",
      "path": "0"
    },
    "990": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "ADD",
      "path": "0"
    },
    "991": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "992": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E9"
    },
    "995": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "996": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "997": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E4"
    },
    "1000": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "jump": "i",
      "offset": [
        5616,
        5686
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1001": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5616,
        5686
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1002": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5609,
        5686
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1003": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "offset": [
        5520,
        5693
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1004": {
      "op": "POP"
    },
    "1005": {
      "op": "POP"
    },
    "1006": {
      "fn": "AirdropToken.amtOutForChoiceInForge",
      "jump": "o",
      "offset": [
        5520,
        5693
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1007": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4783,
        5174
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1008": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4866,
        4883
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1"
    },
    "1010": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4866,
        4883
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1011": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1013": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1014": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1021": {
      "op": "SHL"
    },
    "1022": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1023": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1024": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4898,
        4908
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1025": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1027": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1028": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "ADD",
      "path": "0"
    },
    "1029": {
      "op": "MSTORE"
    },
    "1030": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4918,
        4922
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1033": {
      "op": "DUP3"
    },
    "1034": {
      "op": "ADD"
    },
    "1035": {
      "op": "MSTORE"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1038": {
      "op": "DUP2"
    },
    "1039": {
      "op": "ADD"
    },
    "1040": {
      "op": "DUP4"
    },
    "1041": {
      "op": "SWAP1"
    },
    "1042": {
      "op": "MSTORE"
    },
    "1043": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4827,
        4839
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1045": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4827,
        4839
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1052": {
      "op": "SHL"
    },
    "1053": {
      "op": "SUB"
    },
    "1054": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4866,
        4883
      ],
      "op": "AND",
      "path": "0"
    },
    "1055": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4866,
        4883
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1056": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4897
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "1061": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4897
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1064": {
      "op": "ADD"
    },
    "1065": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1067": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1069": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1070": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1071": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1072": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "SUB",
      "path": "0"
    },
    "1073": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1074": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1076": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1077": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "GAS",
      "path": "0"
    },
    "1078": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "CALL",
      "path": "0"
    },
    "1079": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1080": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1081": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1082": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x447"
    },
    "1085": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1086": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1087": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1089": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1090": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1091": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1092": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1094": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1095": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1096": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "POP",
      "path": "0"
    },
    "1097": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "POP",
      "path": "0"
    },
    "1098": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "POP",
      "path": "0"
    },
    "1099": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "POP",
      "path": "0"
    },
    "1100": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1102": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1103": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1104": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1106": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "NOT",
      "path": "0"
    },
    "1107": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1109": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1110": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "ADD",
      "path": "0"
    },
    "1111": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "AND",
      "path": "0"
    },
    "1112": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1113": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "ADD",
      "path": "0"
    },
    "1114": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1115": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1117": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1118": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "POP",
      "path": "0"
    },
    "1119": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1120": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "ADD",
      "path": "0"
    },
    "1121": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1122": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46B"
    },
    "1125": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1126": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1127": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FD"
    },
    "1130": {
      "fn": "AirdropToken.Donation",
      "jump": "i",
      "offset": [
        4859,
        4929
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1131": {
      "branch": 45,
      "fn": "AirdropToken.Donation",
      "offset": [
        4859,
        4929
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1132": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AC"
    },
    "1135": {
      "branch": 45,
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1136": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1138": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1139": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1145": {
      "op": "SHL"
    },
    "1146": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1147": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1150": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1152": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1153": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "ADD",
      "path": "0"
    },
    "1154": {
      "op": "MSTORE"
    },
    "1155": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1159": {
      "op": "DUP3"
    },
    "1160": {
      "op": "ADD"
    },
    "1161": {
      "op": "MSTORE"
    },
    "1162": {
      "op": "PUSH13",
      "value": "0x1D1C985B9CD9995C8819985A5B"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "1178": {
      "op": "SHL"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1181": {
      "op": "DUP3"
    },
    "1182": {
      "op": "ADD"
    },
    "1183": {
      "op": "MSTORE"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1186": {
      "op": "ADD"
    },
    "1187": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1188": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1190": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1191": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1192": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1193": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "SUB",
      "path": "0"
    },
    "1194": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1195": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1196": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4851,
        4947
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1197": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4964,
        4981
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x1"
    },
    "1199": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4964,
        4981
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1200": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4991,
        5016
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1202": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4991,
        5016
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1203": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1205": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1206": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1213": {
      "op": "SHL"
    },
    "1214": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1215": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1222": {
      "op": "SHL"
    },
    "1223": {
      "op": "SUB"
    },
    "1224": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4991,
        5016
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1225": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4991,
        5016
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1226": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4991,
        5016
      ],
      "op": "AND",
      "path": "0"
    },
    "1227": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1229": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1230": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "ADD",
      "path": "0"
    },
    "1231": {
      "op": "MSTORE"
    },
    "1232": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5018,
        5069
      ],
      "op": "PUSH22",
      "path": "0",
      "value": "0x2AC3A4EDBBFB8014E3BA83411E915E7FFFFFFFFFFFF"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1257": {
      "op": "DUP3"
    },
    "1258": {
      "op": "ADD"
    },
    "1259": {
      "op": "MSTORE"
    },
    "1260": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4964,
        4981
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1261": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4964,
        4981
      ],
      "op": "AND",
      "path": "0"
    },
    "1262": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4964,
        4981
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1263": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        4990
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "1268": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        4990
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1271": {
      "op": "ADD"
    },
    "1272": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1274": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1276": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1277": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1278": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1279": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "SUB",
      "path": "0"
    },
    "1280": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1281": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1283": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1284": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "GAS",
      "path": "0"
    },
    "1285": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "CALL",
      "path": "0"
    },
    "1286": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1287": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1288": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1289": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x516"
    },
    "1292": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1293": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1294": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1296": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1297": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1298": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1299": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1301": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1302": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1303": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "POP",
      "path": "0"
    },
    "1304": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "POP",
      "path": "0"
    },
    "1305": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "POP",
      "path": "0"
    },
    "1306": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "POP",
      "path": "0"
    },
    "1307": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1309": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1310": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1311": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1313": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "NOT",
      "path": "0"
    },
    "1314": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1316": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1317": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "ADD",
      "path": "0"
    },
    "1318": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "AND",
      "path": "0"
    },
    "1319": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1320": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "ADD",
      "path": "0"
    },
    "1321": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1322": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1324": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1325": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "POP",
      "path": "0"
    },
    "1326": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1327": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "ADD",
      "path": "0"
    },
    "1328": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1329": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x53A"
    },
    "1332": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1333": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1334": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FD"
    },
    "1337": {
      "fn": "AirdropToken.Donation",
      "jump": "i",
      "offset": [
        4957,
        5070
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1338": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4957,
        5070
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1339": {
      "op": "POP"
    },
    "1340": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5091,
        5116
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x2"
    },
    "1342": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5091,
        5116
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1343": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1345": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1346": {
      "op": "PUSH4",
      "value": "0x5DC8121"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "1353": {
      "op": "SHL"
    },
    "1354": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1355": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1356": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5135,
        5139
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1357": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1359": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1360": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "ADD",
      "path": "0"
    },
    "1361": {
      "op": "MSTORE"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1364": {
      "op": "DUP2"
    },
    "1365": {
      "op": "ADD"
    },
    "1366": {
      "op": "DUP5"
    },
    "1367": {
      "op": "SWAP1"
    },
    "1368": {
      "op": "MSTORE"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1375": {
      "op": "SHL"
    },
    "1376": {
      "op": "SUB"
    },
    "1377": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5091,
        5116
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1378": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5091,
        5116
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1379": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5091,
        5116
      ],
      "op": "AND",
      "path": "0"
    },
    "1380": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5091,
        5116
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1381": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5126
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2EE40908"
    },
    "1386": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5126
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1389": {
      "op": "ADD"
    },
    "1390": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1392": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1394": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1395": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1396": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1397": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "SUB",
      "path": "0"
    },
    "1398": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1399": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1401": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1402": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1403": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1404": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1405": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1406": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1407": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x587"
    },
    "1410": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1411": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1413": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1414": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1415": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1416": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "POP",
      "path": "0"
    },
    "1417": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "GAS",
      "path": "0"
    },
    "1418": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "CALL",
      "path": "0"
    },
    "1419": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1420": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1421": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1422": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59B"
    },
    "1425": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1426": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1427": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1429": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1430": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1431": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1432": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1434": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1435": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5080,
        5146
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1436": {
      "op": "POP"
    },
    "1437": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5163,
        5167
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x1"
    },
    "1439": {
      "fn": "AirdropToken.Donation",
      "offset": [
        5163,
        5167
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1440": {
      "fn": "AirdropToken.Donation",
      "offset": [
        4783,
        5174
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1441": {
      "op": "POP"
    },
    "1442": {
      "op": "POP"
    },
    "1443": {
      "op": "POP"
    },
    "1444": {
      "op": "POP"
    },
    "1445": {
      "op": "POP"
    },
    "1446": {
      "fn": "AirdropToken.Donation",
      "jump": "o",
      "offset": [
        4783,
        5174
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1447": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6573,
        6962
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1448": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6690,
        6704
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x5"
    },
    "1450": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6690,
        6704
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1451": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6717,
        6745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1453": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6717,
        6745
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1460": {
      "op": "SHL"
    },
    "1461": {
      "op": "SUB"
    },
    "1462": {
      "op": "NOT"
    },
    "1463": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6734,
        6744
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1466": {
      "op": "SHL"
    },
    "1467": {
      "op": "AND"
    },
    "1468": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6717,
        6745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1470": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6717,
        6745
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1471": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6717,
        6745
      ],
      "op": "ADD",
      "path": "0"
    },
    "1472": {
      "op": "MSTORE"
    },
    "1473": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6658,
        6748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CE"
    },
    "1476": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6658,
        6748
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1477": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6677,
        6688
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1478": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6677,
        6688
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1481": {
      "op": "ADD"
    },
    "1482": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6717,
        6745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DD"
    },
    "1485": {
      "op": "JUMP"
    },
    "1486": {
      "branch": 46,
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6658,
        6748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1487": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6649,
        6767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5EA"
    },
    "1490": {
      "branch": 46,
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6649,
        6767
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1491": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6649,
        6767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1493": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6649,
        6767
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1494": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6649,
        6767
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1502": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6649,
        6767
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1503": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6649,
        6767
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1505": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6649,
        6767
      ],
      "op": "ADD",
      "path": "0"
    },
    "1506": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6649,
        6767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "1509": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6649,
        6767
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1510": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6649,
        6767
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131F"
    },
    "1513": {
      "fn": "AirdropToken.mintWithProofMid",
      "jump": "i",
      "offset": [
        6649,
        6767
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1514": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6649,
        6767
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1515": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6797,
        6807
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 11
    },
    "1516": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1518": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1519": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6808
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1520": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1521": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1523": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1525": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6808
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1526": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1528": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6808
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1529": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6808
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1530": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6808
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1531": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1533": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6808
      ],
      "op": "AND",
      "path": "0"
    },
    "1534": {
      "branch": 47,
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6786,
        6817
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1535": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6778,
        6837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61A"
    },
    "1538": {
      "branch": 47,
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6778,
        6837
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1539": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6778,
        6837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1541": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6778,
        6837
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1542": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1546": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1548": {
      "op": "SHL"
    },
    "1549": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6778,
        6837
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1550": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6778,
        6837
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1551": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6778,
        6837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1553": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6778,
        6837
      ],
      "op": "ADD",
      "path": "0"
    },
    "1554": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6778,
        6837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "1557": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6778,
        6837
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1558": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6778,
        6837
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1346"
    },
    "1561": {
      "fn": "AirdropToken.mintWithProofMid",
      "jump": "i",
      "offset": [
        6778,
        6837
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1562": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6778,
        6837
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1563": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6859,
        6869
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 12
    },
    "1564": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1566": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6870
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1567": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6870
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1568": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6870
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1569": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6858
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1571": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1573": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6870
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1574": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1576": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6870
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1577": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6870
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1578": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6875
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1579": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6875
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1582": {
      "op": "NOT"
    },
    "1583": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6875
      ],
      "op": "AND",
      "path": "0"
    },
    "1584": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6871,
        6875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1586": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1587": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6875
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1588": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6875
      ],
      "op": "OR",
      "path": "0"
    },
    "1589": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1590": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6875
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1591": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6848,
        6875
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1592": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6901,
        6918
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 13
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1599": {
      "op": "SHL"
    },
    "1600": {
      "op": "SUB"
    },
    "1601": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6901,
        6918
      ],
      "op": "AND",
      "path": "0"
    },
    "1602": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6901,
        6918
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1603": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6928
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "1608": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6928
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1609": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6942,
        6954
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x652"
    },
    "1612": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6952,
        6953
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1614": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6942,
        6951
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C5"
    },
    "1617": {
      "fn": "AirdropToken.mintWithProofMid",
      "jump": "i",
      "offset": [
        6942,
        6954
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1618": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6942,
        6954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1619": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1621": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1628": {
      "op": "SHL"
    },
    "1629": {
      "op": "SUB"
    },
    "1630": {
      "op": "NOT"
    },
    "1631": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1633": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1634": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1635": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "SHL",
      "path": "0"
    },
    "1636": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "AND",
      "path": "0"
    },
    "1637": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1638": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1645": {
      "op": "SHL"
    },
    "1646": {
      "op": "SUB"
    },
    "1647": {
      "op": "SWAP1"
    },
    "1648": {
      "op": "SWAP3"
    },
    "1649": {
      "op": "AND"
    },
    "1650": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1652": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1653": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "ADD",
      "path": "0"
    },
    "1654": {
      "op": "MSTORE"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1657": {
      "op": "DUP3"
    },
    "1658": {
      "op": "ADD"
    },
    "1659": {
      "op": "MSTORE"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1662": {
      "op": "ADD"
    },
    "1663": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1665": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1667": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1668": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1669": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1670": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "SUB",
      "path": "0"
    },
    "1671": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1672": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1674": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1675": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "GAS",
      "path": "0"
    },
    "1676": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "CALL",
      "path": "0"
    },
    "1677": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1678": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1679": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1680": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x69D"
    },
    "1683": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1684": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1685": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1687": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1688": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1689": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1690": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1692": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1693": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1694": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "POP",
      "path": "0"
    },
    "1695": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "POP",
      "path": "0"
    },
    "1696": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "POP",
      "path": "0"
    },
    "1697": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "POP",
      "path": "0"
    },
    "1698": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1700": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1701": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1702": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1704": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "NOT",
      "path": "0"
    },
    "1705": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1707": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1708": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "ADD",
      "path": "0"
    },
    "1709": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "AND",
      "path": "0"
    },
    "1710": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1711": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "ADD",
      "path": "0"
    },
    "1712": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1713": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1715": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1716": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "POP",
      "path": "0"
    },
    "1717": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1718": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "ADD",
      "path": "0"
    },
    "1719": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1720": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C1"
    },
    "1723": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1724": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1725": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FD"
    },
    "1728": {
      "fn": "AirdropToken.mintWithProofMid",
      "jump": "i",
      "offset": [
        6894,
        6955
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1729": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1730": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6894,
        6955
      ],
      "op": "POP",
      "path": "0"
    },
    "1731": {
      "fn": "AirdropToken.mintWithProofMid",
      "offset": [
        6573,
        6962
      ],
      "op": "POP",
      "path": "0"
    },
    "1732": {
      "fn": "AirdropToken.mintWithProofMid",
      "jump": "o",
      "offset": [
        6573,
        6962
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1733": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5699,
        6153
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1734": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5752,
        5763
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1736": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5774,
        5788
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1737": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5809,
        5818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "1739": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5809,
        5818
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1740": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5791,
        5806
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "1741": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5791,
        5818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D6"
    },
    "1744": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5791,
        5818
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1745": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5791,
        5818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1746": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5791,
        5818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1385"
    },
    "1749": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5791,
        5818
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1750": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5791,
        5818
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1751": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5774,
        5818
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1752": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5774,
        5818
      ],
      "op": "POP",
      "path": "0"
    },
    "1753": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5840,
        5845
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1755": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5840,
        5845
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1756": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5831,
        5837
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1757": {
      "branch": 48,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5831,
        5845
      ],
      "op": "GT",
      "path": "0"
    },
    "1758": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5828,
        5885
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1759": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5828,
        5885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E7"
    },
    "1762": {
      "branch": 48,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5828,
        5885
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1763": {
      "op": "POP"
    },
    "1764": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5869,
        5874
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0xA"
    },
    "1766": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5869,
        5874
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1767": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5828,
        5885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1768": {
      "branch": 49,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5897,
        5908
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1769": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5894,
        6130
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x723"
    },
    "1772": {
      "branch": 49,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5894,
        6130
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1773": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5954,
        5959
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0xA"
    },
    "1775": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5954,
        5959
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1776": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5944,
        5950
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1777": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1779": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5939,
        5940
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1781": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1782": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1783": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1784": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "LT",
      "path": "0"
    },
    "1785": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1788": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1789": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1792": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CE"
    },
    "1795": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5930,
        5941
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1796": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1797": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1798": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1800": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1801": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1803": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1805": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1806": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "ADD",
      "path": "0"
    },
    "1807": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5941
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1808": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x719"
    },
    "1811": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5950
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1812": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5950
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1813": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139C"
    },
    "1816": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5930,
        5950
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1817": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5930,
        5950
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1818": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5929,
        5959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x345"
    },
    "1821": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5929,
        5959
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1822": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5929,
        5959
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1823": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5929,
        5959
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13BB"
    },
    "1826": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        5929,
        5959
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1827": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5894,
        6130
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1828": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5978,
        5984
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1829": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5987,
        5988
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1831": {
      "branch": 50,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5978,
        5988
      ],
      "op": "EQ",
      "path": "0"
    },
    "1832": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5975,
        6130
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1833": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5975,
        6130
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x744"
    },
    "1836": {
      "branch": 50,
      "fn": "AirdropToken.amountOut",
      "offset": [
        5975,
        6130
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1837": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6034,
        6039
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0xA"
    },
    "1839": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6034,
        6039
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1840": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6024,
        6030
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1841": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6010,
        6018
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1843": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6019,
        6020
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1845": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6010,
        6021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1846": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6010,
        6021
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1847": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6010,
        6021
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1848": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6010,
        6021
      ],
      "op": "LT",
      "path": "0"
    },
    "1849": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6010,
        6021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1852": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6010,
        6021
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1853": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6010,
        6021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1856": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6010,
        6021
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CE"
    },
    "1859": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        6010,
        6021
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1860": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5975,
        6130
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1861": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6058,
        6064
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1862": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6067,
        6068
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1864": {
      "branch": 51,
      "fn": "AirdropToken.amountOut",
      "offset": [
        6058,
        6068
      ],
      "op": "EQ",
      "path": "0"
    },
    "1865": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6055,
        6130
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1866": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6055,
        6130
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x765"
    },
    "1869": {
      "branch": 51,
      "fn": "AirdropToken.amountOut",
      "offset": [
        6055,
        6130
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1870": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6114,
        6119
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0xA"
    },
    "1872": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6114,
        6119
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1873": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6104,
        6110
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1874": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6090,
        6098
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1876": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6099,
        6100
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1878": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6090,
        6101
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1879": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6090,
        6101
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1880": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6090,
        6101
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1881": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6090,
        6101
      ],
      "op": "LT",
      "path": "0"
    },
    "1882": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6090,
        6101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1885": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6090,
        6101
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1886": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6090,
        6101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "1889": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6090,
        6101
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CE"
    },
    "1892": {
      "fn": "AirdropToken.amountOut",
      "jump": "i",
      "offset": [
        6090,
        6101
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1893": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6055,
        6130
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1894": {
      "op": "POP"
    },
    "1895": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6146,
        6147
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x0"
    },
    "1897": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        6146,
        6147
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1898": {
      "fn": "AirdropToken.amountOut",
      "offset": [
        5699,
        6153
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1899": {
      "op": "POP"
    },
    "1900": {
      "op": "POP"
    },
    "1901": {
      "fn": "AirdropToken.amountOut",
      "jump": "o",
      "offset": [
        5699,
        6153
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1902": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5181,
        5514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1903": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5221,
        5233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1905": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5253,
        5265
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1906": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5442,
        5467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1908": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5442,
        5467
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1910": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5442,
        5467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1911": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5442,
        5467
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1912": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5442,
        5467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1913": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5442,
        5467
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1916": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5442,
        5467
      ],
      "op": "EXP",
      "path": "0"
    },
    "1917": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5442,
        5467
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1918": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5442,
        5467
      ],
      "op": "DIV",
      "path": "0"
    },
    "1919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1925": {
      "op": "SHL"
    },
    "1926": {
      "op": "SUB"
    },
    "1927": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5442,
        5467
      ],
      "op": "AND",
      "path": "0"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1934": {
      "op": "SHL"
    },
    "1935": {
      "op": "SUB"
    },
    "1936": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5480
      ],
      "op": "AND",
      "path": "0"
    },
    "1937": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5480
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "1942": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1944": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1945": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1946": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1951": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "AND",
      "path": "0"
    },
    "1952": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "1954": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "SHL",
      "path": "0"
    },
    "1955": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1956": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1957": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1959": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "ADD",
      "path": "0"
    },
    "1960": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1962": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1964": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1965": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1966": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1967": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "SUB",
      "path": "0"
    },
    "1968": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1969": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1970": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "GAS",
      "path": "0"
    },
    "1971": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "1972": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1973": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1974": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1975": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7C4"
    },
    "1978": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1979": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1980": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1982": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1983": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1984": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1985": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1987": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1988": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1989": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "POP",
      "path": "0"
    },
    "1990": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "POP",
      "path": "0"
    },
    "1991": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "POP",
      "path": "0"
    },
    "1992": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "POP",
      "path": "0"
    },
    "1993": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1995": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1996": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1997": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1999": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "NOT",
      "path": "0"
    },
    "2000": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2002": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2003": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "ADD",
      "path": "0"
    },
    "2004": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "AND",
      "path": "0"
    },
    "2005": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2006": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "ADD",
      "path": "0"
    },
    "2007": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2008": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2010": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2011": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "POP",
      "path": "0"
    },
    "2012": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2013": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "ADD",
      "path": "0"
    },
    "2014": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2015": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7E8"
    },
    "2018": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2019": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2020": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E4"
    },
    "2023": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        5431,
        5482
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2024": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5431,
        5482
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2025": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5387,
        5412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2027": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5387,
        5412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2029": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5387,
        5412
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2030": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5387,
        5412
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2031": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5387,
        5412
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2032": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5387,
        5412
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2035": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5387,
        5412
      ],
      "op": "EXP",
      "path": "0"
    },
    "2036": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5387,
        5412
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2037": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5387,
        5412
      ],
      "op": "DIV",
      "path": "0"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2042": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2044": {
      "op": "SHL"
    },
    "2045": {
      "op": "SUB"
    },
    "2046": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5387,
        5412
      ],
      "op": "AND",
      "path": "0"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2053": {
      "op": "SHL"
    },
    "2054": {
      "op": "SUB"
    },
    "2055": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5424
      ],
      "op": "AND",
      "path": "0"
    },
    "2056": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5424
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF03D6672"
    },
    "2061": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2063": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2064": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2065": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2070": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "AND",
      "path": "0"
    },
    "2071": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2073": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "SHL",
      "path": "0"
    },
    "2074": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2075": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2076": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2078": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "ADD",
      "path": "0"
    },
    "2079": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2081": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2083": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2084": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2085": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2086": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "SUB",
      "path": "0"
    },
    "2087": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2088": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2089": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "GAS",
      "path": "0"
    },
    "2090": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2091": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2092": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2093": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2094": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83B"
    },
    "2097": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2098": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2099": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2101": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2102": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2103": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2104": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2106": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2107": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2108": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "POP",
      "path": "0"
    },
    "2109": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "POP",
      "path": "0"
    },
    "2110": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "POP",
      "path": "0"
    },
    "2111": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "POP",
      "path": "0"
    },
    "2112": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2114": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2115": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2116": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2118": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "NOT",
      "path": "0"
    },
    "2119": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2121": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2122": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "ADD",
      "path": "0"
    },
    "2123": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "AND",
      "path": "0"
    },
    "2124": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2125": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "ADD",
      "path": "0"
    },
    "2126": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2127": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2129": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2130": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "POP",
      "path": "0"
    },
    "2131": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2132": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "ADD",
      "path": "0"
    },
    "2133": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2134": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x85F"
    },
    "2137": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2138": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2139": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E4"
    },
    "2142": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        5376,
        5426
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2143": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5376,
        5426
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2144": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5317,
        5334
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2146": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5317,
        5334
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2147": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5347,
        5372
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2149": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5347,
        5372
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2150": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2152": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2153": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2160": {
      "op": "SHL"
    },
    "2161": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2162": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2169": {
      "op": "SHL"
    },
    "2170": {
      "op": "SUB"
    },
    "2171": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5347,
        5372
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2172": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5347,
        5372
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2173": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5347,
        5372
      ],
      "op": "AND",
      "path": "0"
    },
    "2174": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2176": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2177": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "ADD",
      "path": "0"
    },
    "2178": {
      "op": "MSTORE"
    },
    "2179": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5317,
        5334
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2180": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5317,
        5334
      ],
      "op": "AND",
      "path": "0"
    },
    "2181": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5317,
        5334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2182": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5346
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "2187": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2190": {
      "op": "ADD"
    },
    "2191": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2193": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2195": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2196": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2197": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2198": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "SUB",
      "path": "0"
    },
    "2199": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2200": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2201": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "GAS",
      "path": "0"
    },
    "2202": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2203": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2204": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2205": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2206": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8AB"
    },
    "2209": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2210": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2211": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2213": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2214": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2215": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2216": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2218": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2219": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2220": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "POP",
      "path": "0"
    },
    "2221": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "POP",
      "path": "0"
    },
    "2222": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "POP",
      "path": "0"
    },
    "2223": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "POP",
      "path": "0"
    },
    "2224": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2226": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2227": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2228": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2230": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "NOT",
      "path": "0"
    },
    "2231": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2233": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2234": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "ADD",
      "path": "0"
    },
    "2235": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "AND",
      "path": "0"
    },
    "2236": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2237": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "ADD",
      "path": "0"
    },
    "2238": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2239": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2241": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2242": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "POP",
      "path": "0"
    },
    "2243": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2244": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "ADD",
      "path": "0"
    },
    "2245": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2246": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8CF"
    },
    "2249": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2250": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2251": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E4"
    },
    "2254": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        5302,
        5373
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2255": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5373
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2256": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5426
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D9"
    },
    "2259": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5426
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2260": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5426
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2261": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5426
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1385"
    },
    "2264": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        5302,
        5426
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2265": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5302,
        5426
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2266": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5295,
        5428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E5"
    },
    "2269": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5295,
        5428
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2270": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5295,
        5298
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CF"
    },
    "2273": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5295,
        5428
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139C"
    },
    "2276": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        5295,
        5428
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2277": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5295,
        5428
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2278": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5295,
        5482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EF"
    },
    "2281": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5295,
        5482
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2282": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5295,
        5482
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2283": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5295,
        5482
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13BB"
    },
    "2286": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        5295,
        5482
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2287": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5295,
        5482
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2288": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5268,
        5484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3E9"
    },
    "2291": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5268,
        5484
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2292": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5269,
        5289
      ],
      "op": "PUSH10",
      "path": "0",
      "value": "0x21E19E0C9BAB2400000"
    },
    "2303": {
      "fn": "AirdropToken.perfect",
      "offset": [
        5268,
        5484
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13BB"
    },
    "2306": {
      "fn": "AirdropToken.perfect",
      "jump": "i",
      "offset": [
        5268,
        5484
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2307": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3820,
        4776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2308": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3908,
        3933
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2310": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3908,
        3933
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2311": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2313": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2314": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2321": {
      "op": "SHL"
    },
    "2322": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2323": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2324": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4005,
        4009
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2325": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2327": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2328": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "ADD",
      "path": "0"
    },
    "2329": {
      "op": "MSTORE"
    },
    "2330": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3863,
        3875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2332": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3863,
        3875
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2339": {
      "op": "SHL"
    },
    "2340": {
      "op": "SUB"
    },
    "2341": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3908,
        3933
      ],
      "op": "AND",
      "path": "0"
    },
    "2342": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3908,
        3933
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2343": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        3948
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAFCF89AA"
    },
    "2348": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        3948
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2349": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3908,
        3933
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2350": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3908,
        3933
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2351": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        3996
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "2356": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        3996
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2359": {
      "op": "ADD"
    },
    "2360": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2362": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2364": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2365": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2366": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2367": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "SUB",
      "path": "0"
    },
    "2368": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2369": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2370": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "GAS",
      "path": "0"
    },
    "2371": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2372": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2373": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2374": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2375": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x954"
    },
    "2378": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2379": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2380": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2382": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2383": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2384": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2385": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2387": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2388": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2389": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "POP",
      "path": "0"
    },
    "2390": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "POP",
      "path": "0"
    },
    "2391": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "POP",
      "path": "0"
    },
    "2392": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "POP",
      "path": "0"
    },
    "2393": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2395": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2396": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2397": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2399": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "NOT",
      "path": "0"
    },
    "2400": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2402": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2403": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "ADD",
      "path": "0"
    },
    "2404": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "AND",
      "path": "0"
    },
    "2405": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2406": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "ADD",
      "path": "0"
    },
    "2407": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2408": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2410": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2411": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "POP",
      "path": "0"
    },
    "2412": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2413": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "ADD",
      "path": "0"
    },
    "2414": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2415": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x978"
    },
    "2418": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2419": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2420": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E4"
    },
    "2423": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        3949,
        4011
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2424": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3949,
        4011
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2425": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2427": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2428": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2429": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2434": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "AND",
      "path": "0"
    },
    "2435": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2437": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "SHL",
      "path": "0"
    },
    "2438": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2439": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2440": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2442": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "ADD",
      "path": "0"
    },
    "2443": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x996"
    },
    "2446": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2447": {
      "op": "DUP2"
    },
    "2448": {
      "op": "MSTORE"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2451": {
      "op": "ADD"
    },
    "2452": {
      "op": "SWAP1"
    },
    "2453": {
      "op": "JUMP"
    },
    "2454": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2455": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2457": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2459": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2460": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2461": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2462": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "SUB",
      "path": "0"
    },
    "2463": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2464": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2465": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "GAS",
      "path": "0"
    },
    "2466": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2467": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2468": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2469": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2470": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B3"
    },
    "2473": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2474": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2475": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2477": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2478": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2479": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2480": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2482": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2483": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2484": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "POP",
      "path": "0"
    },
    "2485": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "POP",
      "path": "0"
    },
    "2486": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "POP",
      "path": "0"
    },
    "2487": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "POP",
      "path": "0"
    },
    "2488": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2490": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2491": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2492": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2494": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "NOT",
      "path": "0"
    },
    "2495": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2497": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2498": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "ADD",
      "path": "0"
    },
    "2499": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "AND",
      "path": "0"
    },
    "2500": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2501": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "ADD",
      "path": "0"
    },
    "2502": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2503": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2505": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2506": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "POP",
      "path": "0"
    },
    "2507": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2508": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "ADD",
      "path": "0"
    },
    "2509": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2510": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9D7"
    },
    "2513": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2514": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2515": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E4"
    },
    "2518": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        3897,
        4012
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2519": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3897,
        4012
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2520": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3890,
        3893
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2521": {
      "branch": 52,
      "fn": "AirdropToken.deposit",
      "offset": [
        3890,
        4012
      ],
      "op": "GT",
      "path": "0"
    },
    "2522": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3887,
        4748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EC"
    },
    "2525": {
      "branch": 52,
      "fn": "AirdropToken.deposit",
      "offset": [
        3887,
        4748
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2526": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4027,
        4040
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x9E6"
    },
    "2529": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4036,
        4039
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2530": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4027,
        4035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EF"
    },
    "2533": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        4027,
        4040
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2534": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4027,
        4040
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2535": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4027,
        4040
      ],
      "op": "POP",
      "path": "0"
    },
    "2536": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3887,
        4748
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5F"
    },
    "2539": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3887,
        4748
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2540": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3887,
        4748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2541": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4094,
        4119
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 20,
      "value": "0x2"
    },
    "2543": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4094,
        4119
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2544": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2546": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2547": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2554": {
      "op": "SHL"
    },
    "2555": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2556": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2557": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4191,
        4195
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2558": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2560": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2561": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "ADD",
      "path": "0"
    },
    "2562": {
      "op": "MSTORE"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2569": {
      "op": "SHL"
    },
    "2570": {
      "op": "SUB"
    },
    "2571": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4094,
        4119
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2572": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4094,
        4119
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2573": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4094,
        4119
      ],
      "op": "AND",
      "path": "0"
    },
    "2574": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4094,
        4119
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2575": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4134
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAFCF89AA"
    },
    "2580": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4134
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2581": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4094,
        4119
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2582": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4094,
        4119
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2583": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4182
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "2588": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4182
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2591": {
      "op": "ADD"
    },
    "2592": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2594": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2596": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2597": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2598": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2599": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "SUB",
      "path": "0"
    },
    "2600": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2601": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2602": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "GAS",
      "path": "0"
    },
    "2603": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2604": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2605": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2606": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2607": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3C"
    },
    "2610": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2611": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2612": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2614": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2615": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2616": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2617": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2619": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2620": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2621": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "POP",
      "path": "0"
    },
    "2622": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "POP",
      "path": "0"
    },
    "2623": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "POP",
      "path": "0"
    },
    "2624": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "POP",
      "path": "0"
    },
    "2625": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2627": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2628": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2629": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2631": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "NOT",
      "path": "0"
    },
    "2632": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2634": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2635": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "ADD",
      "path": "0"
    },
    "2636": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "AND",
      "path": "0"
    },
    "2637": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2638": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "ADD",
      "path": "0"
    },
    "2639": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2640": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2642": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2643": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "POP",
      "path": "0"
    },
    "2644": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2645": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "ADD",
      "path": "0"
    },
    "2646": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2647": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA60"
    },
    "2650": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2651": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2652": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E4"
    },
    "2655": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        4135,
        4197
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2656": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4135,
        4197
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2657": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2659": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2660": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2661": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2666": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "AND",
      "path": "0"
    },
    "2667": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "2669": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "SHL",
      "path": "0"
    },
    "2670": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2671": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2672": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2674": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "ADD",
      "path": "0"
    },
    "2675": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7E"
    },
    "2678": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2679": {
      "op": "DUP2"
    },
    "2680": {
      "op": "MSTORE"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2683": {
      "op": "ADD"
    },
    "2684": {
      "op": "SWAP1"
    },
    "2685": {
      "op": "JUMP"
    },
    "2686": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2687": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2689": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2691": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2692": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2693": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2694": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "SUB",
      "path": "0"
    },
    "2695": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2696": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2697": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "GAS",
      "path": "0"
    },
    "2698": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2699": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2700": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2701": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2702": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA9B"
    },
    "2705": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2706": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2707": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2709": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2710": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2711": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2712": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2714": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2715": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2716": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "POP",
      "path": "0"
    },
    "2717": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "POP",
      "path": "0"
    },
    "2718": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "POP",
      "path": "0"
    },
    "2719": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "POP",
      "path": "0"
    },
    "2720": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2722": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2723": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2724": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2726": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "NOT",
      "path": "0"
    },
    "2727": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2729": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2730": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "ADD",
      "path": "0"
    },
    "2731": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "AND",
      "path": "0"
    },
    "2732": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2733": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "ADD",
      "path": "0"
    },
    "2734": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2735": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2737": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2738": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "POP",
      "path": "0"
    },
    "2739": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2740": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "ADD",
      "path": "0"
    },
    "2741": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2742": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABF"
    },
    "2745": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2746": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2747": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E4"
    },
    "2750": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        4083,
        4198
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2751": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4083,
        4198
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2752": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4077,
        4080
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2753": {
      "branch": 53,
      "fn": "AirdropToken.deposit",
      "offset": [
        4077,
        4198
      ],
      "op": "GT",
      "path": "0"
    },
    "2754": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4069,
        4247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB22"
    },
    "2757": {
      "branch": 53,
      "fn": "AirdropToken.deposit",
      "offset": [
        4069,
        4247
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2758": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4069,
        4247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2760": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4069,
        4247
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2761": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2767": {
      "op": "SHL"
    },
    "2768": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4069,
        4247
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2769": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4069,
        4247
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2772": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4069,
        4247
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2774": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4069,
        4247
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2775": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4069,
        4247
      ],
      "op": "ADD",
      "path": "0"
    },
    "2776": {
      "op": "MSTORE"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2781": {
      "op": "DUP3"
    },
    "2782": {
      "op": "ADD"
    },
    "2783": {
      "op": "MSTORE"
    },
    "2784": {
      "op": "PUSH32",
      "value": "0x6D7573742062652067726561746572207468616E2070726576696F757320746F"
    },
    "2817": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2819": {
      "op": "DUP3"
    },
    "2820": {
      "op": "ADD"
    },
    "2821": {
      "op": "MSTORE"
    },
    "2822": {
      "op": "PUSH12",
      "value": "0x1D185B081D1BC81C995CD95D"
    },
    "2835": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "2837": {
      "op": "SHL"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2840": {
      "op": "DUP3"
    },
    "2841": {
      "op": "ADD"
    },
    "2842": {
      "op": "MSTORE"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2845": {
      "op": "ADD"
    },
    "2846": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4069,
        4247
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "2849": {
      "op": "JUMP"
    },
    "2850": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4069,
        4247
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2851": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4276,
        4293
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0x1"
    },
    "2853": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4276,
        4293
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2854": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2856": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2857": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "2862": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2864": {
      "op": "SHL"
    },
    "2865": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2866": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2867": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4308,
        4318
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2868": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2870": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2871": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "ADD",
      "path": "0"
    },
    "2872": {
      "op": "MSTORE"
    },
    "2873": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4328,
        4332
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "2874": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2876": {
      "op": "DUP3"
    },
    "2877": {
      "op": "ADD"
    },
    "2878": {
      "op": "MSTORE"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2881": {
      "op": "DUP2"
    },
    "2882": {
      "op": "ADD"
    },
    "2883": {
      "op": "DUP5"
    },
    "2884": {
      "op": "SWAP1"
    },
    "2885": {
      "op": "MSTORE"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2892": {
      "op": "SHL"
    },
    "2893": {
      "op": "SUB"
    },
    "2894": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4276,
        4293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2895": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4276,
        4293
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2896": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4276,
        4293
      ],
      "op": "AND",
      "path": "0"
    },
    "2897": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4276,
        4293
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2898": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4307
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "2903": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4307
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2906": {
      "op": "ADD"
    },
    "2907": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2909": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2911": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2912": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2913": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2914": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "SUB",
      "path": "0"
    },
    "2915": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2916": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2918": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2919": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "GAS",
      "path": "0"
    },
    "2920": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "CALL",
      "path": "0"
    },
    "2921": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2922": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2923": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2924": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB79"
    },
    "2927": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2928": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2929": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2931": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2932": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2933": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2934": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2936": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2937": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2938": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "POP",
      "path": "0"
    },
    "2939": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "POP",
      "path": "0"
    },
    "2940": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "POP",
      "path": "0"
    },
    "2941": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "POP",
      "path": "0"
    },
    "2942": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2944": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2945": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2946": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2948": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "NOT",
      "path": "0"
    },
    "2949": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "2951": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2952": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "ADD",
      "path": "0"
    },
    "2953": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "AND",
      "path": "0"
    },
    "2954": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2955": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "ADD",
      "path": "0"
    },
    "2956": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2957": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2959": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2960": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "POP",
      "path": "0"
    },
    "2961": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2962": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "ADD",
      "path": "0"
    },
    "2963": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2964": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB9D"
    },
    "2967": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2968": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2969": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FD"
    },
    "2972": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        4269,
        4339
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2973": {
      "branch": 54,
      "fn": "AirdropToken.deposit",
      "offset": [
        4269,
        4339
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2974": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4261,
        4357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD9"
    },
    "2977": {
      "branch": 54,
      "fn": "AirdropToken.deposit",
      "offset": [
        4261,
        4357
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2978": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4261,
        4357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2980": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4261,
        4357
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2981": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2987": {
      "op": "SHL"
    },
    "2988": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4261,
        4357
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2989": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4261,
        4357
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2992": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4261,
        4357
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2994": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4261,
        4357
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2995": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4261,
        4357
      ],
      "op": "ADD",
      "path": "0"
    },
    "2996": {
      "op": "MSTORE"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2999": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3001": {
      "op": "DUP3"
    },
    "3002": {
      "op": "ADD"
    },
    "3003": {
      "op": "MSTORE"
    },
    "3004": {
      "op": "PUSH13",
      "value": "0x1D1C985B9CD9995C8819985A5B"
    },
    "3018": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "3020": {
      "op": "SHL"
    },
    "3021": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3023": {
      "op": "DUP3"
    },
    "3024": {
      "op": "ADD"
    },
    "3025": {
      "op": "MSTORE"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3028": {
      "op": "ADD"
    },
    "3029": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4261,
        4357
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "3032": {
      "op": "JUMP"
    },
    "3033": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4261,
        4357
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3034": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4383,
        4398
      ],
      "op": "TIMESTAMP",
      "path": "0",
      "statement": 22
    },
    "3035": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4371,
        4380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xB"
    },
    "3037": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4371,
        4398
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3038": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4419,
        4436
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x1"
    },
    "3040": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4419,
        4436
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3041": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4446,
        4471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3043": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4446,
        4471
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3044": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3046": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3047": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "3052": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3054": {
      "op": "SHL"
    },
    "3055": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3056": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3063": {
      "op": "SHL"
    },
    "3064": {
      "op": "SUB"
    },
    "3065": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4446,
        4471
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3066": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4446,
        4471
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3067": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4446,
        4471
      ],
      "op": "AND",
      "path": "0"
    },
    "3068": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3070": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3071": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "ADD",
      "path": "0"
    },
    "3072": {
      "op": "MSTORE"
    },
    "3073": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4473,
        4524
      ],
      "op": "PUSH22",
      "path": "0",
      "value": "0x2AC3A4EDBBFB8014E3BA83411E915E7FFFFFFFFFFFF"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3098": {
      "op": "DUP3"
    },
    "3099": {
      "op": "ADD"
    },
    "3100": {
      "op": "MSTORE"
    },
    "3101": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4419,
        4436
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3102": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4419,
        4436
      ],
      "op": "AND",
      "path": "0"
    },
    "3103": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4419,
        4436
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3104": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4445
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "3109": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4445
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3112": {
      "op": "ADD"
    },
    "3113": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3115": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3117": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3118": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3119": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3120": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "SUB",
      "path": "0"
    },
    "3121": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3122": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3124": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3125": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "GAS",
      "path": "0"
    },
    "3126": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "CALL",
      "path": "0"
    },
    "3127": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3128": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3129": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3130": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC47"
    },
    "3133": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3134": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3135": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3137": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3138": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3139": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3140": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3142": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3143": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3144": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "POP",
      "path": "0"
    },
    "3145": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "POP",
      "path": "0"
    },
    "3146": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "POP",
      "path": "0"
    },
    "3147": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "POP",
      "path": "0"
    },
    "3148": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3150": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3151": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3152": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3154": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "NOT",
      "path": "0"
    },
    "3155": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3157": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3158": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "ADD",
      "path": "0"
    },
    "3159": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "AND",
      "path": "0"
    },
    "3160": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3161": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "ADD",
      "path": "0"
    },
    "3162": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3163": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3165": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3166": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "POP",
      "path": "0"
    },
    "3167": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3168": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "ADD",
      "path": "0"
    },
    "3169": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3170": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6B"
    },
    "3173": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3174": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3175": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FD"
    },
    "3178": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        4412,
        4525
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3179": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4412,
        4525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3180": {
      "op": "POP"
    },
    "3181": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4550,
        4575
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x2"
    },
    "3183": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4550,
        4575
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3184": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3186": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3187": {
      "op": "PUSH4",
      "value": "0x5DC8121"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "3194": {
      "op": "SHL"
    },
    "3195": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3196": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3197": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4594,
        4598
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3198": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3200": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3201": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "ADD",
      "path": "0"
    },
    "3202": {
      "op": "MSTORE"
    },
    "3203": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3205": {
      "op": "DUP2"
    },
    "3206": {
      "op": "ADD"
    },
    "3207": {
      "op": "DUP5"
    },
    "3208": {
      "op": "SWAP1"
    },
    "3209": {
      "op": "MSTORE"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3216": {
      "op": "SHL"
    },
    "3217": {
      "op": "SUB"
    },
    "3218": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4550,
        4575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3219": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4550,
        4575
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3220": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4550,
        4575
      ],
      "op": "AND",
      "path": "0"
    },
    "3221": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4550,
        4575
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3222": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4585
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x2EE40908"
    },
    "3227": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4585
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3230": {
      "op": "ADD"
    },
    "3231": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3233": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3235": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3236": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3237": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3238": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "SUB",
      "path": "0"
    },
    "3239": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3240": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3242": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3243": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3244": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "3245": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3246": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3247": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3248": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB8"
    },
    "3251": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3252": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3254": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3255": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3256": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3257": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "POP",
      "path": "0"
    },
    "3258": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "GAS",
      "path": "0"
    },
    "3259": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "CALL",
      "path": "0"
    },
    "3260": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3261": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3262": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3263": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCCC"
    },
    "3266": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3267": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3268": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3270": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3271": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3272": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3273": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3275": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3276": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3277": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "POP",
      "path": "0"
    },
    "3278": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "POP",
      "path": "0"
    },
    "3279": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "POP",
      "path": "0"
    },
    "3280": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4539,
        4605
      ],
      "op": "POP",
      "path": "0"
    },
    "3281": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4619,
        4625
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3283": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4628,
        4637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCDA"
    },
    "3286": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4628,
        4635
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76E"
    },
    "3289": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        4628,
        4637
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3290": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4628,
        4637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3291": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4619,
        4637
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3292": {
      "op": "POP"
    },
    "3293": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4665,
        4671
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 25,
      "value": "0xCE7"
    },
    "3296": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4619,
        4637
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3297": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4669,
        4671
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3299": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4665,
        4671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139C"
    },
    "3302": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        4665,
        4671
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3303": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4665,
        4671
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3304": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4659
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "3306": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4660,
        4661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3308": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3309": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3310": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3311": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "LT",
      "path": "0"
    },
    "3312": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCFB"
    },
    "3315": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3316": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCFB"
    },
    "3319": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CE"
    },
    "3322": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        4651,
        4662
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3323": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3324": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3326": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3327": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3328": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3329": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3331": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3332": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3333": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3334": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4662
      ],
      "op": "ADD",
      "path": "0"
    },
    "3335": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4651,
        4671
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3336": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4699,
        4704
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 26,
      "value": "0xD12"
    },
    "3339": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4699,
        4700
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3340": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4703,
        4704
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3342": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4699,
        4704
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139C"
    },
    "3345": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        4699,
        4704
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3346": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4699,
        4704
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3347": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4693
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "3349": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4694,
        4695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3351": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3352": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3353": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3354": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "LT",
      "path": "0"
    },
    "3355": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD26"
    },
    "3358": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3359": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD26"
    },
    "3362": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CE"
    },
    "3365": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        4685,
        4696
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3366": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3367": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3369": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3370": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3371": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3372": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3374": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3375": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3376": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3377": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4696
      ],
      "op": "ADD",
      "path": "0"
    },
    "3378": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4685,
        4704
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3379": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4732,
        4737
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0xD3D"
    },
    "3382": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4732,
        4733
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3383": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4736,
        4737
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3385": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4732,
        4737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139C"
    },
    "3388": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        4732,
        4737
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3389": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4732,
        4737
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3390": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4726
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "3392": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4727,
        4728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3394": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3395": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3396": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3397": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "LT",
      "path": "0"
    },
    "3398": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD51"
    },
    "3401": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3402": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD51"
    },
    "3405": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CE"
    },
    "3408": {
      "fn": "AirdropToken.deposit",
      "jump": "i",
      "offset": [
        4718,
        4729
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3409": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3410": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3412": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3413": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3414": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3415": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3417": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3418": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3419": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3420": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4729
      ],
      "op": "ADD",
      "path": "0"
    },
    "3421": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4718,
        4737
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3422": {
      "op": "POP"
    },
    "3423": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3887,
        4748
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3424": {
      "op": "POP"
    },
    "3425": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4765,
        4769
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x1"
    },
    "3427": {
      "fn": "AirdropToken.deposit",
      "offset": [
        4765,
        4769
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3428": {
      "fn": "AirdropToken.deposit",
      "offset": [
        3820,
        4776
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3429": {
      "op": "POP"
    },
    "3430": {
      "fn": "AirdropToken.deposit",
      "jump": "o",
      "offset": [
        3820,
        4776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3431": {
      "offset": [
        2933,
        2965
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3432": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3434": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3435": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3436": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3437": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3438": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "LT",
      "path": "0"
    },
    "3439": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35C"
    },
    "3442": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3443": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3445": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3446": {
      "fn": "AirdropToken.deposit",
      "offset": [
        2933,
        2965
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3447": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6162,
        6563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3448": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6291,
        6305
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x4"
    },
    "3450": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6291,
        6305
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3451": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6318,
        6346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3453": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6318,
        6346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3460": {
      "op": "SHL"
    },
    "3461": {
      "op": "SUB"
    },
    "3462": {
      "op": "NOT"
    },
    "3463": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6335,
        6345
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3464": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3466": {
      "op": "SHL"
    },
    "3467": {
      "op": "AND"
    },
    "3468": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6318,
        6346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3470": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6318,
        6346
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3471": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6318,
        6346
      ],
      "op": "ADD",
      "path": "0"
    },
    "3472": {
      "op": "MSTORE"
    },
    "3473": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6259,
        6349
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9E"
    },
    "3476": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6259,
        6349
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3477": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6278,
        6289
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3478": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6278,
        6289
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3479": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "3481": {
      "op": "ADD"
    },
    "3482": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6318,
        6346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DD"
    },
    "3485": {
      "op": "JUMP"
    },
    "3486": {
      "branch": 55,
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6259,
        6349
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3487": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6250,
        6368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDBA"
    },
    "3490": {
      "branch": 55,
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6250,
        6368
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3491": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6250,
        6368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3493": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6250,
        6368
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3494": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3500": {
      "op": "SHL"
    },
    "3501": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6250,
        6368
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3502": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6250,
        6368
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3503": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6250,
        6368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3505": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6250,
        6368
      ],
      "op": "ADD",
      "path": "0"
    },
    "3506": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6250,
        6368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "3509": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6250,
        6368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3510": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6250,
        6368
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131F"
    },
    "3513": {
      "fn": "AirdropToken.mintWithProofTop",
      "jump": "i",
      "offset": [
        6250,
        6368
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3514": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6250,
        6368
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3515": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6398,
        6408
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 30
    },
    "3516": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3518": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6409
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3519": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6409
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3520": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6409
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3521": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "3523": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3525": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6409
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3526": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3528": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6409
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3529": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6409
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3530": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6409
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3531": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6409
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3533": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6409
      ],
      "op": "AND",
      "path": "0"
    },
    "3534": {
      "branch": 56,
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6387,
        6418
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3535": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6379,
        6438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDEA"
    },
    "3538": {
      "branch": 56,
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6379,
        6438
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3539": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6379,
        6438
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3541": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6379,
        6438
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3542": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3548": {
      "op": "SHL"
    },
    "3549": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6379,
        6438
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3550": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6379,
        6438
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3551": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6379,
        6438
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3553": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6379,
        6438
      ],
      "op": "ADD",
      "path": "0"
    },
    "3554": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6379,
        6438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "3557": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6379,
        6438
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3558": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6379,
        6438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1346"
    },
    "3561": {
      "fn": "AirdropToken.mintWithProofTop",
      "jump": "i",
      "offset": [
        6379,
        6438
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3562": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6379,
        6438
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3563": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6460,
        6470
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 31
    },
    "3564": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3566": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6471
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3567": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6471
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3568": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6471
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3569": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "3571": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3573": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6471
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3574": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3576": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6471
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3577": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6471
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3578": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6476
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3579": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6476
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3582": {
      "op": "NOT"
    },
    "3583": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6476
      ],
      "op": "AND",
      "path": "0"
    },
    "3584": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6472,
        6476
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3586": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6476
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3587": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6476
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3588": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6476
      ],
      "op": "OR",
      "path": "0"
    },
    "3589": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6476
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3590": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6476
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3591": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6449,
        6476
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3592": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6502,
        6519
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 32
    },
    "3593": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6502,
        6519
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3600": {
      "op": "SHL"
    },
    "3601": {
      "op": "SUB"
    },
    "3602": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6502,
        6519
      ],
      "op": "AND",
      "path": "0"
    },
    "3603": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6502,
        6519
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3604": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6495,
        6529
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "3609": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6495,
        6529
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3610": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6543,
        6555
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x652"
    },
    "3613": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6543,
        6555
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3614": {
      "fn": "AirdropToken.mintWithProofTop",
      "offset": [
        6543,
        6552
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C5"
    },
    "3617": {
      "fn": "AirdropToken.mintWithProofTop",
      "jump": "i",
      "offset": [
        6543,
        6555
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3618": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7007,
        7532
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3619": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7118,
        7156
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 33,
      "value": "0xE2D"
    },
    "3622": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7125,
        7136
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3623": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7138,
        7148
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3624": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7150,
        7155
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3625": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7118,
        7124
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28F"
    },
    "3628": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        7118,
        7156
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3629": {
      "branch": 57,
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7118,
        7156
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3630": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7109,
        7176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE49"
    },
    "3633": {
      "branch": 57,
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7109,
        7176
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3634": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7109,
        7176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3636": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7109,
        7176
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3637": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3641": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3643": {
      "op": "SHL"
    },
    "3644": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7109,
        7176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3645": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7109,
        7176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3646": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7109,
        7176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3648": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7109,
        7176
      ],
      "op": "ADD",
      "path": "0"
    },
    "3649": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7109,
        7176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "3652": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7109,
        7176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3653": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7109,
        7176
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x131F"
    },
    "3656": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        7109,
        7176
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3657": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7109,
        7176
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3658": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7206,
        7216
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 34
    },
    "3659": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3661": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3662": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7217
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3663": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7217
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3664": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7205
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "3666": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3668": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7217
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3669": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3671": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7217
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3672": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7217
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3673": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7217
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3674": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7217
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3676": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7217
      ],
      "op": "AND",
      "path": "0"
    },
    "3677": {
      "branch": 58,
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7195,
        7226
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3678": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7187,
        7246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE79"
    },
    "3681": {
      "branch": 58,
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7187,
        7246
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3682": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7187,
        7246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3684": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7187,
        7246
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3685": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3689": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3691": {
      "op": "SHL"
    },
    "3692": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7187,
        7246
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3693": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7187,
        7246
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3694": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7187,
        7246
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3696": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7187,
        7246
      ],
      "op": "ADD",
      "path": "0"
    },
    "3697": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7187,
        7246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "3700": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7187,
        7246
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3701": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7187,
        7246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1346"
    },
    "3704": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        7187,
        7246
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3705": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7187,
        7246
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3706": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7268,
        7278
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 35
    },
    "3707": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3709": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3710": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7279
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3711": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7279
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3712": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "3714": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3716": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7279
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3717": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7279
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3719": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7279
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3720": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7279
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3721": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7284
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3722": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7284
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3723": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3725": {
      "op": "NOT"
    },
    "3726": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7284
      ],
      "op": "AND",
      "path": "0"
    },
    "3727": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7280,
        7284
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3729": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7284
      ],
      "op": "OR",
      "path": "0"
    },
    "3730": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7284
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3731": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7257,
        7284
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3732": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7314,
        7339
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 36,
      "value": "0x2"
    },
    "3734": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7314,
        7339
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3741": {
      "op": "SHL"
    },
    "3742": {
      "op": "SUB"
    },
    "3743": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7314,
        7339
      ],
      "op": "AND",
      "path": "0"
    },
    "3744": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7349
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x441A3E70"
    },
    "3749": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7350,
        7366
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEAD"
    },
    "3752": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7360,
        7365
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3753": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7350,
        7359
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C5"
    },
    "3756": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        7350,
        7366
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3757": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7350,
        7366
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3758": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7368,
        7375
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3759": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3761": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3762": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3763": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3768": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "AND",
      "path": "0"
    },
    "3769": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "3771": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "SHL",
      "path": "0"
    },
    "3772": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3773": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3774": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3776": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "ADD",
      "path": "0"
    },
    "3777": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED4"
    },
    "3780": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3781": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3782": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3783": {
      "op": "SWAP2"
    },
    "3784": {
      "op": "DUP3"
    },
    "3785": {
      "op": "MSTORE"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3788": {
      "op": "DUP3"
    },
    "3789": {
      "op": "ADD"
    },
    "3790": {
      "op": "MSTORE"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3793": {
      "op": "ADD"
    },
    "3794": {
      "op": "SWAP1"
    },
    "3795": {
      "op": "JUMP"
    },
    "3796": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3797": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3799": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3801": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3802": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3803": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3804": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "SUB",
      "path": "0"
    },
    "3805": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3806": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3808": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3809": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3810": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "3811": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3812": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3813": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3814": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEEE"
    },
    "3817": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3818": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3820": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3821": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3822": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3823": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "POP",
      "path": "0"
    },
    "3824": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "GAS",
      "path": "0"
    },
    "3825": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "CALL",
      "path": "0"
    },
    "3826": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3827": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3828": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3829": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF02"
    },
    "3832": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3833": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3834": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3836": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3837": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3838": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3839": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3841": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3842": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7303,
        7376
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3843": {
      "op": "POP"
    },
    "3844": {
      "op": "POP"
    },
    "3845": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7401,
        7418
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 37,
      "value": "0x1"
    },
    "3847": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7401,
        7418
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3848": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3850": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3851": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3858": {
      "op": "SHL"
    },
    "3859": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3860": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3861": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7485,
        7489
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "3862": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3864": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3865": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "ADD",
      "path": "0"
    },
    "3866": {
      "op": "MSTORE"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3873": {
      "op": "SHL"
    },
    "3874": {
      "op": "SUB"
    },
    "3875": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7401,
        7418
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3876": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7401,
        7418
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3877": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7401,
        7418
      ],
      "op": "AND",
      "path": "0"
    },
    "3878": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7401,
        7418
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3879": {
      "op": "POP"
    },
    "3880": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7428
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "3885": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7428
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3886": {
      "op": "POP"
    },
    "3887": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7429,
        7439
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3888": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7429,
        7439
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3889": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7401,
        7418
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3890": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7401,
        7418
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3891": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7476
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "3896": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7476
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3899": {
      "op": "ADD"
    },
    "3900": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3902": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3904": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3905": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3906": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3907": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "SUB",
      "path": "0"
    },
    "3908": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3909": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3910": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "GAS",
      "path": "0"
    },
    "3911": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "3912": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3913": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3914": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3915": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF58"
    },
    "3918": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3919": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3920": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3922": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3923": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "3924": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3925": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3927": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3928": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3929": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "POP",
      "path": "0"
    },
    "3930": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "POP",
      "path": "0"
    },
    "3931": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "POP",
      "path": "0"
    },
    "3932": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "POP",
      "path": "0"
    },
    "3933": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3935": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3936": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "3937": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3939": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "NOT",
      "path": "0"
    },
    "3940": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3942": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3943": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "ADD",
      "path": "0"
    },
    "3944": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "AND",
      "path": "0"
    },
    "3945": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3946": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "ADD",
      "path": "0"
    },
    "3947": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3948": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3950": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3951": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "POP",
      "path": "0"
    },
    "3952": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3953": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "ADD",
      "path": "0"
    },
    "3954": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3955": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF7C"
    },
    "3958": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3959": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3960": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12E4"
    },
    "3963": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        7441,
        7491
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3964": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7441,
        7491
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3965": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3967": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3974": {
      "op": "SHL"
    },
    "3975": {
      "op": "SUB"
    },
    "3976": {
      "op": "NOT"
    },
    "3977": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "3979": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3980": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3981": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "SHL",
      "path": "0"
    },
    "3982": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "AND",
      "path": "0"
    },
    "3983": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3984": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3991": {
      "op": "SHL"
    },
    "3992": {
      "op": "SUB"
    },
    "3993": {
      "op": "SWAP1"
    },
    "3994": {
      "op": "SWAP3"
    },
    "3995": {
      "op": "AND"
    },
    "3996": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3998": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3999": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "ADD",
      "path": "0"
    },
    "4000": {
      "op": "MSTORE"
    },
    "4001": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4003": {
      "op": "DUP3"
    },
    "4004": {
      "op": "ADD"
    },
    "4005": {
      "op": "MSTORE"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4008": {
      "op": "ADD"
    },
    "4009": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4011": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4013": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4014": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4015": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4016": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "SUB",
      "path": "0"
    },
    "4017": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4018": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4020": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4021": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "GAS",
      "path": "0"
    },
    "4022": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "CALL",
      "path": "0"
    },
    "4023": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4024": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4025": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4026": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC7"
    },
    "4029": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4030": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4031": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4033": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4034": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4035": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4036": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4038": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4039": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4040": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "POP",
      "path": "0"
    },
    "4041": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "POP",
      "path": "0"
    },
    "4042": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "POP",
      "path": "0"
    },
    "4043": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "POP",
      "path": "0"
    },
    "4044": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4046": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4047": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4048": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4050": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "NOT",
      "path": "0"
    },
    "4051": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "4053": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4054": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "ADD",
      "path": "0"
    },
    "4055": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "AND",
      "path": "0"
    },
    "4056": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4057": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "ADD",
      "path": "0"
    },
    "4058": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4059": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4061": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4062": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "POP",
      "path": "0"
    },
    "4063": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4064": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "ADD",
      "path": "0"
    },
    "4065": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4066": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFEB"
    },
    "4069": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4070": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4071": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12FD"
    },
    "4074": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "i",
      "offset": [
        7394,
        7492
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4075": {
      "branch": 59,
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7394,
        7492
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4076": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7386,
        7525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1037"
    },
    "4079": {
      "branch": 59,
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7386,
        7525
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4080": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7386,
        7525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4082": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7386,
        7525
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4083": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4089": {
      "op": "SHL"
    },
    "4090": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7386,
        7525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4091": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7386,
        7525
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4094": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7386,
        7525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4096": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7386,
        7525
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4097": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7386,
        7525
      ],
      "op": "ADD",
      "path": "0"
    },
    "4098": {
      "op": "MSTORE"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4103": {
      "op": "DUP3"
    },
    "4104": {
      "op": "ADD"
    },
    "4105": {
      "op": "MSTORE"
    },
    "4106": {
      "op": "PUSH32",
      "value": "0x636F6E7472616374206D6179206265206F7574206F662066756E647300000000"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4141": {
      "op": "DUP3"
    },
    "4142": {
      "op": "ADD"
    },
    "4143": {
      "op": "MSTORE"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4146": {
      "op": "ADD"
    },
    "4147": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7386,
        7525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A3"
    },
    "4150": {
      "op": "JUMP"
    },
    "4151": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7386,
        7525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4152": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7007,
        7532
      ],
      "op": "POP",
      "path": "0"
    },
    "4153": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7007,
        7532
      ],
      "op": "POP",
      "path": "0"
    },
    "4154": {
      "fn": "AirdropToken.mintWithProofALL",
      "offset": [
        7007,
        7532
      ],
      "op": "POP",
      "path": "0"
    },
    "4155": {
      "fn": "AirdropToken.mintWithProofALL",
      "jump": "o",
      "offset": [
        7007,
        7532
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4156": {
      "fn": "MerkleProof.verify",
      "offset": [
        712,
        1532
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4157": {
      "fn": "MerkleProof.verify",
      "offset": [
        833,
        837
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4159": {
      "fn": "MerkleProof.verify",
      "offset": [
        872,
        876
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4160": {
      "fn": "MerkleProof.verify",
      "offset": [
        833,
        837
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4161": {
      "fn": "MerkleProof.verify",
      "offset": [
        887,
        1413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4162": {
      "fn": "MerkleProof.verify",
      "offset": [
        911,
        916
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4163": {
      "fn": "MerkleProof.verify",
      "offset": [
        911,
        923
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4164": {
      "fn": "MerkleProof.verify",
      "offset": [
        907,
        908
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4165": {
      "fn": "MerkleProof.verify",
      "offset": [
        907,
        923
      ],
      "op": "LT",
      "path": "0"
    },
    "4166": {
      "fn": "MerkleProof.verify",
      "offset": [
        887,
        1413
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4167": {
      "fn": "MerkleProof.verify",
      "offset": [
        887,
        1413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E0"
    },
    "4170": {
      "fn": "MerkleProof.verify",
      "offset": [
        887,
        1413
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4171": {
      "fn": "MerkleProof.verify",
      "offset": [
        944,
        964
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4173": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        972
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4174": {
      "fn": "MerkleProof.verify",
      "offset": [
        973,
        974
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4175": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4176": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4177": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4178": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "LT",
      "path": "0"
    },
    "4179": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105E"
    },
    "4182": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4183": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x105E"
    },
    "4186": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12CE"
    },
    "4189": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        967,
        975
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4190": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4191": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4193": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "MUL",
      "path": "0"
    },
    "4194": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4196": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "ADD",
      "path": "0"
    },
    "4197": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "ADD",
      "path": "0"
    },
    "4198": {
      "fn": "MerkleProof.verify",
      "offset": [
        967,
        975
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4199": {
      "fn": "MerkleProof.verify",
      "offset": [
        944,
        975
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4200": {
      "fn": "MerkleProof.verify",
      "offset": [
        944,
        975
      ],
      "op": "POP",
      "path": "0"
    },
    "4201": {
      "fn": "MerkleProof.verify",
      "offset": [
        1021,
        1033
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4202": {
      "fn": "MerkleProof.verify",
      "offset": [
        1005,
        1017
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4203": {
      "branch": 60,
      "fn": "MerkleProof.verify",
      "offset": [
        1005,
        1033
      ],
      "op": "GT",
      "path": "0"
    },
    "4204": {
      "fn": "MerkleProof.verify",
      "offset": [
        1001,
        1403
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10A0"
    },
    "4207": {
      "branch": 60,
      "fn": "MerkleProof.verify",
      "offset": [
        1001,
        1403
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4208": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 38,
      "value": "0x40"
    },
    "4210": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4211": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4212": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4214": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4215": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "ADD",
      "path": "0"
    },
    "4216": {
      "op": "DUP6"
    },
    "4217": {
      "op": "SWAP1"
    },
    "4218": {
      "op": "MSTORE"
    },
    "4219": {
      "op": "SWAP1"
    },
    "4220": {
      "op": "DUP2"
    },
    "4221": {
      "op": "ADD"
    },
    "4222": {
      "op": "DUP3"
    },
    "4223": {
      "op": "SWAP1"
    },
    "4224": {
      "op": "MSTORE"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4227": {
      "op": "ADD"
    },
    "4228": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4230": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4231": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4233": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4234": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4235": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "SUB",
      "path": "0"
    },
    "4236": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "SUB",
      "path": "0"
    },
    "4237": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4238": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4239": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4240": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4242": {
      "fn": "MerkleProof.verify",
      "offset": [
        1156,
        1200
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4243": {
      "fn": "MerkleProof.verify",
      "offset": [
        1146,
        1201
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4244": {
      "fn": "MerkleProof.verify",
      "offset": [
        1146,
        1201
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4245": {
      "fn": "MerkleProof.verify",
      "offset": [
        1146,
        1201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4246": {
      "fn": "MerkleProof.verify",
      "offset": [
        1146,
        1201
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4248": {
      "fn": "MerkleProof.verify",
      "offset": [
        1146,
        1201
      ],
      "op": "ADD",
      "path": "0"
    },
    "4249": {
      "fn": "MerkleProof.verify",
      "offset": [
        1146,
        1201
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4250": {
      "fn": "MerkleProof.verify",
      "offset": [
        1131,
        1201
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4251": {
      "fn": "MerkleProof.verify",
      "offset": [
        1131,
        1201
      ],
      "op": "POP",
      "path": "0"
    },
    "4252": {
      "fn": "MerkleProof.verify",
      "offset": [
        1001,
        1403
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10CD"
    },
    "4255": {
      "fn": "MerkleProof.verify",
      "offset": [
        1001,
        1403
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4256": {
      "fn": "MerkleProof.verify",
      "offset": [
        1001,
        1403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4257": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 39,
      "value": "0x40"
    },
    "4259": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4260": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4261": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4263": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4264": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "ADD",
      "path": "0"
    },
    "4265": {
      "op": "DUP4"
    },
    "4266": {
      "op": "SWAP1"
    },
    "4267": {
      "op": "MSTORE"
    },
    "4268": {
      "op": "SWAP1"
    },
    "4269": {
      "op": "DUP2"
    },
    "4270": {
      "op": "ADD"
    },
    "4271": {
      "op": "DUP5"
    },
    "4272": {
      "op": "SWAP1"
    },
    "4273": {
      "op": "MSTORE"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4276": {
      "op": "ADD"
    },
    "4277": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4279": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4280": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4282": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4283": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4284": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "SUB",
      "path": "0"
    },
    "4285": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "SUB",
      "path": "0"
    },
    "4286": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4287": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4288": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4289": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4291": {
      "fn": "MerkleProof.verify",
      "offset": [
        1343,
        1387
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4292": {
      "fn": "MerkleProof.verify",
      "offset": [
        1333,
        1388
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4293": {
      "fn": "MerkleProof.verify",
      "offset": [
        1333,
        1388
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4294": {
      "fn": "MerkleProof.verify",
      "offset": [
        1333,
        1388
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4295": {
      "fn": "MerkleProof.verify",
      "offset": [
        1333,
        1388
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4297": {
      "fn": "MerkleProof.verify",
      "offset": [
        1333,
        1388
      ],
      "op": "ADD",
      "path": "0"
    },
    "4298": {
      "fn": "MerkleProof.verify",
      "offset": [
        1333,
        1388
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4299": {
      "fn": "MerkleProof.verify",
      "offset": [
        1318,
        1388
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4300": {
      "fn": "MerkleProof.verify",
      "offset": [
        1318,
        1388
      ],
      "op": "POP",
      "path": "0"
    },
    "4301": {
      "fn": "MerkleProof.verify",
      "offset": [
        1001,
        1403
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4302": {
      "op": "POP"
    },
    "4303": {
      "fn": "MerkleProof.verify",
      "offset": [
        925,
        928
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 40
    },
    "4304": {
      "fn": "MerkleProof.verify",
      "offset": [
        925,
        928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10D8"
    },
    "4307": {
      "fn": "MerkleProof.verify",
      "offset": [
        925,
        928
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4308": {
      "fn": "MerkleProof.verify",
      "offset": [
        925,
        928
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13DD"
    },
    "4311": {
      "fn": "MerkleProof.verify",
      "jump": "i",
      "offset": [
        925,
        928
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4312": {
      "fn": "MerkleProof.verify",
      "offset": [
        925,
        928
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4313": {
      "fn": "MerkleProof.verify",
      "offset": [
        925,
        928
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4314": {
      "fn": "MerkleProof.verify",
      "offset": [
        925,
        928
      ],
      "op": "POP",
      "path": "0"
    },
    "4315": {
      "fn": "MerkleProof.verify",
      "offset": [
        925,
        928
      ],
      "op": "POP",
      "path": "0"
    },
    "4316": {
      "fn": "MerkleProof.verify",
      "offset": [
        887,
        1413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1041"
    },
    "4319": {
      "fn": "MerkleProof.verify",
      "offset": [
        887,
        1413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4320": {
      "fn": "MerkleProof.verify",
      "offset": [
        887,
        1413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4321": {
      "op": "POP"
    },
    "4322": {
      "fn": "MerkleProof.verify",
      "offset": [
        1505,
        1525
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 41
    },
    "4323": {
      "fn": "MerkleProof.verify",
      "offset": [
        1505,
        1525
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4324": {
      "fn": "MerkleProof.verify",
      "offset": [
        1505,
        1525
      ],
      "op": "EQ",
      "path": "0"
    },
    "4325": {
      "fn": "MerkleProof.verify",
      "offset": [
        1505,
        1525
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4326": {
      "fn": "MerkleProof.verify",
      "offset": [
        712,
        1532
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4327": {
      "op": "POP"
    },
    "4328": {
      "op": "POP"
    },
    "4329": {
      "op": "POP"
    },
    "4330": {
      "fn": "MerkleProof.verify",
      "jump": "o",
      "offset": [
        712,
        1532
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4331": {
      "op": "JUMPDEST"
    },
    "4332": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4339": {
      "op": "SHL"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4342": {
      "op": "MSTORE"
    },
    "4343": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4345": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4347": {
      "op": "MSTORE"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4352": {
      "op": "REVERT"
    },
    "4353": {
      "op": "JUMPDEST"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4356": {
      "op": "DUP3"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4359": {
      "op": "DUP4"
    },
    "4360": {
      "op": "ADD"
    },
    "4361": {
      "op": "SLT"
    },
    "4362": {
      "op": "PUSH2",
      "value": "0x1112"
    },
    "4365": {
      "op": "JUMPI"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4368": {
      "op": "DUP1"
    },
    "4369": {
      "op": "REVERT"
    },
    "4370": {
      "op": "JUMPDEST"
    },
    "4371": {
      "op": "DUP2"
    },
    "4372": {
      "op": "CALLDATALOAD"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4375": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4384": {
      "op": "DUP1"
    },
    "4385": {
      "op": "DUP4"
    },
    "4386": {
      "op": "GT"
    },
    "4387": {
      "op": "ISZERO"
    },
    "4388": {
      "op": "PUSH2",
      "value": "0x112F"
    },
    "4391": {
      "op": "JUMPI"
    },
    "4392": {
      "op": "PUSH2",
      "value": "0x112F"
    },
    "4395": {
      "op": "PUSH2",
      "value": "0x10EB"
    },
    "4398": {
      "jump": "i",
      "op": "JUMP"
    },
    "4399": {
      "op": "JUMPDEST"
    },
    "4400": {
      "op": "DUP3"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4403": {
      "op": "SHL"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4406": {
      "op": "MLOAD"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4409": {
      "op": "NOT"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4412": {
      "op": "DUP4"
    },
    "4413": {
      "op": "ADD"
    },
    "4414": {
      "op": "AND"
    },
    "4415": {
      "op": "DUP2"
    },
    "4416": {
      "op": "ADD"
    },
    "4417": {
      "op": "DUP2"
    },
    "4418": {
      "op": "DUP2"
    },
    "4419": {
      "op": "LT"
    },
    "4420": {
      "op": "DUP5"
    },
    "4421": {
      "op": "DUP3"
    },
    "4422": {
      "op": "GT"
    },
    "4423": {
      "op": "OR"
    },
    "4424": {
      "op": "ISZERO"
    },
    "4425": {
      "op": "PUSH2",
      "value": "0x1154"
    },
    "4428": {
      "op": "JUMPI"
    },
    "4429": {
      "op": "PUSH2",
      "value": "0x1154"
    },
    "4432": {
      "op": "PUSH2",
      "value": "0x10EB"
    },
    "4435": {
      "jump": "i",
      "op": "JUMP"
    },
    "4436": {
      "op": "JUMPDEST"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4439": {
      "op": "MSTORE"
    },
    "4440": {
      "op": "SWAP4"
    },
    "4441": {
      "op": "DUP5"
    },
    "4442": {
      "op": "MSTORE"
    },
    "4443": {
      "op": "DUP6"
    },
    "4444": {
      "op": "DUP2"
    },
    "4445": {
      "op": "ADD"
    },
    "4446": {
      "op": "DUP4"
    },
    "4447": {
      "op": "ADD"
    },
    "4448": {
      "op": "SWAP4"
    },
    "4449": {
      "op": "DUP4"
    },
    "4450": {
      "op": "DUP2"
    },
    "4451": {
      "op": "ADD"
    },
    "4452": {
      "op": "SWAP3"
    },
    "4453": {
      "op": "POP"
    },
    "4454": {
      "op": "DUP8"
    },
    "4455": {
      "op": "DUP6"
    },
    "4456": {
      "op": "GT"
    },
    "4457": {
      "op": "ISZERO"
    },
    "4458": {
      "op": "PUSH2",
      "value": "0x1172"
    },
    "4461": {
      "op": "JUMPI"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4464": {
      "op": "DUP1"
    },
    "4465": {
      "op": "REVERT"
    },
    "4466": {
      "op": "JUMPDEST"
    },
    "4467": {
      "op": "DUP4"
    },
    "4468": {
      "op": "DUP8"
    },
    "4469": {
      "op": "ADD"
    },
    "4470": {
      "op": "SWAP2"
    },
    "4471": {
      "op": "POP"
    },
    "4472": {
      "op": "JUMPDEST"
    },
    "4473": {
      "op": "DUP5"
    },
    "4474": {
      "op": "DUP3"
    },
    "4475": {
      "op": "LT"
    },
    "4476": {
      "op": "ISZERO"
    },
    "4477": {
      "op": "PUSH2",
      "value": "0x1191"
    },
    "4480": {
      "op": "JUMPI"
    },
    "4481": {
      "op": "DUP2"
    },
    "4482": {
      "op": "CALLDATALOAD"
    },
    "4483": {
      "op": "DUP4"
    },
    "4484": {
      "op": "MSTORE"
    },
    "4485": {
      "op": "SWAP2"
    },
    "4486": {
      "op": "DUP4"
    },
    "4487": {
      "op": "ADD"
    },
    "4488": {
      "op": "SWAP2"
    },
    "4489": {
      "op": "SWAP1"
    },
    "4490": {
      "op": "DUP4"
    },
    "4491": {
      "op": "ADD"
    },
    "4492": {
      "op": "SWAP1"
    },
    "4493": {
      "op": "PUSH2",
      "value": "0x1178"
    },
    "4496": {
      "op": "JUMP"
    },
    "4497": {
      "op": "JUMPDEST"
    },
    "4498": {
      "op": "SWAP8"
    },
    "4499": {
      "op": "SWAP7"
    },
    "4500": {
      "op": "POP"
    },
    "4501": {
      "op": "POP"
    },
    "4502": {
      "op": "POP"
    },
    "4503": {
      "op": "POP"
    },
    "4504": {
      "op": "POP"
    },
    "4505": {
      "op": "POP"
    },
    "4506": {
      "op": "POP"
    },
    "4507": {
      "jump": "o",
      "op": "JUMP"
    },
    "4508": {
      "op": "JUMPDEST"
    },
    "4509": {
      "op": "DUP1"
    },
    "4510": {
      "op": "CALLDATALOAD"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4517": {
      "op": "SHL"
    },
    "4518": {
      "op": "SUB"
    },
    "4519": {
      "op": "DUP2"
    },
    "4520": {
      "op": "AND"
    },
    "4521": {
      "op": "DUP2"
    },
    "4522": {
      "op": "EQ"
    },
    "4523": {
      "op": "PUSH2",
      "value": "0x11B3"
    },
    "4526": {
      "op": "JUMPI"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4529": {
      "op": "DUP1"
    },
    "4530": {
      "op": "REVERT"
    },
    "4531": {
      "op": "JUMPDEST"
    },
    "4532": {
      "op": "SWAP2"
    },
    "4533": {
      "op": "SWAP1"
    },
    "4534": {
      "op": "POP"
    },
    "4535": {
      "jump": "o",
      "op": "JUMP"
    },
    "4536": {
      "op": "JUMPDEST"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4539": {
      "op": "DUP1"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4544": {
      "op": "DUP5"
    },
    "4545": {
      "op": "DUP7"
    },
    "4546": {
      "op": "SUB"
    },
    "4547": {
      "op": "SLT"
    },
    "4548": {
      "op": "ISZERO"
    },
    "4549": {
      "op": "PUSH2",
      "value": "0x11CD"
    },
    "4552": {
      "op": "JUMPI"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4555": {
      "op": "DUP1"
    },
    "4556": {
      "op": "REVERT"
    },
    "4557": {
      "op": "JUMPDEST"
    },
    "4558": {
      "op": "DUP4"
    },
    "4559": {
      "op": "CALLDATALOAD"
    },
    "4560": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4569": {
      "op": "DUP2"
    },
    "4570": {
      "op": "GT"
    },
    "4571": {
      "op": "ISZERO"
    },
    "4572": {
      "op": "PUSH2",
      "value": "0x11E4"
    },
    "4575": {
      "op": "JUMPI"
    },
    "4576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4578": {
      "op": "DUP1"
    },
    "4579": {
      "op": "REVERT"
    },
    "4580": {
      "op": "JUMPDEST"
    },
    "4581": {
      "op": "PUSH2",
      "value": "0x11F0"
    },
    "4584": {
      "op": "DUP7"
    },
    "4585": {
      "op": "DUP3"
    },
    "4586": {
      "op": "DUP8"
    },
    "4587": {
      "op": "ADD"
    },
    "4588": {
      "op": "PUSH2",
      "value": "0x1101"
    },
    "4591": {
      "jump": "i",
      "op": "JUMP"
    },
    "4592": {
      "op": "JUMPDEST"
    },
    "4593": {
      "op": "SWAP4"
    },
    "4594": {
      "op": "POP"
    },
    "4595": {
      "op": "POP"
    },
    "4596": {
      "op": "PUSH2",
      "value": "0x11FF"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4601": {
      "op": "DUP6"
    },
    "4602": {
      "op": "ADD"
    },
    "4603": {
      "op": "PUSH2",
      "value": "0x119C"
    },
    "4606": {
      "jump": "i",
      "op": "JUMP"
    },
    "4607": {
      "op": "JUMPDEST"
    },
    "4608": {
      "op": "SWAP2"
    },
    "4609": {
      "op": "POP"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4612": {
      "op": "DUP5"
    },
    "4613": {
      "op": "ADD"
    },
    "4614": {
      "op": "CALLDATALOAD"
    },
    "4615": {
      "op": "SWAP1"
    },
    "4616": {
      "op": "POP"
    },
    "4617": {
      "op": "SWAP3"
    },
    "4618": {
      "op": "POP"
    },
    "4619": {
      "op": "SWAP3"
    },
    "4620": {
      "op": "POP"
    },
    "4621": {
      "op": "SWAP3"
    },
    "4622": {
      "jump": "o",
      "op": "JUMP"
    },
    "4623": {
      "op": "JUMPDEST"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4628": {
      "op": "DUP3"
    },
    "4629": {
      "op": "DUP5"
    },
    "4630": {
      "op": "SUB"
    },
    "4631": {
      "op": "SLT"
    },
    "4632": {
      "op": "ISZERO"
    },
    "4633": {
      "op": "PUSH2",
      "value": "0x1221"
    },
    "4636": {
      "op": "JUMPI"
    },
    "4637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4639": {
      "op": "DUP1"
    },
    "4640": {
      "op": "REVERT"
    },
    "4641": {
      "op": "JUMPDEST"
    },
    "4642": {
      "op": "POP"
    },
    "4643": {
      "op": "CALLDATALOAD"
    },
    "4644": {
      "op": "SWAP2"
    },
    "4645": {
      "op": "SWAP1"
    },
    "4646": {
      "op": "POP"
    },
    "4647": {
      "jump": "o",
      "op": "JUMP"
    },
    "4648": {
      "op": "JUMPDEST"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4653": {
      "op": "DUP3"
    },
    "4654": {
      "op": "DUP5"
    },
    "4655": {
      "op": "SUB"
    },
    "4656": {
      "op": "SLT"
    },
    "4657": {
      "op": "ISZERO"
    },
    "4658": {
      "op": "PUSH2",
      "value": "0x123A"
    },
    "4661": {
      "op": "JUMPI"
    },
    "4662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4664": {
      "op": "DUP1"
    },
    "4665": {
      "op": "REVERT"
    },
    "4666": {
      "op": "JUMPDEST"
    },
    "4667": {
      "op": "PUSH2",
      "value": "0x345"
    },
    "4670": {
      "op": "DUP3"
    },
    "4671": {
      "op": "PUSH2",
      "value": "0x119C"
    },
    "4674": {
      "jump": "i",
      "op": "JUMP"
    },
    "4675": {
      "op": "JUMPDEST"
    },
    "4676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4678": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4680": {
      "op": "DUP3"
    },
    "4681": {
      "op": "DUP5"
    },
    "4682": {
      "op": "SUB"
    },
    "4683": {
      "op": "SLT"
    },
    "4684": {
      "op": "ISZERO"
    },
    "4685": {
      "op": "PUSH2",
      "value": "0x1255"
    },
    "4688": {
      "op": "JUMPI"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4691": {
      "op": "DUP1"
    },
    "4692": {
      "op": "REVERT"
    },
    "4693": {
      "op": "JUMPDEST"
    },
    "4694": {
      "op": "DUP2"
    },
    "4695": {
      "op": "CALLDATALOAD"
    },
    "4696": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4705": {
      "op": "DUP2"
    },
    "4706": {
      "op": "GT"
    },
    "4707": {
      "op": "ISZERO"
    },
    "4708": {
      "op": "PUSH2",
      "value": "0x126C"
    },
    "4711": {
      "op": "JUMPI"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4714": {
      "op": "DUP1"
    },
    "4715": {
      "op": "REVERT"
    },
    "4716": {
      "op": "JUMPDEST"
    },
    "4717": {
      "op": "PUSH2",
      "value": "0x1278"
    },
    "4720": {
      "op": "DUP5"
    },
    "4721": {
      "op": "DUP3"
    },
    "4722": {
      "op": "DUP6"
    },
    "4723": {
      "op": "ADD"
    },
    "4724": {
      "op": "PUSH2",
      "value": "0x1101"
    },
    "4727": {
      "jump": "i",
      "op": "JUMP"
    },
    "4728": {
      "op": "JUMPDEST"
    },
    "4729": {
      "op": "SWAP5"
    },
    "4730": {
      "op": "SWAP4"
    },
    "4731": {
      "op": "POP"
    },
    "4732": {
      "op": "POP"
    },
    "4733": {
      "op": "POP"
    },
    "4734": {
      "op": "POP"
    },
    "4735": {
      "jump": "o",
      "op": "JUMP"
    },
    "4736": {
      "op": "JUMPDEST"
    },
    "4737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4739": {
      "op": "DUP1"
    },
    "4740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4744": {
      "op": "DUP5"
    },
    "4745": {
      "op": "DUP7"
    },
    "4746": {
      "op": "SUB"
    },
    "4747": {
      "op": "SLT"
    },
    "4748": {
      "op": "ISZERO"
    },
    "4749": {
      "op": "PUSH2",
      "value": "0x1295"
    },
    "4752": {
      "op": "JUMPI"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4755": {
      "op": "DUP1"
    },
    "4756": {
      "op": "REVERT"
    },
    "4757": {
      "op": "JUMPDEST"
    },
    "4758": {
      "op": "DUP4"
    },
    "4759": {
      "op": "CALLDATALOAD"
    },
    "4760": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4769": {
      "op": "DUP2"
    },
    "4770": {
      "op": "GT"
    },
    "4771": {
      "op": "ISZERO"
    },
    "4772": {
      "op": "PUSH2",
      "value": "0x12AC"
    },
    "4775": {
      "op": "JUMPI"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4778": {
      "op": "DUP1"
    },
    "4779": {
      "op": "REVERT"
    },
    "4780": {
      "op": "JUMPDEST"
    },
    "4781": {
      "op": "PUSH2",
      "value": "0x12B8"
    },
    "4784": {
      "op": "DUP7"
    },
    "4785": {
      "op": "DUP3"
    },
    "4786": {
      "op": "DUP8"
    },
    "4787": {
      "op": "ADD"
    },
    "4788": {
      "op": "PUSH2",
      "value": "0x1101"
    },
    "4791": {
      "jump": "i",
      "op": "JUMP"
    },
    "4792": {
      "op": "JUMPDEST"
    },
    "4793": {
      "op": "SWAP7"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4796": {
      "op": "DUP7"
    },
    "4797": {
      "op": "ADD"
    },
    "4798": {
      "op": "CALLDATALOAD"
    },
    "4799": {
      "op": "SWAP7"
    },
    "4800": {
      "op": "POP"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4803": {
      "op": "SWAP1"
    },
    "4804": {
      "op": "SWAP6"
    },
    "4805": {
      "op": "ADD"
    },
    "4806": {
      "op": "CALLDATALOAD"
    },
    "4807": {
      "op": "SWAP5"
    },
    "4808": {
      "op": "SWAP4"
    },
    "4809": {
      "op": "POP"
    },
    "4810": {
      "op": "POP"
    },
    "4811": {
      "op": "POP"
    },
    "4812": {
      "op": "POP"
    },
    "4813": {
      "jump": "o",
      "op": "JUMP"
    },
    "4814": {
      "op": "JUMPDEST"
    },
    "4815": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4820": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4822": {
      "op": "SHL"
    },
    "4823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4825": {
      "op": "MSTORE"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4828": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4830": {
      "op": "MSTORE"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4835": {
      "op": "REVERT"
    },
    "4836": {
      "op": "JUMPDEST"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4841": {
      "op": "DUP3"
    },
    "4842": {
      "op": "DUP5"
    },
    "4843": {
      "op": "SUB"
    },
    "4844": {
      "op": "SLT"
    },
    "4845": {
      "op": "ISZERO"
    },
    "4846": {
      "op": "PUSH2",
      "value": "0x12F6"
    },
    "4849": {
      "op": "JUMPI"
    },
    "4850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4852": {
      "op": "DUP1"
    },
    "4853": {
      "op": "REVERT"
    },
    "4854": {
      "op": "JUMPDEST"
    },
    "4855": {
      "op": "POP"
    },
    "4856": {
      "op": "MLOAD"
    },
    "4857": {
      "op": "SWAP2"
    },
    "4858": {
      "op": "SWAP1"
    },
    "4859": {
      "op": "POP"
    },
    "4860": {
      "jump": "o",
      "op": "JUMP"
    },
    "4861": {
      "op": "JUMPDEST"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4864": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4866": {
      "op": "DUP3"
    },
    "4867": {
      "op": "DUP5"
    },
    "4868": {
      "op": "SUB"
    },
    "4869": {
      "op": "SLT"
    },
    "4870": {
      "op": "ISZERO"
    },
    "4871": {
      "op": "PUSH2",
      "value": "0x130F"
    },
    "4874": {
      "op": "JUMPI"
    },
    "4875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4877": {
      "op": "DUP1"
    },
    "4878": {
      "op": "REVERT"
    },
    "4879": {
      "op": "JUMPDEST"
    },
    "4880": {
      "op": "DUP2"
    },
    "4881": {
      "op": "MLOAD"
    },
    "4882": {
      "op": "DUP1"
    },
    "4883": {
      "op": "ISZERO"
    },
    "4884": {
      "op": "ISZERO"
    },
    "4885": {
      "op": "DUP2"
    },
    "4886": {
      "op": "EQ"
    },
    "4887": {
      "op": "PUSH2",
      "value": "0x345"
    },
    "4890": {
      "op": "JUMPI"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4893": {
      "op": "DUP1"
    },
    "4894": {
      "op": "REVERT"
    },
    "4895": {
      "op": "JUMPDEST"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4898": {
      "op": "DUP1"
    },
    "4899": {
      "op": "DUP3"
    },
    "4900": {
      "op": "MSTORE"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "4903": {
      "op": "SWAP1"
    },
    "4904": {
      "op": "DUP3"
    },
    "4905": {
      "op": "ADD"
    },
    "4906": {
      "op": "MSTORE"
    },
    "4907": {
      "op": "PUSH13",
      "value": "0x70726F6F66206661696C757265"
    },
    "4921": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "4923": {
      "op": "SHL"
    },
    "4924": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4926": {
      "op": "DUP3"
    },
    "4927": {
      "op": "ADD"
    },
    "4928": {
      "op": "MSTORE"
    },
    "4929": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4931": {
      "op": "ADD"
    },
    "4932": {
      "op": "SWAP1"
    },
    "4933": {
      "jump": "o",
      "op": "JUMP"
    },
    "4934": {
      "op": "JUMPDEST"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4937": {
      "op": "DUP1"
    },
    "4938": {
      "op": "DUP3"
    },
    "4939": {
      "op": "MSTORE"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "4942": {
      "op": "SWAP1"
    },
    "4943": {
      "op": "DUP3"
    },
    "4944": {
      "op": "ADD"
    },
    "4945": {
      "op": "MSTORE"
    },
    "4946": {
      "op": "PUSH15",
      "value": "0x185B1C9958591E4818DB185A5B5959"
    },
    "4962": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "4964": {
      "op": "SHL"
    },
    "4965": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4967": {
      "op": "DUP3"
    },
    "4968": {
      "op": "ADD"
    },
    "4969": {
      "op": "MSTORE"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4972": {
      "op": "ADD"
    },
    "4973": {
      "op": "SWAP1"
    },
    "4974": {
      "jump": "o",
      "op": "JUMP"
    },
    "4975": {
      "op": "JUMPDEST"
    },
    "4976": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4981": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4983": {
      "op": "SHL"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4986": {
      "op": "MSTORE"
    },
    "4987": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4991": {
      "op": "MSTORE"
    },
    "4992": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4994": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4996": {
      "op": "REVERT"
    },
    "4997": {
      "op": "JUMPDEST"
    },
    "4998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5000": {
      "op": "DUP3"
    },
    "5001": {
      "op": "DUP3"
    },
    "5002": {
      "op": "LT"
    },
    "5003": {
      "op": "ISZERO"
    },
    "5004": {
      "op": "PUSH2",
      "value": "0x1397"
    },
    "5007": {
      "op": "JUMPI"
    },
    "5008": {
      "op": "PUSH2",
      "value": "0x1397"
    },
    "5011": {
      "op": "PUSH2",
      "value": "0x136F"
    },
    "5014": {
      "jump": "i",
      "op": "JUMP"
    },
    "5015": {
      "op": "JUMPDEST"
    },
    "5016": {
      "op": "POP"
    },
    "5017": {
      "op": "SUB"
    },
    "5018": {
      "op": "SWAP1"
    },
    "5019": {
      "jump": "o",
      "op": "JUMP"
    },
    "5020": {
      "op": "JUMPDEST"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5023": {
      "op": "DUP2"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5026": {
      "op": "NOT"
    },
    "5027": {
      "op": "DIV"
    },
    "5028": {
      "op": "DUP4"
    },
    "5029": {
      "op": "GT"
    },
    "5030": {
      "op": "DUP3"
    },
    "5031": {
      "op": "ISZERO"
    },
    "5032": {
      "op": "ISZERO"
    },
    "5033": {
      "op": "AND"
    },
    "5034": {
      "op": "ISZERO"
    },
    "5035": {
      "op": "PUSH2",
      "value": "0x13B6"
    },
    "5038": {
      "op": "JUMPI"
    },
    "5039": {
      "op": "PUSH2",
      "value": "0x13B6"
    },
    "5042": {
      "op": "PUSH2",
      "value": "0x136F"
    },
    "5045": {
      "jump": "i",
      "op": "JUMP"
    },
    "5046": {
      "op": "JUMPDEST"
    },
    "5047": {
      "op": "POP"
    },
    "5048": {
      "op": "MUL"
    },
    "5049": {
      "op": "SWAP1"
    },
    "5050": {
      "jump": "o",
      "op": "JUMP"
    },
    "5051": {
      "op": "JUMPDEST"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5054": {
      "op": "DUP3"
    },
    "5055": {
      "op": "PUSH2",
      "value": "0x13D8"
    },
    "5058": {
      "op": "JUMPI"
    },
    "5059": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5064": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5066": {
      "op": "SHL"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5069": {
      "op": "MSTORE"
    },
    "5070": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5074": {
      "op": "MSTORE"
    },
    "5075": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5077": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5079": {
      "op": "REVERT"
    },
    "5080": {
      "op": "JUMPDEST"
    },
    "5081": {
      "op": "POP"
    },
    "5082": {
      "op": "DIV"
    },
    "5083": {
      "op": "SWAP1"
    },
    "5084": {
      "jump": "o",
      "op": "JUMP"
    },
    "5085": {
      "op": "JUMPDEST"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5090": {
      "op": "NOT"
    },
    "5091": {
      "op": "DUP3"
    },
    "5092": {
      "op": "EQ"
    },
    "5093": {
      "op": "ISZERO"
    },
    "5094": {
      "op": "PUSH2",
      "value": "0x13F1"
    },
    "5097": {
      "op": "JUMPI"
    },
    "5098": {
      "op": "PUSH2",
      "value": "0x13F1"
    },
    "5101": {
      "op": "PUSH2",
      "value": "0x136F"
    },
    "5104": {
      "jump": "i",
      "op": "JUMP"
    },
    "5105": {
      "op": "JUMPDEST"
    },
    "5106": {
      "op": "POP"
    },
    "5107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5109": {
      "op": "ADD"
    },
    "5110": {
      "op": "SWAP1"
    },
    "5111": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "cdfd15f9f0ce5ab20376a53c9a94e470b91d55d4",
  "source": "// Forge Airdrop Contract\n// https://airdrop.forgetoken.org\n// Claim up to 100, 30 or 10 Forge in this new twist on airdrops! \n// The longer you wait the more your claim unlocks, but dont let the contract run dry without claiming!\n// Allows contract to be recharged by anyone to restart the Airdrop!\n\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(\n        bytes32[] memory proof,\n        bytes32 root,\n        bytes32 leaf\n    ) internal pure returns (bool) {\n        bytes32 computedHash = leaf;\n\n        for (uint256 i = 0; i < proof.length; i++) {\n            bytes32 proofElement = proof[i];           \n\n            if (computedHash <= proofElement) {\n                // Hash(current computed hash + current element of the proof)\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\n            } else {\n                // Hash(current element of the proof + current computed hash)\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\n            }\n        }\n\n        // Check if the computed hash (root) is equal to the provided root\n        return computedHash == root;\n    }\n}\n\n\n interface IERC20 {\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    \n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n\ncontract ForgeGuess{\n    function balanceOf(address account) public view returns (uint256) {}\n    uint256 public unreleased;\n    uint256 public totalSupply;\n    function stakeFor(address forWhom, uint256 amount) public virtual {}\n    function withdraw(uint256 amount, uint256 maxLoss) public virtual {}\n    \n    function withEstimator(uint256 amountOut) public view returns (uint256) {}\n    }\n\n\n\ncontract AirdropToken {\n    \n    \n    address public ForgeTokenAddressREAL = address(0xF44fB43066F7ECC91058E3A614Fb8A15A2735276);\n    address public ForgeTokenAddress = address(0xbF4493415fD1E79DcDa8cD0cAd7E5Ed65DCe7074);\n    address public ForgeGuessContractAddress = address(0xDe256EC57E864eC847c030e14c5b97AB233A521E);\n    bytes32 [] public _merkleRootAll;\n    bytes32 internal _merkleRootTop = 0xdd82af2bc4b721bfd5be08111d4f422fd07d1578a0072d6701f26ea4fff33845;\n    bytes32 internal _merkleRootMid = 0x15893a9b8d3638149dd9461fde79f589e565a2fc76a861ec1aebb83736151566;\n    bytes32 internal _merkleRootBot = 0x316b4323ca91ba63304a4e0ada24b09f8689ac1f80aca8e9d5c4213fc9ba7848;\n                                         \n    uint256 [] public amtClaim;\n    uint256 internal nextTokenId = 0;\n    mapping(address => bool) public hasClaimed;\n    uint256 public decay = 24* 60 * 60 * 30;\n\n    uint256 public starttime = block.timestamp;\n    \n\n    constructor()  {\n        _merkleRootAll.push(_merkleRootTop);\n        _merkleRootAll.push(_merkleRootMid);\n        _merkleRootAll.push(_merkleRootBot);\n        amtClaim.push(1000000000000);\n        amtClaim.push(100000000);\n        amtClaim.push(100000);\n    }  \n\n \n\n    function deposit(uint amt) public returns (bool success){\n\n        if(amt <= ForgeGuess(ForgeGuessContractAddress).withEstimator(ForgeGuess(ForgeGuessContractAddress).balanceOf(address(this)))){\n            Donation(amt);\n        }else{\n            require(amt > ForgeGuess(ForgeGuessContractAddress).withEstimator(ForgeGuess(ForgeGuessContractAddress).balanceOf(address(this))), \"must be greater than previous total to reset\");\n            require(IERC20(ForgeTokenAddress).transferFrom(msg.sender, address(this), amt), \"transfer fail\");\n            starttime = block.timestamp;\n            IERC20(ForgeTokenAddress).approve(ForgeGuessContractAddress, 999999999999999999999999999999999999999999999999999);\n            ForgeGuess(ForgeGuessContractAddress).stakeFor(address(this), amt);\n            uint x = perfect();\n            amtClaim[0] = x * 10;\n            amtClaim[1] = x * 3;\n            amtClaim[2] = x * 1;\n        }\n\n        return true;\n    }\n\n\n    function Donation(uint amt) public returns (bool success){ \n        require(IERC20(ForgeTokenAddress).transferFrom(msg.sender, address(this), amt), \"transfer fail\");\n        IERC20(ForgeTokenAddress).approve(ForgeGuessContractAddress, 999999999999999999999999999999999999999999999999999);\n        ForgeGuess(ForgeGuessContractAddress).stakeFor(address(this), amt);\n        return true;\n    }\n\n\n    function perfect() public view returns (uint256 amtz){\n        \n        uint256 test = (10 * 10 ** 18 * 1000) / ((975 * (IERC20(address(ForgeTokenAddress)).balanceOf(ForgeGuessContractAddress) - ForgeGuess(ForgeGuessContractAddress).unreleased() ) / ForgeGuess(ForgeGuessContractAddress).totalSupply()));\n\n\n        return test;\n    }\n\n    function amtOutForChoiceInForge(uint choice) public view returns (uint256 out){\n\n        return ForgeGuess(ForgeGuessContractAddress).withEstimator(amountOut(choice));\n    }\n\n\n   function amountOut(uint choice) public view returns (uint256 out){\n        uint256 durdur = block.timestamp - starttime;\n        if(durdur > decay){\n            durdur = decay;\n        }\n        if(choice == 0){\n           return (amtClaim[0] * durdur) / decay;\n        }else if(choice ==1){\n           return (amtClaim[1] * durdur) / decay;\n        }else if(choice ==2){\n           return (amtClaim[2] * durdur) / decay;\n        }\n        return 0;\n   }\n   \n    function mintWithProofTop(bytes32[] memory merkleProof ) public {\n    \n        \n        require( MerkleProof.verify(merkleProof, _merkleRootTop, keccak256( abi.encodePacked(msg.sender)) ) , 'proof failure');\n\n        require(hasClaimed[msg.sender] == false, 'already claimed');\n\n        hasClaimed[msg.sender]=true;\n        \n        IERC20(ForgeTokenAddress).transfer(msg.sender,  amountOut(1));\n    }\n    \n    function mintWithProofMid(bytes32[] memory merkleProof ) public {\n \n        require( MerkleProof.verify(merkleProof, _merkleRootMid, keccak256( abi.encodePacked(msg.sender)) ) , 'proof failure');\n\n        require(hasClaimed[msg.sender] == false, 'already claimed');\n\n        hasClaimed[msg.sender]=true;\n        \n        IERC20(ForgeTokenAddress).transfer(msg.sender,  amountOut(2));\n    }\n    //0= 0%-10%, 1= 10%-40%, 2= 50%-90%\n    function mintWithProofALL(bytes32[] memory merkleProof, uint claim, uint maxLoss ) public {\n \n        require( verify(merkleProof, msg.sender, claim)  , 'proof failure');\n\n        require(hasClaimed[msg.sender] == false, 'already claimed');\n\n        hasClaimed[msg.sender]=true;\n        \n        ForgeGuess(ForgeGuessContractAddress).withdraw(amountOut(claim), maxLoss);\n        require(IERC20(ForgeTokenAddress).transfer(msg.sender, IERC20(ForgeTokenAddress).balanceOf(address(this))), \"contract may be out of funds\");\n    }\n\n    //verify claim\n    function verify(bytes32[] memory merkleProof, address claimer, uint claim)public view returns (bool ver){\n    if(claim == 0){\n    \n        return MerkleProof.verify(merkleProof, _merkleRootAll[0], keccak256( abi.encodePacked(claimer)));\n    }else if(claim ==1 ){\n\n        return MerkleProof.verify(merkleProof, _merkleRootAll[1], keccak256( abi.encodePacked(claimer)));\n    }else if(claim == 2){\n    \n        return MerkleProof.verify(merkleProof, _merkleRootAll[2], keccak256( abi.encodePacked(claimer)));\n    }\n    return false;\n    }\n    \n    \n    function getThree() public view returns (uint256) {\n\n        return 3;\n    }\n    \n\n}\n\n",
  "sourceMap": "2607:5585:0:-:0;;;2645:90;;;-1:-1:-1;;;;;;2645:90:0;;;2692:42;2645:90;;;;2741:86;;;;2784:42;2741:86;;;2833:94;;;;;;2884:42;2833:94;;;3005:66;2971:100;;3111:66;3077:100;;3217:66;3183:100;;3363:32;;3472:16;3449:39;;3522:15;3495:42;;3549:260;;;;;;;;;-1:-1:-1;3594:14:0;;3574;:35;;;;;;;;;;;;;;;;3639:14;;3619:35;;;;;;;;;;3684:14;;3664:35;;;;;;;;;;;3709:8;:28;;;;;;;-1:-1:-1;3709:28:0;;;3723:13;3709:28;;;;;3747:24;;;;;;;3761:9;3747:24;;;;3781:21;;;;;;;;3795:6;3781:21;;;2607:5585;;;;;;",
  "sourcePath": "contracts/Merkletree.sol",
  "type": "contract"
}