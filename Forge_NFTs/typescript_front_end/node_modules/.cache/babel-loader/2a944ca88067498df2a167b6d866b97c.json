{"ast":null,"code":"import _regeneratorRuntime from \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useBlockNumber } from '../providers/blockNumber/context';\nimport { useEffect, useState } from 'react';\nimport { useEthers } from './useEthers';\nexport function useGasPrice() {\n  var _useEthers = useEthers(),\n      library = _useEthers.library;\n\n  var blockNumber = useBlockNumber();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      gasPrice = _useState2[0],\n      setGasPrice = _useState2[1];\n\n  function updateGasPrice() {\n    return _updateGasPrice.apply(this, arguments);\n  }\n\n  function _updateGasPrice() {\n    _updateGasPrice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = setGasPrice;\n              _context.next = 3;\n              return library === null || library === void 0 ? void 0 : library.getGasPrice();\n\n            case 3:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _updateGasPrice.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    updateGasPrice();\n  }, [library, blockNumber]);\n  return gasPrice;\n}","map":{"version":3,"sources":["../../../../src/hooks/useGasPrice.ts"],"names":[],"mappings":";;;AAAA,SAAS,cAAT,QAA+B,kCAA/B;AAEA,SAAS,SAAT,EAAoB,QAApB,QAAoC,OAApC;AACA,SAAS,SAAT,QAA0B,aAA1B;AAEA,OAAM,SAAU,WAAV,GAAqB;AACzB,mBAAoB,SAAS,EAA7B;AAAA,MAAQ,OAAR,cAAQ,OAAR;;AACA,MAAM,WAAW,GAAG,cAAc,EAAlC;;AACA,kBAAgC,QAAQ,EAAxC;AAAA;AAAA,MAAO,QAAP;AAAA,MAAiB,WAAjB;;AAHyB,WAKV,cALU;AAAA;AAAA;;AAAA;AAAA,+EAKzB;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE,WADF;AAAA;AAAA,qBACoB,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,WAAT,EADpB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALyB;AAAA;AAAA;;AASzB,EAAA,SAAS,CAAC,YAAK;AACb,IAAA,cAAc;AACf,GAFQ,EAEN,CAAC,OAAD,EAAU,WAAV,CAFM,CAAT;AAIA,SAAO,QAAP;AACD","sourceRoot":"","sourcesContent":["import { useBlockNumber } from '../providers/blockNumber/context';\nimport { useEffect, useState } from 'react';\nimport { useEthers } from './useEthers';\nexport function useGasPrice() {\n    const { library } = useEthers();\n    const blockNumber = useBlockNumber();\n    const [gasPrice, setGasPrice] = useState();\n    async function updateGasPrice() {\n        setGasPrice(await (library === null || library === void 0 ? void 0 : library.getGasPrice()));\n    }\n    useEffect(() => {\n        updateGasPrice();\n    }, [library, blockNumber]);\n    return gasPrice;\n}\n//# sourceMappingURL=useGasPrice.js.map"]},"metadata":{},"sourceType":"module"}