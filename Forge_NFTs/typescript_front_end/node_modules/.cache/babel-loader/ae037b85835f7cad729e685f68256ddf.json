{"ast":null,"code":"import _slicedToArray from \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/src/features/tokenFarmContract/TokenFarmContract.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useEthers } from \"@usedapp/core\";\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\nimport { ConnectionRequiredMsg } from \"../../components\";\nimport { Tab, Box, makeStyles } from \"@material-ui/core\";\nimport { Unstake } from \"./Unstake\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    tabContent: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      gap: theme.spacing(4)\n    },\n    box: {\n      backgroundColor: \"white\",\n      borderRadius: \"25px\",\n      margin: \"\".concat(theme.spacing(4), \"px 0\"),\n      padding: theme.spacing(2)\n    },\n    header: {\n      color: \"white\"\n    }\n  };\n});\nexport var TokenFarmContract = function TokenFarmContract(_ref) {\n  _s();\n\n  var supportedTokens = _ref.supportedTokens;\n  var classes = useStyles();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTokenIndex = _useState2[0],\n      setSelectedTokenIndex = _useState2[1];\n\n  var handleChange = function handleChange(event, newValue) {\n    setSelectedTokenIndex(parseInt(newValue));\n  };\n\n  var _useEthers = useEthers(),\n      account = _useEthers.account;\n\n  var isConnected = account !== undefined;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.header,\n      children: \"The TokenFarm Contract\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.box,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isConnected ? /*#__PURE__*/_jsxDEV(TabContext, {\n          value: selectedTokenIndex.toString(),\n          children: [/*#__PURE__*/_jsxDEV(TabList, {\n            onChange: handleChange,\n            \"aria-label\": \"stake form tabs\",\n            children: supportedTokens.map(function (token, index) {\n              return /*#__PURE__*/_jsxDEV(Tab, {\n                label: token.name,\n                value: index.toString()\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, _this), supportedTokens.map(function (token, index) {\n            return /*#__PURE__*/_jsxDEV(TabPanel, {\n              value: index.toString(),\n              children: /*#__PURE__*/_jsxDEV(Unstake, {\n                token: token\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, _this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(ConnectionRequiredMsg, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TokenFarmContract, \"UGs8p9Saa7S01NMeYHFJ25KtCZc=\", false, function () {\n  return [useStyles, useEthers];\n});\n\n_c = TokenFarmContract;\n\nvar _c;\n\n$RefreshReg$(_c, \"TokenFarmContract\");","map":{"version":3,"sources":["/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/src/features/tokenFarmContract/TokenFarmContract.tsx"],"names":["React","useState","useEthers","TabContext","TabList","TabPanel","ConnectionRequiredMsg","Tab","Box","makeStyles","Unstake","useStyles","theme","tabContent","display","flexDirection","alignItems","gap","spacing","box","backgroundColor","borderRadius","margin","padding","header","color","TokenFarmContract","supportedTokens","classes","selectedTokenIndex","setSelectedTokenIndex","handleChange","event","newValue","parseInt","account","isConnected","undefined","toString","map","token","index","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { useEthers } from \"@usedapp/core\"\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\"\nimport {\n  ConnectionRequiredMsg,\n} from \"../../components\"\nimport { Tab, Box, makeStyles } from \"@material-ui/core\"\nimport { Token } from \"../Main\"\nimport { Unstake } from \"./Unstake\"\n\ninterface TokenFarmContractProps {\n  supportedTokens: Array<Token>\n}\n\nconst useStyles = makeStyles((theme) => ({\n  tabContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: theme.spacing(4),\n  },\n  box: {\n    backgroundColor: \"white\",\n    borderRadius: \"25px\",\n    margin: `${theme.spacing(4)}px 0`,\n    padding: theme.spacing(2),\n  },\n  header: {\n    color: \"white\"\n  }\n}))\n\n\nexport const TokenFarmContract = ({\n  supportedTokens,\n}: TokenFarmContractProps) => {\n  const classes = useStyles()\n  const [selectedTokenIndex, setSelectedTokenIndex] = useState<number>(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\n    setSelectedTokenIndex(parseInt(newValue))\n  }\n\n  const { account } = useEthers()\n\n  const isConnected = account !== undefined\n\n  return (\n    <Box>\n      <h1 className={classes.header}>The TokenFarm Contract</h1>\n      <Box className={classes.box}>\n        <div>\n          {isConnected ? (\n            <TabContext value={selectedTokenIndex.toString()}>\n              <TabList onChange={handleChange} aria-label=\"stake form tabs\">\n                {supportedTokens.map((token, index) => {\n                  return (\n                    <Tab\n                      label={token.name}\n                      value={index.toString()}\n                      key={index}\n                    />\n                  )\n                })}\n              </TabList>\n              {supportedTokens.map((token, index) => {\n                return (\n                  <TabPanel value={index.toString()} key={index}>\n                    <Unstake token={token} />\n                  </TabPanel>\n                )\n              })}\n            </TabContext>\n          ) : (\n            <ConnectionRequiredMsg />\n          )}\n        </div>\n      </Box>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}