{"ast":null,"code":"import _slicedToArray from \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/src/features/yourWallet/StakeForm.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { SliderInput, SliderInput2 } from \"../../components\";\nimport { useEthers, useEtherBalance, useNotifications } from \"@usedapp/core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { Button, CircularProgress, Snackbar, makeStyles } from \"@material-ui/core\";\nimport { useStakeTokens, AuctionEnd, BidNoApprove2, BidNoApprove, AllowanceUser2, AuctionTopBidder, AuctionBid2, useStakeTokens2, CurrentAuctionNumber, SoldNFTs, LastWonAuction, CurrentVotePrice2, ClaimNFT, CurrentVotePrice } from \"../../hooks\";\nimport { utils } from \"ethers\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport \"../../App.css\"; // This is the typescript way of saying this compent needs this type\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      gap: theme.spacing(2),\n      width: \"100%\"\n    },\n    slider: {\n      width: \"100%\",\n      maxWidth: \"400px\"\n    }\n  };\n}); // token is getting passed in as a prop\n// in the ping brackets is an object/variable \n// That object is of the shape StakeFormProps\n\nexport var StakeForm = function StakeForm(_ref) {\n  _s();\n\n  var token = _ref.token;\n  var tokenAddress = token.address,\n      name = token.name;\n\n  var _useEthers = useEthers(),\n      account = _useEthers.account;\n\n  var tokenBalance = useEtherBalance(account);\n\n  var _useNotifications = useNotifications(),\n      notifications = _useNotifications.notifications;\n\n  var classes = useStyles();\n  var formattedTokenBalance = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0; //Gets vote price and sell price\n\n  var curVoteP = CurrentVotePrice(tokenAddress);\n  var formattedVoteP = curVoteP ? parseFloat(formatUnits(curVoteP, 18)) : 0;\n  var nothing;\n  var yourPrice = \"0\";\n\n  if (formattedVoteP !== nothing) {\n    yourPrice = formattedVoteP.toFixed(18);\n  }\n\n  var curVoteP2 = CurrentVotePrice2(tokenAddress);\n  console.log(\"CURP:\", curVoteP2);\n  var curVoteP2a = 0;\n\n  if (curVoteP2 != nothing) {\n    curVoteP2a = curVoteP2 / Math.pow(10, 18);\n    console.log(\"CURP:\", curVoteP2a);\n  }\n\n  var formattedVoteP2 = curVoteP2a ? parseFloat(curVoteP2a.toString()) : 0;\n  var actualPriceSlider = 0;\n  var actualPrice = \"0\";\n\n  if (formattedVoteP2 !== nothing) {\n    actualPriceSlider = formattedVoteP2;\n    actualPrice = formattedVoteP2.toFixed(18);\n  }\n\n  var LastWonAuctionz = LastWonAuction();\n  console.log(\"Laz\", LastWonAuctionz);\n  var lastWon = 0;\n  var clmzmsg = \"You have no claims, go bid on auction\";\n\n  if (LastWonAuctionz !== nothing && 0 <= parseFloat(LastWonAuctionz.toString())) {\n    clmzmsg = \"You won NFT auction #\" + (parseFloat(LastWonAuctionz.toString()) + 1);\n    lastWon = parseFloat(LastWonAuctionz.toString());\n  }\n\n  var aucNumz1 = 0;\n  var aucNumz = CurrentAuctionNumber(tokenAddress);\n\n  if (aucNumz !== nothing) {\n    aucNumz1 = parseFloat(aucNumz.toString()) - 1;\n  }\n\n  var endTime = AuctionEnd(aucNumz1.toString());\n  console.log(\"AuctionEnds at\", endTime);\n  var endT = 0;\n\n  if (endTime !== nothing) {\n    endT = parseFloat(endTime.toString());\n  }\n\n  var topBidder = AuctionTopBidder();\n  console.log(\"TOP AuctionTopBidder\", topBidder);\n  var alowz = AllowanceUser2();\n  var allowance = 0;\n\n  if (alowz !== nothing) {\n    allowance = parseFloat(alowz.toString());\n  }\n\n  console.log(\"AW22\", allowance);\n  var topBid = AuctionBid2();\n  console.log(\"TOP BID\", topBid);\n  var topBidzAmt = 0;\n\n  if (topBid !== nothing) {\n    topBidzAmt = parseFloat(topBid.toString()) + 100000000000;\n    topBidzAmt = topBidzAmt / Math.pow(10, 18);\n  }\n\n  console.log(\"TOP BIDaaaaaaaaa\", topBidzAmt);\n  console.log(\"AuctionEnds at\", endT);\n\n  var _useStakeTokens = useStakeTokens(tokenAddress),\n      stakeTokensSend = _useStakeTokens.send,\n      stakeTokensState = _useStakeTokens.state;\n\n  var handleStakeSubmit = function handleStakeSubmit() {\n    var amountAsWei = utils.parseEther(Number(amount).toFixed(18).toString());\n    return stakeTokensSend(amountAsWei.toString());\n  };\n\n  var _BidNoApprove = BidNoApprove(tokenAddress),\n      stakeTokensSendNoApprove = _BidNoApprove.send,\n      stakeTokensStateA5 = _BidNoApprove.state;\n\n  var handleStakeSubmitNoApprove = function handleStakeSubmitNoApprove() {\n    var amountAsWei = utils.parseEther(Number(amount).toFixed(18).toString());\n    return stakeTokensSendNoApprove(amountAsWei.toString());\n  };\n\n  var _useStakeTokens2 = useStakeTokens2(tokenAddress),\n      stakeTokensSend3 = _useStakeTokens2.send,\n      stakeTokensState33 = _useStakeTokens2.state;\n\n  var handleStakeSubmit2 = function handleStakeSubmit2() {\n    var amountAsWei = utils.parseEther(Number(amount3).toFixed(18).toString());\n    return stakeTokensSend3(amountAsWei.toString());\n  };\n\n  var _BidNoApprove2 = BidNoApprove2(tokenAddress),\n      stakeTokensSend34 = _BidNoApprove2.send,\n      stakeTokensState333 = _BidNoApprove2.state;\n\n  var handleStakeSubmit2NoApprove = function handleStakeSubmit2NoApprove() {\n    var amountAsWei = utils.parseEther(Number(amount3).toFixed(18).toString());\n    return stakeTokensSend34(amountAsWei.toString());\n  };\n\n  var _ClaimNFT = ClaimNFT(tokenAddress),\n      claimSend = _ClaimNFT.send,\n      stakeTokensState2 = _ClaimNFT.state;\n\n  var handleClaimSubmit = function handleClaimSubmit() {\n    return claimSend(lastWon.toString(), amount2.toString());\n  };\n\n  var _useState = useState(actualPriceSlider),\n      _useState2 = _slicedToArray(_useState, 2),\n      amount = _useState2[0],\n      setAmount = _useState2[1];\n\n  var _useState3 = useState(topBidzAmt),\n      _useState4 = _slicedToArray(_useState3, 2),\n      amount3 = _useState4[0],\n      setAmount3 = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      amount2 = _useState6[0],\n      setAmount2 = _useState6[1];\n\n  if (amount == 0 && actualPriceSlider !== 0) {\n    setAmount(actualPriceSlider);\n  }\n\n  if (amount3 == 0 && topBidzAmt !== 0) {\n    setAmount3(topBidzAmt);\n  }\n\n  var isSold = SoldNFTs(amount2.toString());\n  console.log(\"IS?\", isSold);\n  console.log(\"IS?\", amount2);\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showErc20ApprovalSuccess = _useState8[0],\n      setShowErc20ApprovalSuccess = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showStakeTokensSuccess = _useState10[0],\n      setShowStakeTokensSuccess = _useState10[1];\n\n  var handleCloseSnack = function handleCloseSnack() {\n    showErc20ApprovalSuccess && setShowErc20ApprovalSuccess(false);\n    showStakeTokensSuccess && setShowStakeTokensSuccess(false);\n  };\n\n  useEffect(function () {\n    if (notifications.filter(function (notification) {\n      return notification.type === \"transactionSucceed\" && notification.transactionName === \"Approve ERC20 transfer\";\n    }).length > 0) {\n      !showErc20ApprovalSuccess && setShowErc20ApprovalSuccess(true);\n      showStakeTokensSuccess && setShowStakeTokensSuccess(false);\n    }\n\n    if (notifications.filter(function (notification) {\n      return notification.type === \"transactionSucceed\" && notification.transactionName === \"Stake tokens\";\n    }).length > 0) {\n      showErc20ApprovalSuccess && setShowErc20ApprovalSuccess(false);\n      !showStakeTokensSuccess && setShowStakeTokensSuccess(true);\n    }\n  }, [notifications, showErc20ApprovalSuccess, showStakeTokensSuccess]);\n\n  var _useState11 = useState(\"1\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      startingauction = _useState12[0],\n      setAmountz = _useState12[1];\n\n  var isMining = stakeTokensState.status === \"Mining\";\n  var hasZeroBalance = formattedTokenBalance === 0;\n  var hasZeroAmountSelected = parseFloat(amount.toString()) === 0;\n  var imgz = new Array();\n  var imgzNum = new Array();\n  var p;\n  var sel = \"https://forgetoken.org/api/forge/NFT/\" + amount2.toString() + \".png\";\n  var ez = sel.toString();\n\n  var selected = /*#__PURE__*/_jsxDEV(\"img\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 16\n  }, _this);\n\n  var selected2 = /*#__PURE__*/_jsxDEV(\"img\", {\n    src: \"   https://thumbs.dreamstime.com/z/green-check-mark-circle-vector-illustration-flat-design-isolated-green-check-mark-circle-flat-design-isolated-125098940.jpg\\n\",\n    alt: \"This NFT is Claimed\",\n    width: \"50em\",\n    height: \"50em\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 16\n  }, _this);\n\n  var browse = /*#__PURE__*/_jsxDEV(\"img\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 14\n  }, _this);\n\n  var msg = \"\";\n\n  if (ez !== nothing) {\n    browse = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: sel,\n      alt: \"Girl in a jacket\",\n      width: \"300\",\n      height: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 12\n    }, _this);\n    selected = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: sel,\n      alt: \"Girl in a jacket\",\n      width: \"300\",\n      height: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 14\n    }, _this);\n    msg = \"This NFT is available for purchase or redemption\";\n\n    if (!isSold) {\n      selected2 = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"http://www.newdesignfile.com/postpic/2013/10/red-xmark-icon_293198.jpeg\",\n        alt: \"This NFT is Claimed\",\n        width: \"50em\",\n        height: \"50em\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 19\n      }, _this);\n      msg = \"Someone has already claimed this NFT\";\n    }\n  }\n\n  var secondsSinceEpoch = Math.round(Date.now() / 1000);\n  console.log(\"SEL\", selected);\n  console.log(\"WELCOME\");\n  var tttt = 650;\n  var timeleft = endT - secondsSinceEpoch;\n  console.log(\"time left\", timeleft);\n  var noTime = \"Auction currently running, bid for a Forge NFT\";\n  var timeLeftMSG = \"There is \" + timeleft + \" seconds left in this Auction\";\n\n  if (timeleft < 0) {\n    noTime = \"Auction is over, start a new one or Claim NFT\";\n    timeLeftMSG = \"\";\n  }\n\n  var but7 = \"Yest\";\n\n  var but9 = /*#__PURE__*/_jsxDEV(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"large\",\n    onClick: handleStakeSubmit2,\n    disabled: isMining,\n    children: isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n      size: 26\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, _this) : \"Bid on buying a NFT2 - 1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 13\n  }, _this);\n\n  var but8 = /*#__PURE__*/_jsxDEV(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"large\",\n    onClick: handleStakeSubmit,\n    disabled: isMining,\n    children: isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n      size: 26\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }, _this) : \"Bid on buying a NFT\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 12\n  }, _this);\n\n  if (amount < allowance) {\n    console.log(\"YESzasd\");\n    but7 = 'noo';\n    but8 = /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      size: \"large\",\n      onClick: handleStakeSubmitNoApprove,\n      disabled: isMining,\n      children: isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 26\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 15\n      }, _this) : \"Bid on buying a NFT2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 18\n    }, _this);\n  }\n\n  if (amount3 < allowance) {\n    but9 = /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      size: \"large\",\n      onClick: handleStakeSubmit2NoApprove,\n      disabled: isMining,\n      children: isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 26\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }, _this) : \"Bid on buying a NFT2 - 12\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, _this);\n  }\n\n  if (timeleft > 0 && tokenAddress == \"0xbF4493415fD1E79DcDa8cD0cAd7E5Ed65DCe7074\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [noTime, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, _this), timeLeftMSG, /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: tttt - timeleft,\n          max: tttt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 7\n        }, _this), \"Auction #: \", aucNumz1 + 2, \" out of 32\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 42\n        }, _this), \"Bid on to win NFT\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 24\n        }, _this), \"Minimum Bid: \", topBidzAmt, \" Forge\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 40\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [\"Current High Bidder: \", topBidder, /*#__PURE__*/_jsxDEV(SliderInput, {\n          label: \"Bid on NFT\",\n          maxValue: topBidzAmt * 3,\n          minValue: topBidzAmt,\n          id: \"slider-input-\".concat(name),\n          className: classes.slider,\n          value: amount3,\n          onChange: setAmount3,\n          disabled: isMining\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 9\n        }, _this), but7, /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          size: \"large\",\n          onClick: handleStakeSubmit2,\n          disabled: isMining,\n          children: isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 26\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 23\n          }, _this) : \"Bid on buying a NFT2 - OLD1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 9\n        }, _this), but9]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: showErc20ApprovalSuccess,\n        autoHideDuration: 5000,\n        onClose: handleCloseSnack,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnack,\n          severity: \"success\",\n          children: \"ERC-20 token transfer approved successfully! Now approve the 2nd tx to initiate the staking transfer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: showStakeTokensSuccess,\n        autoHideDuration: 5000,\n        onClose: handleCloseSnack,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnack,\n          severity: \"success\",\n          children: \"Tokens staked successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true);\n  }\n\n  if (tokenAddress == \"0xbF4493415fD1E79DcDa8cD0cAd7E5Ed65DCe7074\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [noTime, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }, _this), timeLeftMSG, /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: tttt - timeleft,\n          max: tttt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 7\n        }, _this), \"Auction #: \", aucNumz1 + 2, \" out of 32\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 42\n        }, _this), \"Bid on NFT to start 3 day auction\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 40\n        }, _this), \"Minimum Bid: \", actualPriceSlider, \" Forge\", /*#__PURE__*/_jsxDEV(SliderInput, {\n          label: \"Bid on NFT\",\n          maxValue: actualPriceSlider * 3,\n          minValue: actualPriceSlider,\n          id: \"slider-input-\".concat(name),\n          className: classes.slider,\n          value: amount,\n          onChange: setAmount,\n          disabled: isMining\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 9\n        }, _this), but7, but8, /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          size: \"large\",\n          onClick: handleStakeSubmit,\n          disabled: isMining,\n          children: isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 26\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 23\n          }, _this) : \"Bid on buying a NFT OLD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: showErc20ApprovalSuccess,\n        autoHideDuration: 5000,\n        onClose: handleCloseSnack,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnack,\n          severity: \"success\",\n          children: \"ERC-20 token transfer approved successfully! Now approve the 2nd tx to initiate the staking transfer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: showStakeTokensSuccess,\n        autoHideDuration: 5000,\n        onClose: handleCloseSnack,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnack,\n          severity: \"success\",\n          children: \"Tokens staked successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true);\n  }\n\n  if (tokenAddress == \"0xFab46E002BbF0b4509813474841E0716E6730136\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: [\" \", selected, selected2, /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 5\n        }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: clmzmsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 19\n        }, _this), \"must wait until after auction ends to claim\", /*#__PURE__*/_jsxDEV(SliderInput2, {\n          label: \"Claim NFT # \".concat(amount2),\n          maxValue: 32,\n          min: 1,\n          id: \"slider-input-\".concat(name),\n          className: classes.slider,\n          value: amount2,\n          onChange: setAmount2,\n          disabled: isMining\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 8\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          size: \"large\",\n          onClick: handleClaimSubmit,\n          disabled: isMining,\n          children: isMining ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 26\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 23\n          }, _this) : \"Claim NFT2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 3\n      }, _this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: showErc20ApprovalSuccess,\n        autoHideDuration: 5000,\n        onClose: handleCloseSnack,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnack,\n          severity: \"success\",\n          children: \"ERC-20 token transfer approved successfully! Now approve the 2nd tx to initiate the staking transfer.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: showStakeTokensSuccess,\n        autoHideDuration: 5000,\n        onClose: handleCloseSnack,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnack,\n          severity: \"success\",\n          children: \"Claimed NFT successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(StakeForm, \"74xPTGaZvC1B0iY0JlA3u+Aqfj4=\", false, function () {\n  return [useEthers, useEtherBalance, useNotifications, useStyles, useStakeTokens, useStakeTokens2];\n});\n\n_c = StakeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"StakeForm\");","map":{"version":3,"sources":["/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/src/features/yourWallet/StakeForm.tsx"],"names":["React","useEffect","useState","SliderInput","SliderInput2","useEthers","useEtherBalance","useNotifications","formatUnits","Button","CircularProgress","Snackbar","makeStyles","useStakeTokens","AuctionEnd","BidNoApprove2","BidNoApprove","AllowanceUser2","AuctionTopBidder","AuctionBid2","useStakeTokens2","CurrentAuctionNumber","SoldNFTs","LastWonAuction","CurrentVotePrice2","ClaimNFT","CurrentVotePrice","utils","Alert","useStyles","theme","container","display","flexDirection","alignItems","gap","spacing","width","slider","maxWidth","StakeForm","token","tokenAddress","address","name","account","tokenBalance","notifications","classes","formattedTokenBalance","parseFloat","curVoteP","formattedVoteP","nothing","yourPrice","toFixed","curVoteP2","console","log","curVoteP2a","formattedVoteP2","toString","actualPriceSlider","actualPrice","LastWonAuctionz","lastWon","clmzmsg","aucNumz1","aucNumz","endTime","endT","topBidder","alowz","allowance","topBid","topBidzAmt","stakeTokensSend","send","stakeTokensState","state","handleStakeSubmit","amountAsWei","parseEther","Number","amount","stakeTokensSendNoApprove","stakeTokensStateA5","handleStakeSubmitNoApprove","stakeTokensSend3","stakeTokensState33","handleStakeSubmit2","amount3","stakeTokensSend34","stakeTokensState333","handleStakeSubmit2NoApprove","claimSend","stakeTokensState2","handleClaimSubmit","amount2","setAmount","setAmount3","setAmount2","isSold","showErc20ApprovalSuccess","setShowErc20ApprovalSuccess","showStakeTokensSuccess","setShowStakeTokensSuccess","handleCloseSnack","filter","notification","type","transactionName","length","startingauction","setAmountz","isMining","status","hasZeroBalance","hasZeroAmountSelected","imgz","Array","imgzNum","p","sel","ez","selected","selected2","browse","msg","secondsSinceEpoch","Math","round","Date","now","tttt","timeleft","noTime","timeLeftMSG","but7","but9","but8"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { SliderInput, SliderInput2 } from \"../../components\"\n\nimport CurrencyInput from 'react-currency-input-field';\nimport { useEthers,useEtherBalance, useTokenBalance, useNotifications } from \"@usedapp/core\"\nimport { formatUnits } from \"@ethersproject/units\"\nimport {\n  Button,\n  CircularProgress,\n  Snackbar,\n  makeStyles,\n} from \"@material-ui/core\"\nimport { Token } from \"../Main\"\nimport { useStakeTokens, AuctionEnd, BidNoApprove2, BidNoApprove, AllowanceUser2, AuctionTopBidder, AuctionBid2, useStakeTokens2, CurrentAuctionNumber, SoldNFTs, LastWonAuction, CurrentVotePrice2, ClaimNFT, CurrentVotePrice } from \"../../hooks\"\nimport { utils } from \"ethers\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport \"../../App.css\"\n\n// This is the typescript way of saying this compent needs this type\nexport interface StakeFormProps {\n  token: Token\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: theme.spacing(2),\n    width: \"100%\",\n  },\n  slider: {\n    width: \"100%\",\n    maxWidth: \"400px\",\n  },\n}))\n\n// token is getting passed in as a prop\n// in the ping brackets is an object/variable \n// That object is of the shape StakeFormProps\nexport const StakeForm = ({ token }: StakeFormProps) => {\n  const { address: tokenAddress, name } = token\n\n  const { account } = useEthers()\n  const tokenBalance = useEtherBalance(account)\n  const { notifications } = useNotifications()\n\n  const classes = useStyles()\n\n\n  const formattedTokenBalance: number = tokenBalance\n    ? parseFloat(formatUnits(tokenBalance, 18))\n    : 0\n\n\n  //Gets vote price and sell price\n  const curVoteP = CurrentVotePrice(tokenAddress)\n\n  const formattedVoteP: number = curVoteP\n    ? parseFloat(formatUnits(curVoteP, 18))\n    : 0\n    \n  let nothing\n  var yourPrice = \"0\"\n  if(formattedVoteP!== nothing){\n\n    yourPrice = formattedVoteP.toFixed(18)\n  }\n  \n  const curVoteP2 = CurrentVotePrice2(tokenAddress)\n  console.log(\"CURP:\", curVoteP2)\n  var curVoteP2a = 0\nif(curVoteP2 != nothing){\n  curVoteP2a = curVoteP2  / 10**18\n\n  console.log(\"CURP:\", curVoteP2a)\n}\n    const formattedVoteP2: number = curVoteP2a\n      ? parseFloat(curVoteP2a.toString())\n      : 0\n\n\n  var actualPriceSlider = 0\n  var actualPrice = \"0\"\n  if(formattedVoteP2!== nothing){\n    actualPriceSlider = formattedVoteP2\n    actualPrice = formattedVoteP2.toFixed(18)\n  }\n  \n\n\n  const LastWonAuctionz = LastWonAuction()\n  console.log(\"Laz\", LastWonAuctionz)\n  var lastWon = 0\n  var clmzmsg = \"You have no claims, go bid on auction\"\n  if(LastWonAuctionz !== nothing && 0 <= parseFloat(LastWonAuctionz.toString())){\n    clmzmsg = \"You won NFT auction #\"+ (parseFloat(LastWonAuctionz.toString()) + 1)\n    lastWon = parseFloat(LastWonAuctionz.toString())\n  }\n  \n  var aucNumz1 = 0\nvar aucNumz = CurrentAuctionNumber(tokenAddress)\nif(aucNumz !== nothing){\n  aucNumz1 = parseFloat(aucNumz.toString()) - 1\n\n}\nvar endTime = AuctionEnd(aucNumz1.toString())\nconsole.log(\"AuctionEnds at\", endTime)\nvar endT = 0 \nif(endTime !== nothing){\n  endT = parseFloat(endTime.toString())\n}\n\n\nvar topBidder = AuctionTopBidder()\nconsole.log(\"TOP AuctionTopBidder\", topBidder)\n\n\n\nvar alowz = AllowanceUser2()\nvar allowance = 0\nif(alowz !== nothing){\n  allowance = parseFloat(alowz.toString())\n}\nconsole.log(\"AW22\", allowance)\n\n\nvar topBid = AuctionBid2()\nconsole.log(\"TOP BID\", topBid)\nvar topBidzAmt = 0\nif(topBid !== nothing){\n  topBidzAmt = parseFloat(topBid.toString()) + 100000000000\n  topBidzAmt = topBidzAmt / 10 ** 18\n}\nconsole.log(\"TOP BIDaaaaaaaaa\", topBidzAmt)\nconsole.log(\"AuctionEnds at\", endT)\n  const { send: stakeTokensSend, state: stakeTokensState } =\n    useStakeTokens(tokenAddress)\n\n    const handleStakeSubmit = () => {\n      const amountAsWei = utils.parseEther(Number(amount).toFixed(18).toString())\n      return stakeTokensSend(amountAsWei.toString())\n    }\n\n      const { send: stakeTokensSendNoApprove, state: stakeTokensStateA5 } =\n      BidNoApprove(tokenAddress)\n  \n      const handleStakeSubmitNoApprove = () => {\n        const amountAsWei = utils.parseEther(Number(amount).toFixed(18).toString())\n        return stakeTokensSendNoApprove(amountAsWei.toString())\n      }\n\n\n\n      const { send: stakeTokensSend3, state: stakeTokensState33 } =\n      useStakeTokens2(tokenAddress)\n     \n  const handleStakeSubmit2 = () => {\n    const amountAsWei = utils.parseEther(Number(amount3).toFixed(18).toString())\n    return stakeTokensSend3(amountAsWei.toString())\n  }\n\n      const { send: stakeTokensSend34, state: stakeTokensState333 } =\n      BidNoApprove2(tokenAddress)\n     \n  const handleStakeSubmit2NoApprove = () => {\n    const amountAsWei = utils.parseEther(Number(amount3).toFixed(18).toString())\n    return stakeTokensSend34(amountAsWei.toString())\n  }\n\n\n\n\n\n  const { send: claimSend, state: stakeTokensState2 } =\n    ClaimNFT(tokenAddress)\n  \n  const handleClaimSubmit = () => {\n    return claimSend(lastWon.toString(), amount2.toString())\n  }\n\n  const [amount, setAmount] =\n    useState<number | string | Array<number | string>>(actualPriceSlider)\n\n\n    const [amount3, setAmount3] =\n    useState<number | string | Array<number | string>>(topBidzAmt)\n\n    const [amount2, setAmount2] =\n    useState<number | string | Array<number | string>>(1)\n\n\n    if(amount == 0 && actualPriceSlider !== 0){\n      setAmount(actualPriceSlider)\n    }\n\n\n    if(amount3 == 0 && topBidzAmt !== 0){\n      setAmount3(topBidzAmt)\n    }\n        \n\n\n    var isSold = SoldNFTs(amount2.toString())\n    console.log(\"IS?\", isSold)\n    console.log(\"IS?\", amount2)\n\n  const [showErc20ApprovalSuccess, setShowErc20ApprovalSuccess] =\n    useState(false)\n  const [showStakeTokensSuccess, setShowStakeTokensSuccess] = useState(false)\n\n  const handleCloseSnack = () => {\n    showErc20ApprovalSuccess && setShowErc20ApprovalSuccess(false)\n    showStakeTokensSuccess && setShowStakeTokensSuccess(false)\n  }\n\n  useEffect(() => {\n    if (\n      notifications.filter(\n        (notification) =>\n          notification.type === \"transactionSucceed\" &&\n          notification.transactionName === \"Approve ERC20 transfer\"\n      ).length > 0\n    ) {\n      !showErc20ApprovalSuccess && setShowErc20ApprovalSuccess(true)\n      showStakeTokensSuccess && setShowStakeTokensSuccess(false)\n    }\n\n    if (\n      notifications.filter(\n        (notification) =>\n          notification.type === \"transactionSucceed\" &&\n          notification.transactionName === \"Stake tokens\"\n      ).length > 0\n    ) {\n      showErc20ApprovalSuccess && setShowErc20ApprovalSuccess(false)\n      !showStakeTokensSuccess && setShowStakeTokensSuccess(true)\n    }\n  }, [notifications, showErc20ApprovalSuccess, showStakeTokensSuccess])\n\n  var [startingauction, setAmountz] =\n  useState<string | undefined | Array<number | string>>(\"1\")\n  \n  \n  const isMining = stakeTokensState.status === \"Mining\"\n\n  const hasZeroBalance = formattedTokenBalance === 0\n  const hasZeroAmountSelected = parseFloat(amount.toString()) === 0\n  var imgz = new Array();\n  var imgzNum = new Array();\nvar p \nvar sel = \"https://forgetoken.org/api/forge/NFT/\"+amount2.toString()+\".png\"\nvar ez = sel.toString()\n\nvar selected = <img></img>\nvar selected2 =<img src=\"   https://thumbs.dreamstime.com/z/green-check-mark-circle-vector-illustration-flat-design-isolated-green-check-mark-circle-flat-design-isolated-125098940.jpg\n\" alt=\"This NFT is Claimed\" width=\"50em\" height=\"50em\"></img>\n \nvar browse = <img></img>\nvar msg = \"\"\nif(ez !== nothing){\n\n  browse = <img src={sel} alt=\"Girl in a jacket\" width=\"300\" height=\"300\"></img>\n  selected = <img src={sel} alt=\"Girl in a jacket\" width=\"300\" height=\"300\"></img>\n  msg = \"This NFT is available for purchase or redemption\"\n  if(!isSold){\n      selected2 = <img src=\"http://www.newdesignfile.com/postpic/2013/10/red-xmark-icon_293198.jpeg\" alt=\"This NFT is Claimed\" width=\"50em\" height=\"50em\"></img>\n    msg = \"Someone has already claimed this NFT\"\n}\n\n}\nconst secondsSinceEpoch = Math.round(Date.now() / 1000)\nconsole.log(\"SEL\", selected)\nconsole.log(\"WELCOME\")\nvar tttt = 650\nvar timeleft = endT - secondsSinceEpoch\nconsole.log(\"time left\", timeleft)\nvar noTime = \"Auction currently running, bid for a Forge NFT\"\nvar timeLeftMSG = \"There is \" + timeleft + \" seconds left in this Auction\"\nif(timeleft < 0 ){\n  noTime = \"Auction is over, start a new one or Claim NFT\"\n  timeLeftMSG=\"\"\n}\nvar but7 = \"Yest\"\n\nvar but9 =  <Button\ncolor=\"primary\"\nvariant=\"contained\"\nsize=\"large\"\nonClick={handleStakeSubmit2}\ndisabled={isMining }\n>\n{isMining ? <CircularProgress size={26} /> : \"Bid on buying a NFT2 - 1\"}\n</Button>\n\nvar but8 = <Button\ncolor=\"primary\"\nvariant=\"contained\"\nsize=\"large\"\nonClick={handleStakeSubmit}\ndisabled={isMining }\n>\n{isMining ? <CircularProgress size={26} /> : \"Bid on buying a NFT\"}\n</Button>\n\nif(amount < allowance){\n  console.log(\"YESzasd\")\n  but7 = 'noo'\n  but8 =         <Button\n  color=\"primary\"\n  variant=\"contained\"\n  size=\"large\"\n  onClick={handleStakeSubmitNoApprove}\n  disabled={isMining }\n>\n  {isMining ? <CircularProgress size={26} /> : \"Bid on buying a NFT2\"}\n</Button>\n}\nif(amount3 < allowance){\nbut9 =  <Button\ncolor=\"primary\"\nvariant=\"contained\"\nsize=\"large\"\nonClick={handleStakeSubmit2NoApprove}\ndisabled={isMining }\n>\n{isMining ? <CircularProgress size={26} /> : \"Bid on buying a NFT2 - 12\"}\n</Button>\n\n}\nif(timeleft > 0 && tokenAddress == \"0xbF4493415fD1E79DcDa8cD0cAd7E5Ed65DCe7074\"){\n\n  return (\n    <>\n      <div className={classes.container}> \n            {noTime}<br></br>{timeLeftMSG}\n      <progress value={tttt - timeleft} max={tttt}></progress>\n    \n      Auction #: {aucNumz1 + 2} out of 32<br></br>\n      Bid on to win NFT<br></br>\n      Minimum Bid: {topBidzAmt  } Forge<br></br></div>\n      <div className={classes.container}> \n      Current High Bidder: {topBidder}\n        <SliderInput\n          label={`Bid on NFT`}\n          maxValue={topBidzAmt*3}\n          minValue={topBidzAmt}\n          id={`slider-input-${name}`}\n          className={classes.slider}\n          value={amount3}\n          onChange={setAmount3}\n          disabled={isMining }\n        />{but7}\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          onClick={handleStakeSubmit2}\n          disabled={isMining }\n        >\n          {isMining ? <CircularProgress size={26} /> : \"Bid on buying a NFT2 - OLD1\"}\n        </Button>\n   {but9}\n        </div>\n      <Snackbar\n        open={showErc20ApprovalSuccess}\n        autoHideDuration={5000}\n        onClose={handleCloseSnack}\n      >\n        <Alert onClose={handleCloseSnack} severity=\"success\">\n          ERC-20 token transfer approved successfully! Now approve the 2nd tx to\n          initiate the staking transfer.\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={showStakeTokensSuccess}\n        autoHideDuration={5000}\n        onClose={handleCloseSnack}\n      >\n        <Alert onClose={handleCloseSnack} severity=\"success\">\n          Tokens staked successfully!\n        </Alert>\n      </Snackbar>\n\n    </>\n  )\n}\n\n\nif(tokenAddress == \"0xbF4493415fD1E79DcDa8cD0cAd7E5Ed65DCe7074\"){\n\n  return (\n    <>\n      <div className={classes.container}> \n            {noTime}<br></br>{timeLeftMSG}\n      <progress value={tttt - timeleft} max={tttt}></progress>\n      Auction #: {aucNumz1 + 2} out of 32<br></br>\n      Bid on NFT to start 3 day auction<br></br>Minimum Bid: {actualPriceSlider} Forge\n        <SliderInput\n          label={`Bid on NFT`}\n          maxValue={actualPriceSlider*3}\n          minValue={actualPriceSlider}\n          id={`slider-input-${name}`}\n          className={classes.slider}\n          value={amount}\n          onChange={setAmount}\n          disabled={isMining }\n        />{but7}{but8}\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          onClick={handleStakeSubmit}\n          disabled={isMining }\n        >\n          {isMining ? <CircularProgress size={26} /> : \"Bid on buying a NFT OLD\"}\n        </Button>\n   \n        </div>\n      <Snackbar\n        open={showErc20ApprovalSuccess}\n        autoHideDuration={5000}\n        onClose={handleCloseSnack}\n      >\n        <Alert onClose={handleCloseSnack} severity=\"success\">\n          ERC-20 token transfer approved successfully! Now approve the 2nd tx to\n          initiate the staking transfer.\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={showStakeTokensSuccess}\n        autoHideDuration={5000}\n        onClose={handleCloseSnack}\n      >\n        <Alert onClose={handleCloseSnack} severity=\"success\">\n          Tokens staked successfully!\n        </Alert>\n      </Snackbar>\n\n    </>\n  )\n}\n\nif(tokenAddress == \"0xFab46E002BbF0b4509813474841E0716E6730136\"){\n\nreturn(\n\n  <>\n  <div className={classes.container}> {selected}{selected2}\n    <h1>{msg}</h1><h1>{clmzmsg}</h1>must wait until after auction ends to claim\n       <SliderInput2\n          label={`Claim NFT # ${amount2}`}\n          maxValue={32}\n          min={1}\n          id={`slider-input-${name}`}\n          className={classes.slider}\n          value={amount2}\n          onChange={setAmount2}\n          disabled={isMining }\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          onClick={handleClaimSubmit}\n          disabled={isMining }\n        >\n          {isMining ? <CircularProgress size={26} /> : \"Claim NFT2\"}\n        </Button>\n   \n        </div>\n      <Snackbar\n        open={showErc20ApprovalSuccess}\n        autoHideDuration={5000}\n        onClose={handleCloseSnack}\n      >\n        <Alert onClose={handleCloseSnack} severity=\"success\">\n          ERC-20 token transfer approved successfully! Now approve the 2nd tx to\n          initiate the staking transfer.\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={showStakeTokensSuccess}\n        autoHideDuration={5000}\n        onClose={handleCloseSnack}\n      >\n        <Alert onClose={handleCloseSnack} severity=\"success\">\n          Claimed NFT successfully!\n        </Alert>\n      </Snackbar>\n\n  \n  \n  \n  \n  \n  \n  </>\n)\n\n\n}\nreturn(\n\n  <></>\n)\n}"]},"metadata":{},"sourceType":"module"}