{"ast":null,"code":"var _jsxFileName = \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/src/features/yourWallet/WalletBalance.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEthers, useTokenBalance } from \"@usedapp/core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BalanceMsg } from \"../../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var WalletBalance = function WalletBalance(_ref) {\n  _s();\n\n  var token = _ref.token;\n  var image = token.image,\n      address = token.address,\n      name = token.name;\n\n  var _useEthers = useEthers(),\n      account = _useEthers.account;\n\n  var tokenBalance = useTokenBalance(address, account);\n\n  if (address == \"\") {\n    var _formattedTokenBalance = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0;\n  } else {\n    var _formattedTokenBalance2 = tokenBalance ? parseFloat(formatUnits(tokenBalance, 18)) : 0;\n  }\n\n  return /*#__PURE__*/_jsxDEV(BalanceMsg, {\n    label: \"Your un-staked \".concat(name, \" balance\"),\n    amount: formattedTokenBalance,\n    tokenImgSrc: image\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(WalletBalance, \"NqEQKrgyRTaT6/yyWoioelkAkU4=\", false, function () {\n  return [useEthers, useTokenBalance];\n});\n\n_c = WalletBalance;\n\nvar _c;\n\n$RefreshReg$(_c, \"WalletBalance\");","map":{"version":3,"sources":["/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/src/features/yourWallet/WalletBalance.tsx"],"names":["React","useEthers","useTokenBalance","formatUnits","BalanceMsg","WalletBalance","token","image","address","name","account","tokenBalance","formattedTokenBalance","parseFloat"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,eAA3C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAMA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAmC;AAAA;;AAAA,MAAhCC,KAAgC,QAAhCA,KAAgC;AAC9D,MAAQC,KAAR,GAAiCD,KAAjC,CAAQC,KAAR;AAAA,MAAeC,OAAf,GAAiCF,KAAjC,CAAeE,OAAf;AAAA,MAAwBC,IAAxB,GAAiCH,KAAjC,CAAwBG,IAAxB;;AAEA,mBAAoBR,SAAS,EAA7B;AAAA,MAAQS,OAAR,cAAQA,OAAR;;AACA,MAAMC,YAAY,GAAGT,eAAe,CAACM,OAAD,EAAUE,OAAV,CAApC;;AACA,MAAGF,OAAO,IAAG,EAAb,EAAgB;AAEd,QAAMI,sBAA6B,GAAGD,YAAY,GAChDE,UAAU,CAACV,WAAW,CAACQ,YAAD,EAAe,EAAf,CAAZ,CADsC,GAEhD,CAFF;AAGD,GALD,MAKK;AAEL,QAAMC,uBAA6B,GAAGD,YAAY,GAChDE,UAAU,CAACV,WAAW,CAACQ,YAAD,EAAe,EAAf,CAAZ,CADsC,GAEhD,CAFF;AAGC;;AACD,sBACE,QAAC,UAAD;AACE,IAAA,KAAK,2BAAoBF,IAApB,aADP;AAEE,IAAA,MAAM,EAAEG,qBAFV;AAGE,IAAA,WAAW,EAAEL;AAHf;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CAvBM;;GAAMF,a;UAGSJ,S,EACCC,e;;;KAJVG,a","sourcesContent":["import React from \"react\";\nimport { Token } from \"../Main\";\nimport { useEthers, useTokenBalance } from \"@usedapp/core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport { BalanceMsg } from \"../../components\";\n\nexport interface WalletBalanceProps {\n  token: Token;\n}\n\nexport const WalletBalance = ({ token }: WalletBalanceProps) => {\n  const { image, address, name } = token;\n\n  const { account } = useEthers();\n  const tokenBalance = useTokenBalance(address, account);\n  if(address ==\"\"){\n\n    const formattedTokenBalance: number = tokenBalance\n    ? parseFloat(formatUnits(tokenBalance, 18))\n    : 0;\n  }else{\n\n  const formattedTokenBalance: number = tokenBalance\n  ? parseFloat(formatUnits(tokenBalance, 18))\n  : 0;\n  }\n  return (\n    <BalanceMsg\n      label={`Your un-staked ${name} balance`}\n      amount={formattedTokenBalance}\n      tokenImgSrc={image}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}