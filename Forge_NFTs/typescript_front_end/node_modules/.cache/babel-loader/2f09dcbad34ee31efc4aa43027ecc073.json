{"ast":null,"code":"import _slicedToArray from\"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Button,CircularProgress,Snackbar,makeStyles}from\"@material-ui/core\";import{useUnstakeTokens,CurrentVotePrice,CurrentVotePrice2,VotePrice,useStakingBalance}from\"../../hooks\";import Alert from\"@material-ui/lab/Alert\";import{useNotifications,useEthers,useTokenBalance}from\"@usedapp/core\";import{formatUnits}from\"@ethersproject/units\";import{SliderInput,BalanceMsg}from\"../../components\";import{utils}from\"ethers\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{contentContainer:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"flex-start\",gap:theme.spacing(2)}};});export var Unstake=function Unstake(_ref){var token=_ref.token;var image=token.image,tokenAddress=token.address,name=token.name;var _useEthers=useEthers(),account=_useEthers.account;var _useNotifications=useNotifications(),notifications=_useNotifications.notifications;var balance=useStakingBalance(tokenAddress);//Gets vote price and sell price\nvar curVoteP=CurrentVotePrice(tokenAddress);var formattedVoteP=curVoteP?parseFloat(formatUnits(curVoteP,18)):0;var nothing;var yourPrice=\"0\";if(formattedVoteP!==nothing){yourPrice=formattedVoteP.toFixed(18);}var curVoteP2=CurrentVotePrice2(tokenAddress);var formattedVoteP2=curVoteP2?parseFloat(formatUnits(curVoteP2,18)):0;var actualPriceSlider=0;var actualPrice=\"0\";if(formattedVoteP2!==nothing){actualPriceSlider=formattedVoteP2;actualPrice=formattedVoteP2.toFixed(18);}var balance2=useTokenBalance(\"0xE5DaFb73374553c4cE1a196E928EeB9722149154\",account);var formattedBalance=balance2?parseFloat(formatUnits(balance2,0)):0;var _useState=useState(200),_useState2=_slicedToArray(_useState,2),amount=_useState2[0],setAmount=_useState2[1];var _useUnstakeTokens=useUnstakeTokens(),unstakeTokensSend=_useUnstakeTokens.send,unstakeTokensState=_useUnstakeTokens.state;var handleUnstakeSubmit=function handleUnstakeSubmit(){return unstakeTokensSend(tokenAddress);};var _VotePrice=VotePrice(tokenAddress),doVotePrice=_VotePrice.send,unstakeTokensState2=_VotePrice.state;var handleVotePrice=function handleVotePrice(){console.log(\"TESTZ\",Number(amount).toFixed(18));var amountAsWei=utils.parseEther(Number(amount).toFixed(18).toString());return doVotePrice(amountAsWei.toString());};var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showUnstakeSuccess=_useState4[0],setShowUnstakeSuccess=_useState4[1];var handleCloseSnack=function handleCloseSnack(){showUnstakeSuccess&&setShowUnstakeSuccess(false);};useEffect(function(){if(notifications.filter(function(notification){return notification.type===\"transactionSucceed\"&&notification.transactionName===\"Unstake tokens\";}).length>0){!showUnstakeSuccess&&setShowUnstakeSuccess(true);}},[notifications,showUnstakeSuccess]);var isMining=unstakeTokensState.status===\"Mining\";var classes=useStyles();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:classes.contentContainer,children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(BalanceMsg,{label:\"Your shares of Forge NFT\",amount:formattedBalance,tokenImgSrc:image}),/*#__PURE__*/_jsx(\"br\",{}),\"Your current Voted Price to sell: \",yourPrice,\" Polygon\",/*#__PURE__*/_jsx(\"br\",{}),\"Everyone total overall sell price: \",actualPrice,\" Polygon\",/*#__PURE__*/_jsx(SliderInput,{label:\"Decide on price to sell NFTs for\",minValue:actualPriceSlider/10+1/Math.pow(10,18),maxValue:actualPriceSlider*10-1/Math.pow(10,18),id:\"slider-input-\".concat(name),className:\"6\",value:amount,onChange:setAmount,disabled:isMining}),/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"contained\",size:\"large\",onClick:handleVotePrice,disabled:isMining,children:isMining?/*#__PURE__*/_jsx(CircularProgress,{size:26}):\"Vote on Price to sell NFT for\"})]})}),/*#__PURE__*/_jsx(Snackbar,{open:showUnstakeSuccess,autoHideDuration:5000,onClose:handleCloseSnack,children:/*#__PURE__*/_jsx(Alert,{onClose:handleCloseSnack,severity:\"success\",children:\"Tokens unstaked successfully!\"})})]});};","map":{"version":3,"sources":["/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/src/features/tokenFarmContract/Unstake.tsx"],"names":["React","useState","useEffect","Button","CircularProgress","Snackbar","makeStyles","useUnstakeTokens","CurrentVotePrice","CurrentVotePrice2","VotePrice","useStakingBalance","Alert","useNotifications","useEthers","useTokenBalance","formatUnits","SliderInput","BalanceMsg","utils","useStyles","theme","contentContainer","display","flexDirection","alignItems","justifyContent","gap","spacing","Unstake","token","image","tokenAddress","address","name","account","notifications","balance","curVoteP","formattedVoteP","parseFloat","nothing","yourPrice","toFixed","curVoteP2","formattedVoteP2","actualPriceSlider","actualPrice","balance2","formattedBalance","amount","setAmount","unstakeTokensSend","send","unstakeTokensState","state","handleUnstakeSubmit","doVotePrice","unstakeTokensState2","handleVotePrice","console","log","Number","amountAsWei","parseEther","toString","showUnstakeSuccess","setShowUnstakeSuccess","handleCloseSnack","filter","notification","type","transactionName","length","isMining","status","classes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport {\n  Button,\n  CircularProgress,\n  Snackbar,\n  makeStyles,\n} from \"@material-ui/core\"\nimport { Token } from \"../Main\"\nimport { useUnstakeTokens, CurrentVotePrice, CurrentVotePrice2, VotePrice, useStakingBalance } from \"../../hooks\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport { useNotifications, useEthers, useTokenBalance  } from \"@usedapp/core\"\nimport { formatUnits } from \"@ethersproject/units\"\nimport {SliderInput, SliderInput2, BalanceMsg } from \"../../components\"\n\nimport { utils } from \"ethers\"\nexport interface UnstakeFormProps {\n  token: Token\n}\n\nconst useStyles = makeStyles((theme) => ({\n  contentContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    gap: theme.spacing(2),\n  },\n}))\n\nexport const Unstake = ({ token }: UnstakeFormProps) => {\n  const { image, address: tokenAddress, name } = token\n\n  const { account } = useEthers();\n  const { notifications } = useNotifications()\n\n  const balance = useStakingBalance(tokenAddress)\n\n  //Gets vote price and sell price\n  const curVoteP = CurrentVotePrice(tokenAddress)\n\n  const formattedVoteP: number = curVoteP\n    ? parseFloat(formatUnits(curVoteP, 18))\n    : 0\n    \n  let nothing\n  var yourPrice = \"0\"\n  if(formattedVoteP!== nothing){\n\n    yourPrice = formattedVoteP.toFixed(18)\n  }\n  \n  const curVoteP2 = CurrentVotePrice2(tokenAddress)\n\n    const formattedVoteP2: number = curVoteP2\n      ? parseFloat(formatUnits(curVoteP2, 18))\n      : 0\n  var actualPriceSlider = 0\n  var actualPrice = \"0\"\n  if(formattedVoteP2!== nothing){\n    actualPriceSlider = formattedVoteP2\n    actualPrice = formattedVoteP2.toFixed(18)\n  }\n  \n  const balance2 = useTokenBalance(\"0xE5DaFb73374553c4cE1a196E928EeB9722149154\", account)\n\n  const formattedBalance: number = balance2\n    ? parseFloat(formatUnits(balance2, 0))\n    : 0\n\n    const [amount, setAmount] =\n    useState<number | string | Array<number | string>>(200)\n\n  const { send: unstakeTokensSend, state: unstakeTokensState } =\n    useUnstakeTokens()\n\n  const handleUnstakeSubmit = () => {\n    return unstakeTokensSend(tokenAddress)\n  }\n\n\n\n  const { send: doVotePrice, state: unstakeTokensState2 } =\n    VotePrice(tokenAddress)\n\n  const handleVotePrice = () => {\n    console.log(\"TESTZ\", Number(amount).toFixed(18))\n    const amountAsWei = utils.parseEther(Number(amount).toFixed(18).toString())\n    return doVotePrice(amountAsWei.toString())\n  }\n\n  const [showUnstakeSuccess, setShowUnstakeSuccess] = useState(false)\n\n  const handleCloseSnack = () => {\n    showUnstakeSuccess && setShowUnstakeSuccess(false)\n  }\n\n  useEffect(() => {\n    if (\n      notifications.filter(\n        (notification) =>\n          notification.type === \"transactionSucceed\" &&\n          notification.transactionName === \"Unstake tokens\"\n      ).length > 0\n    ) {\n      !showUnstakeSuccess && setShowUnstakeSuccess(true)\n    }\n  }, [notifications, showUnstakeSuccess])\n\n  const isMining = unstakeTokensState.status === \"Mining\"\n\n\n  const classes = useStyles()\n\n  return (\n    <>\n      <div className={classes.contentContainer}>\n\n      <div className={\"content\"}>\n\n      \n        <BalanceMsg\n          label={`Your shares of Forge NFT`}\n          amount={formattedBalance}\n          tokenImgSrc={image}\n        /><br></br>\n       Your current Voted Price to sell: {yourPrice} Polygon<br></br>\n       Everyone total overall sell price: {actualPrice} Polygon\n        <SliderInput\n          label={`Decide on price to sell NFTs for`}\n          minValue={actualPriceSlider/10 + 1/(10**18)}\n          maxValue={actualPriceSlider*10 - 1/(10**18)}\n          id={`slider-input-${name}`}\n            className={\"6\"}\n          value={amount}\n          onChange={setAmount}\n          disabled={isMining }\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          onClick={handleVotePrice}\n          disabled={isMining}\n        >\n          {isMining ? <CircularProgress size={26} /> : `Vote on Price to sell NFT for`}\n        </Button>\n      </div>\n      </div>\n      <Snackbar\n        open={showUnstakeSuccess}\n        autoHideDuration={5000}\n        onClose={handleCloseSnack}\n      >\n        <Alert onClose={handleCloseSnack} severity=\"success\">\n          Tokens unstaked successfully!\n        </Alert>\n      </Snackbar>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}