{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/forgeserver/Desktop/MainNet-Forge-NFT/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"/home/forgeserver/Desktop/MainNet-Forge-NFT/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nexport function callsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ADD_CALLS') {\n    return [].concat(_toConsumableArray(state), _toConsumableArray(action.calls));\n  } else {\n    var finalState = state;\n\n    var _iterator = _createForOfIteratorHelper(action.calls),\n        _step;\n\n    try {\n      var _loop = function _loop() {\n        var call = _step.value;\n        var index = finalState.findIndex(function (x) {\n          return x.address === call.address && x.data === call.data;\n        });\n\n        if (index !== -1) {\n          finalState = finalState.filter(function (_, i) {\n            return i !== index;\n          });\n        }\n      };\n\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return finalState;\n  }\n}","map":{"version":3,"sources":["../../../../../src/providers/chainState/callsReducer.ts"],"names":[],"mappings":";;AAiBA,OAAM,SAAU,YAAV,GAA8D;AAAA,MAAvC,KAAuC,uEAAlB,EAAkB;AAAA,MAAd,MAAc;;AAClE,MAAI,MAAM,CAAC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,wCAAW,KAAX,sBAAqB,MAAM,CAAC,KAA5B;AACD,GAFD,MAEO;AACL,QAAI,UAAU,GAAG,KAAjB;;AADK,+CAEc,MAAM,CAAC,KAFrB;AAAA;;AAAA;AAAA;AAAA,YAEM,IAFN;AAGH,YAAM,KAAK,GAAG,UAAU,CAAC,SAAX,CAAqB,UAAC,CAAD;AAAA,iBAAO,CAAC,CAAC,OAAF,KAAc,IAAI,CAAC,OAAnB,IAA8B,CAAC,CAAC,IAAF,KAAW,IAAI,CAAC,IAArD;AAAA,SAArB,CAAd;;AACA,YAAI,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,UAAA,UAAU,GAAG,UAAU,CAAC,MAAX,CAAkB,UAAC,CAAD,EAAI,CAAJ;AAAA,mBAAU,CAAC,KAAK,KAAhB;AAAA,WAAlB,CAAb;AACD;AANE;;AAEL,0DAAiC;AAAA;AAKhC;AAPI;AAAA;AAAA;AAAA;AAAA;;AAQL,WAAO,UAAP;AACD;AACF","sourceRoot":"","sourcesContent":["export function callsReducer(state = [], action) {\n    if (action.type === 'ADD_CALLS') {\n        return [...state, ...action.calls];\n    }\n    else {\n        let finalState = state;\n        for (const call of action.calls) {\n            const index = finalState.findIndex((x) => x.address === call.address && x.data === call.data);\n            if (index !== -1) {\n                finalState = finalState.filter((_, i) => i !== index);\n            }\n        }\n        return finalState;\n    }\n}\n//# sourceMappingURL=callsReducer.js.map"]},"metadata":{},"sourceType":"module"}