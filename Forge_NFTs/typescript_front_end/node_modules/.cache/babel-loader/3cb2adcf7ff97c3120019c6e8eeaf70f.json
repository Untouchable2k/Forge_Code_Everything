{"ast":null,"code":"import _slicedToArray from\"/home/forgeserver/Desktop/MainNet-Forge-NFT/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContractCall,useEthers}from\"@usedapp/core\";import TokenFarm from\"../chain-info/ForgeDistributorContract.json\";import{utils,constants}from\"ethers\";import brownieConfig from\"../brownie-config-json.json\";import helperConfig from\"../helper-config.json\";/**\n * Get the staking balance of a certain token by the user in our TokenFarm contract\n * @param address - The contract address of the token\n */export var DistTimeKiwi=function DistTimeKiwi(){var _useContractCall;var _useEthers=useEthers(),account=_useEthers.account,chainId=_useEthers.chainId;var abi=TokenFarm.abi;var networkName=chainId?helperConfig[chainId]:\"ganache\";var dist=chainId?brownieConfig[\"networks\"][networkName][\"distrubtor\"]:constants.AddressZero;var tokenFarmInterface=new utils.Interface(abi);var _ref=(_useContractCall=useContractCall({abi:tokenFarmInterface,address:dist,method:\"timestampKiwi\",args:[]}))!==null&&_useContractCall!==void 0?_useContractCall:[],_ref2=_slicedToArray(_ref,1),timestamp3=_ref2[0];return timestamp3;};","map":{"version":3,"sources":["/home/forgeserver/Desktop/MainNet-Forge-NFT/defi-stake-yield-brownie-main/front_end/src/hooks/distTimeKiwi.ts"],"names":["useContractCall","useEthers","TokenFarm","utils","constants","brownieConfig","helperConfig","DistTimeKiwi","account","chainId","abi","networkName","dist","AddressZero","tokenFarmInterface","Interface","address","method","args","timestamp3"],"mappings":"0MAAA,OAASA,eAAT,CAA0BC,SAA1B,KAA2C,eAA3C,CACA,MAAOC,CAAAA,SAAP,KAAsB,6CAAtB,CACA,OAASC,KAAT,CAA2BC,SAA3B,KAA4C,QAA5C,CAGA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CAEA;AACA;AACA;AACA,GACA,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAA6B,sBACvD,eAA6BN,SAAS,EAAtC,CAAQO,OAAR,YAAQA,OAAR,CAAiBC,OAAjB,YAAiBA,OAAjB,CACA,GAAQC,CAAAA,GAAR,CAAgBR,SAAhB,CAAQQ,GAAR,CACA,GAAMC,CAAAA,WAAW,CAAGF,OAAO,CAAGH,YAAY,CAACG,OAAD,CAAf,CAA2B,SAAtD,CACA,GAAMG,CAAAA,IAAI,CAAGH,OAAO,CAAGJ,aAAa,CAAC,UAAD,CAAb,CAA0BM,WAA1B,EAAuC,YAAvC,CAAH,CAA0DP,SAAS,CAACS,WAAxF,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,GAAIX,CAAAA,KAAK,CAACY,SAAV,CAAoBL,GAApB,CAA3B,CAEA,2BACEV,eAAe,CAAC,CACdU,GAAG,CAAEI,kBADS,CAEdE,OAAO,CAAEJ,IAFK,CAGdK,MAAM,CAAE,eAHM,CAIdC,IAAI,CAAE,EAJQ,CAAD,CADjB,qDAMQ,EANR,8BAAOC,UAAP,UAQA,MAAOA,CAAAA,UAAP,CACD,CAjBM","sourcesContent":["import { useContractCall, useEthers } from \"@usedapp/core\"\nimport TokenFarm from \"../chain-info/ForgeDistributorContract.json\"\nimport { utils, BigNumber, constants } from \"ethers\"\n\nimport networkMapping from \"../chain-info/map.json\"\nimport brownieConfig from \"../brownie-config-json.json\"\nimport helperConfig from \"../helper-config.json\"\n\n/**\n * Get the staking balance of a certain token by the user in our TokenFarm contract\n * @param address - The contract address of the token\n */\nexport const DistTimeKiwi = (): BigNumber | undefined => {\n  const { account, chainId } = useEthers()\n  const { abi } = TokenFarm\n  const networkName = chainId ? helperConfig[chainId] : \"ganache\"\n  const dist = chainId ? brownieConfig[\"networks\"][networkName][\"distrubtor\"] : constants.AddressZero\n  \n  const tokenFarmInterface = new utils.Interface(abi)\n\n  const [timestamp3] =\n    useContractCall({\n      abi: tokenFarmInterface,\n      address: dist,\n      method: \"timestampKiwi\",\n      args: [],\n    }) ?? []\n\n  return timestamp3\n}\n"]},"metadata":{},"sourceType":"module"}