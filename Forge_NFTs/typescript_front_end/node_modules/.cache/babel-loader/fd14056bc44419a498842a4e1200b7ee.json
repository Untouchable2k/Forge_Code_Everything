{"ast":null,"code":"import _regeneratorRuntime from \"/home/forgeserver/Desktop/MainNet-Forge-NFT/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/forgeserver/Desktop/MainNet-Forge-NFT/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useWeb3React } from '@web3-react/core';\nimport { useCallback } from 'react';\nimport { useConfig } from '../providers/config/context';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nexport function useEthers() {\n  var result = useWeb3React();\n\n  var _useConfig = useConfig(),\n      supportedChains = _useConfig.supportedChains;\n\n  var activateBrowserWallet = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(onError, throwErrors) {\n      var injected;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              injected = new InjectedConnector({\n                supportedChainIds: supportedChains\n              });\n\n              if (!(onError instanceof Function)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 4;\n              return result.activate(injected, onError, throwErrors);\n\n            case 4:\n              _context.next = 8;\n              break;\n\n            case 6:\n              _context.next = 8;\n              return result.activate(injected, undefined, throwErrors);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [supportedChains]);\n  return Object.assign(Object.assign({}, result), {\n    activateBrowserWallet: activateBrowserWallet\n  });\n}","map":{"version":3,"sources":["../../../../src/hooks/useEthers.ts"],"names":[],"mappings":";;AAAA,SAAS,YAAT,QAA6B,kBAA7B;AAGA,SAAS,WAAT,QAA4B,OAA5B;AACA,SAAS,SAAT,QAA0B,6BAA1B;AACA,SAAS,iBAAT,QAAkC,gCAAlC;AAUA,OAAM,SAAU,SAAV,GAAmB;AACvB,MAAM,MAAM,GAAG,YAAY,EAA3B;;AACA,mBAA4B,SAAS,EAArC;AAAA,MAAQ,eAAR,cAAQ,eAAR;;AACA,MAAM,qBAAqB,GAAG,WAAW;AAAA,wEACvC,iBAAO,OAAP,EAAgB,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACQ,cAAA,QADR,GACmB,IAAI,iBAAJ,CAAsB;AAAE,gBAAA,iBAAiB,EAAE;AAArB,eAAtB,CADnB;;AAAA,oBAEM,OAAO,YAAY,QAFzB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGU,MAAM,CAAC,QAAP,CAAgB,QAAhB,EAA0B,OAA1B,EAAmC,WAAnC,CAHV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAKU,MAAM,CAAC,QAAP,CAAgB,QAAhB,EAA0B,SAA1B,EAAqC,WAArC,CALV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADuC;;AAAA;AAAA;AAAA;AAAA,OASvC,CAAC,eAAD,CATuC,CAAzC;AAWA,SAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAY,MAAZ,CAAA,EAAkB;AAAE,IAAA,qBAAqB,EAArB;AAAF,GAAlB,CAAA;AACD","sourceRoot":"","sourcesContent":["import { useWeb3React } from '@web3-react/core';\nimport { useCallback } from 'react';\nimport { useConfig } from '../providers/config/context';\nimport { InjectedConnector } from '@web3-react/injected-connector';\nexport function useEthers() {\n    const result = useWeb3React();\n    const { supportedChains } = useConfig();\n    const activateBrowserWallet = useCallback(async (onError, throwErrors) => {\n        const injected = new InjectedConnector({ supportedChainIds: supportedChains });\n        if (onError instanceof Function) {\n            await result.activate(injected, onError, throwErrors);\n        }\n        else {\n            await result.activate(injected, undefined, throwErrors);\n        }\n    }, [supportedChains]);\n    return Object.assign(Object.assign({}, result), { activateBrowserWallet });\n}\n//# sourceMappingURL=useEthers.js.map"]},"metadata":{},"sourceType":"module"}