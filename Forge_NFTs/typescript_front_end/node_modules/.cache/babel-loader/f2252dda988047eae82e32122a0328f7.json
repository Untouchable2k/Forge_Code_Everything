{"ast":null,"code":"import{useContractFunction,useEthers}from\"@usedapp/core\";import TokenFarm from\"../chain-info/TokenFarm.json\";import{utils,constants}from\"ethers\";import{Contract}from\"@ethersproject/contracts\";import brownieConfig from\"../brownie-config-json.json\";import helperConfig from\"../helper-config.json\";/**\n * Expose { send, state } object to facilitate unstaking the user's tokens from the TokenFarm contract\n */export var useUnstakeTokens=function useUnstakeTokens(){var _useEthers=useEthers(),chainId=_useEthers.chainId;var abi=TokenFarm.abi;var networkName=chainId?helperConfig[chainId]:\"ganache\";var tokenFarmContractAddress=chainId?brownieConfig[\"networks\"][networkName][\"DappToken\"]:constants.AddressZero;var tokenFarmInterface=new utils.Interface(abi);var tokenFarmContract=new Contract(tokenFarmContractAddress,tokenFarmInterface);return useContractFunction(tokenFarmContract,\"unstakeTokens\",{transactionName:\"Unstake tokens\"});};","map":{"version":3,"sources":["/home/forgeserver/Desktop/MainNet-Forge-NFT/defi-stake-yield-brownie-main/front_end/src/hooks/useUnstakeTokens.ts"],"names":["useContractFunction","useEthers","TokenFarm","utils","constants","Contract","brownieConfig","helperConfig","useUnstakeTokens","chainId","abi","networkName","tokenFarmContractAddress","AddressZero","tokenFarmInterface","Interface","tokenFarmContract","transactionName"],"mappings":"AAAA,OAASA,mBAAT,CAA8BC,SAA9B,KAA+C,eAA/C,CACA,MAAOC,CAAAA,SAAP,KAAsB,8BAAtB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,QAAjC,CACA,OAASC,QAAT,KAAyB,0BAAzB,CAGA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CAEA;AACA;AACA,GACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CACpC,eAAoBP,SAAS,EAA7B,CAAQQ,OAAR,YAAQA,OAAR,CACA,GAAQC,CAAAA,GAAR,CAAgBR,SAAhB,CAAQQ,GAAR,CACA,GAAMC,CAAAA,WAAW,CAAGF,OAAO,CAAGF,YAAY,CAACE,OAAD,CAAf,CAA2B,SAAtD,CACA,GAAMG,CAAAA,wBAAwB,CAAGH,OAAO,CAAGH,aAAa,CAAC,UAAD,CAAb,CAA0BK,WAA1B,EAAuC,WAAvC,CAAH,CAAyDP,SAAS,CAACS,WAA3G,CAEA,GAAMC,CAAAA,kBAAkB,CAAG,GAAIX,CAAAA,KAAK,CAACY,SAAV,CAAoBL,GAApB,CAA3B,CAEA,GAAMM,CAAAA,iBAAiB,CAAG,GAAIX,CAAAA,QAAJ,CACxBO,wBADwB,CAExBE,kBAFwB,CAA1B,CAKA,MAAOd,CAAAA,mBAAmB,CAACgB,iBAAD,CAAoB,eAApB,CAAqC,CAC7DC,eAAe,CAAE,gBAD4C,CAArC,CAA1B,CAGD,CAhBM","sourcesContent":["import { useContractFunction, useEthers } from \"@usedapp/core\"\nimport TokenFarm from \"../chain-info/TokenFarm.json\"\nimport { utils, constants } from \"ethers\"\nimport { Contract } from \"@ethersproject/contracts\"\n\nimport networkMapping from \"../chain-info/map.json\"\nimport brownieConfig from \"../brownie-config-json.json\"\nimport helperConfig from \"../helper-config.json\"\n\n/**\n * Expose { send, state } object to facilitate unstaking the user's tokens from the TokenFarm contract\n */\nexport const useUnstakeTokens = () => {\n  const { chainId } = useEthers()\n  const { abi } = TokenFarm\n  const networkName = chainId ? helperConfig[chainId] : \"ganache\"\n  const tokenFarmContractAddress = chainId ? brownieConfig[\"networks\"][networkName][\"DappToken\"] : constants.AddressZero\n  \n  const tokenFarmInterface = new utils.Interface(abi)\n\n  const tokenFarmContract = new Contract(\n    tokenFarmContractAddress,\n    tokenFarmInterface\n  )\n\n  return useContractFunction(tokenFarmContract, \"unstakeTokens\", {\n    transactionName: \"Unstake tokens\",\n  })\n}\n"]},"metadata":{},"sourceType":"module"}