{"ast":null,"code":"import { useContext, useEffect, useMemo } from 'react';\nimport { ChainStateContext } from '../providers/chainState/context';\nexport function useChainCalls(calls) {\n  var _useContext = useContext(ChainStateContext),\n      dispatchCalls = _useContext.dispatchCalls,\n      value = _useContext.value;\n\n  useEffect(function () {\n    var filteredCalls = calls.filter(Boolean);\n    dispatchCalls({\n      type: 'ADD_CALLS',\n      calls: filteredCalls\n    });\n    return function () {\n      return dispatchCalls({\n        type: 'REMOVE_CALLS',\n        calls: filteredCalls\n      });\n    };\n  }, [JSON.stringify(calls), dispatchCalls]);\n  return useMemo(function () {\n    return calls.map(function (call) {\n      var _a, _b;\n\n      return call && ((_b = (_a = value === null || value === void 0 ? void 0 : value.state) === null || _a === void 0 ? void 0 : _a[call.address]) === null || _b === void 0 ? void 0 : _b[call.data]);\n    });\n  }, [JSON.stringify(calls), value]);\n}\nexport function useChainCall(call) {\n  return useChainCalls([call])[0];\n}","map":{"version":3,"sources":["../../../../src/hooks/useChainCalls.ts"],"names":[],"mappings":"AAAA,SAAS,UAAT,EAAqB,SAArB,EAAgC,OAAhC,QAA+C,OAA/C;AAEA,SAAS,iBAAT,QAAkC,iCAAlC;AAGA,OAAM,SAAU,aAAV,CAAwB,KAAxB,EAAoD;AACxD,oBAAiC,UAAU,CAAC,iBAAD,CAA3C;AAAA,MAAQ,aAAR,eAAQ,aAAR;AAAA,MAAuB,KAAvB,eAAuB,KAAvB;;AAEA,EAAA,SAAS,CAAC,YAAK;AACb,QAAM,aAAa,GAAG,KAAK,CAAC,MAAN,CAAa,OAAb,CAAtB;AACA,IAAA,aAAa,CAAC;AAAE,MAAA,IAAI,EAAE,WAAR;AAAqB,MAAA,KAAK,EAAE;AAA5B,KAAD,CAAb;AACA,WAAO;AAAA,aAAM,aAAa,CAAC;AAAE,QAAA,IAAI,EAAE,cAAR;AAAwB,QAAA,KAAK,EAAE;AAA/B,OAAD,CAAnB;AAAA,KAAP;AACD,GAJQ,EAIN,CAAC,IAAI,CAAC,SAAL,CAAe,KAAf,CAAD,EAAwB,aAAxB,CAJM,CAAT;AAMA,SAAO,OAAO,CAAC;AAAA,WAAM,KAAK,CAAC,GAAN,CAAU,UAAC,IAAD,EAAS;AAAA,UAAA,EAAA,EAAA,EAAA;;AAAC,aAAA,IAAI,KAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAI,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,KAAX,MAAgB,IAAhB,IAAgB,EAAA,KAAA,KAAA,CAAhB,GAAgB,KAAA,CAAhB,GAAgB,EAAA,CAAG,IAAI,CAAC,OAAR,CAAhB,MAA+B,IAA/B,IAA+B,EAAA,KAAA,KAAA,CAA/B,GAA+B,KAAA,CAA/B,GAA+B,EAAA,CAAI,IAAI,CAAC,IAAT,CAA/B,CAAJ;AAAiD,KAArE,CAAN;AAAA,GAAD,EAA+E,CAC3F,IAAI,CAAC,SAAL,CAAe,KAAf,CAD2F,EAE3F,KAF2F,CAA/E,CAAd;AAID;AAED,OAAM,SAAU,YAAV,CAAuB,IAAvB,EAA8C;AAClD,SAAO,aAAa,CAAC,CAAC,IAAD,CAAD,CAAb,CAAsB,CAAtB,CAAP;AACD","sourceRoot":"","sourcesContent":["import { useContext, useEffect, useMemo } from 'react';\nimport { ChainStateContext } from '../providers/chainState/context';\nexport function useChainCalls(calls) {\n    const { dispatchCalls, value } = useContext(ChainStateContext);\n    useEffect(() => {\n        const filteredCalls = calls.filter(Boolean);\n        dispatchCalls({ type: 'ADD_CALLS', calls: filteredCalls });\n        return () => dispatchCalls({ type: 'REMOVE_CALLS', calls: filteredCalls });\n    }, [JSON.stringify(calls), dispatchCalls]);\n    return useMemo(() => calls.map((call) => { var _a, _b; return call && ((_b = (_a = value === null || value === void 0 ? void 0 : value.state) === null || _a === void 0 ? void 0 : _a[call.address]) === null || _b === void 0 ? void 0 : _b[call.data]); }), [\n        JSON.stringify(calls),\n        value,\n    ]);\n}\nexport function useChainCall(call) {\n    return useChainCalls([call])[0];\n}\n//# sourceMappingURL=useChainCalls.js.map"]},"metadata":{},"sourceType":"module"}