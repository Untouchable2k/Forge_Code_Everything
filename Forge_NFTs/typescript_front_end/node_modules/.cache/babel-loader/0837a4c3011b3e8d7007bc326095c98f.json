{"ast":null,"code":"import _objectSpread from\"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"label\",\"id\",\"maxValue\",\"value\",\"onChange\",\"disabled\"];import React from\"react\";import{Slider,Input,Typography,makeStyles}from\"@material-ui/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{inputsContainer:{display:\"grid\",gap:theme.spacing(3),gridTemplateRows:\"auto\",gridTemplateColumns:\"1fr auto\"},slider:{}};});export var SliderInput2=function SliderInput2(_ref){var _ref$label=_ref.label,label=_ref$label===void 0?\"\":_ref$label,_ref$id=_ref.id,id=_ref$id===void 0?\"input-slider\":_ref$id,maxValue=_ref.maxValue,value=_ref.value,onChange=_ref.onChange,_ref$disabled=_ref.disabled,disabled=_ref$disabled===void 0?false:_ref$disabled,rest=_objectWithoutProperties(_ref,_excluded);var handleSliderChange=function handleSliderChange(event,newValue){onChange(newValue);};var handleInputChange=function handleInputChange(event){onChange(event.target.value===\"\"?\"\":Number(event.target.value));};var handleBlur=function handleBlur(){if(value<1){onChange(1);}else if(value>maxValue){onChange(maxValue);}};var sliderStep=1;var inputStep=1;var classes=useStyles();var sliderMarks=[{value:1,label:\"1\"},{value:maxValue,label:\"32\"}];// ... is a \"Spread\" operator\n// standard javascript thing\n// works on iterables\n// expands a list\nreturn/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({},rest),{},{children:[label&&/*#__PURE__*/_jsx(Typography,{id:id,gutterBottom:true,children:label}),/*#__PURE__*/_jsxs(\"div\",{className:classes.inputsContainer,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Slider,{value:typeof value===\"number\"?value:0,step:sliderStep,onChange:handleSliderChange,\"aria-labelledby\":id,min:1,max:maxValue,disabled:disabled,marks:disabled?[]:sliderMarks})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Input,{value:value,margin:\"dense\",onChange:handleInputChange,onBlur:handleBlur,disabled:disabled,inputProps:{step:inputStep,min:0,max:maxValue,type:\"number\",\"aria-labelledby\":id}})})]})]}));};","map":{"version":3,"sources":["/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/src/components/SliderInput2.tsx"],"names":["React","Slider","Input","Typography","makeStyles","useStyles","theme","inputsContainer","display","gap","spacing","gridTemplateRows","gridTemplateColumns","slider","SliderInput2","label","id","maxValue","value","onChange","disabled","rest","handleSliderChange","event","newValue","handleInputChange","target","Number","handleBlur","sliderStep","inputStep","classes","sliderMarks","step","min","max","type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Slider, Input, Typography, makeStyles } from \"@material-ui/core\";\n\ninterface SliderInputProps {\n  label?: string;\n  id?: string;\n  maxValue: number;\n  value: number | string | (string | number)[];\n  onChange: (newValue: number | string | Array<number | string>) => void;\n  disabled?: boolean;\n  [x: string]: any;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  inputsContainer: {\n    display: \"grid\",\n    gap: theme.spacing(3),\n    gridTemplateRows: \"auto\",\n    gridTemplateColumns: \"1fr auto\",\n  },\n  slider: {},\n}));\n\nexport const SliderInput2 = ({\n  label = \"\",\n  id = \"input-slider\",\n  maxValue,\n  value,\n  onChange,\n  disabled = false,\n  ...rest\n}: SliderInputProps) => {\n  const handleSliderChange = (event: any, newValue: number | number[]) => {\n    onChange(newValue);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange(event.target.value === \"\" ? \"\" : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < 1) {\n      onChange(1);\n    } else if (value > maxValue) {\n      onChange(maxValue);\n    }\n  };\n\n  const sliderStep = 1\n  const inputStep = 1;\n\n  const classes = useStyles();\n\n  const sliderMarks = [\n    {\n      value: 1,\n      label: \"1\",\n    },\n    {\n      value: maxValue,\n      label: \"32\",\n    },\n  ];\n\n  // ... is a \"Spread\" operator\n  // standard javascript thing\n  // works on iterables\n  // expands a list\n  return (\n    <div {...rest}>\n      {label && (\n        <Typography id={id} gutterBottom>\n          {label}\n        </Typography>\n      )}\n      <div className={classes.inputsContainer}>\n        <div>\n          <Slider\n            value={typeof value === \"number\" ? value : 0}\n            step={sliderStep}\n            onChange={handleSliderChange}\n            aria-labelledby={id}\n            min={1}\n            max={maxValue}\n            disabled={disabled}\n            marks={disabled ? [] : sliderMarks}\n          />\n        </div>\n        <div>\n          <Input\n            value={value}\n            margin=\"dense\"\n            onChange={handleInputChange}\n            onBlur={handleBlur}\n            disabled={disabled}\n            inputProps={{\n              step: inputStep,\n              min: 0,\n              max: maxValue,\n              type: \"number\",\n              \"aria-labelledby\": id,\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}