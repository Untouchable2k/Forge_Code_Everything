{"ast":null,"code":"import _slicedToArray from\"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{SliderInput,SliderInput2}from\"../../components\";import{useEthers,useEtherBalance,useNotifications}from\"@usedapp/core\";import{formatUnits}from\"@ethersproject/units\";import{Button,CircularProgress,Snackbar,makeStyles}from\"@material-ui/core\";import{useStakeTokens,SoldNFTs,CurrentVotePrice2,ClaimNFT,CurrentVotePrice}from\"../../hooks\";import{utils}from\"ethers\";import Alert from\"@material-ui/lab/Alert\";import\"../../App.css\";// This is the typescript way of saying this compent needs this type\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{container:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",gap:theme.spacing(2),width:\"100%\"},slider:{width:\"100%\",maxWidth:\"400px\"}};});// token is getting passed in as a prop\n// in the ping brackets is an object/variable \n// That object is of the shape StakeFormProps\nexport var StakeForm=function StakeForm(_ref){var token=_ref.token;var tokenAddress=token.address,name=token.name;var _useEthers=useEthers(),account=_useEthers.account;var tokenBalance=useEtherBalance(account);var _useNotifications=useNotifications(),notifications=_useNotifications.notifications;var classes=useStyles();var formattedTokenBalance=tokenBalance?parseFloat(formatUnits(tokenBalance,18)):0;//Gets vote price and sell price\nvar curVoteP=CurrentVotePrice(tokenAddress);var formattedVoteP=curVoteP?parseFloat(formatUnits(curVoteP,18)):0;var nothing;var yourPrice=\"0\";if(formattedVoteP!==nothing){yourPrice=formattedVoteP.toFixed(18);}var curVoteP2=CurrentVotePrice2(tokenAddress);var formattedVoteP2=curVoteP2?parseFloat(formatUnits(curVoteP2,18)):0;var actualPriceSlider=0;var actualPrice=\"0\";if(formattedVoteP2!==nothing){actualPriceSlider=formattedVoteP2;actualPrice=formattedVoteP2.toFixed(18);}var _useStakeTokens=useStakeTokens(tokenAddress),stakeTokensSend=_useStakeTokens.send,stakeTokensState=_useStakeTokens.state;var handleStakeSubmit=function handleStakeSubmit(){var amountAsWei=utils.parseEther(Number(amount).toFixed(18).toString());return stakeTokensSend(amountAsWei.toString());};var _ClaimNFT=ClaimNFT(tokenAddress),claimSend=_ClaimNFT.send,stakeTokensState2=_ClaimNFT.state;var handleClaimSubmit=function handleClaimSubmit(){var amountAsWei=utils.parseEther(amount2.toString());return claimSend(amountAsWei.toString());};var _useState=useState(0),_useState2=_slicedToArray(_useState,2),amount=_useState2[0],setAmount=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),amount2=_useState4[0],setAmount2=_useState4[1];var isSold=SoldNFTs(amount2.toString());console.log(\"IS?\",isSold);console.log(\"IS?\",amount2);var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showErc20ApprovalSuccess=_useState6[0],setShowErc20ApprovalSuccess=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showStakeTokensSuccess=_useState8[0],setShowStakeTokensSuccess=_useState8[1];var handleCloseSnack=function handleCloseSnack(){showErc20ApprovalSuccess&&setShowErc20ApprovalSuccess(false);showStakeTokensSuccess&&setShowStakeTokensSuccess(false);};useEffect(function(){if(notifications.filter(function(notification){return notification.type===\"transactionSucceed\"&&notification.transactionName===\"Approve ERC20 transfer\";}).length>0){!showErc20ApprovalSuccess&&setShowErc20ApprovalSuccess(true);showStakeTokensSuccess&&setShowStakeTokensSuccess(false);}if(notifications.filter(function(notification){return notification.type===\"transactionSucceed\"&&notification.transactionName===\"Stake tokens\";}).length>0){showErc20ApprovalSuccess&&setShowErc20ApprovalSuccess(false);!showStakeTokensSuccess&&setShowStakeTokensSuccess(true);}},[notifications,showErc20ApprovalSuccess,showStakeTokensSuccess]);var _useState9=useState(\"1\"),_useState10=_slicedToArray(_useState9,2),startingauction=_useState10[0],setAmountz=_useState10[1];var isMining=stakeTokensState.status===\"Mining\";var hasZeroBalance=formattedTokenBalance===0;var hasZeroAmountSelected=parseFloat(amount.toString())===0;var imgz=new Array();var imgzNum=new Array();var p;var sel=\"https://forgetoken.org/api/forge/NFT/\"+amount2.toString()+\".png\";var ez=sel.toString();var selected=/*#__PURE__*/_jsx(\"img\",{});var browse=/*#__PURE__*/_jsx(\"img\",{});var msg=\"\";if(ez!==nothing){browse=/*#__PURE__*/_jsx(\"img\",{src:sel,alt:\"Girl in a jacket\",width:\"300\",height:\"300\"});selected=/*#__PURE__*/_jsx(\"img\",{src:sel,alt:\"Girl in a jacket\",width:\"300\",height:\"300\"});msg=\"This NFT is available for purchase or redemption\";if(!isSold){selected=/*#__PURE__*/_jsx(\"img\",{src:\"\",alt:\"This NFT is Claimed\",width:\"300\",height:\"300\"});msg=\"Someone has already claimed this NFT\";}}console.log(\"SEL\",selected);console.log(\"WELCOME\");if(tokenAddress==\"0xbF4493415fD1E79DcDa8cD0cAd7E5Ed65DCe7074\"){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.container,children:[\"Bid on Auction, Claim NFT, Browse Collection, Your Collection\",/*#__PURE__*/_jsx(SliderInput,{label:\"Bid \".concat(name),maxValue:actualPriceSlider*3,minValue:actualPriceSlider,id:\"slider-input-\".concat(name),className:classes.slider,value:amount,onChange:setAmount,disabled:isMining}),/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"contained\",size:\"large\",onClick:handleStakeSubmit,disabled:isMining,children:isMining?/*#__PURE__*/_jsx(CircularProgress,{size:26}):\"Bid on buying a NFT\"})]}),/*#__PURE__*/_jsx(Snackbar,{open:showErc20ApprovalSuccess,autoHideDuration:5000,onClose:handleCloseSnack,children:/*#__PURE__*/_jsx(Alert,{onClose:handleCloseSnack,severity:\"success\",children:\"ERC-20 token transfer approved successfully! Now approve the 2nd tx to initiate the staking transfer.\"})}),/*#__PURE__*/_jsx(Snackbar,{open:showStakeTokensSuccess,autoHideDuration:5000,onClose:handleCloseSnack,children:/*#__PURE__*/_jsx(Alert,{onClose:handleCloseSnack,severity:\"success\",children:\"Tokens staked successfully!\"})})]});}if(tokenAddress==\"0xFab46E002BbF0b4509813474841E0716E6730136\"){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.container,children:[\" \",selected,msg,/*#__PURE__*/_jsx(SliderInput2,{label:\"Claim NFT # \".concat(amount2),maxValue:32,min:1,id:\"slider-input-\".concat(name),className:classes.slider,value:amount2,onChange:setAmount2,disabled:isMining}),/*#__PURE__*/_jsx(Button,{color:\"primary\",variant:\"contained\",size:\"large\",onClick:handleClaimSubmit,disabled:isMining,children:isMining?/*#__PURE__*/_jsx(CircularProgress,{size:26}):\"Claim NFT2\"})]}),/*#__PURE__*/_jsx(Snackbar,{open:showErc20ApprovalSuccess,autoHideDuration:5000,onClose:handleCloseSnack,children:/*#__PURE__*/_jsx(Alert,{onClose:handleCloseSnack,severity:\"success\",children:\"ERC-20 token transfer approved successfully! Now approve the 2nd tx to initiate the staking transfer.\"})}),/*#__PURE__*/_jsx(Snackbar,{open:showStakeTokensSuccess,autoHideDuration:5000,onClose:handleCloseSnack,children:/*#__PURE__*/_jsx(Alert,{onClose:handleCloseSnack,severity:\"success\",children:\"Claimed NFT successfully!\"})})]});}return/*#__PURE__*/_jsx(_Fragment,{});};","map":{"version":3,"sources":["/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/src/features/yourWallet/StakeForm.tsx"],"names":["React","useEffect","useState","SliderInput","SliderInput2","useEthers","useEtherBalance","useNotifications","formatUnits","Button","CircularProgress","Snackbar","makeStyles","useStakeTokens","SoldNFTs","CurrentVotePrice2","ClaimNFT","CurrentVotePrice","utils","Alert","useStyles","theme","container","display","flexDirection","alignItems","gap","spacing","width","slider","maxWidth","StakeForm","token","tokenAddress","address","name","account","tokenBalance","notifications","classes","formattedTokenBalance","parseFloat","curVoteP","formattedVoteP","nothing","yourPrice","toFixed","curVoteP2","formattedVoteP2","actualPriceSlider","actualPrice","stakeTokensSend","send","stakeTokensState","state","handleStakeSubmit","amountAsWei","parseEther","Number","amount","toString","claimSend","stakeTokensState2","handleClaimSubmit","amount2","setAmount","setAmount2","isSold","console","log","showErc20ApprovalSuccess","setShowErc20ApprovalSuccess","showStakeTokensSuccess","setShowStakeTokensSuccess","handleCloseSnack","filter","notification","type","transactionName","length","startingauction","setAmountz","isMining","status","hasZeroBalance","hasZeroAmountSelected","imgz","Array","imgzNum","p","sel","ez","selected","browse","msg"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { SliderInput, SliderInput2 } from \"../../components\"\n\nimport CurrencyInput from 'react-currency-input-field';\nimport { useEthers,useEtherBalance, useTokenBalance, useNotifications } from \"@usedapp/core\"\nimport { formatUnits } from \"@ethersproject/units\"\nimport {\n  Button,\n  CircularProgress,\n  Snackbar,\n  makeStyles,\n} from \"@material-ui/core\"\nimport { Token } from \"../Main\"\nimport { useStakeTokens, SoldNFTs, CurrentVotePrice2, ClaimNFT, CurrentVotePrice } from \"../../hooks\"\nimport { utils } from \"ethers\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport \"../../App.css\"\n\n// This is the typescript way of saying this compent needs this type\nexport interface StakeFormProps {\n  token: Token\n}\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: theme.spacing(2),\n    width: \"100%\",\n  },\n  slider: {\n    width: \"100%\",\n    maxWidth: \"400px\",\n  },\n}))\n\n// token is getting passed in as a prop\n// in the ping brackets is an object/variable \n// That object is of the shape StakeFormProps\nexport const StakeForm = ({ token }: StakeFormProps) => {\n  const { address: tokenAddress, name } = token\n\n  const { account } = useEthers()\n  const tokenBalance = useEtherBalance(account)\n  const { notifications } = useNotifications()\n\n  const classes = useStyles()\n\n\n  const formattedTokenBalance: number = tokenBalance\n    ? parseFloat(formatUnits(tokenBalance, 18))\n    : 0\n\n\n  //Gets vote price and sell price\n  const curVoteP = CurrentVotePrice(tokenAddress)\n\n  const formattedVoteP: number = curVoteP\n    ? parseFloat(formatUnits(curVoteP, 18))\n    : 0\n    \n  let nothing\n  var yourPrice = \"0\"\n  if(formattedVoteP!== nothing){\n\n    yourPrice = formattedVoteP.toFixed(18)\n  }\n  \n  const curVoteP2 = CurrentVotePrice2(tokenAddress)\n\n    const formattedVoteP2: number = curVoteP2\n      ? parseFloat(formatUnits(curVoteP2, 18))\n      : 0\n  var actualPriceSlider = 0\n  var actualPrice = \"0\"\n  if(formattedVoteP2!== nothing){\n    actualPriceSlider = formattedVoteP2\n    actualPrice = formattedVoteP2.toFixed(18)\n  }\n  \n\n\n\n  const { send: stakeTokensSend, state: stakeTokensState } =\n    useStakeTokens(tokenAddress)\n\n  const handleStakeSubmit = () => {\n    const amountAsWei = utils.parseEther(Number(amount).toFixed(18).toString())\n    return stakeTokensSend(amountAsWei.toString())\n  }\n\n  const { send: claimSend, state: stakeTokensState2 } =\n    ClaimNFT(tokenAddress)\n\n  const handleClaimSubmit = () => {\n    const amountAsWei = utils.parseEther((amount2).toString())\n    return claimSend(amountAsWei.toString())\n  }\n\n  const [amount, setAmount] =\n    useState<number | string | Array<number | string>>(0)\n\n    const [amount2, setAmount2] =\n    useState<number | string | Array<number | string>>(1)\n\n\n\n\n    var isSold = SoldNFTs(amount2.toString())\n    console.log(\"IS?\", isSold)\n    console.log(\"IS?\", amount2)\n\n  const [showErc20ApprovalSuccess, setShowErc20ApprovalSuccess] =\n    useState(false)\n  const [showStakeTokensSuccess, setShowStakeTokensSuccess] = useState(false)\n\n  const handleCloseSnack = () => {\n    showErc20ApprovalSuccess && setShowErc20ApprovalSuccess(false)\n    showStakeTokensSuccess && setShowStakeTokensSuccess(false)\n  }\n\n  useEffect(() => {\n    if (\n      notifications.filter(\n        (notification) =>\n          notification.type === \"transactionSucceed\" &&\n          notification.transactionName === \"Approve ERC20 transfer\"\n      ).length > 0\n    ) {\n      !showErc20ApprovalSuccess && setShowErc20ApprovalSuccess(true)\n      showStakeTokensSuccess && setShowStakeTokensSuccess(false)\n    }\n\n    if (\n      notifications.filter(\n        (notification) =>\n          notification.type === \"transactionSucceed\" &&\n          notification.transactionName === \"Stake tokens\"\n      ).length > 0\n    ) {\n      showErc20ApprovalSuccess && setShowErc20ApprovalSuccess(false)\n      !showStakeTokensSuccess && setShowStakeTokensSuccess(true)\n    }\n  }, [notifications, showErc20ApprovalSuccess, showStakeTokensSuccess])\n\n  var [startingauction, setAmountz] =\n  useState<string | undefined | Array<number | string>>(\"1\")\n  \n  \n  const isMining = stakeTokensState.status === \"Mining\"\n\n  const hasZeroBalance = formattedTokenBalance === 0\n  const hasZeroAmountSelected = parseFloat(amount.toString()) === 0\n  var imgz = new Array();\n  var imgzNum = new Array();\nvar p \nvar sel = \"https://forgetoken.org/api/forge/NFT/\"+amount2.toString()+\".png\"\nvar ez = sel.toString()\n\nvar selected = <img></img>\nvar browse = <img></img>\nvar msg = \"\"\nif(ez !== nothing){\n\n  browse = <img src={sel} alt=\"Girl in a jacket\" width=\"300\" height=\"300\"></img>\n  selected = <img src={sel} alt=\"Girl in a jacket\" width=\"300\" height=\"300\"></img>\n  msg = \"This NFT is available for purchase or redemption\"\n  if(!isSold){\n\n      selected = <img src=\"\" alt=\"This NFT is Claimed\" width=\"300\" height=\"300\"></img>\n    msg = \"Someone has already claimed this NFT\"\n}\n\n}\nconsole.log(\"SEL\", selected)\nconsole.log(\"WELCOME\")\nif(tokenAddress == \"0xbF4493415fD1E79DcDa8cD0cAd7E5Ed65DCe7074\"){\n\n  return (\n    <>\n      <div className={classes.container}> \n      \n      Bid on Auction, Claim NFT, Browse Collection, Your Collection\n        <SliderInput\n          label={`Bid ${name}`}\n          maxValue={actualPriceSlider*3}\n          minValue={actualPriceSlider}\n          id={`slider-input-${name}`}\n          className={classes.slider}\n          value={amount}\n          onChange={setAmount}\n          disabled={isMining }\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          onClick={handleStakeSubmit}\n          disabled={isMining }\n        >\n          {isMining ? <CircularProgress size={26} /> : \"Bid on buying a NFT\"}\n        </Button>\n   \n        </div>\n      <Snackbar\n        open={showErc20ApprovalSuccess}\n        autoHideDuration={5000}\n        onClose={handleCloseSnack}\n      >\n        <Alert onClose={handleCloseSnack} severity=\"success\">\n          ERC-20 token transfer approved successfully! Now approve the 2nd tx to\n          initiate the staking transfer.\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={showStakeTokensSuccess}\n        autoHideDuration={5000}\n        onClose={handleCloseSnack}\n      >\n        <Alert onClose={handleCloseSnack} severity=\"success\">\n          Tokens staked successfully!\n        </Alert>\n      </Snackbar>\n\n    </>\n  )\n}\n\nif(tokenAddress == \"0xFab46E002BbF0b4509813474841E0716E6730136\"){\n\nreturn(\n\n  <>\n  <div className={classes.container}> {selected}\n       {msg}\n       <SliderInput2\n          label={`Claim NFT # ${amount2}`}\n          maxValue={32}\n          min={1}\n          id={`slider-input-${name}`}\n          className={classes.slider}\n          value={amount2}\n          onChange={setAmount2}\n          disabled={isMining }\n        />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          onClick={handleClaimSubmit}\n          disabled={isMining }\n        >\n          {isMining ? <CircularProgress size={26} /> : \"Claim NFT2\"}\n        </Button>\n   \n        </div>\n      <Snackbar\n        open={showErc20ApprovalSuccess}\n        autoHideDuration={5000}\n        onClose={handleCloseSnack}\n      >\n        <Alert onClose={handleCloseSnack} severity=\"success\">\n          ERC-20 token transfer approved successfully! Now approve the 2nd tx to\n          initiate the staking transfer.\n        </Alert>\n      </Snackbar>\n      <Snackbar\n        open={showStakeTokensSuccess}\n        autoHideDuration={5000}\n        onClose={handleCloseSnack}\n      >\n        <Alert onClose={handleCloseSnack} severity=\"success\">\n          Claimed NFT successfully!\n        </Alert>\n      </Snackbar>\n\n  \n  \n  \n  \n  \n  \n  </>\n)\n\n\n}\nreturn(\n\n  <></>\n)\n}"]},"metadata":{},"sourceType":"module"}