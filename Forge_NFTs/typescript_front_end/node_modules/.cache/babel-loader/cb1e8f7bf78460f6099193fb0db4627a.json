{"ast":null,"code":"import _regeneratorRuntime from \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useEthers } from './useEthers';\nimport { usePromiseTransaction } from './usePromiseTransaction';\nexport function useSendTransaction(options) {\n  var _useEthers = useEthers(),\n      library = _useEthers.library,\n      chainId = _useEthers.chainId;\n\n  var _usePromiseTransactio = usePromiseTransaction(chainId, options),\n      promiseTransaction = _usePromiseTransactio.promiseTransaction,\n      state = _usePromiseTransactio.state;\n\n  var sendTransaction = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(transactionRequest) {\n      var signer;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              signer = (options === null || options === void 0 ? void 0 : options.signer) || (library === null || library === void 0 ? void 0 : library.getSigner());\n\n              if (!signer) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 4;\n              return promiseTransaction(signer.sendTransaction(transactionRequest));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function sendTransaction(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return {\n    sendTransaction: sendTransaction,\n    state: state\n  };\n}","map":{"version":3,"sources":["../../../../src/hooks/useSendTransaction.ts"],"names":[],"mappings":";;AAEA,SAAS,SAAT,QAA0B,aAA1B;AACA,SAAS,qBAAT,QAAsC,yBAAtC;AAEA,OAAM,SAAU,kBAAV,CAA6B,OAA7B,EAAyD;AAC7D,mBAA6B,SAAS,EAAtC;AAAA,MAAQ,OAAR,cAAQ,OAAR;AAAA,MAAiB,OAAjB,cAAiB,OAAjB;;AACA,8BAAsC,qBAAqB,CAAC,OAAD,EAAU,OAAV,CAA3D;AAAA,MAAQ,kBAAR,yBAAQ,kBAAR;AAAA,MAA4B,KAA5B,yBAA4B,KAA5B;;AAEA,MAAM,eAAe;AAAA,wEAAG,iBAAO,kBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB,cAAA,MADgB,GACP,CAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,MAAT,MAAmB,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,SAAT,EAAnB,CADO;;AAAA,mBAElB,MAFkB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAGd,kBAAkB,CAAC,MAAM,CAAC,eAAP,CAAuB,kBAAvB,CAAD,CAHJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAf,eAAe;AAAA;AAAA;AAAA,KAArB;;AAOA,SAAO;AAAE,IAAA,eAAe,EAAf,eAAF;AAAmB,IAAA,KAAK,EAAL;AAAnB,GAAP;AACD","sourceRoot":"","sourcesContent":["import { useEthers } from './useEthers';\nimport { usePromiseTransaction } from './usePromiseTransaction';\nexport function useSendTransaction(options) {\n    const { library, chainId } = useEthers();\n    const { promiseTransaction, state } = usePromiseTransaction(chainId, options);\n    const sendTransaction = async (transactionRequest) => {\n        const signer = (options === null || options === void 0 ? void 0 : options.signer) || (library === null || library === void 0 ? void 0 : library.getSigner());\n        if (signer) {\n            await promiseTransaction(signer.sendTransaction(transactionRequest));\n        }\n    };\n    return { sendTransaction, state };\n}\n//# sourceMappingURL=useSendTransaction.js.map"]},"metadata":{},"sourceType":"module"}