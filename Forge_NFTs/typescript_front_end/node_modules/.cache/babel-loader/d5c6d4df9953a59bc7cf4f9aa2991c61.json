{"ast":null,"code":"import _createForOfIteratorHelper from \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/forgeserver/Desktop/Forge-NFT-dAPP/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useReducer } from 'react';\nimport { useEthers, useLocalStorage } from '../../hooks';\nimport { useBlockNumber } from '../blockNumber';\nimport { useNotificationsContext } from '../notifications/context';\nimport { TransactionsContext } from './context';\nimport { DEFAULT_STORED_TRANSACTIONS } from './model';\nimport { transactionReducer } from './reducer';\nimport { useConfig } from '../config';\nexport function TransactionProvider(_ref) {\n  var children = _ref.children;\n\n  var _useEthers = useEthers(),\n      chainId = _useEthers.chainId,\n      library = _useEthers.library;\n\n  var blockNumber = useBlockNumber();\n\n  var _useConfig = useConfig(),\n      localStorage = _useConfig.localStorage;\n\n  var _useLocalStorage = useLocalStorage(localStorage.transactionPath),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      storage = _useLocalStorage2[0],\n      setStorage = _useLocalStorage2[1];\n\n  var _useReducer = useReducer(transactionReducer, storage !== null && storage !== void 0 ? storage : DEFAULT_STORED_TRANSACTIONS),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      transactions = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useNotificationsCont = useNotificationsContext(),\n      addNotification = _useNotificationsCont.addNotification;\n\n  useEffect(function () {\n    setStorage(transactions);\n  }, [transactions]);\n  var addTransaction = useCallback(function (payload) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: payload\n    });\n    addNotification({\n      notification: {\n        type: 'transactionStarted',\n        transaction: payload.transaction,\n        submittedAt: payload.submittedAt,\n        transactionName: payload.transactionName\n      },\n      chainId: payload.transaction.chainId\n    });\n  }, [dispatch]);\n  useEffect(function () {\n    var updateTransactions = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _a, checkTransaction, chainTransactions, newTransactions, _iterator, _step, tx, newTransaction;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!chainId || !library || !blockNumber)) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                checkTransaction = /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tx) {\n                    var receipt, type;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            if (!(tx.receipt || !shouldCheck(blockNumber, tx))) {\n                              _context.next = 2;\n                              break;\n                            }\n\n                            return _context.abrupt(\"return\", tx);\n\n                          case 2:\n                            _context.prev = 2;\n                            _context.next = 5;\n                            return library.getTransactionReceipt(tx.transaction.hash);\n\n                          case 5:\n                            receipt = _context.sent;\n\n                            if (!receipt) {\n                              _context.next = 12;\n                              break;\n                            }\n\n                            type = receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed';\n                            addNotification({\n                              notification: {\n                                type: type,\n                                submittedAt: Date.now(),\n                                transaction: tx.transaction,\n                                receipt: receipt,\n                                transactionName: tx.transactionName\n                              },\n                              chainId: chainId\n                            });\n                            return _context.abrupt(\"return\", Object.assign(Object.assign({}, tx), {\n                              receipt: receipt\n                            }));\n\n                          case 12:\n                            return _context.abrupt(\"return\", Object.assign(Object.assign({}, tx), {\n                              lastCheckedBlockNumber: blockNumber\n                            }));\n\n                          case 13:\n                            _context.next = 18;\n                            break;\n\n                          case 15:\n                            _context.prev = 15;\n                            _context.t0 = _context[\"catch\"](2);\n                            console.error(\"failed to check transaction hash: \".concat(tx.transaction.hash), _context.t0);\n\n                          case 18:\n                            return _context.abrupt(\"return\", tx);\n\n                          case 19:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee, null, [[2, 15]]);\n                  }));\n\n                  return function checkTransaction(_x) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }();\n\n                chainTransactions = (_a = transactions[chainId]) !== null && _a !== void 0 ? _a : [];\n                newTransactions = [];\n                _iterator = _createForOfIteratorHelper(chainTransactions);\n                _context2.prev = 6;\n\n                _iterator.s();\n\n              case 8:\n                if ((_step = _iterator.n()).done) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                tx = _step.value;\n                _context2.next = 12;\n                return checkTransaction(tx);\n\n              case 12:\n                newTransaction = _context2.sent;\n                newTransactions.push(newTransaction);\n\n              case 14:\n                _context2.next = 8;\n                break;\n\n              case 16:\n                _context2.next = 21;\n                break;\n\n              case 18:\n                _context2.prev = 18;\n                _context2.t0 = _context2[\"catch\"](6);\n\n                _iterator.e(_context2.t0);\n\n              case 21:\n                _context2.prev = 21;\n\n                _iterator.f();\n\n                return _context2.finish(21);\n\n              case 24:\n                dispatch({\n                  type: 'UPDATE_TRANSACTIONS',\n                  chainId: chainId,\n                  transactions: newTransactions\n                });\n\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[6, 18, 21, 24]]);\n      }));\n\n      return function updateTransactions() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    updateTransactions();\n  }, [chainId, library, blockNumber]);\n  return _jsx(TransactionsContext.Provider, {\n    value: {\n      transactions: transactions,\n      addTransaction: addTransaction\n    },\n    children: children\n  }, void 0);\n}\n\nfunction shouldCheck(blockNumber, tx) {\n  if (tx.receipt) {\n    return false;\n  }\n\n  if (!tx.lastCheckedBlockNumber) {\n    return true;\n  }\n\n  var blocksSinceCheck = blockNumber - tx.lastCheckedBlockNumber;\n\n  if (blocksSinceCheck < 1) {\n    return false;\n  }\n\n  var minutesPending = (Date.now() - tx.submittedAt) / 1000 / 60;\n\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9;\n  }\n\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2;\n  } // otherwise every block\n\n\n  return true;\n}","map":{"version":3,"sources":["../../../../../src/providers/transactions/provider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useReducer } from 'react';\nimport { useEthers, useLocalStorage } from '../../hooks';\nimport { useBlockNumber } from '../blockNumber';\nimport { useNotificationsContext } from '../notifications/context';\nimport { TransactionsContext } from './context';\nimport { DEFAULT_STORED_TRANSACTIONS } from './model';\nimport { transactionReducer } from './reducer';\nimport { useConfig } from '../config';\nexport function TransactionProvider({ children }) {\n    const { chainId, library } = useEthers();\n    const blockNumber = useBlockNumber();\n    const { localStorage } = useConfig();\n    const [storage, setStorage] = useLocalStorage(localStorage.transactionPath);\n    const [transactions, dispatch] = useReducer(transactionReducer, storage !== null && storage !== void 0 ? storage : DEFAULT_STORED_TRANSACTIONS);\n    const { addNotification } = useNotificationsContext();\n    useEffect(() => {\n        setStorage(transactions);\n    }, [transactions]);\n    const addTransaction = useCallback((payload) => {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload,\n        });\n        addNotification({\n            notification: {\n                type: 'transactionStarted',\n                transaction: payload.transaction,\n                submittedAt: payload.submittedAt,\n                transactionName: payload.transactionName,\n            },\n            chainId: payload.transaction.chainId,\n        });\n    }, [dispatch]);\n    useEffect(() => {\n        const updateTransactions = async () => {\n            var _a;\n            if (!chainId || !library || !blockNumber) {\n                return;\n            }\n            const checkTransaction = async (tx) => {\n                if (tx.receipt || !shouldCheck(blockNumber, tx)) {\n                    return tx;\n                }\n                try {\n                    const receipt = await library.getTransactionReceipt(tx.transaction.hash);\n                    if (receipt) {\n                        const type = receipt.status === 0 ? 'transactionFailed' : 'transactionSucceed';\n                        addNotification({\n                            notification: {\n                                type,\n                                submittedAt: Date.now(),\n                                transaction: tx.transaction,\n                                receipt,\n                                transactionName: tx.transactionName,\n                            },\n                            chainId,\n                        });\n                        return Object.assign(Object.assign({}, tx), { receipt });\n                    }\n                    else {\n                        return Object.assign(Object.assign({}, tx), { lastCheckedBlockNumber: blockNumber });\n                    }\n                }\n                catch (error) {\n                    console.error(`failed to check transaction hash: ${tx.transaction.hash}`, error);\n                }\n                return tx;\n            };\n            const chainTransactions = (_a = transactions[chainId]) !== null && _a !== void 0 ? _a : [];\n            const newTransactions = [];\n            for (const tx of chainTransactions) {\n                const newTransaction = await checkTransaction(tx);\n                newTransactions.push(newTransaction);\n            }\n            dispatch({ type: 'UPDATE_TRANSACTIONS', chainId, transactions: newTransactions });\n        };\n        updateTransactions();\n    }, [chainId, library, blockNumber]);\n    return _jsx(TransactionsContext.Provider, { value: { transactions, addTransaction }, children: children }, void 0);\n}\nfunction shouldCheck(blockNumber, tx) {\n    if (tx.receipt) {\n        return false;\n    }\n    if (!tx.lastCheckedBlockNumber) {\n        return true;\n    }\n    const blocksSinceCheck = blockNumber - tx.lastCheckedBlockNumber;\n    if (blocksSinceCheck < 1) {\n        return false;\n    }\n    const minutesPending = (Date.now() - tx.submittedAt) / 1000 / 60;\n    if (minutesPending > 60) {\n        // every 10 blocks if pending for longer than an hour\n        return blocksSinceCheck > 9;\n    }\n    if (minutesPending > 5) {\n        // every 3 blocks if pending more than 5 minutes\n        return blocksSinceCheck > 2;\n    }\n    // otherwise every block\n    return true;\n}\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}