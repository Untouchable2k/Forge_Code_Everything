{"ast":null,"code":"import _slicedToArray from \"/home/forgeserver/Desktop/MainNet-Forge-NFT/defi-stake-yield-brownie-main/front_end/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { BlockNumberContext } from './context';\nimport { blockNumberReducer } from './reducer';\nimport { useEthers, useDebounce } from '../../hooks';\nexport function BlockNumberProvider(_ref) {\n  var children = _ref.children;\n\n  var _useEthers = useEthers(),\n      library = _useEthers.library,\n      chainId = _useEthers.chainId;\n\n  var _useReducer = useReducer(blockNumberReducer, {}),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  useEffect(function () {\n    if (library && chainId !== undefined) {\n      var update = function update(blockNumber) {\n        return dispatch({\n          chainId: chainId,\n          blockNumber: blockNumber\n        });\n      };\n\n      library.on('block', update);\n      return function () {\n        library.off('block', update);\n      };\n    }\n  }, [library, chainId]);\n  var debouncedState = useDebounce(state, 100);\n  var blockNumber = chainId !== undefined ? debouncedState[chainId] : undefined;\n  return _jsx(BlockNumberContext.Provider, {\n    value: blockNumber,\n    children: children\n  }, void 0);\n}","map":{"version":3,"sources":["../../../../../src/providers/blockNumber/provider.tsx"],"names":[],"mappings":";;AAAA,SAAS,SAAT,EAAoB,UAApB,QAAiD,OAAjD;AACA,SAAS,kBAAT,QAAmC,WAAnC;AACA,SAAS,kBAAT,QAAmC,WAAnC;AACA,SAAS,SAAT,EAAoB,WAApB,QAAuC,aAAvC;AAMA,OAAM,SAAU,mBAAV,OAAiD;AAAA,MAAjB,QAAiB,QAAjB,QAAiB;;AACrD,mBAA6B,SAAS,EAAtC;AAAA,MAAQ,OAAR,cAAQ,OAAR;AAAA,MAAiB,OAAjB,cAAiB,OAAjB;;AACA,oBAA0B,UAAU,CAAC,kBAAD,EAAqB,EAArB,CAApC;AAAA;AAAA,MAAO,KAAP;AAAA,MAAc,QAAd;;AAEA,EAAA,SAAS,CAAC,YAAK;AACb,QAAI,OAAO,IAAI,OAAO,KAAK,SAA3B,EAAsC;AACpC,UAAM,MAAM,GAAG,SAAT,MAAS,CAAC,WAAD;AAAA,eAAyB,QAAQ,CAAC;AAAE,UAAA,OAAO,EAAP,OAAF;AAAW,UAAA,WAAW,EAAX;AAAX,SAAD,CAAjC;AAAA,OAAf;;AACA,MAAA,OAAO,CAAC,EAAR,CAAW,OAAX,EAAoB,MAApB;AACA,aAAO,YAAK;AACV,QAAA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAqB,MAArB;AACD,OAFD;AAGD;AACF,GARQ,EAQN,CAAC,OAAD,EAAU,OAAV,CARM,CAAT;AAUA,MAAM,cAAc,GAAG,WAAW,CAAC,KAAD,EAAQ,GAAR,CAAlC;AACA,MAAM,WAAW,GAAG,OAAO,KAAK,SAAZ,GAAwB,cAAc,CAAC,OAAD,CAAtC,GAAkD,SAAtE;AAEA,SAAO,IAAA,CAAC,kBAAkB,CAAC,QAApB,EAA4B;AAAC,IAAA,KAAK,EAAE,WAAR;AAAqB,IAAA,QAAQ,EAAE;AAA/B,GAA5B,EAAmE,KAAA,CAAnE,CAAP;AACD","sourceRoot":"","sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { BlockNumberContext } from './context';\nimport { blockNumberReducer } from './reducer';\nimport { useEthers, useDebounce } from '../../hooks';\nexport function BlockNumberProvider({ children }) {\n    const { library, chainId } = useEthers();\n    const [state, dispatch] = useReducer(blockNumberReducer, {});\n    useEffect(() => {\n        if (library && chainId !== undefined) {\n            const update = (blockNumber) => dispatch({ chainId, blockNumber });\n            library.on('block', update);\n            return () => {\n                library.off('block', update);\n            };\n        }\n    }, [library, chainId]);\n    const debouncedState = useDebounce(state, 100);\n    const blockNumber = chainId !== undefined ? debouncedState[chainId] : undefined;\n    return _jsx(BlockNumberContext.Provider, { value: blockNumber, children: children }, void 0);\n}\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}