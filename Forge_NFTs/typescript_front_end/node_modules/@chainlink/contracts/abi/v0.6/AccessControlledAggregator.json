{
	"schemaVersion": "2.0.0",
	"contractName": "AccessControlledAggregator",
	"compilerOutput": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_link",
						"type": "address"
					},
					{
						"internalType": "uint128",
						"name": "_paymentAmount",
						"type": "uint128"
					},
					{
						"internalType": "uint32",
						"name": "_timeout",
						"type": "uint32"
					},
					{
						"internalType": "address",
						"name": "_validator",
						"type": "address"
					},
					{
						"internalType": "int256",
						"name": "_minSubmissionValue",
						"type": "int256"
					},
					{
						"internalType": "int256",
						"name": "_maxSubmissionValue",
						"type": "int256"
					},
					{
						"internalType": "uint8",
						"name": "_decimals",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "_description",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "AddedAccess",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "int256",
						"name": "current",
						"type": "int256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "updatedAt",
						"type": "uint256"
					}
				],
				"name": "AnswerUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "AvailableFundsUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "CheckAccessDisabled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "CheckAccessEnabled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "startedBy",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "startedAt",
						"type": "uint256"
					}
				],
				"name": "NewRound",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oracle",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "admin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "OracleAdminUpdateRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oracle",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "OracleAdminUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oracle",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "bool",
						"name": "whitelisted",
						"type": "bool"
					}
				],
				"name": "OraclePermissionsUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "OwnershipTransferRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "RemovedAccess",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "requester",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "authorized",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "delay",
						"type": "uint32"
					}
				],
				"name": "RequesterPermissionsSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint128",
						"name": "paymentAmount",
						"type": "uint128"
					},
					{
						"indexed": true,
						"internalType": "uint32",
						"name": "minSubmissionCount",
						"type": "uint32"
					},
					{
						"indexed": true,
						"internalType": "uint32",
						"name": "maxSubmissionCount",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "restartDelay",
						"type": "uint32"
					},
					{
						"indexed": false,
						"internalType": "uint32",
						"name": "timeout",
						"type": "uint32"
					}
				],
				"name": "RoundDetailsUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "int256",
						"name": "submission",
						"type": "int256"
					},
					{
						"indexed": true,
						"internalType": "uint32",
						"name": "round",
						"type": "uint32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "oracle",
						"type": "address"
					}
				],
				"name": "SubmissionReceived",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previous",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "current",
						"type": "address"
					}
				],
				"name": "ValidatorUpdated",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_oracle",
						"type": "address"
					}
				],
				"name": "acceptAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "acceptOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "addAccess",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "allocatedFunds",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "availableFunds",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_removed",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "_added",
						"type": "address[]"
					},
					{
						"internalType": "address[]",
						"name": "_addedAdmins",
						"type": "address[]"
					},
					{
						"internalType": "uint32",
						"name": "_minSubmissions",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_maxSubmissions",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_restartDelay",
						"type": "uint32"
					}
				],
				"name": "changeOracles",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkEnabled",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "description",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "disableAccessCheck",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "enableAccessCheck",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_oracle",
						"type": "address"
					}
				],
				"name": "getAdmin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_roundId",
						"type": "uint256"
					}
				],
				"name": "getAnswer",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getOracles",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint80",
						"name": "_roundId",
						"type": "uint80"
					}
				],
				"name": "getRoundData",
				"outputs": [
					{
						"internalType": "uint80",
						"name": "roundId",
						"type": "uint80"
					},
					{
						"internalType": "int256",
						"name": "answer",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "startedAt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "updatedAt",
						"type": "uint256"
					},
					{
						"internalType": "uint80",
						"name": "answeredInRound",
						"type": "uint80"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_roundId",
						"type": "uint256"
					}
				],
				"name": "getTimestamp",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "_calldata",
						"type": "bytes"
					}
				],
				"name": "hasAccess",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "latestAnswer",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "latestRound",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "latestRoundData",
				"outputs": [
					{
						"internalType": "uint80",
						"name": "roundId",
						"type": "uint80"
					},
					{
						"internalType": "int256",
						"name": "answer",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "startedAt",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "updatedAt",
						"type": "uint256"
					},
					{
						"internalType": "uint80",
						"name": "answeredInRound",
						"type": "uint80"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "latestTimestamp",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "linkToken",
				"outputs": [
					{
						"internalType": "contract LinkTokenInterface",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxSubmissionCount",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxSubmissionValue",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minSubmissionCount",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minSubmissionValue",
				"outputs": [
					{
						"internalType": "int256",
						"name": "",
						"type": "int256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "onTokenTransfer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "oracleCount",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_oracle",
						"type": "address"
					},
					{
						"internalType": "uint32",
						"name": "_queriedRoundId",
						"type": "uint32"
					}
				],
				"name": "oracleRoundState",
				"outputs": [
					{
						"internalType": "bool",
						"name": "_eligibleToSubmit",
						"type": "bool"
					},
					{
						"internalType": "uint32",
						"name": "_roundId",
						"type": "uint32"
					},
					{
						"internalType": "int256",
						"name": "_latestSubmission",
						"type": "int256"
					},
					{
						"internalType": "uint64",
						"name": "_startedAt",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "_timeout",
						"type": "uint64"
					},
					{
						"internalType": "uint128",
						"name": "_availableFunds",
						"type": "uint128"
					},
					{
						"internalType": "uint8",
						"name": "_oracleCount",
						"type": "uint8"
					},
					{
						"internalType": "uint128",
						"name": "_paymentAmount",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address payable",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paymentAmount",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "",
						"type": "uint128"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_user",
						"type": "address"
					}
				],
				"name": "removeAccess",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "requestNewRound",
				"outputs": [
					{
						"internalType": "uint80",
						"name": "",
						"type": "uint80"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "restartDelay",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_requester",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_authorized",
						"type": "bool"
					},
					{
						"internalType": "uint32",
						"name": "_delay",
						"type": "uint32"
					}
				],
				"name": "setRequesterPermissions",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newValidator",
						"type": "address"
					}
				],
				"name": "setValidator",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_roundId",
						"type": "uint256"
					},
					{
						"internalType": "int256",
						"name": "_submission",
						"type": "int256"
					}
				],
				"name": "submit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "timeout",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_oracle",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_newAdmin",
						"type": "address"
					}
				],
				"name": "transferAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "updateAvailableFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint128",
						"name": "_paymentAmount",
						"type": "uint128"
					},
					{
						"internalType": "uint32",
						"name": "_minSubmissions",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_maxSubmissions",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_restartDelay",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "_timeout",
						"type": "uint32"
					}
				],
				"name": "updateFutureRounds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "validator",
				"outputs": [
					{
						"internalType": "contract AggregatorValidatorInterface",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "version",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdrawFunds",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_oracle",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "withdrawPayment",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_oracle",
						"type": "address"
					}
				],
				"name": "withdrawablePayment",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"methods": {
				"acceptAdmin(address)": {
					"params": {
						"_oracle": "is the address of the oracle whose admin is being transferred"
					}
				},
				"acceptOwnership()": {
					"details": "Allows an ownership transfer to be completed by the recipient."
				},
				"addAccess(address)": {
					"params": {
						"_user": "The address to add"
					}
				},
				"changeOracles(address[],address[],address[],uint32,uint32,uint32)": {
					"params": {
						"_added": "is the list of addresses for the new Oracles being added",
						"_addedAdmins": "is the admin addresses for the new respective _added list. Only this address is allowed to access the respective oracle's funds",
						"_maxSubmissions": "is the new maximum submission count for each round",
						"_minSubmissions": "is the new minimum submission count for each round",
						"_removed": "is the list of addresses for the new Oracles being removed",
						"_restartDelay": "is the number of rounds an Oracle has to wait before they can initiate a round"
					}
				},
				"constructor": {
					"params": {
						"_decimals": "represents the number of decimals to offset the answer by",
						"_description": "a short description of what is being reported",
						"_link": "The address of the LINK token",
						"_maxSubmissionValue": "is an immutable check for an upper bound of what submission values are accepted from an oracle",
						"_minSubmissionValue": "is an immutable check for a lower bound of what submission values are accepted from an oracle",
						"_paymentAmount": "The amount paid of LINK paid to each oracle per submission, in wei (units of 10⁻¹⁸ LINK)",
						"_timeout": "is the number of seconds after the previous round that are allowed to lapse before allowing an oracle to skip an unfinished round",
						"_validator": "is an optional contract address for validating external validation of answers"
					}
				},
				"getAdmin(address)": {
					"params": {
						"_oracle": "is the address of the oracle whose admin is being queried"
					}
				},
				"getAnswer(uint256)": {
					"details": "overridden funcion to add the checkAccess() modifier#[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.",
					"params": {
						"_roundId": "the round number to retrieve the answer for"
					}
				},
				"getRoundData(uint80)": {
					"details": "overridden funcion to add the checkAccess() modifierNote that for in-progress rounds (i.e. rounds that haven't yet received maxSubmissions) answer and updatedAt may change between queries.",
					"params": {
						"_roundId": "the round ID to retrieve the round data for"
					},
					"returns": {
						"answer": "is the answer for the given round",
						"answeredInRound": "is the round ID of the round in which the answer was computed. answeredInRound may be smaller than roundId when the round timed out. answerInRound is equal to roundId when the round didn't time out and was completed regularly.",
						"roundId": "is the round ID for which data was retrieved",
						"startedAt": "is the timestamp when the round was started. This is 0 if the round hasn't been started yet.",
						"updatedAt": "is the timestamp when the round last was updated (i.e. answer was last computed)"
					}
				},
				"getTimestamp(uint256)": {
					"details": "overridden funcion to add the checkAccess() modifier#[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.",
					"params": {
						"_roundId": "the round number to retrieve the updated timestamp for"
					}
				},
				"hasAccess(address,bytes)": {
					"params": {
						"_user": "The address to query"
					}
				},
				"latestAnswer()": {
					"details": "overridden funcion to add the checkAccess() modifier#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information."
				},
				"latestRound()": {
					"details": "overridden funcion to add the checkAccess() modifier#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information."
				},
				"latestRoundData()": {
					"details": "overridden funcion to add the checkAccess() modifierNote that for in-progress rounds (i.e. rounds that haven't yet received maxSubmissions) answer and updatedAt may change between queries.",
					"returns": {
						"answer": "is the answer for the given round",
						"answeredInRound": "is the round ID of the round in which the answer was computed. answeredInRound may be smaller than roundId when the round timed out. answerInRound is equal to roundId when the round didn't time out and was completed regularly.",
						"roundId": "is the round ID for which data was retrieved",
						"startedAt": "is the timestamp when the round was started. This is 0 if the round hasn't been started yet.",
						"updatedAt": "is the timestamp when the round last was updated (i.e. answer was last computed)"
					}
				},
				"latestTimestamp()": {
					"details": "overridden funcion to add the checkAccess() modifier#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information."
				},
				"onTokenTransfer(address,uint256,bytes)": {
					"params": {
						"_data": "is mostly ignored. It is checked for length, to be sure nothing strange is passed in."
					}
				},
				"oracleRoundState(address,uint32)": {
					"params": {
						"_oracle": "the address to look up information for."
					}
				},
				"removeAccess(address)": {
					"params": {
						"_user": "The address to remove"
					}
				},
				"setRequesterPermissions(address,bool,uint32)": {
					"params": {
						"_authorized": "is a boolean specifying whether they can start new rounds or not",
						"_delay": "is the number of rounds the requester must wait before starting another round",
						"_requester": "is the address to set permissions for"
					}
				},
				"setValidator(address)": {
					"params": {
						"_newValidator": "designates the address of the new validation contract."
					}
				},
				"submit(uint256,int256)": {
					"params": {
						"_roundId": "is the ID of the round this submission pertains to",
						"_submission": "is the updated data that the oracle is submitting"
					}
				},
				"transferAdmin(address,address)": {
					"params": {
						"_newAdmin": "is the new admin address",
						"_oracle": "is the address of the oracle whose admin is being transferred"
					}
				},
				"transferOwnership(address)": {
					"details": "Allows an owner to begin transferring ownership to a new address, pending."
				},
				"updateFutureRounds(uint128,uint32,uint32,uint32,uint32)": {
					"params": {
						"_maxSubmissions": "is the new maximum submission count for each round",
						"_minSubmissions": "is the new minimum submission count for each round",
						"_paymentAmount": "is the payment amount for subsequent rounds",
						"_restartDelay": "is the number of rounds an Oracle has to wait before they can initiate a round"
					}
				},
				"withdrawFunds(address,uint256)": {
					"params": {
						"_amount": "is the amount of LINK to send",
						"_recipient": "is the address to send the LINK to"
					}
				},
				"withdrawPayment(address,address,uint256)": {
					"params": {
						"_amount": "is the amount of LINK to send",
						"_oracle": "is the oracle whose LINK is transferred",
						"_recipient": "is the address to send the LINK to"
					}
				}
			},
			"title": "AccessControlled FluxAggregator contract"
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "",
				"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x68B8 CODESIZE SUB DUP1 PUSH3 0x68B8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH2 0x100 DUP2 LT ISZERO PUSH3 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xE0 DUP11 ADD DUP1 MLOAD SWAP7 MLOAD SWAP9 SWAP11 SWAP8 SWAP10 SWAP6 SWAP9 SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP2 SWAP5 SWAP4 SWAP2 DUP3 ADD SWAP3 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xE8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xCE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x116 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR DUP3 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND OR SWAP1 SSTORE DUP10 SWAP2 POP DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH3 0x165 SWAP1 DUP9 SWAP1 DUP1 DUP1 DUP11 PUSH3 0x244 JUMP JUMPDEST PUSH3 0x179 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x622 AND JUMP JUMPDEST PUSH1 0x80 DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP4 SWAP1 MSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE DUP1 MLOAD PUSH3 0x1A7 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x806 JUMP JUMPDEST POP PUSH3 0x1C8 DUP7 PUSH4 0xFFFFFFFF AND TIMESTAMP PUSH3 0x6EC PUSH1 0x20 SHL PUSH3 0x45E9 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH32 0xEC8156718A8372B1DB44BB411437D0870F3E3790D4A08526D024CE1B0B668F6C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH9 0x10000000000000000 MUL PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0x1 PUSH1 0x80 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP PUSH3 0x8A8 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x2A4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x2B9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x74F AND JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH3 0x320 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D6178206D75737420657175616C2F657863656564206D696E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH3 0x382 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61782063616E6E6F742065786365656420746F74616C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND ISZERO DUP1 PUSH3 0x3A1 JUMPI POP DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT JUMPDEST PUSH3 0x3F3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64656C61792063616E6E6F742065786365656420746F74616C00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH3 0x410 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x756 AND JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND LT ISZERO PUSH3 0x470 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E647320666F72207061796D656E740000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x485 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x74F AND JUMP JUMPDEST PUSH1 0xFF AND GT ISZERO PUSH3 0x4EB JUMPI PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND GT PUSH3 0x4EB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D696E206D7573742062652067726561746572207468616E2030000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x4 PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH32 0x56800C9D1ED723511246614D15E58CFCDE15B6A33C245B5C961B689C1890FD8F DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x682 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ PUSH3 0x6E8 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP4 AND SWAP1 PUSH32 0xCFAC5DC75B8D9A7E074162F59D9ADCD33DA59F0FE8DFB21580DB298FC0FDAD0D SWAP1 PUSH1 0x0 SWAP1 LOG3 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH3 0x744 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x749 PUSH1 0x2 PUSH3 0x78D PUSH3 0x775 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x74F AND JUMP JUMPDEST PUSH1 0xFF AND DUP6 PUSH3 0x7A1 PUSH1 0x20 SHL PUSH3 0x52FD OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x7A1 PUSH1 0x20 SHL PUSH3 0x52FD OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x7B2 JUMPI POP PUSH1 0x0 PUSH3 0x749 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH3 0x7C0 JUMPI INVALID JUMPDEST DIV EQ PUSH3 0x7FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x6897 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x849 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x879 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x879 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x879 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x85C JUMP JUMPDEST POP PUSH3 0x887 SWAP3 SWAP2 POP PUSH3 0x88B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x753 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x887 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x892 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x5FC1 PUSH3 0x8D6 PUSH1 0x0 CODECOPY DUP1 PUSH2 0xEC5 MSTORE DUP1 PUSH2 0x1238 MSTORE POP DUP1 PUSH2 0xE36 MSTORE DUP1 PUSH2 0x23E1 MSTORE POP PUSH2 0x5FC1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x315 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70DEA79A GT PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xA4C0ED36 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0xD4CC54E4 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE9EE6EEB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE9EE6EEB EQ PUSH2 0xBAA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBE5 JUMPI DUP1 PUSH4 0xFEAF968C EQ PUSH2 0xC18 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0xD4CC54E4 EQ PUSH2 0xB67 JUMPI DUP1 PUSH4 0xDC7F0124 EQ PUSH2 0xB6F JUMPI DUP1 PUSH4 0xE2E40317 EQ PUSH2 0xB77 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0xC1075329 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xC1075329 EQ PUSH2 0xB1E JUMPI DUP1 PUSH4 0xC35905C6 EQ PUSH2 0xB57 JUMPI DUP1 PUSH4 0xC9374500 EQ PUSH2 0xB5F JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0xA52 JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0xAE4 JUMPI DUP1 PUSH4 0xB633620C EQ PUSH2 0xB01 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x8823DA6C GT PUSH2 0x150 JUMPI DUP1 PUSH4 0x98E5B12A GT PUSH2 0x12A JUMPI DUP1 PUSH4 0x98E5B12A EQ PUSH2 0x990 JUMPI DUP1 PUSH4 0x9A6FC8F5 EQ PUSH2 0x9B7 JUMPI DUP1 PUSH4 0xA118F249 EQ PUSH2 0xA1F JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x8823DA6C EQ PUSH2 0x8AC JUMPI DUP1 PUSH4 0x88AA80E7 EQ PUSH2 0x8DF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x988 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x7C2B0B21 GT PUSH2 0x181 JUMPI DUP1 PUSH4 0x7C2B0B21 EQ PUSH2 0x894 JUMPI DUP1 PUSH4 0x8038E4A1 EQ PUSH2 0x89C JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x8A4 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x70DEA79A EQ PUSH2 0x807 JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x80F JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x88C JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x40884C52 GT PUSH2 0x26B JUMPI DUP1 PUSH4 0x58609E44 GT PUSH2 0x214 JUMPI DUP1 PUSH4 0x64EFB22B GT PUSH2 0x1EE JUMPI DUP1 PUSH4 0x64EFB22B EQ PUSH2 0x6F5 JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0x6B14DAF8 EQ PUSH2 0x730 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x58609E44 EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0x613D8FCC EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0x628806EF EQ PUSH2 0x6C2 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x50D25BCD GT PUSH2 0x245 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0x57970E93 EQ PUSH2 0x6AA JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x40884C52 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0x46FCFF4C EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0x4F8FC3B5 EQ PUSH2 0x692 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x2CD JUMPI DUP1 PUSH4 0x3969C20F GT PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x3969C20F EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x3A5381B5 EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0x3D3D7714 EQ PUSH2 0x5CA JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x357EBB02 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x38AA4C72 EQ PUSH2 0x41A JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x202EE0ED GT PUSH2 0x2FE JUMPI DUP1 PUSH4 0x202EE0ED EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x20ED0275 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x23CA2903 EQ PUSH2 0x3C1 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0xA756983 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x1327D3D8 EQ PUSH2 0x324 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x322 PUSH2 0xC20 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE26 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x1236 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x60 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x80 ADD CALLDATALOAD AND PUSH2 0x128B JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP PUSH4 0xFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x171F JUMP JUMPDEST PUSH2 0x5A1 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x615 PUSH2 0x1C94 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x651 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x639 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66D PUSH2 0x1D04 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x5A1 PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0x401 PUSH2 0x1F75 JUMP JUMPDEST PUSH2 0x3E3 PUSH2 0x1F95 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F9B JUMP JUMPDEST PUSH2 0x5A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20E3 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x211A JUMP JUMPDEST PUSH2 0x7F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x21D0 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH2 0x2205 JUMP JUMPDEST PUSH2 0x817 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x851 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x839 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x87E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH2 0x22DD JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x23DF JUMP JUMPDEST PUSH2 0x322 PUSH2 0x2403 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x24E9 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x259F JUMP JUMPDEST PUSH2 0x91E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x26D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 ISZERO ISZERO DUP10 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP8 AND PUSH1 0x20 DUP10 ADD MSTORE DUP8 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x60 DUP9 ADD MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xFF AND PUSH1 0xC0 DUP6 ADD MSTORE AND PUSH1 0xE0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x100 ADD SWAP1 RETURN JUMPDEST PUSH2 0x5A1 PUSH2 0x2890 JUMP JUMPDEST PUSH2 0x998 PUSH2 0x28AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x9E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP5 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2AD4 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xA68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xAB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2C88 JUMP JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2D3F JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2DF6 JUMP JUMPDEST PUSH2 0x66D PUSH2 0x303C JUMP JUMPDEST PUSH2 0x401 PUSH2 0x3054 JUMP JUMPDEST PUSH2 0x66D PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x7F3 PUSH2 0x30A4 JUMP JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30AD JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x30E7 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x321D JUMP JUMPDEST PUSH2 0x9E0 PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xCA6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD03 JUMPI PUSH1 0xE DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3BE8A977A014527B50AE38ADDA80B56911C267328965C98DDC385D248F539638 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xD8B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ PUSH2 0xE22 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP4 AND SWAP1 PUSH32 0xCFAC5DC75B8D9A7E074162F59D9ADCD33DA59F0FE8DFB21580DB298FC0FDAD0D SWAP1 PUSH1 0x0 SWAP1 LOG3 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE32 CALLER DUP5 PUSH2 0x33E6 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP3 SLT ISZERO PUSH2 0xEC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x76616C75652062656C6F77206D696E5375626D697373696F6E56616C75650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 SGT ISZERO PUSH2 0xF52 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x76616C75652061626F7665206D61785375626D697373696F6E56616C75650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 SWAP1 ISZERO PUSH2 0xFF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFBE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xFEB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1003 DUP4 PUSH2 0x36F4 JUMP JUMPDEST PUSH2 0x100D DUP3 DUP5 PUSH2 0x37E5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1019 DUP6 PUSH2 0x3905 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1026 DUP6 PUSH2 0x3AB5 JUMP JUMPDEST PUSH2 0x102F DUP6 PUSH2 0x3C78 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x103F JUMPI PUSH2 0x103F DUP6 DUP3 PUSH2 0x3CEF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x10CC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP3 ISZERO ISZERO EQ ISZERO PUSH2 0x1105 JUMPI PUSH2 0x1231 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x118D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP4 ISZERO ISZERO OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FF AND PUSH2 0x100 PUSH4 0xFFFFFFFF DUP5 AND MUL OR SWAP1 SSTORE PUSH2 0x11D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP3 PUSH32 0xC3DF5A754E002718F2E10804B99E6605E7C701D95CEC9552C7680CA2B6F2820A SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1311 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x131B PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x139B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D6178206D75737420657175616C2F657863656564206D696E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61782063616E6E6F742065786365656420746F74616C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND ISZERO DUP1 PUSH2 0x1434 JUMPI POP DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT JUMPDEST PUSH2 0x149F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64656C61792063616E6E6F742065786365656420746F74616C00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x14BA DUP7 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x153C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E647320666F72207061796D656E740000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1546 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0xFF AND GT ISZERO PUSH2 0x15C4 JUMPI PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND GT PUSH2 0x15C4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D696E206D7573742062652067726561746572207468616E2030000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x4 PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x56800C9D1ED723511246614D15E58CFCDE15B6A33C245B5C961B689C1890FD8F DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x17A5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x17E9 JUMPI PUSH2 0x17E1 DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x17BF JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x17A8 JUMP JUMPDEST POP DUP6 DUP5 EQ PUSH2 0x1858 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6565642073616D65206F7261636C6520616E642061646D696E20636F756E74 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4D PUSH2 0x1875 DUP8 PUSH2 0x1866 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x4106 AND JUMP JUMPDEST GT ISZERO PUSH2 0x18E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D6178206F7261636C657320616C6C6F77656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x194F JUMPI PUSH2 0x1947 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x18FC JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x1925 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x417A JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x18E5 JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x199C SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x128B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0x1A61 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792063616C6C61626C652062792061646D696E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 LT ISZERO PUSH2 0x1B0E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E7420776974686472617761626C652066756E647300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1B30 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x454E AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0xD SLOAD PUSH2 0x1BB3 SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV AND DUP4 PUSH2 0x454E JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP4 DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x103F JUMPI INVALID JUMPDEST PUSH1 0x60 PUSH1 0xC DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1CF9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CCE JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1D24 PUSH2 0x5E5A JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV AND PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x2 SLOAD DUP5 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP5 MLOAD SWAP4 SWAP5 PUSH1 0x0 SWAP5 PUSH2 0x1E11 SWAP5 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x45E9 AND JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 EQ PUSH2 0xE22 JUMPI PUSH1 0xD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xFE25C73E3B9089FAC37D55C4C7EFCBA6F04AF04CEBD2FC4D6D7DBB07E1E5234F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDC CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1F47 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1F4F PUSH2 0x465A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD AND CALLER EQ PUSH2 0x2033 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792063616C6C61626C652062792070656E64696E672061646D696E0000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE PUSH1 0x2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF AND CALLER PUSH3 0x10000 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0xC5055390645C15A4BE9A21B3F8D019153DCB4A0C125685DA6EB84048E2FE904 SWAP2 LOG3 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215D CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21C8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1F4F PUSH2 0x467D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DC DUP4 DUP4 PUSH2 0x4691 JUMP JUMPDEST DUP1 PUSH2 0x21FC JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ORIGIN EQ JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x22D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x22AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2363 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2489 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND PUSH2 0xD03 JUMPI PUSH1 0xE DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xAEBF329500988C6488A0074E5A0A9FF304561FC5C6FC877AEB1D59C8282C3480 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252C CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2597 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1F4F PUSH2 0x46CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2625 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x26D4 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0x3D68A6FCE901D20453D1A7AA06BF3950302A735948037DEB182A8DB66DF2A0D1 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 CALLER ORIGIN EQ PUSH2 0x274E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F66662D636861696E2072656164696E67206F6E6C7900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP10 AND ISZERO PUSH2 0x2869 JUMPI PUSH4 0xFFFFFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH2 0x2784 DUP13 DUP13 PUSH2 0x470A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP5 DUP3 ADD SLOAD SWAP2 DUP5 ADD SLOAD PUSH1 0xD SLOAD DUP16 SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 PUSH9 0x10000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x27F4 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0x1 DUP10 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x2821 JUMPI PUSH1 0x4 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2849 JUMP JUMPDEST PUSH1 0x1 DUP9 ADD SLOAD PUSH13 0x1000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND SWAP4 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP POP POP PUSH2 0x2883 JUMP JUMPDEST PUSH2 0x2872 DUP11 PUSH2 0x4760 JUMP JUMPDEST SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP JUMPDEST SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x292A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420617574686F72697A6564207265717565737465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ISZERO ISZERO DUP1 PUSH2 0x296C JUMPI POP PUSH2 0x296C DUP2 PUSH2 0x4977 JUMP JUMPDEST PUSH2 0x29D7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7072657620726F756E64206D75737420626520737570657273656461626C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29EE PUSH4 0xFFFFFFFF DUP1 DUP5 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4A0A AND JUMP JUMPDEST SWAP1 POP PUSH2 0x29F9 DUP2 PUSH2 0x4A87 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2A4E CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2AB9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2AC2 DUP7 PUSH2 0x4B8F JUMP JUMPDEST SWAP4 SWAP11 SWAP3 SWAP10 POP SWAP1 SWAP8 POP SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2B5A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x26D4 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0x87286AD1F399C8E82BF0C4EF4FCDC570EA2E1E92176E5C848B6413545B885DB4 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C7A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7472616E7366657220646F65736E2774206163636570742063616C6C64617461 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2C82 PUSH2 0x1D1C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CCB CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2D36 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x21FF DUP3 PUSH2 0x4D05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D82 CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2DED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x21FF DUP3 PUSH2 0x4D39 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2E7C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0x4 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND SWAP2 DUP4 SWAP2 PUSH2 0x2EB4 SWAP2 PUSH2 0x2EA7 SWAP2 AND PUSH2 0x3E28 JUMP JUMPDEST DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x45E9 AND JUMP JUMPDEST LT ISZERO PUSH2 0x2F21 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E7420726573657276652066756E6473000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x3034 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1231 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0x3185 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792063616C6C61626C652062792061646D696E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE DUP2 MLOAD CALLER DUP2 MSTORE SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP1 MLOAD SWAP2 SWAP3 PUSH32 0xB79BF2E89C2D70DDE91D2991FB1EA69B7E478061AD7C04ED5B02B96BC52B8104 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x32A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3362 CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x33CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x33D5 PUSH2 0x4D7E JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD PUSH1 0x60 SWAP2 PUSH4 0xFFFFFFFF PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV DUP2 AND SWAP2 AND DUP2 PUSH2 0x3474 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E6F7420656E61626C6564206F7261636C650000000000000000000000000000 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x21FF JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x34C7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E6F742079657420656E61626C6564206F7261636C6500000000000000000000 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x21FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP7 AND PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND LT ISZERO PUSH2 0x3554 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E6F206C6F6E67657220616C6C6F776564206F7261636C650000000000000000 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x21FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP7 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND LT PUSH2 0x35E4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x63616E6E6F74207265706F7274206F6E2070726576696F757320726F756E6473 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x21FF JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3620 JUMPI POP PUSH2 0x3610 PUSH4 0xFFFFFFFF DUP1 DUP4 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4A0A AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x3633 JUMPI POP PUSH2 0x3631 DUP5 DUP3 PUSH2 0x4DA7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3677 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x696E76616C696420726F756E6420746F207265706F7274000000000000000000 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x21FF JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0x1 EQ ISZERO DUP1 ISZERO PUSH2 0x36A8 JUMPI POP PUSH2 0x36A6 PUSH2 0x36A1 PUSH4 0xFFFFFFFF DUP1 DUP8 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4E0D AND JUMP JUMPDEST PUSH2 0x4E8A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x36EC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x70726576696F757320726F756E64206E6F7420737570657273656461626C6500 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x21FF JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x36FD DUP2 PUSH2 0x4ECA JUMP JUMPDEST PUSH2 0x3706 JUMPI PUSH2 0x26D4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x4 SLOAD PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV DUP3 AND SWAP2 PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP2 DIV DUP2 AND DUP3 ADD SWAP1 DUP4 AND GT DUP1 ISZERO SWAP1 PUSH2 0x3773 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x377E JUMPI POP PUSH2 0x26D4 JUMP JUMPDEST PUSH2 0x3787 DUP3 PUSH2 0x4EFB JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP4 AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x37EE DUP2 PUSH2 0x518A JUMP JUMPDEST PUSH2 0x3859 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726F756E64206E6F7420616363657074696E67207375626D697373696F6E7300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE DUP4 DUP6 KECCAK256 ADD DUP8 SWAP1 SSTORE CALLER DUP1 DUP6 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH25 0x1000000000000000000000000000000000000000000000000 DUP8 MUL OR DUP2 SSTORE ADD DUP7 SWAP1 SSTORE MLOAD SWAP1 SWAP3 SWAP2 DUP6 SWAP2 PUSH32 0x92E98423F8ADAC6E64D0608E519FD1CEFB861498385C6DEE70D58FC926DDC68C SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH5 0x100000000 SWAP1 SWAP3 DIV AND GT ISZERO PUSH2 0x3941 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x3AB0 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH2 0x39A7 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x399D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x3989 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x51AA JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 DUP2 SSTORE PUSH1 0x1 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 DUP7 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF AND PUSH5 0x100000000 DUP7 MUL OR SWAP1 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 DUP5 SWAP3 PUSH32 0x559884FD3A460DB3073B7FC896CC77986F16E378210DED43186175BF646FC5F SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x1 SWAP3 POP SWAP1 POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH13 0x1000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AF8 PUSH2 0x5E5A JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3B48 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x454E AND JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3B74 SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x5274 AND JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD PUSH1 0xD DUP1 SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP5 MUL SWAP2 DUP6 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP5 AND OR SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3BFD SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x5274 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND OR SWAP1 SSTORE DUP4 MLOAD SWAP1 MLOAD SWAP3 AND SWAP2 PUSH32 0xFE25C73E3B9089FAC37D55C4C7EFCBA6F04AF04CEBD2FC4D6D7DBB07E1E5234F SWAP2 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 AND GT ISZERO PUSH2 0x3CA2 JUMPI PUSH2 0x26D4 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3CC2 DUP3 DUP3 PUSH2 0x5E71 JUMP JUMPDEST POP PUSH1 0x1 ADD DUP1 SLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH2 0x3D13 JUMPI POP PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D2A PUSH4 0xFFFFFFFF DUP1 DUP7 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4E0D AND JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SLOAD DUP3 MLOAD PUSH32 0xBEED9B5100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP3 DIV DUP7 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD DUP3 SWAP1 MSTORE SWAP6 DUP12 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP11 SWAP1 MSTORE SWAP2 MLOAD SWAP6 SWAP7 POP SWAP4 SWAP5 SWAP1 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP4 PUSH4 0xBEED9B51 SWAP4 PUSH3 0x186A0 SWAP4 PUSH1 0x84 DUP1 DUP6 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP8 CALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x3E15 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x3E1E JUMPI PUSH2 0x3E20 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FF PUSH1 0x2 PUSH2 0x3E4A PUSH2 0x3E3A PUSH2 0x1F95 JUMP JUMPDEST DUP6 SWAP1 PUSH1 0xFF AND PUSH4 0xFFFFFFFF PUSH2 0x52FD AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x52FD AND JUMP JUMPDEST PUSH2 0x3E5F DUP2 PUSH2 0x5370 JUMP JUMPDEST PUSH2 0x3ECA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F7261636C65206E6F7420656E61626C65640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x3EE3 SWAP1 PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4A0A AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xC PUSH2 0x3F73 PUSH1 0x1 PUSH2 0x3F64 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x45E9 AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3F7D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x2 SWAP1 DUP2 ADD DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND DUP1 DUP8 MSTORE SWAP2 DUP7 KECCAK256 ADD DUP1 SLOAD PUSH2 0xFFFF SWAP1 SWAP4 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 SWAP4 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP4 SWAP1 SWAP5 MSTORE DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 DUP4 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x4013 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC DUP1 SLOAD DUP1 PUSH2 0x4066 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE SWAP1 SWAP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH32 0x18DD09695E4FBDAE8D1A5EDB11221EB04564269C29A089B9753A6535C54BA92E SWAP1 DUP4 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x21FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4183 DUP3 PUSH2 0x5370 JUMP JUMPDEST ISZERO PUSH2 0x41EF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F7261636C6520616C726561647920656E61626C656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x4271 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207365742061646D696E20746F20300000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND ISZERO DUP1 PUSH2 0x42E0 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x10000 SWAP1 DIV DUP2 AND SWAP1 DUP3 AND EQ JUMPDEST PUSH2 0x434B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65722063616E6E6F74206F76657277726974652061646D696E00000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4354 DUP3 PUSH2 0x53B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH4 0xFFFFFFFF SWAP8 SWAP1 SWAP8 AND PUSH17 0x100000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP6 SWAP1 SWAP6 AND PUSH24 0xFFFFFFFF0000000000000000000000000000000000000000 OR DUP6 SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x2 SWAP1 SWAP7 ADD DUP1 SLOAD PUSH2 0xFFFF SWAP1 SWAP8 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP7 OR DUP7 SSTORE DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP6 OR SWAP1 SSTORE DUP4 DUP4 MSTORE DUP6 SLOAD SWAP5 DUP8 AND PUSH3 0x10000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x18DD09695E4FBDAE8D1A5EDB11221EB04564269C29A089B9753A6535C54BA92E SWAP2 SWAP1 LOG3 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC5055390645C15A4BE9A21B3F8D019153DCB4A0C125685DA6EB84048E2FE904 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x45E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x45E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x21FC JUMPI POP POP PUSH1 0xE SLOAD PUSH1 0xFF AND ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x4756 JUMPI PUSH2 0x473B DUP3 PUSH2 0x518A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474F JUMPI POP PUSH2 0x474C DUP4 DUP4 PUSH2 0x33E6 JUMP JUMPDEST MLOAD ISZERO JUMPDEST SWAP1 POP PUSH2 0x21FF JUMP JUMPDEST PUSH2 0x473B DUP4 DUP4 PUSH2 0x5441 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 SLOAD DUP2 SLOAD DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH32 0xEC8156718A8372B1DB44BB411437D0870F3E3790D4A08526D024CE1B0B668F6B SWAP3 SWAP1 SWAP2 DUP5 SWAP2 PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ DUP1 PUSH2 0x47FF JUMPI POP PUSH1 0x7 SLOAD PUSH2 0x47FD SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x518A JUMP JUMPDEST ISZERO JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0x4814 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x4E8A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x481D JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x487F JUMPI PUSH1 0x7 SLOAD PUSH2 0x483B SWAP1 PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4A0A AND JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SLOAD SWAP2 SWAP12 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP5 POP SWAP3 POP PUSH2 0x4878 DUP13 DUP12 PUSH2 0x5441 JUMP JUMPDEST SWAP11 POP PUSH2 0x48DB JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 SWAP12 POP PUSH13 0x1000000000000000000000000 SWAP1 SWAP2 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP SWAP3 POP PUSH2 0x48D8 DUP11 PUSH2 0x518A JUMP JUMPDEST SWAP11 POP JUMPDEST PUSH2 0x48E5 DUP13 DUP12 PUSH2 0x33E6 JUMP JUMPDEST MLOAD ISZERO PUSH2 0x48F0 JUMPI PUSH1 0x0 SWAP11 POP JUMPDEST PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP5 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP15 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP4 ADD SLOAD PUSH1 0xD SLOAD DUP16 SWAP5 DUP16 SWAP5 SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP3 PUSH9 0x10000000000000000 SWAP1 DIV AND SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x494F PUSH2 0x1F95 JUMP JUMPDEST DUP11 DUP4 PUSH4 0xFFFFFFFF AND SWAP4 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP POP POP POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0xA SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 ADD SLOAD SWAP2 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 PUSH9 0x10000000000000000 SWAP1 DIV AND DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x49D1 JUMPI POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x4A02 JUMPI POP TIMESTAMP PUSH2 0x49F6 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH4 0xFFFFFFFF DUP1 DUP6 AND SWAP1 PUSH2 0x54C6 AND JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND LT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH4 0xFFFFFFFF DUP1 DUP6 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x21FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4A90 DUP2 PUSH2 0x4ECA JUMP JUMPDEST PUSH2 0x4A99 JUMPI PUSH2 0x26D4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH2 0x100 SWAP1 DIV DUP2 AND DUP3 ADD SWAP1 DUP4 AND GT DUP1 PUSH2 0x4AD0 JUMPI POP DUP1 ISZERO JUMPDEST PUSH2 0x4B3B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D7573742064656C617920726571756573747300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4B44 DUP3 PUSH2 0x4EFB JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP4 AND PUSH6 0x10000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFF SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4B9F PUSH2 0x5E8F JUMP JUMPDEST POP PUSH4 0xFFFFFFFF DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH9 0x10000000000000000 DUP2 DIV SWAP1 SWAP3 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 DIV SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE ISZERO DUP1 ISZERO SWAP1 PUSH2 0x4C31 JUMPI POP PUSH2 0x4C31 DUP8 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6F20646174612070726573656E740000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x4CCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xFBE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFA6 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP9 SWAP10 SWAP2 SWAP9 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND SWAP9 POP SWAP3 AND SWAP6 POP PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D10 DUP3 PUSH2 0x5547 JUMP JUMPDEST ISZERO PUSH2 0x4D31 JUMPI POP PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2115 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D44 DUP3 PUSH2 0x5547 JUMP JUMPDEST ISZERO PUSH2 0x4D31 JUMPI POP PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x33D5 PUSH1 0x7 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND PUSH2 0x4DCA PUSH1 0x1 DUP6 PUSH4 0xFFFFFFFF AND PUSH2 0x4A0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x21FC JUMPI POP POP PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ISZERO SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x45E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ISZERO ISZERO DUP1 PUSH2 0x21FF JUMPI POP PUSH2 0x21FF DUP3 PUSH2 0x4977 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x4EE6 SWAP1 PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4A0A AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F18 PUSH2 0x4F13 PUSH4 0xFFFFFFFF DUP1 DUP5 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4E0D AND JUMP JUMPDEST PUSH2 0x5551 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 AND PUSH4 0xFFFFFFFF DUP4 AND OR SWAP1 SSTORE PUSH2 0x4F50 PUSH2 0x5EB6 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP4 ADD DUP5 MSTORE DUP3 MSTORE PUSH1 0x4 SLOAD PUSH4 0xFFFFFFFF PUSH17 0x100000000000000000000000000000000 DUP3 DIV DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH21 0x10000000000000000000000000000000000000000 DUP4 DIV DUP3 AND DUP6 DUP8 ADD MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP4 DIV DUP3 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x80 DUP6 ADD MSTORE DUP6 AND DUP3 MSTORE PUSH1 0xA DUP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 DUP5 SWAP4 PUSH2 0x500B SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x5EE4 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x80 SWAP1 SWAP9 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 SWAP1 SWAP4 AND PUSH4 0xFFFFFFFF SWAP6 DUP7 AND OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF AND PUSH5 0x100000000 SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 SWAP8 DUP6 AND SWAP8 SWAP1 SWAP8 MUL SWAP7 SWAP1 SWAP7 OR PUSH32 0xFFFFFFFF00000000000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE DUP5 SWAP1 KECCAK256 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE DUP5 MLOAD SWAP2 AND DUP2 MSTORE SWAP3 MLOAD CALLER SWAP4 PUSH32 0x109FC6F55CF40689F02FBAAD7AF7FE7BBAC8A3D2186600AFC7D3E10CAC60271 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 LT PUSH2 0x521C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C697374206D757374206E6F7420626520656D70747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND PUSH2 0x525B JUMPI PUSH1 0x0 DUP1 PUSH2 0x5241 DUP7 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH1 0x1 DUP8 SUB DUP8 PUSH2 0x566A JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x5250 DUP3 DUP3 PUSH2 0x5748 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x526B DUP5 PUSH1 0x0 PUSH1 0x1 DUP6 SUB DUP5 PUSH2 0x57B6 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x21FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x530C JUMPI POP PUSH1 0x0 PUSH2 0x21FF JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x5319 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x21FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5F6B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP2 DIV DUP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH4 0xFFFFFFFF AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x5419 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP3 DUP2 AND PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ JUMPDEST ISZERO PUSH2 0x5425 JUMPI SWAP1 POP PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x543A PUSH4 0xFFFFFFFF DUP1 DUP4 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4A0A AND JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x4 SLOAD PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV DUP3 AND SWAP2 PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP2 DIV DUP2 AND DUP3 ADD SWAP1 DUP5 AND GT DUP1 PUSH2 0x4A02 JUMPI POP ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x21FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF LT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x555A DUP2 PUSH2 0x4977 JUMP JUMPDEST PUSH2 0x5563 JUMPI PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x557A PUSH4 0xFFFFFFFF DUP1 DUP5 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4E0D AND JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP9 DUP7 AND DUP6 MSTORE DUP3 DUP6 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x1 SWAP2 DUP3 ADD SLOAD SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 SWAP3 DUP4 SWAP1 DIV SWAP1 SWAP7 AND SWAP1 SWAP2 MUL SWAP5 SWAP1 SWAP5 OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SWAP4 SSTORE PUSH1 0xA SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0x563C DUP3 DUP3 PUSH2 0x5E71 JUMP JUMPDEST POP PUSH1 0x1 ADD DUP1 SLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 LT PUSH2 0x5679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO DUP1 ISZERO PUSH2 0x5689 JUMPI POP DUP5 DUP5 GT ISZERO JUMPDEST PUSH2 0x5692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 GT ISZERO DUP1 ISZERO PUSH2 0x56A2 JUMPI POP DUP5 DUP4 GT ISZERO JUMPDEST PUSH2 0x56AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP7 DUP7 SUB LT ISZERO PUSH2 0x56CC JUMPI PUSH2 0x56C3 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x5847 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x573E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56D9 DUP9 DUP9 DUP9 PUSH2 0x5CFE JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT PUSH2 0x56EA JUMPI DUP1 SWAP6 POP PUSH2 0x5738 JUMP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x56FD JUMPI DUP1 PUSH1 0x1 ADD SWAP7 POP PUSH2 0x5738 JUMP JUMPDEST DUP1 DUP6 GT ISZERO DUP1 ISZERO PUSH2 0x570C JUMPI POP DUP4 DUP2 LT JUMPDEST PUSH2 0x5712 JUMPI INVALID JUMPDEST PUSH2 0x571E DUP9 DUP9 DUP4 DUP9 PUSH2 0x57B6 JUMP JUMPDEST SWAP3 POP PUSH2 0x572F DUP9 DUP3 PUSH1 0x1 ADD DUP9 DUP8 PUSH2 0x57B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x573E SWAP1 POP JUMP JUMPDEST POP PUSH2 0x56AB JUMP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT DUP1 ISZERO PUSH2 0x5759 JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST DUP1 PUSH2 0x576F JUMPI POP PUSH1 0x0 DUP4 SGT DUP1 ISZERO PUSH2 0x576F JUMPI POP PUSH1 0x0 DUP3 SLT JUMPDEST ISZERO PUSH2 0x578F JUMPI PUSH1 0x2 PUSH2 0x5780 DUP5 DUP5 PUSH2 0x5DDB JUMP JUMPDEST DUP2 PUSH2 0x5787 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 DUP6 SMOD DUP2 DUP6 SMOD ADD SDIV SWAP1 POP PUSH2 0x4A02 PUSH2 0x57B0 PUSH1 0x2 DUP7 SDIV PUSH1 0x2 DUP7 SDIV PUSH2 0x5DDB JUMP JUMPDEST DUP3 PUSH2 0x5DDB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 GT ISZERO PUSH2 0x57C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0x57D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x5829 JUMPI PUSH1 0x7 DUP5 DUP5 SUB LT ISZERO PUSH2 0x57FE JUMPI PUSH1 0x0 PUSH2 0x57F4 DUP7 DUP7 DUP7 DUP7 DUP8 PUSH2 0x5847 JUMP JUMPDEST POP SWAP2 POP PUSH2 0x4A02 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x580B DUP7 DUP7 DUP7 PUSH2 0x5CFE JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT PUSH2 0x581C JUMPI DUP1 SWAP4 POP PUSH2 0x5823 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP5 POP JUMPDEST POP PUSH2 0x57D2 JUMP JUMPDEST DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5835 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP7 PUSH1 0x1 ADD SUB SWAP1 POP PUSH1 0x0 DUP9 DUP9 PUSH1 0x0 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5865 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 LT PUSH2 0x589F JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x58B7 JUMP JUMPDEST DUP10 DUP10 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x58AE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 LT PUSH2 0x58E9 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5901 JUMP JUMPDEST DUP11 DUP11 PUSH1 0x2 ADD DUP2 MLOAD DUP2 LT PUSH2 0x58F8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x3 LT PUSH2 0x5933 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x594B JUMP JUMPDEST DUP12 DUP12 PUSH1 0x3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5942 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x4 LT PUSH2 0x597D JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5995 JUMP JUMPDEST DUP13 DUP13 PUSH1 0x4 ADD DUP2 MLOAD DUP2 LT PUSH2 0x598C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x5 LT PUSH2 0x59C7 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x59DF JUMP JUMPDEST DUP14 DUP14 PUSH1 0x5 ADD DUP2 MLOAD DUP2 LT PUSH2 0x59D6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x6 LT PUSH2 0x5A11 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5A29 JUMP JUMPDEST DUP15 DUP15 PUSH1 0x6 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5A20 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP DUP6 DUP8 SGT ISZERO PUSH2 0x5A37 JUMPI SWAP5 SWAP6 SWAP5 JUMPDEST DUP4 DUP6 SGT ISZERO PUSH2 0x5A43 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP2 DUP4 SGT ISZERO PUSH2 0x5A4F JUMPI SWAP1 SWAP2 SWAP1 JUMPDEST DUP5 DUP8 SGT ISZERO PUSH2 0x5A5B JUMPI SWAP4 SWAP6 SWAP4 JUMPDEST DUP4 DUP7 SGT ISZERO PUSH2 0x5A67 JUMPI SWAP3 SWAP5 SWAP3 JUMPDEST DUP1 DUP4 SGT ISZERO PUSH2 0x5A71 JUMPI SWAP2 JUMPDEST DUP5 DUP7 SGT ISZERO PUSH2 0x5A7D JUMPI SWAP4 SWAP5 SWAP4 JUMPDEST DUP1 DUP3 SGT ISZERO PUSH2 0x5A87 JUMPI SWAP1 JUMPDEST DUP3 DUP8 SGT ISZERO PUSH2 0x5A93 JUMPI SWAP2 SWAP6 SWAP2 JUMPDEST DUP2 DUP7 SGT ISZERO PUSH2 0x5A9F JUMPI SWAP1 SWAP5 SWAP1 JUMPDEST DUP1 DUP6 SGT ISZERO PUSH2 0x5AA9 JUMPI SWAP4 JUMPDEST DUP3 DUP7 SGT ISZERO PUSH2 0x5AB5 JUMPI SWAP2 SWAP5 SWAP2 JUMPDEST DUP1 DUP5 SGT ISZERO PUSH2 0x5ABF JUMPI SWAP3 JUMPDEST DUP3 DUP6 SGT ISZERO PUSH2 0x5ACB JUMPI SWAP2 SWAP4 SWAP2 JUMPDEST DUP2 DUP5 SGT ISZERO PUSH2 0x5AD7 JUMPI SWAP1 SWAP3 SWAP1 JUMPDEST DUP3 DUP5 SGT ISZERO PUSH2 0x5AE3 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST DUP14 DUP13 SUB DUP1 PUSH2 0x5AF3 JUMPI DUP8 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x5B04 JUMPI DUP7 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST DUP1 PUSH1 0x2 EQ ISZERO PUSH2 0x5B15 JUMPI DUP6 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST DUP1 PUSH1 0x3 EQ ISZERO PUSH2 0x5B26 JUMPI DUP5 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST DUP1 PUSH1 0x4 EQ ISZERO PUSH2 0x5B37 JUMPI DUP4 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST DUP1 PUSH1 0x5 EQ ISZERO PUSH2 0x5B48 JUMPI DUP3 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST DUP1 PUSH1 0x6 EQ ISZERO PUSH2 0x5B59 JUMPI DUP2 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6B31206F7574206F6620626F756E647300000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP15 DUP13 SUB DUP14 DUP14 EQ ISZERO PUSH2 0x5BDE JUMPI POP DUP11 SWAP10 POP PUSH2 0x573E SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x5BF5 JUMPI POP SWAP7 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x5C10 JUMPI POP SWAP6 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 EQ ISZERO PUSH2 0x5C2B JUMPI POP SWAP5 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 EQ ISZERO PUSH2 0x5C46 JUMPI POP SWAP4 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 EQ ISZERO PUSH2 0x5C61 JUMPI POP SWAP3 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 EQ ISZERO PUSH2 0x5C7C JUMPI POP SWAP2 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 EQ ISZERO PUSH2 0x5C97 JUMPI POP SWAP1 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6B32206F7574206F6620626F756E647300000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x2 DUP6 DUP6 ADD DIV DUP2 MLOAD DUP2 LT PUSH2 0x5D12 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0x1 DUP4 ADD SWAP3 POP JUMPDEST PUSH1 0x1 DUP5 ADD SWAP4 POP DUP1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5D3C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SLT PUSH2 0x5D29 JUMPI JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5D5D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SGT PUSH2 0x5D4A JUMPI DUP3 DUP5 LT ISZERO PUSH2 0x5DCD JUMPI DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5D7E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5D92 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x5DA6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x5DB9 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE PUSH2 0x5DD6 JUMP JUMPDEST DUP3 SWAP2 POP POP PUSH2 0x543A JUMP JUMPDEST PUSH2 0x5D29 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0x5DF0 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x5E05 JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x5E05 JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0x21FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5F4A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x26D4 SWAP2 SWAP1 PUSH2 0x5F2F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x5F1F JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x5F1F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x5F04 JUMP JUMPDEST POP PUSH2 0x5F2B SWAP3 SWAP2 POP PUSH2 0x5F2F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1D01 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x5F2B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5F35 JUMP INVALID MSTORE8 PUSH10 0x676E6564536166654D61 PUSH21 0x683A206164646974696F6E206F766572666C6F7753 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 KECCAK256 0xD4 0xBF PUSH25 0x9BD312BD203E0E444967210AE1485C8098B6EE88B9A4145FEE PUSH30 0x72C64736F6C63430006060033536166654D6174683A206D756C7469706C PUSH10 0x636174696F6E206F7665 PUSH19 0x666C6F77000000000000000000000000000000 ",
				"sourceMap": "300:7336:0:-:0;;;1306:396;5:9:-1;2:2;;;27:1;24;17:12;2:2;1306:396:0;;;;;;;;;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;1306:396:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;11:20;;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;1306:396:0;;420:4:-1;411:14;;;;1306:396:0;;;;;411:14:-1;1306:396:0;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1306:396:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1306:396:0;;-1:-1:-1;;414:5:13;:18;;422:10;-1:-1:-1;;;;;;414:18:13;;;;;;5266:9:9;:37;;;;;-1:-1:-1;;;;;5266:37:9;;;;;;;-1:-1:-1;1569:14:0;;1589:8;;1603:10;;1619:19;;1644;;1669:9;;1684:12;;5309:53:9;;1569:14:0;;414:5:13;;1589:8:0;5309:18:9;:53::i;:::-;5368:24;5381:10;-1:-1:-1;;;;;5368:12:9;:24;:::i;:::-;5398:40;;;;5444;;;;5490:8;:20;;-1:-1:-1;;5490:20:9;;;;;;;5516:26;;;;:11;;:26;;;;;:::i;:::-;;5577:38;5605:8;5597:17;;5577:15;:19;;;;;;:38;;;;:::i;:::-;5548:9;;;:6;:9;;:19;:68;;-1:-1:-1;;;;;5548:68:9;;;;;;-1:-1:-1;;;;;;;;5548:68:9;;;;;;;;;-1:-1:-1;;676:12:20;:19;;-1:-1:-1;;676:19:20;5548::9;676::20;;;-1:-1:-1;300:7336:0;;-1:-1:-1;;;;;;;;;;;;;300:7336:0;8461:1023:9;1170:5:13;;-1:-1:-1;;;;;1170:5:13;1156:10;:19;1148:54;;;;;-1:-1:-1;;;1148:54:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;8659:16:9::1;8678:13;-1:-1:-1::0;;;;;8678:11:9::1;:13:::0;:::i:1;:::-;8659:32;;;;8749:15;8730:34;;:15;:34;;;;8722:72;;;::::0;;-1:-1:-1;;;8722:72:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8821:15;8808:28;;:9;:28;;;;8800:64;;;::::0;;-1:-1:-1;;;8800:64:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8878:14;::::0;::::1;::::0;;:43:::1;;;8908:13;8896:25;;:9;:25;;;8878:43;8870:81;;;::::0;;-1:-1:-1;;;8870:81:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8992:31;-1:-1:-1::0;;;;;8992:31:9;::::1;-1:-1:-1::0;;;;;8992:15:9::1;:31:::0;:::i:1;:::-;8965:13;:23:::0;-1:-1:-1;;;;;8965:23:9::1;:58;;8957:101;;;::::0;;-1:-1:-1;;;8957:101:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9084:1;9068:13;-1:-1:-1::0;;;;;9068:11:9::1;:13:::0;:::i:1;:::-;:17;;;9064:96;;;9121:1;9103:15;:19;;;9095:58;;;::::0;;-1:-1:-1;;;9095:58:9;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9182:14;9166:13;;:30;;;;;-1:-1:-1::0;;;;;9166:30:9::1;;;;;-1:-1:-1::0;;;;;9166:30:9::1;;;;;;9223:15;9202:18;;:36;;;;;;;;;;;;;;;;;;9265:15;9244:18;;:36;;;;;;;;;;;;;;;;;;9301:13;9286:12;;:28;;;;;;;;;;;;;;;;;;9330:8;9320:7;;:18;;;;;;;;;;;;;;;;;;9421:15;9350:129;;9398:15;9350:129;;9377:13;;;;;;;;;-1:-1:-1::0;;;;;9377:13:9::1;-1:-1:-1::0;;;;;9350:129:9::1;;9444:13;9465:8;9350:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:1:13;8461:1023:9::0;;;;;:::o;22370:284::-;1170:5:13;;-1:-1:-1;;;;;1170:5:13;1156:10;:19;1148:54;;;;;-1:-1:-1;;;1148:54:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;22477:9:9::1;::::0;-1:-1:-1;;;;;22477:9:9;;::::1;::::0;22498:25;::::1;::::0;::::1;22494:156;;22533:9;:55:::0;;-1:-1:-1;;;;;;22533:55:9::1;-1:-1:-1::0;;;;;22533:55:9;;::::1;::::0;;::::1;::::0;;;22602:41:::1;::::0;22533:55;;22602:41;::::1;::::0;::::1;::::0;-1:-1:-1;;22602:41:9::1;22494:156;1208:1:13;22370:284:9::0;:::o;1236:165:62:-;1294:7;1322:1;1317;:6;;1309:49;;;;;-1:-1:-1;;;1309:49:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1376:5:62;;;1236:165;;;;;:::o;10340:98:9:-;10410:15;:22;10340:98;;:::o;29166:151::-;29242:7;29266:46;2510:1;29266:26;29278:13;-1:-1:-1;;;;;29278:11:9;:13;:::i;:::-;29266:26;;:7;:11;;;;;;:26;;;;:::i;:::-;:30;;;;;;:46;;;;:::i;1629:418:62:-;1687:7;1911:6;1907:35;;-1:-1:-1;1934:1:62;1927:8;;1907:35;1960:5;;;1964:1;1960;:5;:1;1979:5;;;;;:10;1971:56;;;;-1:-1:-1;;;1971:56:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2041:1;1629:418;-1:-1:-1;;;1629:418:62:o;300:7336:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;300:7336:0;;;-1:-1:-1;300:7336:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
			},
			"deployedBytecode": {
				"immutableReferences": {
					"2762": [
						{
							"length": 32,
							"start": 3638
						},
						{
							"length": 32,
							"start": 9185
						}
					],
					"2764": [
						{
							"length": 32,
							"start": 3781
						},
						{
							"length": 32,
							"start": 4664
						}
					]
				},
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b50600436106103155760003560e01c806370dea79a116101a7578063a4c0ed36116100ee578063d4cc54e411610097578063e9ee6eeb11610071578063e9ee6eeb14610baa578063f2fde38b14610be5578063feaf968c14610c1857610315565b8063d4cc54e414610b67578063dc7f012414610b6f578063e2e4031714610b7757610315565b8063c1075329116100c8578063c107532914610b1e578063c35905c614610b57578063c937450014610b5f57610315565b8063a4c0ed3614610a52578063b5ab58dc14610ae4578063b633620c14610b0157610315565b80638823da6c1161015057806398e5b12a1161012a57806398e5b12a146109905780639a6fc8f5146109b7578063a118f24914610a1f57610315565b80638823da6c146108ac57806388aa80e7146108df5780638da5cb5b1461098857610315565b80637c2b0b21116101815780637c2b0b21146108945780638038e4a11461089c5780638205bf6a146108a457610315565b806370dea79a146108075780637284e4161461080f57806379ba50971461088c57610315565b806340884c521161026b57806358609e441161021457806364efb22b116101ee57806364efb22b146106f5578063668a0f02146107285780636b14daf81461073057610315565b806358609e44146106b2578063613d8fcc146106ba578063628806ef146106c257610315565b806350d25bcd1161024557806350d25bcd1461069a57806354fd4d50146106a257806357970e93146106aa57610315565b806340884c521461060d57806346fcff4c146106655780634f8fc3b51461069257610315565b8063313ce567116102cd5780633969c20f116102a75780633969c20f1461046d5780633a5381b5146105995780633d3d7714146105ca57610315565b8063313ce567146103db578063357ebb02146103f957806338aa4c721461041a57610315565b8063202ee0ed116102fe578063202ee0ed1461035757806320ed02751461037a57806323ca2903146103c157610315565b80630a7569831461031a5780631327d3d814610324575b600080fd5b610322610c20565b005b6103226004803603602081101561033a57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610d05565b6103226004803603604081101561036d57600080fd5b5080359060200135610e26565b6103226004803603606081101561039057600080fd5b50803573ffffffffffffffffffffffffffffffffffffffff169060208101351515906040013563ffffffff16611046565b6103c9611236565b60408051918252519081900360200190f35b6103e361125a565b6040805160ff9092168252519081900360200190f35b610401611263565b6040805163ffffffff9092168252519081900360200190f35b610322600480360360a081101561043057600080fd5b506fffffffffffffffffffffffffffffffff8135169063ffffffff602082013581169160408101358216916060820135811691608001351661128b565b610322600480360360c081101561048357600080fd5b81019060208101813564010000000081111561049e57600080fd5b8201836020820111156104b057600080fd5b803590602001918460208302840111640100000000831117156104d257600080fd5b9193909290916020810190356401000000008111156104f057600080fd5b82018360208201111561050257600080fd5b8035906020019184602083028401116401000000008311171561052457600080fd5b91939092909160208101903564010000000081111561054257600080fd5b82018360208201111561055457600080fd5b8035906020019184602083028401116401000000008311171561057657600080fd5b919350915063ffffffff813581169160208101358216916040909101351661171f565b6105a16119a7565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610322600480360360608110156105e057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356119c3565b610615611c94565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610651578181015183820152602001610639565b505050509050019250505060405180910390f35b61066d611d04565b604080516fffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610322611d1c565b6103c9611e99565b6103c9611f54565b6105a1611f59565b610401611f75565b6103e3611f95565b610322600480360360208110156106d857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611f9b565b6105a16004803603602081101561070b57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166120e3565b6103c961211a565b6107f36004803603604081101561074657600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516919081019060408101602082013564010000000081111561077e57600080fd5b82018360208201111561079057600080fd5b803590602001918460018302840111640100000000831117156107b257600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506121d0945050505050565b604080519115158252519081900360200190f35b610401612205565b610817612231565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610851578181015183820152602001610839565b50505050905090810190601f16801561087e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103226122dd565b6103c96123df565b610322612403565b6103c96124e9565b610322600480360360208110156108c257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661259f565b61091e600480360360408110156108f557600080fd5b50803573ffffffffffffffffffffffffffffffffffffffff16906020013563ffffffff166126d7565b60408051981515895263ffffffff90971660208901528787019590955267ffffffffffffffff93841660608801529190921660808601526fffffffffffffffffffffffffffffffff91821660a086015260ff1660c08501521660e083015251908190036101000190f35b6105a1612890565b6109986128ac565b6040805169ffffffffffffffffffff9092168252519081900360200190f35b6109e0600480360360208110156109cd57600080fd5b503569ffffffffffffffffffff16612a05565b6040805169ffffffffffffffffffff96871681526020810195909552848101939093526060840191909152909216608082015290519081900360a00190f35b61032260048036036020811015610a3557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16612ad4565b61032260048036036060811015610a6857600080fd5b73ffffffffffffffffffffffffffffffffffffffff82351691602081013591810190606081016040820135640100000000811115610aa557600080fd5b820183602082011115610ab757600080fd5b80359060200191846001830284011164010000000083111715610ad957600080fd5b509092509050612c0d565b6103c960048036036020811015610afa57600080fd5b5035612c88565b6103c960048036036020811015610b1757600080fd5b5035612d3f565b61032260048036036040811015610b3457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135612df6565b61066d61303c565b610401613054565b61066d613078565b6107f36130a4565b6103c960048036036020811015610b8d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166130ad565b61032260048036036040811015610bc057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166130e7565b61032260048036036020811015610bfb57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661321d565b6109e0613319565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ca657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b600e5460ff1615610d0357600e80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556040517f3be8a977a014527b50ae38adda80b56911c267328965c98ddc385d248f53963890600090a15b565b60005473ffffffffffffffffffffffffffffffffffffffff163314610d8b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b60035473ffffffffffffffffffffffffffffffffffffffff9081169082168114610e2257600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84811691821790925560405190918316907fcfac5dc75b8d9a7e074162f59d9adcd33da59f0fe8dfb21580db298fc0fdad0d90600090a35b5050565b6060610e3233846133e6565b90507f0000000000000000000000000000000000000000000000000000000000000000821215610ec357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f76616c75652062656c6f77206d696e5375626d697373696f6e56616c75650000604482015290519081900360640190fd5b7f0000000000000000000000000000000000000000000000000000000000000000821315610f5257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f76616c75652061626f7665206d61785375626d697373696f6e56616c75650000604482015290519081900360640190fd5b8051819015610ff9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610fbe578181015183820152602001610fa6565b50505050905090810190601f168015610feb5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50611003836136f4565b61100d82846137e5565b60008061101985613905565b9150915061102685613ab5565b61102f85613c78565b811561103f5761103f8582613cef565b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146110cc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152600b602052604090205460ff161515821515141561110557611231565b811561118d5773ffffffffffffffffffffffffffffffffffffffff83166000908152600b6020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016831515177fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000ff1661010063ffffffff8416021790556111d9565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600b6020526040902080547fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001690555b60408051831515815263ffffffff83166020820152815173ffffffffffffffffffffffffffffffffffffffff8616927fc3df5a754e002718f2e10804b99e6605e7c701d95cec9552c7680ca2b6f2820a928290030190a25b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60055460ff1681565b6004547801000000000000000000000000000000000000000000000000900463ffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461131157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b600061131b611f95565b60ff1690508463ffffffff168463ffffffff16101561139b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f6d6178206d75737420657175616c2f657863656564206d696e00000000000000604482015290519081900360640190fd5b8363ffffffff168163ffffffff16101561141657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6d61782063616e6e6f742065786365656420746f74616c000000000000000000604482015290519081900360640190fd5b63ffffffff8116158061143457508263ffffffff168163ffffffff16115b61149f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f64656c61792063616e6e6f742065786365656420746f74616c00000000000000604482015290519081900360640190fd5b6114ba866fffffffffffffffffffffffffffffffff16613e28565b600d546fffffffffffffffffffffffffffffffff16101561153c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f696e73756666696369656e742066756e647320666f72207061796d656e740000604482015290519081900360640190fd5b6000611546611f95565b60ff1611156115c45760008563ffffffff16116115c457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f6d696e206d7573742062652067726561746572207468616e2030000000000000604482015290519081900360640190fd5b85600460006101000a8154816fffffffffffffffffffffffffffffffff02191690836fffffffffffffffffffffffffffffffff16021790555084600460146101000a81548163ffffffff021916908363ffffffff16021790555083600460106101000a81548163ffffffff021916908363ffffffff16021790555082600460186101000a81548163ffffffff021916908363ffffffff160217905550816004601c6101000a81548163ffffffff021916908363ffffffff1602179055508363ffffffff168563ffffffff16600460009054906101000a90046fffffffffffffffffffffffffffffffff166fffffffffffffffffffffffffffffffff167f56800c9d1ed723511246614d15e58cfcde15b6a33c245b5c961b689c1890fd8f8686604051808363ffffffff1663ffffffff1681526020018263ffffffff1663ffffffff1681526020019250505060405180910390a4505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146117a557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b60005b888110156117e9576117e18a8a838181106117bf57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff16613e56565b6001016117a8565b5085841461185857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f6e6565642073616d65206f7261636c6520616e642061646d696e20636f756e74604482015290519081900360640190fd5b604d61187587611866611f95565b60ff169063ffffffff61410616565b11156118e257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6d6178206f7261636c657320616c6c6f77656400000000000000000000000000604482015290519081900360640190fd5b60005b8681101561194f576119478888838181106118fc57fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1687878481811061192557fe5b9050602002013573ffffffffffffffffffffffffffffffffffffffff1661417a565b6001016118e5565b5060045461199c906fffffffffffffffffffffffffffffffff8116908590859085907c0100000000000000000000000000000000000000000000000000000000900463ffffffff1661128b565b505050505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff838116600090815260086020526040902060020154620100009004163314611a6157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6f6e6c792063616c6c61626c652062792061646d696e00000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff831660009081526008602052604090205481906fffffffffffffffffffffffffffffffff908116908216811015611b0e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f696e73756666696369656e7420776974686472617761626c652066756e647300604482015290519081900360640190fd5b611b306fffffffffffffffffffffffffffffffff82168363ffffffff61454e16565b73ffffffffffffffffffffffffffffffffffffffff8616600090815260086020526040902080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff928316179055600d54611bb391700100000000000000000000000000000000909104168361454e565b600d80546fffffffffffffffffffffffffffffffff92831670010000000000000000000000000000000002908316179055600254604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff888116600483015293861660248201529051929091169163a9059cbb916044808201926020929091908290030181600087803b158015611c6257600080fd5b505af1158015611c76573d6000803e3d6000fd5b505050506040513d6020811015611c8c57600080fd5b505161103f57fe5b6060600c805480602002602001604051908101604052809291908181526020018280548015611cf957602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611cce575b505050505090505b90565b600d546fffffffffffffffffffffffffffffffff1690565b611d24615e5a565b50604080518082018252600d546fffffffffffffffffffffffffffffffff808216835270010000000000000000000000000000000090910416602080830182905260025484517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015294519394600094611e11949373ffffffffffffffffffffffffffffffffffffffff909316926370a082319260248082019391829003018186803b158015611dd957600080fd5b505afa158015611ded573d6000803e3d6000fd5b505050506040513d6020811015611e0357600080fd5b50519063ffffffff6145e916565b82519091506fffffffffffffffffffffffffffffffff168114610e2257600d80547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff831617905560405181907ffe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f90600090a25050565b6000611edc336000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506121d092505050565b611f4757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f206163636573730000000000000000000000000000000000000000000000604482015290519081900360640190fd5b611f4f61465a565b905090565b600381565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b600454700100000000000000000000000000000000900463ffffffff1681565b600c5490565b73ffffffffffffffffffffffffffffffffffffffff81811660009081526008602052604090206003015416331461203357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f6f6e6c792063616c6c61626c652062792070656e64696e672061646d696e0000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff81166000818152600860205260408082206003810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905560020180547fffffffffffffffffffff0000000000000000000000000000000000000000ffff16336201000081029190911790915590519092917f0c5055390645c15a4be9a21b3f8d019153dcb4a0c125685da6eb84048e2fe90491a350565b73ffffffffffffffffffffffffffffffffffffffff808216600090815260086020526040902060020154620100009004165b919050565b600061215d336000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506121d092505050565b6121c857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f206163636573730000000000000000000000000000000000000000000000604482015290519081900360640190fd5b611f4f61467d565b60006121dc8383614691565b806121fc575073ffffffffffffffffffffffffffffffffffffffff831632145b90505b92915050565b6004547c0100000000000000000000000000000000000000000000000000000000900463ffffffff1681565b6006805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f810184900484028201840190925281815292918301828280156122d55780601f106122aa576101008083540402835291602001916122d5565b820191906000526020600020905b8154815290600101906020018083116122b857829003601f168201915b505050505081565b60015473ffffffffffffffffffffffffffffffffffffffff16331461236357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e657200000000000000000000604482015290519081900360640190fd5b60008054337fffffffffffffffffffffffff00000000000000000000000000000000000000008083168217845560018054909116905560405173ffffffffffffffffffffffffffffffffffffffff90921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005473ffffffffffffffffffffffffffffffffffffffff16331461248957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b600e5460ff16610d0357600e80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556040517faebf329500988c6488a0074e5a0a9ff304561fc5c6fc877aeb1d59c8282c348090600090a1565b600061252c336000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506121d092505050565b61259757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f206163636573730000000000000000000000000000000000000000000000604482015290519081900360640190fd5b611f4f6146ce565b60005473ffffffffffffffffffffffffffffffffffffffff16331461262557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff81166000908152600f602052604090205460ff16156126d45773ffffffffffffffffffffffffffffffffffffffff81166000818152600f602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055815192835290517f3d68a6fce901d20453d1a7aa06bf3950302a735948037deb182a8db66df2a0d19281900390910190a15b50565b60008080808080808033321461274e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6f66662d636861696e2072656164696e67206f6e6c7900000000000000000000604482015290519081900360640190fd5b63ffffffff8916156128695763ffffffff89166000908152600960209081526040808320600a9092529091206127848c8c61470a565b73ffffffffffffffffffffffffffffffffffffffff8d1660009081526008602052604090206001908101548482015491840154600d548f9367ffffffffffffffff169168010000000000000000900463ffffffff16906fffffffffffffffffffffffffffffffff166127f4611f95565b600189015467ffffffffffffffff16612821576004546fffffffffffffffffffffffffffffffff16612849565b60018801546c0100000000000000000000000090046fffffffffffffffffffffffffffffffff165b8363ffffffff169350995099509950995099509950995099505050612883565b6128728a614760565b975097509750975097509750975097505b9295985092959890939650565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b336000908152600b602052604081205460ff1661292a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6e6f7420617574686f72697a6564207265717565737465720000000000000000604482015290519081900360640190fd5b60075463ffffffff1660008181526009602052604090206001015468010000000000000000900467ffffffffffffffff1615158061296c575061296c81614977565b6129d757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f7072657620726f756e64206d75737420626520737570657273656461626c6500604482015290519081900360640190fd5b60006129ee63ffffffff80841690600190614a0a16565b90506129f981614a87565b63ffffffff1691505090565b6000806000806000612a4e336000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506121d092505050565b612ab957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f206163636573730000000000000000000000000000000000000000000000604482015290519081900360640190fd5b612ac286614b8f565b939a9299509097509550909350915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314612b5a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff81166000908152600f602052604090205460ff166126d45773ffffffffffffffffffffffffffffffffffffffff81166000818152600f602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055815192835290517f87286ad1f399c8e82bf0c4ef4fcdc570ea2e1e92176e5c848b6413545b885db49281900390910190a150565b8015612c7a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f7472616e7366657220646f65736e2774206163636570742063616c6c64617461604482015290519081900360640190fd5b612c82611d1c565b50505050565b6000612ccb336000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506121d092505050565b612d3657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f206163636573730000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6121ff82614d05565b6000612d82336000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506121d092505050565b612ded57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f206163636573730000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6121ff82614d39565b60005473ffffffffffffffffffffffffffffffffffffffff163314612e7c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b600d546004546fffffffffffffffffffffffffffffffff918216918391612eb491612ea79116613e28565b839063ffffffff6145e916565b1015612f2157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f696e73756666696369656e7420726573657276652066756e6473000000000000604482015290519081900360640190fd5b600254604080517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b158015612f9d57600080fd5b505af1158015612fb1573d6000803e3d6000fd5b505050506040513d6020811015612fc757600080fd5b505161303457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f746f6b656e207472616e73666572206661696c65640000000000000000000000604482015290519081900360640190fd5b611231611d1c565b6004546fffffffffffffffffffffffffffffffff1681565b60045474010000000000000000000000000000000000000000900463ffffffff1681565b600d5470010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1690565b600e5460ff1681565b73ffffffffffffffffffffffffffffffffffffffff166000908152600860205260409020546fffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff82811660009081526008602052604090206002015462010000900416331461318557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6f6e6c792063616c6c61626c652062792061646d696e00000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff82811660008181526008602090815260409182902060030180547fffffffffffffffffffffffff0000000000000000000000000000000000000000169486169485179055815133815290810193909352805191927fb79bf2e89c2d70dde91d2991fb1ea69b7e478061ad7c04ed5b02b96bc52b8104929081900390910190a25050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146132a357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000604482015290519081900360640190fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b6000806000806000613362336000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506121d092505050565b6133cd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f4e6f206163636573730000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6133d5614d7e565b945094509450945094509091929394565b73ffffffffffffffffffffffffffffffffffffffff821660009081526008602052604090205460075460609163ffffffff7001000000000000000000000000000000009091048116911681613474576040518060400160405280601281526020017f6e6f7420656e61626c6564206f7261636c650000000000000000000000000000815250925050506121ff565b8363ffffffff168263ffffffff1611156134c7576040518060400160405280601681526020017f6e6f742079657420656e61626c6564206f7261636c6500000000000000000000815250925050506121ff565b73ffffffffffffffffffffffffffffffffffffffff851660009081526008602052604090205463ffffffff80861674010000000000000000000000000000000000000000909204161015613554576040518060400160405280601881526020017f6e6f206c6f6e67657220616c6c6f776564206f7261636c650000000000000000815250925050506121ff565b73ffffffffffffffffffffffffffffffffffffffff851660009081526008602052604090205463ffffffff808616780100000000000000000000000000000000000000000000000090920416106135e4576040518060400160405280602081526020017f63616e6e6f74207265706f7274206f6e2070726576696f757320726f756e6473815250925050506121ff565b8063ffffffff168463ffffffff1614158015613620575061361063ffffffff80831690600190614a0a16565b63ffffffff168463ffffffff1614155b801561363357506136318482614da7565b155b15613677576040518060400160405280601781526020017f696e76616c696420726f756e6420746f207265706f7274000000000000000000815250925050506121ff565b8363ffffffff166001141580156136a857506136a66136a163ffffffff80871690600190614e0d16565b614e8a565b155b156136ec576040518060400160405280601f81526020017f70726576696f757320726f756e64206e6f7420737570657273656461626c6500815250925050506121ff565b505092915050565b6136fd81614eca565b613706576126d4565b3360009081526008602052604090205460045463ffffffff7c01000000000000000000000000000000000000000000000000000000009092048216917801000000000000000000000000000000000000000000000000909104811682019083161180159061377357508015155b1561377e57506126d4565b61378782614efb565b50336000908152600860205260409020805463ffffffff83167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff90911617905550565b6137ee8161518a565b61385957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f726f756e64206e6f7420616363657074696e67207375626d697373696f6e7300604482015290519081900360640190fd5b63ffffffff81166000818152600a602090815260408083208054600180820183559185528385200187905533808552600890935281842080547fffffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffff1678010000000000000000000000000000000000000000000000008702178155018690555190929185917f92e98423f8adac6e64d0608e519fd1cefb861498385c6dee70d58fc926ddc68c9190a45050565b63ffffffff8082166000908152600a60205260408120600181015490549192839264010000000090920416111561394157506000905080613ab0565b63ffffffff83166000908152600a6020908152604080832080548251818502810185019093528083526139a79383018282801561399d57602002820191906000526020600020905b815481526020019060010190808311613989575b50505050506151aa565b63ffffffff851660008181526009602090815260409182902084815560010180547fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff16680100000000000000004267ffffffffffffffff811691909102919091177fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff16700100000000000000000000000000000000860217909155600780547fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff16640100000000860217905582519081529151939450919284927f0559884fd3a460db3073b7fc896cc77986f16e378210ded43186175bf646fc5f928290030190a36001925090505b915091565b63ffffffff81166000908152600a60205260409020600101546c0100000000000000000000000090046fffffffffffffffffffffffffffffffff16613af8615e5a565b5060408051808201909152600d546fffffffffffffffffffffffffffffffff808216808452700100000000000000000000000000000000909204166020830152613b48908363ffffffff61454e16565b6fffffffffffffffffffffffffffffffff90811682526020820151613b7491168363ffffffff61527416565b6fffffffffffffffffffffffffffffffff90811660208084018290528351600d80547001000000000000000000000000000000009094029185167fffffffffffffffffffffffffffffffff000000000000000000000000000000009094169390931784161790915533600090815260089091526040902054613bfd91168363ffffffff61527416565b3360009081526008602052604080822080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff948516179055835190519216917ffe25c73e3b9089fac37d55c4c7efcba6f04af04cebd2fc4d6d7dbb07e1e5234f9190a2505050565b63ffffffff8082166000908152600a602052604090206001810154905491161115613ca2576126d4565b63ffffffff81166000908152600a6020526040812090613cc28282615e71565b5060010180547fffffffff0000000000000000000000000000000000000000000000000000000016905550565b60035473ffffffffffffffffffffffffffffffffffffffff1680613d135750610e22565b6000613d2a63ffffffff80861690600190614e0d16565b63ffffffff80821660009081526009602090815260408083206001810154905482517fbeed9b5100000000000000000000000000000000000000000000000000000000815270010000000000000000000000000000000090920486166004830181905260248301829052958b166044830152606482018a905291519596509394909373ffffffffffffffffffffffffffffffffffffffff88169363beed9b5193620186a093608480850194929391928390030190829088803b158015613def57600080fd5b5087f193505050508015613e1557506040513d6020811015613e1057600080fd5b505160015b613e1e57613e20565b505b505050505050565b60006121ff6002613e4a613e3a611f95565b859060ff1663ffffffff6152fd16565b9063ffffffff6152fd16565b613e5f81615370565b613eca57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6f7261636c65206e6f7420656e61626c65640000000000000000000000000000604482015290519081900360640190fd5b600754613ee39063ffffffff90811690600190614a0a16565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600860205260408120805463ffffffff9390931674010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff90931692909217909155600c613f736001613f64611f95565b60ff169063ffffffff6145e916565b81548110613f7d57fe5b60009182526020808320919091015473ffffffffffffffffffffffffffffffffffffffff85811680855260089093526040808520600290810180549390941680875291862001805461ffff9093167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00009384168117909155939094528154169055600c805492935090918391908390811061401357fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600c80548061406657fe5b60008281526020812082017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590910190915560405173ffffffffffffffffffffffffffffffffffffffff8516907f18dd09695e4fbdae8d1a5edb11221eb04564269c29a089b9753a6535c54ba92e908390a3505050565b6000828201838110156121fc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b61418382615370565b156141ef57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6f7261636c6520616c726561647920656e61626c656400000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff811661427157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f63616e6e6f74207365742061646d696e20746f20300000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600860205260409020600201546201000090041615806142e0575073ffffffffffffffffffffffffffffffffffffffff8281166000908152600860205260409020600201546201000090048116908216145b61434b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6f776e65722063616e6e6f74206f76657277726974652061646d696e00000000604482015290519081900360640190fd5b614354826153b9565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526008602052604080822080547fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff63ffffffff97909716700100000000000000000000000000000000027fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff909116179590951677ffffffff0000000000000000000000000000000000000000178555600c80546002909601805461ffff9097167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000909716969096178655805460018181019092557fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c70180547fffffffffffffffffffffffff00000000000000000000000000000000000000001685179055838352855494871662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909516949094179094559251919290917f18dd09695e4fbdae8d1a5edb11221eb04564269c29a089b9753a6535c54ba92e9190a38073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f0c5055390645c15a4be9a21b3f8d019153dcb4a0c125685da6eb84048e2fe90460405160405180910390a35050565b6000826fffffffffffffffffffffffffffffffff16826fffffffffffffffffffffffffffffffff1611156145e357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828211156145e357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b600754640100000000900463ffffffff1660009081526009602052604090205490565b600754640100000000900463ffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600f602052604081205460ff16806121fc575050600e5460ff161592915050565b600754640100000000900463ffffffff1660009081526009602052604090206001015468010000000000000000900467ffffffffffffffff1690565b63ffffffff811660009081526009602052604081206001015467ffffffffffffffff16156147565761473b8261518a565b801561474f575061474c83836133e6565b51155b90506121ff565b61473b8383615441565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600860205260408120600754815483928392839283928392839283927fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b929091849163ffffffff90811678010000000000000000000000000000000000000000000000009092041614806147ff57506007546147fd9063ffffffff1661518a565b155b6007549091506148149063ffffffff16614e8a565b801561481d5750805b1561487f5760075461483b9063ffffffff90811690600190614a0a16565b63ffffffff81166000908152600960205260409020600454919b506fffffffffffffffffffffffffffffffff909116945092506148788c8b615441565b9a506148db565b60075463ffffffff166000818152600960209081526040808320600a90925290912060010154919b506c010000000000000000000000009091046fffffffffffffffffffffffffffffffff16945092506148d88a61518a565b9a505b6148e58c8b6133e6565b51156148f05760009a505b6001808301548482015463ffffffff808e166000908152600a6020526040902090930154600d548f948f949367ffffffffffffffff169268010000000000000000900416906fffffffffffffffffffffffffffffffff1661494f611f95565b8a8363ffffffff1693509a509a509a509a509a509a509a509a50505050919395975091939597565b63ffffffff8082166000908152600960209081526040808320600190810154600a9093529083200154919267ffffffffffffffff909116916801000000000000000090041681158015906149d1575060008163ffffffff16115b8015614a025750426149f667ffffffffffffffff841663ffffffff808516906154c616565b67ffffffffffffffff16105b949350505050565b600082820163ffffffff80851690821610156121fc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b614a9081614eca565b614a99576126d4565b336000908152600b602052604090205463ffffffff6501000000000082048116916101009004811682019083161180614ad0575080155b614b3b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6d7573742064656c617920726571756573747300000000000000000000000000604482015290519081900360640190fd5b614b4482614efb565b50336000908152600b60205260409020805463ffffffff831665010000000000027fffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffffff90911617905550565b6000806000806000614b9f615e8f565b5063ffffffff80871660009081526009602090815260409182902082516080810184528154815260019091015467ffffffffffffffff808216938301939093526801000000000000000081049092169281019290925270010000000000000000000000000000000090049091166060820181905215801590614c315750614c318769ffffffffffffffffffff16615547565b6040518060400160405280600f81526020017f4e6f20646174612070726573656e74000000000000000000000000000000000081525090614ccd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201818152835160248401528351909283926044909101919085019080838360008315610fbe578181015183820152602001610fa6565b508051602082015160408301516060909301519899919867ffffffffffffffff91821698509216955063ffffffff9091169350915050565b6000614d1082615547565b15614d31575063ffffffff8116600090815260096020526040902054612115565b506000919050565b6000614d4482615547565b15614d31575063ffffffff811660009081526009602052604090206001015468010000000000000000900467ffffffffffffffff16612115565b60008060008060006133d5600760049054906101000a900463ffffffff1663ffffffff16612a05565b60008163ffffffff16614dca60018563ffffffff16614a0a90919063ffffffff16565b63ffffffff161480156121fc57505063ffffffff1660009081526009602052604090206001015468010000000000000000900467ffffffffffffffff1615919050565b60008263ffffffff168263ffffffff1611156145e357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b63ffffffff811660009081526009602052604081206001015468010000000000000000900467ffffffffffffffff161515806121ff57506121ff82614977565b600754600090614ee69063ffffffff90811690600190614a0a16565b63ffffffff168263ffffffff16149050919050565b614f18614f1363ffffffff80841690600190614e0d16565b615551565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000001663ffffffff8316179055614f50615eb6565b5060408051600060a0820181815260c083018452825260045463ffffffff700100000000000000000000000000000000820481166020808601919091527401000000000000000000000000000000000000000083048216858701527c01000000000000000000000000000000000000000000000000000000008304821660608601526fffffffffffffffffffffffffffffffff909216608085015285168252600a8152929020815180519293849361500b9284920190615ee4565b506020828101516001928301805460408087015160608801516080909801517fffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000090931663ffffffff958616177fffffffffffffffffffffffffffffffffffffffffffffffff00000000ffffffff1664010000000091861691909102177fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff166801000000000000000097851697909702969096177fffffffff00000000000000000000000000000000ffffffffffffffffffffffff166c010000000000000000000000006fffffffffffffffffffffffffffffffff90921691909102179055851660008181526009835284902090920180547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000164267ffffffffffffffff9081169190911791829055845191168152925133937f0109fc6f55cf40689f02fbaad7af7fe7bbac8a3d2186600afc7d3e10cac6027192908290030190a35050565b63ffffffff9081166000908152600a602052604090206001015416151590565b6000815160001061521c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6c697374206d757374206e6f7420626520656d70747900000000000000000000604482015290519081900360640190fd5b8151600281046001821661525b5760008061524186600060018703600187038761566a565b90925090506152508282615748565b945050505050612115565b61526b84600060018503846157b6565b92505050612115565b60008282016fffffffffffffffffffffffffffffffff80851690821610156121fc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60008261530c575060006121ff565b8282028284828161531957fe5b04146121fc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180615f6b6021913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081526008602052604090205463ffffffff7401000000000000000000000000000000000000000090910481161490565b60075460009063ffffffff168015801590615419575073ffffffffffffffffffffffffffffffffffffffff831660009081526008602052604090205463ffffffff8281167401000000000000000000000000000000000000000090920416145b15615425579050612115565b61543a63ffffffff80831690600190614a0a16565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526008602052604081205460045463ffffffff7c01000000000000000000000000000000000000000000000000000000009092048216917801000000000000000000000000000000000000000000000000909104811682019084161180614a025750159392505050565b600082820167ffffffffffffffff80851690821610156121fc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b63ffffffff101590565b61555a81614977565b615563576126d4565b600061557a63ffffffff80841690600190614e0d16565b63ffffffff818116600090815260096020908152604080832080548886168552828520908155600191820154910180547fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff1670010000000000000000000000000000000092839004909616909102949094177fffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffff16680100000000000000004267ffffffffffffffff160217909355600a905290812091925061563c8282615e71565b5060010180547fffffffff000000000000000000000000000000000000000000000000000000001690555050565b60008082841061567957600080fd5b8386111580156156895750848411155b61569257600080fd5b8286111580156156a25750848311155b6156ab57600080fd5b600786860310156156cc576156c38787878787615847565b9150915061573e565b60006156d9888888615cfe565b90508084116156ea57809550615738565b848110156156fd57806001019650615738565b80851115801561570c57508381105b61571257fe5b61571e888883886157b6565b925061572f888260010188876157b6565b915061573e9050565b506156ab565b9550959350505050565b600080831280156157595750600082135b8061576f575060008313801561576f5750600082125b1561578f5760026157808484615ddb565b8161578757fe5b0590506121ff565b6000600280850781850701059050614a026157b06002860560028605615ddb565b82615ddb565b6000818411156157c557600080fd5b828211156157d257600080fd5b8284101561582957600784840310156157fe5760006157f48686868687615847565b509150614a029050565b600061580b868686615cfe565b905080831161581c57809350615823565b8060010194505b506157d2565b84848151811061583557fe5b60200260200101519050949350505050565b60008060008686600101039050600088886000018151811061586557fe5b6020026020010151905060008260011061589f577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6158b7565b8989600101815181106158ae57fe5b60200260200101515b90506000836002106158e9577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff615901565b8a8a600201815181106158f857fe5b60200260200101515b9050600084600310615933577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61594b565b8b8b6003018151811061594257fe5b60200260200101515b905060008560041061597d577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff615995565b8c8c6004018151811061598c57fe5b60200260200101515b90506000866005106159c7577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6159df565b8d8d600501815181106159d657fe5b60200260200101515b9050600087600610615a11577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff615a29565b8e8e60060181518110615a2057fe5b60200260200101515b905085871315615a37579495945b83851315615a43579293925b81831315615a4f579091905b84871315615a5b579395935b83861315615a67579294925b80831315615a7157915b84861315615a7d579394935b80821315615a8757905b82871315615a93579195915b81861315615a9f579094905b80851315615aa957935b82861315615ab5579194915b80841315615abf57925b82851315615acb579193915b81841315615ad7579092905b82841315615ae3579192915b8d8c0380615af357879a50615bc0565b8060011415615b0457869a50615bc0565b8060021415615b1557859a50615bc0565b8060031415615b2657849a50615bc0565b8060041415615b3757839a50615bc0565b8060051415615b4857829a50615bc0565b8060061415615b5957819a50615bc0565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6b31206f7574206f6620626f756e647300000000000000000000000000000000604482015290519081900360640190fd5b8e8c038d8d1415615bde57508a995061573e98505050505050505050565b80615bf5575096985061573e975050505050505050565b8060011415615c10575095985061573e975050505050505050565b8060021415615c2b575094985061573e975050505050505050565b8060031415615c46575093985061573e975050505050505050565b8060041415615c61575092985061573e975050505050505050565b8060051415615c7c575091985061573e975050505050505050565b8060061415615c97575090985061573e975050505050505050565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6b32206f7574206f6620626f756e647300000000000000000000000000000000604482015290519081900360640190fd5b6000808460028585010481518110615d1257fe5b602002602001015190506001840393506001830192505b60018401935080858581518110615d3c57fe5b602002602001015112615d29575b60018303925080858481518110615d5d57fe5b602002602001015113615d4a5782841015615dcd57848381518110615d7e57fe5b6020026020010151858581518110615d9257fe5b6020026020010151868681518110615da657fe5b60200260200101878681518110615db957fe5b602090810291909101019190915252615dd6565b8291505061543a565b615d29565b6000828201818312801590615df05750838112155b80615e055750600083128015615e0557508381125b6121fc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180615f4a6021913960400191505060405180910390fd5b604080518082019091526000808252602082015290565b50805460008255906000526020600020908101906126d49190615f2f565b60408051608081018252600080825260208201819052918101829052606081019190915290565b6040805160a08101825260608082526000602083018190529282018390528101829052608081019190915290565b828054828255906000526020600020908101928215615f1f579160200282015b82811115615f1f578251825591602001919060010190615f04565b50615f2b929150615f2f565b5090565b611d0191905b80821115615f2b5760008155600101615f3556fe5369676e6564536166654d6174683a206164646974696f6e206f766572666c6f77536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a264697066735822122020d4bf789bd312bd203e0e444967210ae1485c8098b6ee88b9a4145fee7d072c64736f6c63430006060033",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x315 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70DEA79A GT PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xA4C0ED36 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0xD4CC54E4 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE9EE6EEB GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE9EE6EEB EQ PUSH2 0xBAA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xBE5 JUMPI DUP1 PUSH4 0xFEAF968C EQ PUSH2 0xC18 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0xD4CC54E4 EQ PUSH2 0xB67 JUMPI DUP1 PUSH4 0xDC7F0124 EQ PUSH2 0xB6F JUMPI DUP1 PUSH4 0xE2E40317 EQ PUSH2 0xB77 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0xC1075329 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0xC1075329 EQ PUSH2 0xB1E JUMPI DUP1 PUSH4 0xC35905C6 EQ PUSH2 0xB57 JUMPI DUP1 PUSH4 0xC9374500 EQ PUSH2 0xB5F JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0xA52 JUMPI DUP1 PUSH4 0xB5AB58DC EQ PUSH2 0xAE4 JUMPI DUP1 PUSH4 0xB633620C EQ PUSH2 0xB01 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x8823DA6C GT PUSH2 0x150 JUMPI DUP1 PUSH4 0x98E5B12A GT PUSH2 0x12A JUMPI DUP1 PUSH4 0x98E5B12A EQ PUSH2 0x990 JUMPI DUP1 PUSH4 0x9A6FC8F5 EQ PUSH2 0x9B7 JUMPI DUP1 PUSH4 0xA118F249 EQ PUSH2 0xA1F JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x8823DA6C EQ PUSH2 0x8AC JUMPI DUP1 PUSH4 0x88AA80E7 EQ PUSH2 0x8DF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x988 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x7C2B0B21 GT PUSH2 0x181 JUMPI DUP1 PUSH4 0x7C2B0B21 EQ PUSH2 0x894 JUMPI DUP1 PUSH4 0x8038E4A1 EQ PUSH2 0x89C JUMPI DUP1 PUSH4 0x8205BF6A EQ PUSH2 0x8A4 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x70DEA79A EQ PUSH2 0x807 JUMPI DUP1 PUSH4 0x7284E416 EQ PUSH2 0x80F JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x88C JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x40884C52 GT PUSH2 0x26B JUMPI DUP1 PUSH4 0x58609E44 GT PUSH2 0x214 JUMPI DUP1 PUSH4 0x64EFB22B GT PUSH2 0x1EE JUMPI DUP1 PUSH4 0x64EFB22B EQ PUSH2 0x6F5 JUMPI DUP1 PUSH4 0x668A0F02 EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0x6B14DAF8 EQ PUSH2 0x730 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x58609E44 EQ PUSH2 0x6B2 JUMPI DUP1 PUSH4 0x613D8FCC EQ PUSH2 0x6BA JUMPI DUP1 PUSH4 0x628806EF EQ PUSH2 0x6C2 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x50D25BCD GT PUSH2 0x245 JUMPI DUP1 PUSH4 0x50D25BCD EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0x57970E93 EQ PUSH2 0x6AA JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x40884C52 EQ PUSH2 0x60D JUMPI DUP1 PUSH4 0x46FCFF4C EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0x4F8FC3B5 EQ PUSH2 0x692 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x2CD JUMPI DUP1 PUSH4 0x3969C20F GT PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x3969C20F EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x3A5381B5 EQ PUSH2 0x599 JUMPI DUP1 PUSH4 0x3D3D7714 EQ PUSH2 0x5CA JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x357EBB02 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x38AA4C72 EQ PUSH2 0x41A JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0x202EE0ED GT PUSH2 0x2FE JUMPI DUP1 PUSH4 0x202EE0ED EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0x20ED0275 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x23CA2903 EQ PUSH2 0x3C1 JUMPI PUSH2 0x315 JUMP JUMPDEST DUP1 PUSH4 0xA756983 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x1327D3D8 EQ PUSH2 0x324 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x322 PUSH2 0xC20 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE26 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x390 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x1236 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH4 0xFFFFFFFF PUSH1 0x20 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x60 DUP3 ADD CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x80 ADD CALLDATALOAD AND PUSH2 0x128B JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP PUSH4 0xFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x171F JUMP JUMPDEST PUSH2 0x5A1 PUSH2 0x19A7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x19C3 JUMP JUMPDEST PUSH2 0x615 PUSH2 0x1C94 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x651 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x639 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66D PUSH2 0x1D04 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x5A1 PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0x401 PUSH2 0x1F75 JUMP JUMPDEST PUSH2 0x3E3 PUSH2 0x1F95 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F9B JUMP JUMPDEST PUSH2 0x5A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20E3 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x211A JUMP JUMPDEST PUSH2 0x7F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x7B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x21D0 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x401 PUSH2 0x2205 JUMP JUMPDEST PUSH2 0x817 PUSH2 0x2231 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x851 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x839 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x87E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH2 0x22DD JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x23DF JUMP JUMPDEST PUSH2 0x322 PUSH2 0x2403 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x24E9 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x259F JUMP JUMPDEST PUSH2 0x91E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH4 0xFFFFFFFF AND PUSH2 0x26D7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 ISZERO ISZERO DUP10 MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP8 AND PUSH1 0x20 DUP10 ADD MSTORE DUP8 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x60 DUP9 ADD MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x80 DUP7 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xFF AND PUSH1 0xC0 DUP6 ADD MSTORE AND PUSH1 0xE0 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x100 ADD SWAP1 RETURN JUMPDEST PUSH2 0x5A1 PUSH2 0x2890 JUMP JUMPDEST PUSH2 0x998 PUSH2 0x28AC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x9E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE DUP5 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP3 AND PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2AD4 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xA68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xAA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xAB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xAD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2C0D JUMP JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2C88 JUMP JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x2D3F JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x2DF6 JUMP JUMPDEST PUSH2 0x66D PUSH2 0x303C JUMP JUMPDEST PUSH2 0x401 PUSH2 0x3054 JUMP JUMPDEST PUSH2 0x66D PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x7F3 PUSH2 0x30A4 JUMP JUMPDEST PUSH2 0x3C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30AD JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xBC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x30E7 JUMP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x321D JUMP JUMPDEST PUSH2 0x9E0 PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xCA6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD03 JUMPI PUSH1 0xE DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x3BE8A977A014527B50AE38ADDA80B56911C267328965C98DDC385D248F539638 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xD8B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 EQ PUSH2 0xE22 JUMPI PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP4 AND SWAP1 PUSH32 0xCFAC5DC75B8D9A7E074162F59D9ADCD33DA59F0FE8DFB21580DB298FC0FDAD0D SWAP1 PUSH1 0x0 SWAP1 LOG3 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xE32 CALLER DUP5 PUSH2 0x33E6 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 DUP3 SLT ISZERO PUSH2 0xEC3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x76616C75652062656C6F77206D696E5375626D697373696F6E56616C75650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP3 SGT ISZERO PUSH2 0xF52 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x76616C75652061626F7665206D61785375626D697373696F6E56616C75650000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 SWAP1 ISZERO PUSH2 0xFF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFBE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xFEB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH2 0x1003 DUP4 PUSH2 0x36F4 JUMP JUMPDEST PUSH2 0x100D DUP3 DUP5 PUSH2 0x37E5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1019 DUP6 PUSH2 0x3905 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1026 DUP6 PUSH2 0x3AB5 JUMP JUMPDEST PUSH2 0x102F DUP6 PUSH2 0x3C78 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x103F JUMPI PUSH2 0x103F DUP6 DUP3 PUSH2 0x3CEF JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x10CC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO DUP3 ISZERO ISZERO EQ ISZERO PUSH2 0x1105 JUMPI PUSH2 0x1231 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x118D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP4 ISZERO ISZERO OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FF AND PUSH2 0x100 PUSH4 0xFFFFFFFF DUP5 AND MUL OR SWAP1 SSTORE PUSH2 0x11D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 ISZERO ISZERO DUP2 MSTORE PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP3 PUSH32 0xC3DF5A754E002718F2E10804B99E6605E7C701D95CEC9552C7680CA2B6F2820A SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x1311 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x131B PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x139B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D6178206D75737420657175616C2F657863656564206D696E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1416 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61782063616E6E6F742065786365656420746F74616C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND ISZERO DUP1 PUSH2 0x1434 JUMPI POP DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND GT JUMPDEST PUSH2 0x149F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x64656C61792063616E6E6F742065786365656420746F74616C00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x14BA DUP7 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E28 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x153C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E742066756E647320666F72207061796D656E740000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1546 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0xFF AND GT ISZERO PUSH2 0x15C4 JUMPI PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND GT PUSH2 0x15C4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D696E206D7573742062652067726561746572207468616E2030000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x4 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x4 PUSH1 0x18 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x56800C9D1ED723511246614D15E58CFCDE15B6A33C245B5C961B689C1890FD8F DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x17A5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x17E9 JUMPI PUSH2 0x17E1 DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x17BF JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x17A8 JUMP JUMPDEST POP DUP6 DUP5 EQ PUSH2 0x1858 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6565642073616D65206F7261636C6520616E642061646D696E20636F756E74 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4D PUSH2 0x1875 DUP8 PUSH2 0x1866 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x4106 AND JUMP JUMPDEST GT ISZERO PUSH2 0x18E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D6178206F7261636C657320616C6C6F77656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x194F JUMPI PUSH2 0x1947 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x18FC JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x1925 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x417A JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x18E5 JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x199C SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x128B JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0x1A61 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792063616C6C61626C652062792061646D696E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP3 AND DUP2 LT ISZERO PUSH2 0x1B0E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E7420776974686472617761626C652066756E647300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1B30 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x454E AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0xD SLOAD PUSH2 0x1BB3 SWAP2 PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV AND DUP4 PUSH2 0x454E JUMP JUMPDEST PUSH1 0xD DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH17 0x100000000000000000000000000000000 MUL SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP4 DUP7 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD SWAP3 SWAP1 SWAP2 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x103F JUMPI INVALID JUMPDEST PUSH1 0x60 PUSH1 0xC DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1CF9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CCE JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1D24 PUSH2 0x5E5A JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP4 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV AND PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x2 SLOAD DUP5 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP5 MLOAD SWAP4 SWAP5 PUSH1 0x0 SWAP5 PUSH2 0x1E11 SWAP5 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1E03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x45E9 AND JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 EQ PUSH2 0xE22 JUMPI PUSH1 0xD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xFE25C73E3B9089FAC37D55C4C7EFCBA6F04AF04CEBD2FC4D6D7DBB07E1E5234F SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EDC CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1F47 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1F4F PUSH2 0x465A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD AND CALLER EQ PUSH2 0x2033 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792063616C6C61626C652062792070656E64696E672061646D696E0000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE PUSH1 0x2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF AND CALLER PUSH3 0x10000 DUP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 SWAP3 SWAP2 PUSH32 0xC5055390645C15A4BE9A21B3F8D019153DCB4A0C125685DA6EB84048E2FE904 SWAP2 LOG3 POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215D CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x21C8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1F4F PUSH2 0x467D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DC DUP4 DUP4 PUSH2 0x4691 JUMP JUMPDEST DUP1 PUSH2 0x21FC JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ORIGIN EQ JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x22D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x22AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x22D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x22B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2363 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP1 DUP4 AND DUP3 OR DUP5 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2489 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND PUSH2 0xD03 JUMPI PUSH1 0xE DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xAEBF329500988C6488A0074E5A0A9FF304561FC5C6FC877AEB1D59C8282C3480 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x252C CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2597 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1F4F PUSH2 0x46CE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2625 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x26D4 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0x3D68A6FCE901D20453D1A7AA06BF3950302A735948037DEB182A8DB66DF2A0D1 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 CALLER ORIGIN EQ PUSH2 0x274E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F66662D636861696E2072656164696E67206F6E6C7900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP10 AND ISZERO PUSH2 0x2869 JUMPI PUSH4 0xFFFFFFFF DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH2 0x2784 DUP13 DUP13 PUSH2 0x470A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP5 DUP3 ADD SLOAD SWAP2 DUP5 ADD SLOAD PUSH1 0xD SLOAD DUP16 SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 PUSH9 0x10000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x27F4 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0x1 DUP10 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x2821 JUMPI PUSH1 0x4 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2849 JUMP JUMPDEST PUSH1 0x1 DUP9 ADD SLOAD PUSH13 0x1000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND SWAP4 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP POP POP PUSH2 0x2883 JUMP JUMPDEST PUSH2 0x2872 DUP11 PUSH2 0x4760 JUMP JUMPDEST SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP JUMPDEST SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x292A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6F7420617574686F72697A6564207265717565737465720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ISZERO ISZERO DUP1 PUSH2 0x296C JUMPI POP PUSH2 0x296C DUP2 PUSH2 0x4977 JUMP JUMPDEST PUSH2 0x29D7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7072657620726F756E64206D75737420626520737570657273656461626C6500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x29EE PUSH4 0xFFFFFFFF DUP1 DUP5 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4A0A AND JUMP JUMPDEST SWAP1 POP PUSH2 0x29F9 DUP2 PUSH2 0x4A87 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2A4E CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2AB9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2AC2 DUP7 PUSH2 0x4B8F JUMP JUMPDEST SWAP4 SWAP11 SWAP3 SWAP10 POP SWAP1 SWAP8 POP SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2B5A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x26D4 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0x87286AD1F399C8E82BF0C4EF4FCDC570EA2E1E92176E5C848B6413545B885DB4 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C7A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7472616E7366657220646F65736E2774206163636570742063616C6C64617461 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2C82 PUSH2 0x1D1C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CCB CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2D36 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x21FF DUP3 PUSH2 0x4D05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D82 CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2DED JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x21FF DUP3 PUSH2 0x4D39 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x2E7C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0xD SLOAD PUSH1 0x4 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND SWAP2 DUP4 SWAP2 PUSH2 0x2EB4 SWAP2 PUSH2 0x2EA7 SWAP2 AND PUSH2 0x3E28 JUMP JUMPDEST DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x45E9 AND JUMP JUMPDEST LT ISZERO PUSH2 0x2F21 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E73756666696369656E7420726573657276652066756E6473000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2FB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2FC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x3034 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1231 PUSH2 0x1D1C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND CALLER EQ PUSH2 0x3185 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C792063616C6C61626C652062792061646D696E00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP5 DUP7 AND SWAP5 DUP6 OR SWAP1 SSTORE DUP2 MLOAD CALLER DUP2 MSTORE SWAP1 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP1 MLOAD SWAP2 SWAP3 PUSH32 0xB79BF2E89C2D70DDE91D2991FB1EA69B7E478061AD7C04ED5B02B96BC52B8104 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x32A3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP3 SWAP4 AND SWAP2 PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 SWAP2 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x3362 CALLER PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x21D0 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x33CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206163636573730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x33D5 PUSH2 0x4D7E JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x7 SLOAD PUSH1 0x60 SWAP2 PUSH4 0xFFFFFFFF PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP2 DIV DUP2 AND SWAP2 AND DUP2 PUSH2 0x3474 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E6F7420656E61626C6564206F7261636C650000000000000000000000000000 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x21FF JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x34C7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E6F742079657420656E61626C6564206F7261636C6500000000000000000000 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x21FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP7 AND PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND LT ISZERO PUSH2 0x3554 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6E6F206C6F6E67657220616C6C6F776564206F7261636C650000000000000000 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x21FF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP7 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND LT PUSH2 0x35E4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x63616E6E6F74207265706F7274206F6E2070726576696F757320726F756E6473 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x21FF JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x3620 JUMPI POP PUSH2 0x3610 PUSH4 0xFFFFFFFF DUP1 DUP4 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4A0A AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x3633 JUMPI POP PUSH2 0x3631 DUP5 DUP3 PUSH2 0x4DA7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x3677 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x17 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x696E76616C696420726F756E6420746F207265706F7274000000000000000000 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x21FF JUMP JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0x1 EQ ISZERO DUP1 ISZERO PUSH2 0x36A8 JUMPI POP PUSH2 0x36A6 PUSH2 0x36A1 PUSH4 0xFFFFFFFF DUP1 DUP8 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4E0D AND JUMP JUMPDEST PUSH2 0x4E8A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x36EC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x70726576696F757320726F756E64206E6F7420737570657273656461626C6500 DUP2 MSTORE POP SWAP3 POP POP POP PUSH2 0x21FF JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x36FD DUP2 PUSH2 0x4ECA JUMP JUMPDEST PUSH2 0x3706 JUMPI PUSH2 0x26D4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x4 SLOAD PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV DUP3 AND SWAP2 PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP2 DIV DUP2 AND DUP3 ADD SWAP1 DUP4 AND GT DUP1 ISZERO SWAP1 PUSH2 0x3773 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x377E JUMPI POP PUSH2 0x26D4 JUMP JUMPDEST PUSH2 0x3787 DUP3 PUSH2 0x4EFB JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP4 AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x37EE DUP2 PUSH2 0x518A JUMP JUMPDEST PUSH2 0x3859 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726F756E64206E6F7420616363657074696E67207375626D697373696F6E7300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE SWAP2 DUP6 MSTORE DUP4 DUP6 KECCAK256 ADD DUP8 SWAP1 SSTORE CALLER DUP1 DUP6 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE DUP2 DUP5 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH25 0x1000000000000000000000000000000000000000000000000 DUP8 MUL OR DUP2 SSTORE ADD DUP7 SWAP1 SSTORE MLOAD SWAP1 SWAP3 SWAP2 DUP6 SWAP2 PUSH32 0x92E98423F8ADAC6E64D0608E519FD1CEFB861498385C6DEE70D58FC926DDC68C SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH5 0x100000000 SWAP1 SWAP3 DIV AND GT ISZERO PUSH2 0x3941 JUMPI POP PUSH1 0x0 SWAP1 POP DUP1 PUSH2 0x3AB0 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH2 0x39A7 SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x399D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x3989 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x51AA JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 DUP2 SSTORE PUSH1 0x1 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 DUP7 MUL OR SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF AND PUSH5 0x100000000 DUP7 MUL OR SWAP1 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 POP SWAP2 SWAP3 DUP5 SWAP3 PUSH32 0x559884FD3A460DB3073B7FC896CC77986F16E378210DED43186175BF646FC5F SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 PUSH1 0x1 SWAP3 POP SWAP1 POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH13 0x1000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AF8 PUSH2 0x5E5A JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xD SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 DUP5 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP3 DIV AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3B48 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x454E AND JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3B74 SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x5274 AND JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD PUSH1 0xD DUP1 SLOAD PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP5 MUL SWAP2 DUP6 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR DUP5 AND OR SWAP1 SWAP2 SSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3BFD SWAP2 AND DUP4 PUSH4 0xFFFFFFFF PUSH2 0x5274 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 AND PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND OR SWAP1 SSTORE DUP4 MLOAD SWAP1 MLOAD SWAP3 AND SWAP2 PUSH32 0xFE25C73E3B9089FAC37D55C4C7EFCBA6F04AF04CEBD2FC4D6D7DBB07E1E5234F SWAP2 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SLOAD SWAP2 AND GT ISZERO PUSH2 0x3CA2 JUMPI PUSH2 0x26D4 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3CC2 DUP3 DUP3 PUSH2 0x5E71 JUMP JUMPDEST POP PUSH1 0x1 ADD DUP1 SLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH2 0x3D13 JUMPI POP PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D2A PUSH4 0xFFFFFFFF DUP1 DUP7 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4E0D AND JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SLOAD DUP3 MLOAD PUSH32 0xBEED9B5100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP3 DIV DUP7 AND PUSH1 0x4 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP4 ADD DUP3 SWAP1 MSTORE SWAP6 DUP12 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP11 SWAP1 MSTORE SWAP2 MLOAD SWAP6 SWAP7 POP SWAP4 SWAP5 SWAP1 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP4 PUSH4 0xBEED9B51 SWAP4 PUSH3 0x186A0 SWAP4 PUSH1 0x84 DUP1 DUP6 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP8 CALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x3E15 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 JUMPDEST PUSH2 0x3E1E JUMPI PUSH2 0x3E20 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21FF PUSH1 0x2 PUSH2 0x3E4A PUSH2 0x3E3A PUSH2 0x1F95 JUMP JUMPDEST DUP6 SWAP1 PUSH1 0xFF AND PUSH4 0xFFFFFFFF PUSH2 0x52FD AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x52FD AND JUMP JUMPDEST PUSH2 0x3E5F DUP2 PUSH2 0x5370 JUMP JUMPDEST PUSH2 0x3ECA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F7261636C65206E6F7420656E61626C65640000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x3EE3 SWAP1 PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4A0A AND JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF SWAP4 SWAP1 SWAP4 AND PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xC PUSH2 0x3F73 PUSH1 0x1 PUSH2 0x3F64 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x45E9 AND JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3F7D JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 DUP2 AND DUP1 DUP6 MSTORE PUSH1 0x8 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x2 SWAP1 DUP2 ADD DUP1 SLOAD SWAP4 SWAP1 SWAP5 AND DUP1 DUP8 MSTORE SWAP2 DUP7 KECCAK256 ADD DUP1 SLOAD PUSH2 0xFFFF SWAP1 SWAP4 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 SWAP4 DUP5 AND DUP2 OR SWAP1 SWAP2 SSTORE SWAP4 SWAP1 SWAP5 MSTORE DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 DUP4 SWAP2 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x4013 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC DUP1 SLOAD DUP1 PUSH2 0x4066 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE SWAP1 SWAP2 ADD SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH32 0x18DD09695E4FBDAE8D1A5EDB11221EB04564269C29A089B9753A6535C54BA92E SWAP1 DUP4 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x21FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4183 DUP3 PUSH2 0x5370 JUMP JUMPDEST ISZERO PUSH2 0x41EF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F7261636C6520616C726561647920656E61626C656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x4271 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F74207365742061646D696E20746F20300000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x10000 SWAP1 DIV AND ISZERO DUP1 PUSH2 0x42E0 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH3 0x10000 SWAP1 DIV DUP2 AND SWAP1 DUP3 AND EQ JUMPDEST PUSH2 0x434B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65722063616E6E6F74206F76657277726974652061646D696E00000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4354 DUP3 PUSH2 0x53B9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH4 0xFFFFFFFF SWAP8 SWAP1 SWAP8 AND PUSH17 0x100000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR SWAP6 SWAP1 SWAP6 AND PUSH24 0xFFFFFFFF0000000000000000000000000000000000000000 OR DUP6 SSTORE PUSH1 0xC DUP1 SLOAD PUSH1 0x2 SWAP1 SWAP7 ADD DUP1 SLOAD PUSH2 0xFFFF SWAP1 SWAP8 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP7 OR DUP7 SSTORE DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP6 OR SWAP1 SSTORE DUP4 DUP4 MSTORE DUP6 SLOAD SWAP5 DUP8 AND PUSH3 0x10000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH32 0x18DD09695E4FBDAE8D1A5EDB11221EB04564269C29A089B9753A6535C54BA92E SWAP2 SWAP1 LOG3 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC5055390645C15A4BE9A21B3F8D019153DCB4A0C125685DA6EB84048E2FE904 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x45E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x45E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x21FC JUMPI POP POP PUSH1 0xE SLOAD PUSH1 0xFF AND ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x4756 JUMPI PUSH2 0x473B DUP3 PUSH2 0x518A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474F JUMPI POP PUSH2 0x474C DUP4 DUP4 PUSH2 0x33E6 JUMP JUMPDEST MLOAD ISZERO JUMPDEST SWAP1 POP PUSH2 0x21FF JUMP JUMPDEST PUSH2 0x473B DUP4 DUP4 PUSH2 0x5441 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x7 SLOAD DUP2 SLOAD DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH32 0xEC8156718A8372B1DB44BB411437D0870F3E3790D4A08526D024CE1B0B668F6B SWAP3 SWAP1 SWAP2 DUP5 SWAP2 PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ DUP1 PUSH2 0x47FF JUMPI POP PUSH1 0x7 SLOAD PUSH2 0x47FD SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x518A JUMP JUMPDEST ISZERO JUMPDEST PUSH1 0x7 SLOAD SWAP1 SWAP2 POP PUSH2 0x4814 SWAP1 PUSH4 0xFFFFFFFF AND PUSH2 0x4E8A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x481D JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x487F JUMPI PUSH1 0x7 SLOAD PUSH2 0x483B SWAP1 PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4A0A AND JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 SLOAD SWAP2 SWAP12 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP5 POP SWAP3 POP PUSH2 0x4878 DUP13 DUP12 PUSH2 0x5441 JUMP JUMPDEST SWAP11 POP PUSH2 0x48DB JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 SWAP12 POP PUSH13 0x1000000000000000000000000 SWAP1 SWAP2 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP SWAP3 POP PUSH2 0x48D8 DUP11 PUSH2 0x518A JUMP JUMPDEST SWAP11 POP JUMPDEST PUSH2 0x48E5 DUP13 DUP12 PUSH2 0x33E6 JUMP JUMPDEST MLOAD ISZERO PUSH2 0x48F0 JUMPI PUSH1 0x0 SWAP11 POP JUMPDEST PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP5 DUP3 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP15 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 SWAP4 ADD SLOAD PUSH1 0xD SLOAD DUP16 SWAP5 DUP16 SWAP5 SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP3 PUSH9 0x10000000000000000 SWAP1 DIV AND SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x494F PUSH2 0x1F95 JUMP JUMPDEST DUP11 DUP4 PUSH4 0xFFFFFFFF AND SWAP4 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP SWAP11 POP POP POP POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SLOAD PUSH1 0xA SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 ADD SLOAD SWAP2 SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 PUSH9 0x10000000000000000 SWAP1 DIV AND DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x49D1 JUMPI POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND GT JUMPDEST DUP1 ISZERO PUSH2 0x4A02 JUMPI POP TIMESTAMP PUSH2 0x49F6 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 AND PUSH4 0xFFFFFFFF DUP1 DUP6 AND SWAP1 PUSH2 0x54C6 AND JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF AND LT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH4 0xFFFFFFFF DUP1 DUP6 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x21FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4A90 DUP2 PUSH2 0x4ECA JUMP JUMPDEST PUSH2 0x4A99 JUMPI PUSH2 0x26D4 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF PUSH6 0x10000000000 DUP3 DIV DUP2 AND SWAP2 PUSH2 0x100 SWAP1 DIV DUP2 AND DUP3 ADD SWAP1 DUP4 AND GT DUP1 PUSH2 0x4AD0 JUMPI POP DUP1 ISZERO JUMPDEST PUSH2 0x4B3B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D7573742064656C617920726571756573747300000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x4B44 DUP3 PUSH2 0x4EFB JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP4 AND PUSH6 0x10000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFF SWAP1 SWAP2 AND OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4B9F PUSH2 0x5E8F JUMP JUMPDEST POP PUSH4 0xFFFFFFFF DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH9 0x10000000000000000 DUP2 DIV SWAP1 SWAP3 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 DIV SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE ISZERO DUP1 ISZERO SWAP1 PUSH2 0x4C31 JUMPI POP PUSH2 0x4C31 DUP8 PUSH10 0xFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5547 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6F20646174612070726573656E740000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 PUSH2 0x4CCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0xFBE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFA6 JUMP JUMPDEST POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP9 SWAP10 SWAP2 SWAP9 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 AND SWAP9 POP SWAP3 AND SWAP6 POP PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D10 DUP3 PUSH2 0x5547 JUMP JUMPDEST ISZERO PUSH2 0x4D31 JUMPI POP PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2115 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D44 DUP3 PUSH2 0x5547 JUMP JUMPDEST ISZERO PUSH2 0x4D31 JUMPI POP PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x33D5 PUSH1 0x7 PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH2 0x2A05 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND PUSH2 0x4DCA PUSH1 0x1 DUP6 PUSH4 0xFFFFFFFF AND PUSH2 0x4A0A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x21FC JUMPI POP POP PUSH4 0xFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ISZERO SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x45E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ISZERO ISZERO DUP1 PUSH2 0x21FF JUMPI POP PUSH2 0x21FF DUP3 PUSH2 0x4977 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x4EE6 SWAP1 PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4A0A AND JUMP JUMPDEST PUSH4 0xFFFFFFFF AND DUP3 PUSH4 0xFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F18 PUSH2 0x4F13 PUSH4 0xFFFFFFFF DUP1 DUP5 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4E0D AND JUMP JUMPDEST PUSH2 0x5551 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 AND PUSH4 0xFFFFFFFF DUP4 AND OR SWAP1 SSTORE PUSH2 0x4F50 PUSH2 0x5EB6 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0xC0 DUP4 ADD DUP5 MSTORE DUP3 MSTORE PUSH1 0x4 SLOAD PUSH4 0xFFFFFFFF PUSH17 0x100000000000000000000000000000000 DUP3 DIV DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH21 0x10000000000000000000000000000000000000000 DUP4 DIV DUP3 AND DUP6 DUP8 ADD MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP4 DIV DUP3 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x80 DUP6 ADD MSTORE DUP6 AND DUP3 MSTORE PUSH1 0xA DUP2 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 DUP5 SWAP4 PUSH2 0x500B SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x5EE4 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x80 SWAP1 SWAP9 ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000 SWAP1 SWAP4 AND PUSH4 0xFFFFFFFF SWAP6 DUP7 AND OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFF AND PUSH5 0x100000000 SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 SWAP8 DUP6 AND SWAP8 SWAP1 SWAP8 MUL SWAP7 SWAP1 SWAP7 OR PUSH32 0xFFFFFFFF00000000000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 MUL OR SWAP1 SSTORE DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 DUP4 MSTORE DUP5 SWAP1 KECCAK256 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE DUP5 MLOAD SWAP2 AND DUP2 MSTORE SWAP3 MLOAD CALLER SWAP4 PUSH32 0x109FC6F55CF40689F02FBAAD7AF7FE7BBAC8A3D2186600AFC7D3E10CAC60271 SWAP3 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 LT PUSH2 0x521C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C697374206D757374206E6F7420626520656D70747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND PUSH2 0x525B JUMPI PUSH1 0x0 DUP1 PUSH2 0x5241 DUP7 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH1 0x1 DUP8 SUB DUP8 PUSH2 0x566A JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x5250 DUP3 DUP3 PUSH2 0x5748 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x526B DUP5 PUSH1 0x0 PUSH1 0x1 DUP6 SUB DUP5 PUSH2 0x57B6 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x21FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x530C JUMPI POP PUSH1 0x0 PUSH2 0x21FF JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x5319 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x21FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5F6B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP2 DIV DUP2 AND EQ SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH4 0xFFFFFFFF AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x5419 JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH4 0xFFFFFFFF DUP3 DUP2 AND PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP3 DIV AND EQ JUMPDEST ISZERO PUSH2 0x5425 JUMPI SWAP1 POP PUSH2 0x2115 JUMP JUMPDEST PUSH2 0x543A PUSH4 0xFFFFFFFF DUP1 DUP4 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4A0A AND JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x4 SLOAD PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 DIV DUP3 AND SWAP2 PUSH25 0x1000000000000000000000000000000000000000000000000 SWAP1 SWAP2 DIV DUP2 AND DUP3 ADD SWAP1 DUP5 AND GT DUP1 PUSH2 0x4A02 JUMPI POP ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP6 AND SWAP1 DUP3 AND LT ISZERO PUSH2 0x21FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH4 0xFFFFFFFF LT ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x555A DUP2 PUSH2 0x4977 JUMP JUMPDEST PUSH2 0x5563 JUMPI PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x557A PUSH4 0xFFFFFFFF DUP1 DUP5 AND SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x4E0D AND JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP9 DUP7 AND DUP6 MSTORE DUP3 DUP6 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x1 SWAP2 DUP3 ADD SLOAD SWAP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 SWAP3 DUP4 SWAP1 DIV SWAP1 SWAP7 AND SWAP1 SWAP2 MUL SWAP5 SWAP1 SWAP5 OR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SWAP4 SSTORE PUSH1 0xA SWAP1 MSTORE SWAP1 DUP2 KECCAK256 SWAP2 SWAP3 POP PUSH2 0x563C DUP3 DUP3 PUSH2 0x5E71 JUMP JUMPDEST POP PUSH1 0x1 ADD DUP1 SLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 LT PUSH2 0x5679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO DUP1 ISZERO PUSH2 0x5689 JUMPI POP DUP5 DUP5 GT ISZERO JUMPDEST PUSH2 0x5692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 GT ISZERO DUP1 ISZERO PUSH2 0x56A2 JUMPI POP DUP5 DUP4 GT ISZERO JUMPDEST PUSH2 0x56AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP7 DUP7 SUB LT ISZERO PUSH2 0x56CC JUMPI PUSH2 0x56C3 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x5847 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x573E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56D9 DUP9 DUP9 DUP9 PUSH2 0x5CFE JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT PUSH2 0x56EA JUMPI DUP1 SWAP6 POP PUSH2 0x5738 JUMP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x56FD JUMPI DUP1 PUSH1 0x1 ADD SWAP7 POP PUSH2 0x5738 JUMP JUMPDEST DUP1 DUP6 GT ISZERO DUP1 ISZERO PUSH2 0x570C JUMPI POP DUP4 DUP2 LT JUMPDEST PUSH2 0x5712 JUMPI INVALID JUMPDEST PUSH2 0x571E DUP9 DUP9 DUP4 DUP9 PUSH2 0x57B6 JUMP JUMPDEST SWAP3 POP PUSH2 0x572F DUP9 DUP3 PUSH1 0x1 ADD DUP9 DUP8 PUSH2 0x57B6 JUMP JUMPDEST SWAP2 POP PUSH2 0x573E SWAP1 POP JUMP JUMPDEST POP PUSH2 0x56AB JUMP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT DUP1 ISZERO PUSH2 0x5759 JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST DUP1 PUSH2 0x576F JUMPI POP PUSH1 0x0 DUP4 SGT DUP1 ISZERO PUSH2 0x576F JUMPI POP PUSH1 0x0 DUP3 SLT JUMPDEST ISZERO PUSH2 0x578F JUMPI PUSH1 0x2 PUSH2 0x5780 DUP5 DUP5 PUSH2 0x5DDB JUMP JUMPDEST DUP2 PUSH2 0x5787 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0x21FF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 DUP6 SMOD DUP2 DUP6 SMOD ADD SDIV SWAP1 POP PUSH2 0x4A02 PUSH2 0x57B0 PUSH1 0x2 DUP7 SDIV PUSH1 0x2 DUP7 SDIV PUSH2 0x5DDB JUMP JUMPDEST DUP3 PUSH2 0x5DDB JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 GT ISZERO PUSH2 0x57C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0x57D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x5829 JUMPI PUSH1 0x7 DUP5 DUP5 SUB LT ISZERO PUSH2 0x57FE JUMPI PUSH1 0x0 PUSH2 0x57F4 DUP7 DUP7 DUP7 DUP7 DUP8 PUSH2 0x5847 JUMP JUMPDEST POP SWAP2 POP PUSH2 0x4A02 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x580B DUP7 DUP7 DUP7 PUSH2 0x5CFE JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT PUSH2 0x581C JUMPI DUP1 SWAP4 POP PUSH2 0x5823 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP5 POP JUMPDEST POP PUSH2 0x57D2 JUMP JUMPDEST DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5835 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP7 PUSH1 0x1 ADD SUB SWAP1 POP PUSH1 0x0 DUP9 DUP9 PUSH1 0x0 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5865 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 LT PUSH2 0x589F JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x58B7 JUMP JUMPDEST DUP10 DUP10 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x58AE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 LT PUSH2 0x58E9 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5901 JUMP JUMPDEST DUP11 DUP11 PUSH1 0x2 ADD DUP2 MLOAD DUP2 LT PUSH2 0x58F8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x3 LT PUSH2 0x5933 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x594B JUMP JUMPDEST DUP12 DUP12 PUSH1 0x3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5942 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x4 LT PUSH2 0x597D JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5995 JUMP JUMPDEST DUP13 DUP13 PUSH1 0x4 ADD DUP2 MLOAD DUP2 LT PUSH2 0x598C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x5 LT PUSH2 0x59C7 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x59DF JUMP JUMPDEST DUP14 DUP14 PUSH1 0x5 ADD DUP2 MLOAD DUP2 LT PUSH2 0x59D6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x6 LT PUSH2 0x5A11 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5A29 JUMP JUMPDEST DUP15 DUP15 PUSH1 0x6 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5A20 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP DUP6 DUP8 SGT ISZERO PUSH2 0x5A37 JUMPI SWAP5 SWAP6 SWAP5 JUMPDEST DUP4 DUP6 SGT ISZERO PUSH2 0x5A43 JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP2 DUP4 SGT ISZERO PUSH2 0x5A4F JUMPI SWAP1 SWAP2 SWAP1 JUMPDEST DUP5 DUP8 SGT ISZERO PUSH2 0x5A5B JUMPI SWAP4 SWAP6 SWAP4 JUMPDEST DUP4 DUP7 SGT ISZERO PUSH2 0x5A67 JUMPI SWAP3 SWAP5 SWAP3 JUMPDEST DUP1 DUP4 SGT ISZERO PUSH2 0x5A71 JUMPI SWAP2 JUMPDEST DUP5 DUP7 SGT ISZERO PUSH2 0x5A7D JUMPI SWAP4 SWAP5 SWAP4 JUMPDEST DUP1 DUP3 SGT ISZERO PUSH2 0x5A87 JUMPI SWAP1 JUMPDEST DUP3 DUP8 SGT ISZERO PUSH2 0x5A93 JUMPI SWAP2 SWAP6 SWAP2 JUMPDEST DUP2 DUP7 SGT ISZERO PUSH2 0x5A9F JUMPI SWAP1 SWAP5 SWAP1 JUMPDEST DUP1 DUP6 SGT ISZERO PUSH2 0x5AA9 JUMPI SWAP4 JUMPDEST DUP3 DUP7 SGT ISZERO PUSH2 0x5AB5 JUMPI SWAP2 SWAP5 SWAP2 JUMPDEST DUP1 DUP5 SGT ISZERO PUSH2 0x5ABF JUMPI SWAP3 JUMPDEST DUP3 DUP6 SGT ISZERO PUSH2 0x5ACB JUMPI SWAP2 SWAP4 SWAP2 JUMPDEST DUP2 DUP5 SGT ISZERO PUSH2 0x5AD7 JUMPI SWAP1 SWAP3 SWAP1 JUMPDEST DUP3 DUP5 SGT ISZERO PUSH2 0x5AE3 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST DUP14 DUP13 SUB DUP1 PUSH2 0x5AF3 JUMPI DUP8 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x5B04 JUMPI DUP7 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST DUP1 PUSH1 0x2 EQ ISZERO PUSH2 0x5B15 JUMPI DUP6 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST DUP1 PUSH1 0x3 EQ ISZERO PUSH2 0x5B26 JUMPI DUP5 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST DUP1 PUSH1 0x4 EQ ISZERO PUSH2 0x5B37 JUMPI DUP4 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST DUP1 PUSH1 0x5 EQ ISZERO PUSH2 0x5B48 JUMPI DUP3 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST DUP1 PUSH1 0x6 EQ ISZERO PUSH2 0x5B59 JUMPI DUP2 SWAP11 POP PUSH2 0x5BC0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6B31206F7574206F6620626F756E647300000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP15 DUP13 SUB DUP14 DUP14 EQ ISZERO PUSH2 0x5BDE JUMPI POP DUP11 SWAP10 POP PUSH2 0x573E SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x5BF5 JUMPI POP SWAP7 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x5C10 JUMPI POP SWAP6 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 EQ ISZERO PUSH2 0x5C2B JUMPI POP SWAP5 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 EQ ISZERO PUSH2 0x5C46 JUMPI POP SWAP4 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 EQ ISZERO PUSH2 0x5C61 JUMPI POP SWAP3 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 EQ ISZERO PUSH2 0x5C7C JUMPI POP SWAP2 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 EQ ISZERO PUSH2 0x5C97 JUMPI POP SWAP1 SWAP9 POP PUSH2 0x573E SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6B32206F7574206F6620626F756E647300000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x2 DUP6 DUP6 ADD DIV DUP2 MLOAD DUP2 LT PUSH2 0x5D12 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0x1 DUP4 ADD SWAP3 POP JUMPDEST PUSH1 0x1 DUP5 ADD SWAP4 POP DUP1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5D3C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SLT PUSH2 0x5D29 JUMPI JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5D5D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SGT PUSH2 0x5D4A JUMPI DUP3 DUP5 LT ISZERO PUSH2 0x5DCD JUMPI DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5D7E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x5D92 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x5DA6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x5DB9 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE PUSH2 0x5DD6 JUMP JUMPDEST DUP3 SWAP2 POP POP PUSH2 0x543A JUMP JUMPDEST PUSH2 0x5D29 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0x5DF0 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x5E05 JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x5E05 JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0x21FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5F4A PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x26D4 SWAP2 SWAP1 PUSH2 0x5F2F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x5F1F JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x5F1F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x5F04 JUMP JUMPDEST POP PUSH2 0x5F2B SWAP3 SWAP2 POP PUSH2 0x5F2F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1D01 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x5F2B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x5F35 JUMP INVALID MSTORE8 PUSH10 0x676E6564536166654D61 PUSH21 0x683A206164646974696F6E206F766572666C6F7753 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77A26469706673582212 KECCAK256 KECCAK256 0xD4 0xBF PUSH25 0x9BD312BD203E0E444967210AE1485C8098B6EE88B9A4145FEE PUSH30 0x72C64736F6C634300060600330000000000000000000000000000000000 ",
				"sourceMap": "300:7336:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;300:7336:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;1815:159:20;;;:::i;:::-;;22370:284:9;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;22370:284:9;;;;:::i;5856:690::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5856:690:9;;;;;;;:::i;20121:436::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;20121:436:9;;;;;;;;;;;;;;;;;;:::i;2006:42::-;;;:::i;:::-;;;;;;;;;;;;;;;;1887:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1832:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8461:1023;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;8461:1023:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7294:724::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;7294:724:9;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;7294:724:9;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;7294:724:9;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;7294:724:9;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;7294:724:9;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;7294:724:9;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;7294:724:9;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;7294:724:9;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;7294:724:9;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;7294:724:9;;-1:-1:-1;7294:724:9;-1:-1:-1;7294:724:9;;;;;;;;;;;;;;;;;;;;:::i;1652:45::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16974:614;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;16974:614:9;;;;;;;;;;;;;;;;;;:::i;10532:96::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10532:96:9;;;;;;;;;;;;;;;;;9758:113;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9953:328;;;:::i;5060:136:0:-;;;:::i;2053:44:9:-;;;:::i;1613:35::-;;;:::i;1760:32::-;;;:::i;10340:98::-;;;:::i;19027:290::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;19027:290:9;;;;:::i;18275:121::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;18275:121:9;;;;:::i;5627:135:0:-;;;:::i;764:209:19:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;764:209:19;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;764:209:19;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;764:209:19;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;764:209:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;764:209:19;;-1:-1:-1;764:209:19;;-1:-1:-1;;;;;764:209:19:i;:::-;;;;;;;;;;;;;;;;;;1862:21:9;;;:::i;1921:34::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1921:34:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;782:254:13;;;:::i;1960:42:9:-;;;:::i;1595:157:20:-;;;:::i;6194:143:0:-;;;:::i;1359:175:20:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1359:175:20;;;;:::i;21248:946:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;21248:946:9;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;147:28:13;;;:::i;19388:393:9:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2797:280:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2797:280:0;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1080:170:20;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1080:170:20;;;;:::i;20836:181:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;20836:181:9;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;20836:181:9;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;20836:181:9;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;20836:181:9;;-1:-1:-1;20836:181:9;-1:-1:-1;20836:181:9;:::i;6811:154:0:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;6811:154:0;;:::i;7472:161::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;7472:161:0;;:::i;17771:362:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;17771:362:9;;;;;;;;;:::i;1728:28::-;;;:::i;1796:32::-;;;:::i;9566:113::-;;;:::i;432:24:20:-;;;:::i;16543:139:9:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;16543:139:9;;;;:::i;18595:273::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;18595:273:9;;;;;;;;;;;:::i;543:150:13:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;543:150:13;;;;:::i;4368:263:0:-;;;:::i;1815:159:20:-;1170:5:13;;;;1156:10;:19;1148:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1886:12:20::1;::::0;::::1;;1882:88;;;1908:12;:20:::0;;;::::1;::::0;;1942:21:::1;::::0;::::1;::::0;1923:5:::1;::::0;1942:21:::1;1882:88;1815:159::o:0;22370:284:9:-;1170:5:13;;;;1156:10;:19;1148:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22477:9:9::1;::::0;::::1;::::0;;::::1;::::0;22498:25;::::1;::::0;::::1;22494:156;;22533:9;:55:::0;;;::::1;;::::0;;::::1;::::0;;::::1;::::0;;;22602:41:::1;::::0;22533:55;;22602:41;::::1;::::0;::::1;::::0;-1:-1:-1;;22602:41:9::1;22494:156;1208:1:13;22370:284:9::0;:::o;5856:690::-;5931:18;5952:49;5972:10;5991:8;5952:19;:49::i;:::-;5931:70;;6030:18;6015:11;:33;;6007:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6112:18;6097:11;:33;;6089:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6179:12;;:5;;:17;6171:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;6171:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6219:42;6251:8;6219:24;:42::i;:::-;6267:47;6284:11;6304:8;6267:16;:47::i;:::-;6321:12;6335:16;6355:35;6380:8;6355:17;:35::i;:::-;6320:70;;;;6396:27;6413:8;6396:9;:27::i;:::-;6429:36;6455:8;6429:18;:36::i;:::-;6475:7;6471:71;;;6492:43;6514:8;6525:9;6492:14;:43::i;:::-;5856:690;;;;;:::o;20121:436::-;1170:5:13;;;;1156:10;:19;1148:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20248:22:9::1;::::0;::::1;;::::0;;;:10:::1;:22;::::0;;;;:33;::::1;;:48;;::::0;::::1;;;20244:61;;;20298:7;;20244:61;20315:11;20311:174;;;20336:22;::::0;::::1;;::::0;;;:10:::1;:22;::::0;;;;:47;;;::::1;::::0;::::1;;;20391:37:::0;::::1;20336:47;20391:37;::::0;::::1;;;::::0;;20311:174:::1;;;20456:22;::::0;::::1;;::::0;;;:10:::1;:22;::::0;;;;20449:29;;;;;;20311:174:::1;20496:56;::::0;;;::::1;;::::0;;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;::::1;1208:1:13;20121:436:9::0;;;:::o;2006:42::-;;;:::o;1887:30::-;;;;;;:::o;1832:26::-;;;;;;;;;:::o;8461:1023::-;1170:5:13;;;;1156:10;:19;1148:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8659:16:9::1;8678:13;:11;:13::i;:::-;8659:32;;;;8749:15;8730:34;;:15;:34;;;;8722:72;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8821:15;8808:28;;:9;:28;;;;8800:64;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8878:14;::::0;::::1;::::0;;:43:::1;;;8908:13;8896:25;;:9;:25;;;8878:43;8870:81;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;8992:31;9008:14;8992:31;;:15;:31::i;:::-;8965:13;:23:::0;::::1;;:58;;8957:101;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9084:1;9068:13;:11;:13::i;:::-;:17;;;9064:96;;;9121:1;9103:15;:19;;;9095:58;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;9182:14;9166:13;;:30;;;;;;;;;;;;;;;;;;9223:15;9202:18;;:36;;;;;;;;;;;;;;;;;;9265:15;9244:18;;:36;;;;;;;;;;;;;;;;;;9301:13;9286:12;;:28;;;;;;;;;;;;;;;;;;9330:8;9320:7;;:18;;;;;;;;;;;;;;;;;;9421:15;9350:129;;9398:15;9350:129;;9377:13;;;;;;;;;;;9350:129;;;9444:13;9465:8;9350:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:1:13;8461:1023:9::0;;;;;:::o;7294:724::-;1170:5:13;;;;1156:10;:19;1148:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7546:9:9::1;7541:86;7561:19:::0;;::::1;7541:86;;;7595:25;7608:8;;7617:1;7608:11;;;;;;;;;;;;;;;7595:12;:25::i;:::-;7582:3;;7541:86;;;-1:-1:-1::0;7641:36:9;;::::1;7633:81;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;2559:2;7728:41;7755:6:::0;7736:13:::1;:11;:13::i;:::-;7728:22;;::::0;:41:::1;:26;:41;:::i;:::-;:61;;7720:93;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;7825:9;7820:96;7840:17:::0;;::::1;7820:96;;;7872:37;7882:6;;7889:1;7882:9;;;;;;;;;;;;;;;7893:12;;7906:1;7893:15;;;;;;;;;;;;;;;7872:9;:37::i;:::-;7859:3;;7820:96;;;-1:-1:-1::0;7941:13:9::1;::::0;7922:91:::1;::::0;7941:13:::1;::::0;::::1;::::0;7956:15;;7973;;7990:13;;8005:7;;::::1;;;7922:18;:91::i;:::-;7294:724:::0;;;;;;;;;:::o;1652:45::-;;;;;;:::o;16974:614::-;17082:36;:16;;;;;;;:7;:16;;;;;:22;;;;;;;17108:10;17082:36;17074:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17296:16;;;17237:14;17296:16;;;:7;:16;;;;;:29;17262:7;;17296:29;;;;;17339:19;;;;;17331:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17433:21;:13;;;17447:6;17433:21;:13;:21;:::i;:::-;17401:16;;;;;;;:7;:16;;;;;:53;;;;;;;;;;;17486:13;:23;:35;;:23;;;;;17514:6;17486:27;:35::i;:::-;17460:13;:61;;;;;;;;;;;;;;17535:9;;:47;;;;;;:9;:47;;;;;;;17566:15;;;17535:47;;;;;;:9;;;;;:18;;:47;;;;;;;;;;;;;;;17460:23;17535:9;:47;;;2:2:-1;;;;27:1;24;17:12;2:2;17535:47:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17535:47:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;17535:47:9;17528:55;;;10532:96;10577:16;10608:15;10601:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10532:96;;:::o;9758:113::-;9843:13;:23;;;9758:113;:::o;9953:328::-;10004:18;;:::i;:::-;-1:-1:-1;10004:34:9;;;;;;;;10025:13;10004:34;;;;;;;;;;;;;;;;;;;10068:9;;:34;;;;;10096:4;10068:34;;;;;;10004;;-1:-1:-1;;10068:55:9;;10004:34;10068:9;;;;;:19;;:34;;;;;;;;;;;:9;:34;;;2:2:-1;;;;27:1;24;17:12;2:2;10068:34:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10068:34:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;10068:34:9;;:55;:38;:55;:::i;:::-;10134:15;;10045:78;;-1:-1:-1;10134:31:9;;;;10130:147;;10175:13;:47;;;;;;;;;;10235:35;;10175:47;;10235:35;;-1:-1:-1;;10235:35:9;9953:328;;:::o;5060:136:0:-;5148:6;2080:31:20;2090:10;2102:8;;2080:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2080:9:20;;-1:-1:-1;;;2080:31:20:i;:::-;2072:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5171:20:0::1;:18;:20::i;:::-;5164:27;;5060:136:::0;:::o;2053:44:9:-;2096:1;2053:44;:::o;1613:35::-;;;;;;:::o;1760:32::-;;;;;;;;;:::o;10340:98::-;10410:15;:22;10340:98;:::o;19027:290::-;19094:43;:16;;;;;;;:7;:16;;;;;:29;;;;19127:10;19094:43;19086:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19178:16;;;19218:1;19178:16;;;:7;:16;;;;;;:29;;;:42;;;;;;19226:22;;:35;;;;19251:10;19226:35;;;;;;;;;;19273:39;;19251:10;;19178:16;19273:39;;;19027:290;:::o;18275:121::-;18369:16;;;;18345:7;18369:16;;;:7;:16;;;;;:22;;;;;;;18275:121;;;;:::o;5627:135:0:-;5714:7;2080:31:20;2090:10;2102:8;;2080:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2080:9:20;;-1:-1:-1;;;2080:31:20:i;:::-;2072:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5738:19:0::1;:17;:19::i;764:209:19:-:0;892:4;913:33;929:5;936:9;913:15;:33::i;:::-;:55;;;-1:-1:-1;950:18:19;;;959:9;950:18;913:55;906:62;;764:209;;;;;:::o;1862:21:9:-;;;;;;;;;:::o;1921:34::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;782:254:13:-;852:12;;;;838:10;:26;830:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;898:16;917:5;;936:10;928:18;;;;;;;;-1:-1:-1;952:25:13;;;;;;;989:42;;917:5;;;;;936:10;;917:5;;989:42;;;782:254;:::o;1960:42:9:-;;;:::o;1595:157:20:-;1170:5:13;;;;1156:10;:19;1148:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1666:12:20::1;::::0;::::1;;1661:87;;1688:12;:19:::0;;;::::1;1703:4;1688:19;::::0;;1721:20:::1;::::0;::::1;::::0;1688:12:::1;::::0;1721:20:::1;1595:157::o:0;6194:143:0:-;6285:7;2080:31:20;2090:10;2102:8;;2080:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2080:9:20;;-1:-1:-1;;;2080:31:20:i;:::-;2072:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6309:23:0::1;:21;:23::i;1359:175:20:-:0;1170:5:13;;;;1156:10;:19;1148:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1437:17:20::1;::::0;::::1;;::::0;;;:10:::1;:17;::::0;;;;;::::1;;1433:97;;;1464:17;::::0;::::1;1484:5;1464:17:::0;;;:10:::1;:17;::::0;;;;;;;;:25;;;::::1;::::0;;1503:20;;;;;;;::::1;::::0;;;;;;;;::::1;1433:97;1359:175:::0;:::o;21248:946:9:-;21357:22;;;;;;;;21592:10;21606:9;21592:23;21584:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21653:19;;;;21649:541;;21704:23;;;21682:19;21704:23;;;:6;:23;;;;;;;;21766:7;:24;;;;;;21815:50;21840:7;21711:15;21815:24;:50::i;:::-;21900:16;;;;;;;:7;:16;;;;;:33;;;;;21943:15;;;;21968;;;;21993:13;:23;21875:15;;21943;;;21968;;;;;;21993:23;;22026:13;:11;:13::i;:::-;22050:15;;;;;;:59;;22096:13;;;;22050:59;;;22072:21;;;;;;;;;22050:59;21798:320;;;;;;;;;;;;;;;;;;;;;;;;;21649:541;22146:37;22175:7;22146:28;:37::i;:::-;22139:44;;;;;;;;;;;;;;;;21649:541;21248:946;;;;;;;;;;;:::o;147:28:13:-;;;;;;:::o;19388:393:9:-;19476:10;19441:6;19465:22;;;:10;:22;;;;;:33;;;19457:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19551:16;;;;19534:14;19581:15;;;:6;:15;;;;;19551:16;19581:25;;;;;;;:29;;;:50;;;19614:17;19623:7;19614:8;:17::i;:::-;19573:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19674:17;19694:14;:11;;;;;19706:1;;19694:11;:14;:::i;:::-;19674:34;;19714:39;19742:10;19714:27;:39::i;:::-;19759:17;;;-1:-1:-1;;19388:393:9;:::o;2797:280:0:-;2907:14;2929:13;2950:17;2975;3000:22;2080:31:20;2090:10;2102:8;;2080:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2080:9:20;;-1:-1:-1;;;2080:31:20:i;:::-;2072:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3044:28:0::1;3063:8;3044:18;:28::i;:::-;3037:35:::0;;;;-1:-1:-1;3037:35:0;;-1:-1:-1;3037:35:0;-1:-1:-1;3037:35:0;;-1:-1:-1;2797:280:0;-1:-1:-1;;2797:280:0:o;1080:170:20:-;1170:5:13;;;;1156:10;:19;1148:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1156:17:20::1;::::0;::::1;;::::0;;;:10:::1;:17;::::0;;;;;::::1;;1151:95;;1183:17;::::0;::::1;;::::0;;;:10:::1;:17;::::0;;;;;;;;:24;;;::::1;1203:4;1183:24;::::0;;1221:18;;;;;;;::::1;::::0;;;;;;;;::::1;1080:170:::0;:::o;20836:181:9:-;20930:17;;20922:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20990:22;:20;:22::i;:::-;20836:181;;;;:::o;6811:154:0:-;6912:6;2080:31:20;2090:10;2102:8;;2080:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2080:9:20;;-1:-1:-1;;;2080:31:20:i;:::-;2072:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6935:25:0::1;6951:8;6935:15;:25::i;7472:161::-:0;7576:7;2080:31:20;2090:10;2102:8;;2080:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2080:9:20;;-1:-1:-1;;;2080:31:20:i;:::-;2072:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7600:28:0::1;7619:8;7600:18;:28::i;17771:362:9:-:0;1170:5:13;;;;1156:10;:19;1148:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17896:13:9::1;:23:::0;17964:13:::1;::::0;17896:23:::1;::::0;;::::1;::::0;17983:7;;17934:45:::1;::::0;17948:30:::1;::::0;17964:13:::1;17948:15;:30::i;:::-;17934:9:::0;;:45:::1;:13;:45;:::i;:::-;:56;;17926:95;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;18035:9;::::0;:39:::1;::::0;;;;;:9:::1;:39:::0;;::::1;;::::0;::::1;::::0;;;;;;;;;:9;;;::::1;::::0;:18:::1;::::0;:39;;;;;::::1;::::0;;;;;;;;:9:::1;::::0;:39;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;18035:39:9;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;18035:39:9;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;18035:39:9;18027:73:::1;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;18106:22;:20;:22::i;1728:28::-:0;;;;;;:::o;1796:32::-;;;;;;;;;:::o;9566:113::-;9651:13;:23;;;;;;;9566:113::o;432:24:20:-;;;;;;:::o;16543:139:9:-;16648:16;;16624:7;16648:16;;;:7;:16;;;;;:29;;;;16543:139::o;18595:273::-;18683:36;:16;;;;;;;:7;:16;;;;;:22;;;;;;;18709:10;18683:36;18675:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18752:16;;;;;;;;:7;:16;;;;;;;;;:29;;:41;;;;;;;;;;;;18805:58;;18841:10;18805:58;;;;;;;;;;;18752:16;;18805:58;;;;;;;;;;;18595:273;;:::o;543:150:13:-;1170:5;;;;1156:10;:19;1148:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:12:::1;:18:::0;;;::::1;;::::0;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;677:5:13;;650:38:::1;::::0;620:18;;677:5:::1;::::0;650:38:::1;::::0;-1:-1:-1;650:38:13::1;543:150:::0;:::o;4368:263:0:-;4466:14;4488:13;4509:17;4534;4559:22;2080:31:20;2090:10;2102:8;;2080:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2080:9:20;;-1:-1:-1;;;2080:31:20:i;:::-;2072:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4603:23:0::1;:21;:23::i;:::-;4596:30;;;;;;;;;;4368:263:::0;;;;;:::o;30475:783:9:-;30644:16;;;30621:20;30644:16;;;:7;:16;;;;;:30;30694:16;;30572:12;;30644:30;;;;;;;;30694:16;30721:18;30717:51;;30741:27;;;;;;;;;;;;;;;;;;;;;;;30717:51;30794:8;30778:24;;:13;:24;;;30774:61;;;30804:31;;;;;;;;;;;;;;;;;;;;;;;30774:61;30845:16;;;;;;;:7;:16;;;;;:28;:39;;;;:28;;;;;:39;30841:78;;;30886:33;;;;;;;;;;;;;;;;;;;;;;;30841:78;30929:16;;;;;;;:7;:16;;;;;:34;:46;;;;:34;;;;;:46;30925:93;;30977:41;;;;;;;;;;;;;;;;;;;;;;;30925:93;31040:4;31028:16;;:8;:16;;;;:43;;;;-1:-1:-1;31060:11:9;:8;;;;;31069:1;;31060:8;:11;:::i;:::-;31048:23;;:8;:23;;;;31028:43;:92;;;;;31076:44;31105:8;31115:4;31076:28;:44::i;:::-;31075:45;31028:92;31024:130;;;31122:32;;;;;;;;;;;;;;;;;;;;;;;31024:130;31164:8;:13;;31176:1;31164:13;;:47;;;;-1:-1:-1;31182:29:9;31195:15;:12;;;;;31208:1;;31195:12;:15;:::i;:::-;31182:12;:29::i;:::-;31181:30;31164:47;31160:93;;;31213:40;;;;;;;;;;;;;;;;;;;;;;;31160:93;30475:783;;;;;;:::o;23167:359::-;23243:18;23252:8;23243;:18::i;:::-;23238:32;;23263:7;;23238:32;23305:10;23275:19;23297;;;:7;:19;;;;;:36;23392:12;;23297:36;;;;;;;;23392:12;;;;;;23378:26;;23366:38;;;;;;;:58;;-1:-1:-1;23408:16:9;;;23366:58;23362:71;;;23426:7;;;23362:71;23439:28;23458:8;23439:18;:28::i;:::-;-1:-1:-1;23482:10:9;23474:19;;;;:7;:19;;;;;:47;;;;;;;;;;;;;;23167:359;:::o;27827:391::-;27918:30;27939:8;27918:20;:30::i;:::-;27910:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27991:17;;;;;;;:7;:17;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;27991:47:9;;;;;;;;;;28052:10;28044:19;;;:7;:19;;;;;;:48;;;;;;;;;;28098:36;:50;;;28160:53;28052:10;;27991:17;:47;;28160:53;;27991:17;28160:53;27827:391;;:::o;26206:545::-;26341:17;;;;26276:4;26341:17;;;:7;:17;;;;;:32;;;;26302:36;;26276:4;;;;26341:32;;;;;-1:-1:-1;26298:109:9;;;-1:-1:-1;26391:5:9;;-1:-1:-1;26391:5:9;26383:17;;26298:109;26456:17;;;26413:16;26456:17;;;:7;:17;;;;;;;;26432:54;;;;;;;;;;;;;;;;;;;;;26456:17;26432:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;:54::i;:::-;26492:16;;;;;;;:6;:16;;;;;;;;;:35;;;26533:26;;:52;;;;;26569:15;26533:52;;;;;;;;;;;26591:43;;;;;;;;;26640:13;:24;;;;;;;;;;26676:39;;;;;;;26492:35;;-1:-1:-1;26492:16:9;;:35;;26676:39;;;;;;;;26730:4;;-1:-1:-1;26736:9:9;-1:-1:-1;26206:545:9;;;;:::o;27406:417::-;27480:17;;;27462:15;27480:17;;;:7;:17;;;;;:31;;;;;;;;27517:18;;:::i;:::-;-1:-1:-1;27517:34:9;;;;;;;;;27538:13;27517:34;;;;;;;;;;;;;;;;;27575:28;;27595:7;27575:28;:19;:28;:::i;:::-;27557:46;;;;;;27627:15;;;;:28;;:19;27647:7;27627:28;:19;:28;:::i;:::-;27609:46;;;;:15;;;;:46;;;27661:21;;:13;:21;;;;;;;;;;;;;;;;;;;;;;;27731:10;27661:21;27723:19;;;:7;:19;;;;;;:32;:45;;:32;27760:7;27723:45;:36;:45;:::i;:::-;27696:10;27688:19;;;;:7;:19;;;;;;:80;;;;;;;;;;;27802:15;;27780:38;;;;;;;27688:19;27780:38;27406:417;;;:::o;28222:184::-;28330:17;;;;;;;;:7;:17;;;;;:32;;;;28291:36;;28330:32;;-1:-1:-1;28287:84:9;;;28364:7;;28287:84;28384:17;;;;;;;:7;:17;;;;;;28377:24;28384:17;;28377:24;:::i;:::-;-1:-1:-1;28377:24:9;;;;;;;;28222:184;:::o;26755:647::-;26881:9;;;;26923:25;26919:38;;26950:7;;;26919:38;26963:16;26982:15;:12;;;;;26995:1;;26982:12;:15;:::i;:::-;27030:17;;;;27003:24;27030:17;;;:6;:17;;;;;;;;:33;;;;27094:24;;27261:125;;;;;27030:33;;;;;;27261:125;;;;;;;;;;;;;;;;;;;;;;;;;;;26963:34;;-1:-1:-1;27030:33:9;;27094:24;;27261:11;;;;;;2659:6;;27261:125;;;;;27030:17;;27261:125;;;;;;;;;:11;:125;;;2:2:-1;;;;27:1;24;17:12;2:2;27261:125:9;;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;27261:125:9;;;27257:141;;;;;;;26755:647;;;;;;:::o;29166:151::-;29242:7;29266:46;2510:1;29266:26;29278:13;:11;:13::i;:::-;29266:7;;:26;;;:11;:26;:::i;:::-;:30;:46;:30;:46;:::i;29993:478::-;30068:22;30082:7;30068:13;:22::i;:::-;30060:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30151:16;;:23;;:16;;;;;30172:1;;30151:20;:23;:::i;:::-;30120:16;;;;;;;:7;:16;;;;;:54;;;;;;;;;;;;;;;;;;;;30195:15;30211:29;-1:-1:-1;30219:13:9;:11;:13::i;:::-;30211:22;;;:29;:26;:29;:::i;:::-;30195:46;;;;;;;;;;;;;;;;;;;;;;30262:16;;;;;;:7;:16;;;;;;;:22;;;;;;30195:46;;;;30290:13;;;;;;:19;:27;;30262:22;;;;30290:27;;;;;;;;;30330:16;;;;30323:29;;;;;30358:15;:22;;30195:46;;-1:-1:-1;30262:22:9;;30195:46;;30358:15;30262:22;;30358;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;30393:15;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30426:40;;30393:21;30426:40;;;;;30393:21;;30426:40;29993:478;;;:::o;822:162:62:-;880:7;907:5;;;926:6;;;;918:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29321:668:9;29414:22;29428:7;29414:13;:22::i;:::-;29413:23;29405:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29478:20;;;29470:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29538:36;:16;;;29572:1;29538:16;;;:7;:16;;;;;:22;;;;;;;:36;;:72;;-1:-1:-1;29578:32:9;:16;;;;;;;:7;:16;;;;;:22;;;;;;;;:32;;;;29538:72;29530:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29683:25;29700:7;29683:16;:25::i;:::-;29650:16;;;;;;;;:7;:16;;;;;;:58;;29714:40;29650:58;;;;;;;;;;;;29714:40;;;;;;;;29792:15;:22;;29760;;;;:55;;;;;;;;;;;;;;;;27:10:-1;;-1:-1;23:18;;;45:23;;;29821:29:9;;;;;;;;;;29856:16;;;:31;;;;;;;;;;;;;;;;;;29899:39;;-1:-1:-1;;29650:16:9;;29899:39;;29650:16;29899:39;29977:6;29949:35;;29968:7;29949:35;;;;;;;;;;;;29321:668;;:::o;1350:165:15:-;1408:7;1436:1;1431:6;;:1;:6;;;;1423:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1490:5:15;;;1350:165::o;1236::62:-;1294:7;1322:1;1317;:6;;1309:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10994:138:9;11106:13;;;;;;;11076:6;11099:21;;;:6;:21;;;;;:28;;10994:138::o;12011:123::-;12116:13;;;;;;;;12011:123::o;801:178:20:-;940:17;;;919:4;940:17;;;:10;:17;;;;;;;;;:34;;-1:-1:-1;;962:12:20;;;;961:13;;801:178;-1:-1:-1;;801:178:20:o;11501:145:9:-;11617:13;;;;;;;11586:7;11610:21;;;:6;:21;;;;;:31;;;;;;;;;11501:145::o;24298:422::-;24435:23;;;24407:14;24435:23;;;:6;:23;;;;;:33;;;;;:37;24431:285;;24489:37;24510:15;24489:20;:37::i;:::-;:98;;;;;24530:45;24550:7;24559:15;24530:19;:45::i;:::-;:52;:57;24489:98;24482:105;;;;24431:285;24615:33;24623:7;24632:15;24615:7;:33::i;24724:1478::-;25114:16;;;24820:22;25114:16;;;:7;25069:9;25114:16;25069:9;25114:16;;25188;;25160:24;;24820:22;;;;;;;;;;;;;;25069:9;;25114:16;;24820:22;;25069:9;25188:16;;;25160:24;;;;;:44;;:87;;-1:-1:-1;25230:16:9;;25209:38;;25230:16;;25209:20;:38::i;:::-;25208:39;25160:87;25467:16;;25137:110;;-1:-1:-1;25454:30:9;;25467:16;;25454:12;:30::i;:::-;:49;;;;;25488:15;25454:49;25450:424;;;25524:16;;:23;;:16;;;;;25545:1;;25524:20;:23;:::i;:::-;25563:16;;;;;;;:6;:16;;;;;25605:13;;25513:34;;-1:-1:-1;25605:13:9;;;;;-1:-1:-1;25563:16:9;-1:-1:-1;25646:26:9;25654:7;25513:34;25646:7;:26::i;:::-;25626:46;;25450:424;;;25704:16;;;;;25736;;;:6;:16;;;;;;;;25778:7;:17;;;;;;25704:16;25778:31;;25704:16;;-1:-1:-1;25778:31:9;;;;;;;-1:-1:-1;25736:16:9;-1:-1:-1;25837:30:9;25704:16;25837:20;:30::i;:::-;25817:50;;25450:424;25884:38;25904:7;25913:8;25884:19;:38::i;:::-;:45;:50;25880:96;;25964:5;25944:25;;25880:96;26038:23;;;;;26069:15;;;;26092:17;;;;26069:15;26092:17;;;:7;:17;;;;;:25;;;;26125:13;:23;25997:17;;26022:8;;26038:23;26069:15;;;26092:25;;;;;26125:23;;26156:13;:11;:13::i;:::-;26177:14;25982:215;;;;;;;;;;;;;;;;;;;;;;;;24724:1478;;;;;;;;;:::o;28410:281::-;28512:16;;;;28479:4;28512:16;;;:6;:16;;;;;;;;:26;;;;;28566:7;:17;;;;;;:25;;28479:4;;28512:26;;;;;28566:25;;;;28604:13;;;;;:33;;;28636:1;28621:12;:16;;;28604:33;:82;;;;-1:-1:-1;28671:15:9;28641:27;:13;;;:27;;;;;:13;:27;:::i;:::-;:45;;;28604:82;28597:89;28410:281;-1:-1:-1;;;;28410:281:9:o;934:158:16:-;990:6;1015:5;;;1034:6;;;;;;;;;1026:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23530:403:9;23609:18;23618:8;23609;:18::i;:::-;23604:32;;23629:7;;23604:32;23674:10;23641:19;23663:22;;;:10;:22;;;;;:39;;;;;;;;;23764:28;;;;23750:42;;23739:53;;;;;:73;;-1:-1:-1;23796:16:9;;23739:73;23731:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23843:28;23862:8;23843:18;:28::i;:::-;-1:-1:-1;23889:10:9;23878:22;;;;:10;:22;;;;;:50;;;;;;;;;;;;;;23530:403;:::o;14450:476::-;14554:14;14576:13;14597:17;14622;14647:22;14684:14;;:::i;:::-;-1:-1:-1;14701:24:9;;;;;;;;:6;:24;;;;;;;;;14684:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14740:21;;;;:47;;;14765:22;14778:8;14765:22;;:12;:22::i;:::-;14789:16;;;;;;;;;;;;;;;;;14732:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;14732:74:9;-1:-1:-1;14844:8:9;;14860:11;;;;14879;;;;14898:17;;;;;14828:8;;14844;;14813:108;;;;;-1:-1:-1;14813:108:9;;;-1:-1:-1;14813:108:9;;;;;-1:-1:-1;14450:476:9;-1:-1:-1;;14450:476:9:o;12545:210::-;12640:6;12660:22;12673:8;12660:12;:22::i;:::-;12656:81;;;-1:-1:-1;12699:24:9;;;;;;;:6;:24;;;;;:31;12692:38;;12656:81;-1:-1:-1;12749:1:9;12545:210;;;:::o;13199:217::-;13297:7;13318:22;13331:8;13318:12;:22::i;:::-;13314:84;;;-1:-1:-1;13357:24:9;;;;;;;:6;:24;;;;;:34;;;;;;;;13350:41;;16191:261;16283:14;16305:13;16326:17;16351;16376:22;16420:27;16433:13;;;;;;;;;;;16420:27;;:12;:27::i;28977:185::-;29080:4;29120:5;29101:24;;:15;29114:1;29101:8;:12;;;;:15;;;;:::i;:::-;:24;;;:56;;;;-1:-1:-1;;29129:13:9;;;;;;:6;:13;;;;;:23;;;;;;;;:28;;28977:185;-1:-1:-1;28977:185:9:o;1344:161:16:-;1400:6;1427:1;1422:6;;:1;:6;;;;1414:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31262:151:9;31356:16;;;31335:4;31356:16;;;:6;:16;;;;;:26;;;;;;;;:30;;;:52;;;31390:18;31399:8;31390;:18::i;31943:130::-;32045:16;;32012:4;;32045:23;;:16;;;;;32066:1;;32045:20;:23;:::i;:::-;32033:35;;:8;:35;;;32026:42;;31943:130;;;:::o;22685:478::-;22750:40;22774:15;:12;;;;;22787:1;;22774:12;:15;:::i;:::-;22750:23;:40::i;:::-;22797:16;:27;;;;;;;;;;22830:31;;:::i;:::-;-1:-1:-1;22864:129:9;;;-1:-1:-1;22864:129:9;;;22884:15;;;;;;;;22864:129;;22907:18;;;;;;;;22864:129;;;;;;;;22933:18;;;;;22864:129;;;;22959:7;;;;;-1:-1:-1;;;22864:129:9;22974:13;;;;22864:129;;;;22999:17;;;;:7;:17;;;;;:31;;;;22864:129;;;;22999:31;;:17;;:31;;;:::i;:::-;-1:-1:-1;22999:31:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23036:16;;-1:-1:-1;23036:16:9;;;:6;:16;;;;;:26;;;:52;;;;23072:15;23036:52;;;;;;;;;;;;23100:58;;23131:26;;23100:58;;;;23119:10;;23100:58;;;;;;;;;22685:478;;:::o;31562:144::-;31664:17;;;;31643:4;31664:17;;;:7;:17;;;;;:32;;;;:37;;;31562:144::o;815:506:11:-;898:6;926:4;:11;922:1;:15;914:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;984:11;;1029:1;1023:7;;1040;;;1036:281;;1062:14;1084;1127:62;1142:4;1148:1;1157;1151:3;:7;1174:1;1160:11;:15;1177:11;1127:14;:62::i;:::-;1106:83;;-1:-1:-1;1106:83:11;-1:-1:-1;1204:36:11;1106:83;;1204:18;:36::i;:::-;1197:43;;;;;;;;1036:281;1268:42;1280:4;1286:1;1295;1289:3;:7;1298:11;1268;:42::i;:::-;1261:49;;;;;;936:162:15;994:7;1021:5;;;1040:6;;;;;;;;;1032:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1629:418:62;1687:7;1911:6;1907:35;;-1:-1:-1;1934:1:62;1927:8;;1907:35;1960:5;;;1964:1;1960;:5;:1;1979:5;;;;;:10;1971:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31417:141:9;31512:16;;31491:4;31512:16;;;:7;:16;;;;;:28;2601:7;31512:28;;;;;;:41;;31417:141::o;28695:278::-;28810:16;;28772:6;;28810:16;;28836:17;;;;;:65;;-1:-1:-1;28873:16:9;;;;;;;:7;:16;;;;;:28;;28857:44;;;28873:28;;;;;28857:44;28836:65;28832:105;;;28918:12;-1:-1:-1;28911:19:9;;28832:105;28949:19;:16;;;;;28966:1;;28949:16;:19;:::i;:::-;28942:26;28695:278;-1:-1:-1;;;28695:278:9:o;31710:229::-;31831:16;;;31795:4;31831:16;;;:7;:16;;;;;:33;31902:12;;31831:33;;;;;;;;31902:12;;;;;;31888:26;;31877:37;;;;;:57;;-1:-1:-1;31918:16:9;;31870:64;-1:-1:-1;;;31710:229:9:o;934:158:17:-;990:6;1015:5;;;1034:6;;;;;;;;;1026:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32077:121:9;2601:7;-1:-1:-1;32172:21:9;;32077:121::o;23937:357::-;24012:18;24021:8;24012;:18::i;:::-;24007:32;;24032:7;;24007:32;24045:13;24061:15;:12;;;;;24074:1;;24061:12;:15;:::i;:::-;24108:14;;;;;;;;:6;:14;;;;;;;;:21;;24082:16;;;;;;;;:47;;;24170:30;;;;;24135:32;;:65;;;;24170:30;;;;;;;;24135:65;;;;;;;24206:52;;;24242:15;24206:52;;;;;;;24272:7;:17;;;;;24108:14;;-1:-1:-1;24265:24:9;24272:17;24108:14;24265:24;:::i;:::-;-1:-1:-1;24265:24:9;;;;;;;;-1:-1:-1;23937:357:9;:::o;4881:800:11:-;5049:11;5062;5096:2;5091;:7;5083:16;;12:1:-1;9;2:12;5083:16:11;5119:2;5113;:8;;:20;;;;;5131:2;5125;:8;;5113:20;5105:29;;12:1:-1;9;2:12;5105:29:11;5154:2;5148;:8;;:20;;;;;5166:2;5160;:8;;5148:20;5140:29;;12:1:-1;9;2:12;5140:29:11;1449:1;5206:2;5201;:7;:35;5197:103;;;5255:36;5270:4;5276:2;5280;5284;5288;5255:14;:36::i;:::-;5248:43;;;;;;5197:103;5307:16;5326:23;5336:4;5342:2;5346;5326:9;:23::i;:::-;5307:42;;5367:8;5361:2;:14;5357:314;;5392:8;5387:13;;5357:314;;;5430:2;5419:8;:13;5415:256;;;5449:8;5460:1;5449:12;5444:17;;5415:256;;;5499:8;5493:2;:14;;:31;;;;;5522:2;5511:8;:13;5493:31;5486:39;;;;5542:35;5554:4;5560:2;5564:8;5574:2;5542:11;:35::i;:::-;5535:42;;5594:39;5606:4;5612:8;5623:1;5612:12;5626:2;5630;5594:11;:39::i;:::-;5587:46;-1:-1:-1;5643:19:11;;-1:-1:-1;5643:19:11;5415:256;5176:501;;;;4881:800;;;;;;;;:::o;1828:267:18:-;1898:6;1924:1;1919:2;:6;:16;;;;;1934:1;1929:2;:6;1919:16;1918:40;;;;1946:1;1941:2;:6;:16;;;;;1956:1;1951:2;:6;1941:16;1914:83;;;1989:1;1975:11;1979:2;1983;1975:3;:11::i;:::-;:15;;;;;;1968:22;;;;1914:83;2002:16;2041:1;2022:6;;;2031;;;2022:15;2021:21;;-1:-1:-1;2055:35:18;2059:19;2068:1;2063:2;:6;2076:1;2071:2;:6;2059:3;:19::i;:::-;2080:9;2055:3;:35::i;3940:773:11:-;4052:10;4086:1;4080:2;:7;;4072:16;;12:1:-1;9;2:12;4072:16:11;4107:2;4102:1;:7;;4094:16;;12:1:-1;9;2:12;4094:16:11;4128:2;4123;:7;4116:572;;;1449:1;4149:2;4144;:7;:35;4140:153;;;4191:13;4230:34;4245:4;4251:2;4255;4259:1;4262;4230:14;:34::i;:::-;-1:-1:-1;4214:50:11;-1:-1:-1;4274:10:11;;-1:-1:-1;4274:10:11;4140:153;4300:18;4321:23;4331:4;4337:2;4341;4321:9;:23::i;:::-;4300:44;;4361:10;4356:1;:15;4352:330;;4503:10;4498:15;;4352:330;;;4659:10;4672:1;4659:14;4654:19;;4352:330;4116:572;;;;4700:4;4705:2;4700:8;;;;;;;;;;;;;;4693:15;;3940:773;;;;;;:::o;1587:2197::-;1739:11;1752;2005;2028:2;2019;2024:1;2019:6;:11;2005:25;;2036:9;2048:4;2053:2;2058:1;2053:6;2048:12;;;;;;;;;;;;;;2036:24;;2066:9;2082:3;2078:1;:7;:32;;170:8;2078:32;;;2088:4;2093:2;2098:1;2093:6;2088:12;;;;;;;;;;;;;;2078:32;2066:44;;2116:9;2132:3;2128:1;:7;:32;;170:8;2128:32;;;2138:4;2143:2;2148:1;2143:6;2138:12;;;;;;;;;;;;;;2128:32;2116:44;;2166:9;2182:3;2178:1;:7;:32;;170:8;2178:32;;;2188:4;2193:2;2198:1;2193:6;2188:12;;;;;;;;;;;;;;2178:32;2166:44;;2216:9;2232:3;2228:1;:7;:32;;170:8;2228:32;;;2238:4;2243:2;2248:1;2243:6;2238:12;;;;;;;;;;;;;;2228:32;2216:44;;2266:9;2282:3;2278:1;:7;:32;;170:8;2278:32;;;2288:4;2293:2;2298:1;2293:6;2288:12;;;;;;;;;;;;;;2278:32;2266:44;;2316:9;2332:3;2328:1;:7;:32;;170:8;2328:32;;;2338:4;2343:2;2348:1;2343:6;2338:12;;;;;;;;;;;;;;2328:32;2316:44;;2376:2;2371;:7;2367:35;;;2393:2;;2397;2367:35;2416:2;2411;:7;2407:35;;;2433:2;;2437;2407:35;2456:2;2451;:7;2447:35;;;2473:2;;2477;2447:35;2496:2;2491;:7;2487:35;;;2513:2;;2517;2487:35;2536:2;2531;:7;2527:35;;;2553:2;;2557;2527:35;2576:2;2571;:7;2567:35;;;2593:2;2567:35;2616:2;2611;:7;2607:35;;;2633:2;;2637;2607:35;2656:2;2651;:7;2647:35;;;2673:2;2647:35;2696:2;2691;:7;2687:35;;;2713:2;;2717;2687:35;2736:2;2731;:7;2727:35;;;2753:2;;2757;2727:35;2776:2;2771;:7;2767:35;;;2793:2;2767:35;2816:2;2811;:7;2807:35;;;2833:2;;2837;2807:35;2856:2;2851;:7;2847:35;;;2873:2;2847:35;2896:2;2891;:7;2887:35;;;2913:2;;2917;2887:35;2936:2;2931;:7;2927:35;;;2953:2;;2957;2927:35;2976:2;2971;:7;2967:35;;;2993:2;;2997;2967:35;3025:7;;;3042:11;3038:302;;3063:2;3056:9;;3038:302;;;3081:6;3091:1;3081:11;3077:263;;;3102:2;3095:9;;3077:263;;;3120:6;3130:1;3120:11;3116:224;;;3141:2;3134:9;;3116:224;;;3159:6;3169:1;3159:11;3155:185;;;3180:2;3173:9;;3155:185;;;3198:6;3208:1;3198:11;3194:146;;;3219:2;3212:9;;3194:146;;;3237:6;3247:1;3237:11;3233:107;;;3258:2;3251:9;;3233:107;;;3276:6;3286:1;3276:11;3272:68;;;3297:2;3290:9;;3272:68;;;3312:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3272:68;3363:7;;;3380:8;;;3376:404;;;-1:-1:-1;3399:4:11;;-1:-1:-1;3391:19:11;;-1:-1:-1;;;;;;;;;3391:19:11;3376:404;3426:11;3422:358;;-1:-1:-1;3454:2:11;;-1:-1:-1;3440:17:11;;-1:-1:-1;;;;;;;;3440:17:11;3422:358;3473:6;3483:1;3473:11;3469:311;;;-1:-1:-1;3501:2:11;;-1:-1:-1;3487:17:11;;-1:-1:-1;;;;;;;;3487:17:11;3469:311;3520:6;3530:1;3520:11;3516:264;;;-1:-1:-1;3548:2:11;;-1:-1:-1;3534:17:11;;-1:-1:-1;;;;;;;;3534:17:11;3516:264;3567:6;3577:1;3567:11;3563:217;;;-1:-1:-1;3595:2:11;;-1:-1:-1;3581:17:11;;-1:-1:-1;;;;;;;;3581:17:11;3563:217;3614:6;3624:1;3614:11;3610:170;;;-1:-1:-1;3642:2:11;;-1:-1:-1;3628:17:11;;-1:-1:-1;;;;;;;;3628:17:11;3610:170;3661:6;3671:1;3661:11;3657:123;;;-1:-1:-1;3689:2:11;;-1:-1:-1;3675:17:11;;-1:-1:-1;;;;;;;;3675:17:11;3657:123;3708:6;3718:1;3708:11;3704:76;;;-1:-1:-1;3736:2:11;;-1:-1:-1;3722:17:11;;-1:-1:-1;;;;;;;;3722:17:11;3704:76;3752:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6003:1223;6102:7;;6270:4;6287:1;6276:7;;;6275:13;6270:19;;;;;;;;;;;;;;6255:34;;6301:1;6295:7;;;;6357:1;6351:7;;;;6364:858;6404:1;6398:7;;;;6433:5;6422:4;6427:2;6422:8;;;;;;;;;;;;;;:16;6385:55;;6447;6466:1;6460:7;;;;6495:5;6484:4;6489:2;6484:8;;;;;;;;;;;;;;:16;6447:55;;6518:2;6513;:7;6509:707;;;6556:4;6561:2;6556:8;;;;;;;;;;;;;;6566:4;6571:2;6566:8;;;;;;;;;;;;;;6533:4;6538:2;6533:8;;;;;;;;;;;;;6543:4;6548:2;6543:8;;;;;;;;;;;;;;;;;6532:43;;;;;6509:707;;;7205:2;7198:9;;;;;6509:707;6364:858;;1403:196:18;1459:6;1484:5;;;1504:6;;;;;;:16;;;1519:1;1514;:6;;1504:16;1503:38;;;;1530:1;1526;:5;:14;;;;;1539:1;1535;:5;1526:14;1495:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;300:7336:0;;;;;;;;;;-1:-1:-1;300:7336:0;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;300:7336:0;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;300:7336:0;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;300:7336:0;;;-1:-1:-1;300:7336:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;"
			},
			"methodIdentifiers": {
				"acceptAdmin(address)": "628806ef",
				"acceptOwnership()": "79ba5097",
				"addAccess(address)": "a118f249",
				"allocatedFunds()": "d4cc54e4",
				"availableFunds()": "46fcff4c",
				"changeOracles(address[],address[],address[],uint32,uint32,uint32)": "3969c20f",
				"checkEnabled()": "dc7f0124",
				"decimals()": "313ce567",
				"description()": "7284e416",
				"disableAccessCheck()": "0a756983",
				"enableAccessCheck()": "8038e4a1",
				"getAdmin(address)": "64efb22b",
				"getAnswer(uint256)": "b5ab58dc",
				"getOracles()": "40884c52",
				"getRoundData(uint80)": "9a6fc8f5",
				"getTimestamp(uint256)": "b633620c",
				"hasAccess(address,bytes)": "6b14daf8",
				"latestAnswer()": "50d25bcd",
				"latestRound()": "668a0f02",
				"latestRoundData()": "feaf968c",
				"latestTimestamp()": "8205bf6a",
				"linkToken()": "57970e93",
				"maxSubmissionCount()": "58609e44",
				"maxSubmissionValue()": "23ca2903",
				"minSubmissionCount()": "c9374500",
				"minSubmissionValue()": "7c2b0b21",
				"onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
				"oracleCount()": "613d8fcc",
				"oracleRoundState(address,uint32)": "88aa80e7",
				"owner()": "8da5cb5b",
				"paymentAmount()": "c35905c6",
				"removeAccess(address)": "8823da6c",
				"requestNewRound()": "98e5b12a",
				"restartDelay()": "357ebb02",
				"setRequesterPermissions(address,bool,uint32)": "20ed0275",
				"setValidator(address)": "1327d3d8",
				"submit(uint256,int256)": "202ee0ed",
				"timeout()": "70dea79a",
				"transferAdmin(address,address)": "e9ee6eeb",
				"transferOwnership(address)": "f2fde38b",
				"updateAvailableFunds()": "4f8fc3b5",
				"updateFutureRounds(uint128,uint32,uint32,uint32,uint32)": "38aa4c72",
				"validator()": "3a5381b5",
				"version()": "54fd4d50",
				"withdrawFunds(address,uint256)": "c1075329",
				"withdrawPayment(address,address,uint256)": "3d3d7714",
				"withdrawablePayment(address)": "e2e40317"
			}
		},
		"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_paymentAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"_timeout\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_validator\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"_minSubmissionValue\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"_maxSubmissionValue\",\"type\":\"int256\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"AddedAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AvailableFundsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CheckAccessDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CheckAccessEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"OracleAdminUpdateRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"OracleAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"OraclePermissionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RemovedAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"delay\",\"type\":\"uint32\"}],\"name\":\"RequesterPermissionsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint128\",\"name\":\"paymentAmount\",\"type\":\"uint128\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"minSubmissionCount\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"maxSubmissionCount\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"restartDelay\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"timeout\",\"type\":\"uint32\"}],\"name\":\"RoundDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"submission\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"round\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"SubmissionReceived\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previous\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"name\":\"ValidatorUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"addAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocatedFunds\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availableFunds\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_removed\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_added\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_addedAdmins\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"_minSubmissions\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_maxSubmissions\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_restartDelay\",\"type\":\"uint32\"}],\"name\":\"changeOracles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableAccessCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableAccessCheck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"getAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOracles\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"hasAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"linkToken\",\"outputs\":[{\"internalType\":\"contract LinkTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSubmissionCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSubmissionValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSubmissionCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSubmissionValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleCount\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_queriedRoundId\",\"type\":\"uint32\"}],\"name\":\"oracleRoundState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_eligibleToSubmit\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"_roundId\",\"type\":\"uint32\"},{\"internalType\":\"int256\",\"name\":\"_latestSubmission\",\"type\":\"int256\"},{\"internalType\":\"uint64\",\"name\":\"_startedAt\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_timeout\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"_availableFunds\",\"type\":\"uint128\"},{\"internalType\":\"uint8\",\"name\":\"_oracleCount\",\"type\":\"uint8\"},{\"internalType\":\"uint128\",\"name\":\"_paymentAmount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"removeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestNewRound\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"\",\"type\":\"uint80\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restartDelay\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_requester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_authorized\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"_delay\",\"type\":\"uint32\"}],\"name\":\"setRequesterPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newValidator\",\"type\":\"address\"}],\"name\":\"setValidator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"_submission\",\"type\":\"int256\"}],\"name\":\"submit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeout\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateAvailableFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_paymentAmount\",\"type\":\"uint128\"},{\"internalType\":\"uint32\",\"name\":\"_minSubmissions\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_maxSubmissions\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_restartDelay\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_timeout\",\"type\":\"uint32\"}],\"name\":\"updateFutureRounds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validator\",\"outputs\":[{\"internalType\":\"contract AggregatorValidatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"withdrawablePayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"acceptAdmin(address)\":{\"params\":{\"_oracle\":\"is the address of the oracle whose admin is being transferred\"}},\"acceptOwnership()\":{\"details\":\"Allows an ownership transfer to be completed by the recipient.\"},\"addAccess(address)\":{\"params\":{\"_user\":\"The address to add\"}},\"changeOracles(address[],address[],address[],uint32,uint32,uint32)\":{\"params\":{\"_added\":\"is the list of addresses for the new Oracles being added\",\"_addedAdmins\":\"is the admin addresses for the new respective _added list. Only this address is allowed to access the respective oracle's funds\",\"_maxSubmissions\":\"is the new maximum submission count for each round\",\"_minSubmissions\":\"is the new minimum submission count for each round\",\"_removed\":\"is the list of addresses for the new Oracles being removed\",\"_restartDelay\":\"is the number of rounds an Oracle has to wait before they can initiate a round\"}},\"constructor\":{\"params\":{\"_decimals\":\"represents the number of decimals to offset the answer by\",\"_description\":\"a short description of what is being reported\",\"_link\":\"The address of the LINK token\",\"_maxSubmissionValue\":\"is an immutable check for an upper bound of what submission values are accepted from an oracle\",\"_minSubmissionValue\":\"is an immutable check for a lower bound of what submission values are accepted from an oracle\",\"_paymentAmount\":\"The amount paid of LINK paid to each oracle per submission, in wei (units of 10\\u207b\\u00b9\\u2078 LINK)\",\"_timeout\":\"is the number of seconds after the previous round that are allowed to lapse before allowing an oracle to skip an unfinished round\",\"_validator\":\"is an optional contract address for validating external validation of answers\"}},\"getAdmin(address)\":{\"params\":{\"_oracle\":\"is the address of the oracle whose admin is being queried\"}},\"getAnswer(uint256)\":{\"details\":\"overridden funcion to add the checkAccess() modifier#[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.\",\"params\":{\"_roundId\":\"the round number to retrieve the answer for\"}},\"getRoundData(uint80)\":{\"details\":\"overridden funcion to add the checkAccess() modifierNote that for in-progress rounds (i.e. rounds that haven't yet received maxSubmissions) answer and updatedAt may change between queries.\",\"params\":{\"_roundId\":\"the round ID to retrieve the round data for\"},\"returns\":{\"answer\":\"is the answer for the given round\",\"answeredInRound\":\"is the round ID of the round in which the answer was computed. answeredInRound may be smaller than roundId when the round timed out. answerInRound is equal to roundId when the round didn't time out and was completed regularly.\",\"roundId\":\"is the round ID for which data was retrieved\",\"startedAt\":\"is the timestamp when the round was started. This is 0 if the round hasn't been started yet.\",\"updatedAt\":\"is the timestamp when the round last was updated (i.e. answer was last computed)\"}},\"getTimestamp(uint256)\":{\"details\":\"overridden funcion to add the checkAccess() modifier#[deprecated] Use getRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended getRoundData instead which includes better verification information.\",\"params\":{\"_roundId\":\"the round number to retrieve the updated timestamp for\"}},\"hasAccess(address,bytes)\":{\"params\":{\"_user\":\"The address to query\"}},\"latestAnswer()\":{\"details\":\"overridden funcion to add the checkAccess() modifier#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information.\"},\"latestRound()\":{\"details\":\"overridden funcion to add the checkAccess() modifier#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information.\"},\"latestRoundData()\":{\"details\":\"overridden funcion to add the checkAccess() modifierNote that for in-progress rounds (i.e. rounds that haven't yet received maxSubmissions) answer and updatedAt may change between queries.\",\"returns\":{\"answer\":\"is the answer for the given round\",\"answeredInRound\":\"is the round ID of the round in which the answer was computed. answeredInRound may be smaller than roundId when the round timed out. answerInRound is equal to roundId when the round didn't time out and was completed regularly.\",\"roundId\":\"is the round ID for which data was retrieved\",\"startedAt\":\"is the timestamp when the round was started. This is 0 if the round hasn't been started yet.\",\"updatedAt\":\"is the timestamp when the round last was updated (i.e. answer was last computed)\"}},\"latestTimestamp()\":{\"details\":\"overridden funcion to add the checkAccess() modifier#[deprecated] Use latestRoundData instead. This does not error if no answer has been reached, it will simply return 0. Either wait to point to an already answered Aggregator or use the recommended latestRoundData instead which includes better verification information.\"},\"onTokenTransfer(address,uint256,bytes)\":{\"params\":{\"_data\":\"is mostly ignored. It is checked for length, to be sure nothing strange is passed in.\"}},\"oracleRoundState(address,uint32)\":{\"params\":{\"_oracle\":\"the address to look up information for.\"}},\"removeAccess(address)\":{\"params\":{\"_user\":\"The address to remove\"}},\"setRequesterPermissions(address,bool,uint32)\":{\"params\":{\"_authorized\":\"is a boolean specifying whether they can start new rounds or not\",\"_delay\":\"is the number of rounds the requester must wait before starting another round\",\"_requester\":\"is the address to set permissions for\"}},\"setValidator(address)\":{\"params\":{\"_newValidator\":\"designates the address of the new validation contract.\"}},\"submit(uint256,int256)\":{\"params\":{\"_roundId\":\"is the ID of the round this submission pertains to\",\"_submission\":\"is the updated data that the oracle is submitting\"}},\"transferAdmin(address,address)\":{\"params\":{\"_newAdmin\":\"is the new admin address\",\"_oracle\":\"is the address of the oracle whose admin is being transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"updateFutureRounds(uint128,uint32,uint32,uint32,uint32)\":{\"params\":{\"_maxSubmissions\":\"is the new maximum submission count for each round\",\"_minSubmissions\":\"is the new minimum submission count for each round\",\"_paymentAmount\":\"is the payment amount for subsequent rounds\",\"_restartDelay\":\"is the number of rounds an Oracle has to wait before they can initiate a round\"}},\"withdrawFunds(address,uint256)\":{\"params\":{\"_amount\":\"is the amount of LINK to send\",\"_recipient\":\"is the address to send the LINK to\"}},\"withdrawPayment(address,address,uint256)\":{\"params\":{\"_amount\":\"is the amount of LINK to send\",\"_oracle\":\"is the oracle whose LINK is transferred\",\"_recipient\":\"is the address to send the LINK to\"}}},\"title\":\"AccessControlled FluxAggregator contract\"},\"userdoc\":{\"methods\":{\"acceptAdmin(address)\":{\"notice\":\"accept the admin address transfer for an oracle\"},\"addAccess(address)\":{\"notice\":\"Adds an address to the access list\"},\"allocatedFunds()\":{\"notice\":\"the amount of payment yet to be withdrawn by oracles\"},\"availableFunds()\":{\"notice\":\"the amount of future funding available to oracles\"},\"changeOracles(address[],address[],address[],uint32,uint32,uint32)\":{\"notice\":\"called by the owner to remove and add new oracles as well as update the round related parameters that pertain to total oracle count\"},\"constructor\":\"set up the aggregator with initial configuration\",\"disableAccessCheck()\":{\"notice\":\"makes the access check unenforced\"},\"enableAccessCheck()\":{\"notice\":\"makes the access check enforced\"},\"getAdmin(address)\":{\"notice\":\"get the admin address of an oracle\"},\"getAnswer(uint256)\":{\"notice\":\"get past rounds answers\"},\"getOracles()\":{\"notice\":\"returns an array of addresses containing the oracles on contract\"},\"getRoundData(uint80)\":{\"notice\":\"get data about a round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values.\"},\"getTimestamp(uint256)\":{\"notice\":\"get timestamp when an answer was last updated\"},\"hasAccess(address,bytes)\":{\"notice\":\"Returns the access of an address\"},\"latestAnswer()\":{\"notice\":\"get the most recently reported answer\"},\"latestRound()\":{\"notice\":\"get the most recently reported round ID\"},\"latestRoundData()\":{\"notice\":\"get data about the latest round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values. Consumers are encouraged to use this more fully featured method over the \\\"legacy\\\" latestAnswer functions. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values.\"},\"latestTimestamp()\":{\"notice\":\"get the most recent updated at timestamp\"},\"onTokenTransfer(address,uint256,bytes)\":{\"notice\":\"called through LINK's transferAndCall to update available funds in the same transaction as the funds were transferred to the aggregator\"},\"oracleCount()\":{\"notice\":\"returns the number of oracles\"},\"oracleRoundState(address,uint32)\":{\"notice\":\"a method to provide all current info oracles need. Intended only only to be callable by oracles. Not for use by contracts to read state.\"},\"removeAccess(address)\":{\"notice\":\"Removes an address from the access list\"},\"requestNewRound()\":{\"notice\":\"allows non-oracles to request a new round\"},\"setRequesterPermissions(address,bool,uint32)\":{\"notice\":\"allows the owner to specify new non-oracles to start new rounds\"},\"setValidator(address)\":{\"notice\":\"method to update the address which does external data validation.\"},\"submit(uint256,int256)\":{\"notice\":\"called by oracles when they have witnessed a need to update\"},\"transferAdmin(address,address)\":{\"notice\":\"transfer the admin address for an oracle\"},\"updateAvailableFunds()\":{\"notice\":\"recalculate the amount of LINK available for payouts\"},\"updateFutureRounds(uint128,uint32,uint32,uint32,uint32)\":{\"notice\":\"update the round and payment related parameters for subsequent rounds\"},\"withdrawFunds(address,uint256)\":{\"notice\":\"transfers the owner's LINK to another address\"},\"withdrawPayment(address,address,uint256)\":{\"notice\":\"transfers the oracle's LINK to another address. Can only be called by the oracle's admin.\"},\"withdrawablePayment(address)\":{\"notice\":\"query the available amount of LINK for an oracle to withdraw\"}},\"notice\":\"This contract requires addresses to be added to a controller in order to read the answers stored in the FluxAggregator contract\"}},\"settings\":{\"compilationTarget\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/AccessControlledAggregator.sol\":\"AccessControlledAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/AccessControlledAggregator.sol\":{\"keccak256\":\"0xb8eaccad64204e684eb87a2edf5c5419dc2d3f51343463e07442c45e422a7798\",\"urls\":[\"bzz-raw://622ebb4b1a7b691fbe79f4930f268433833a06c58f52692edbdea611d799ffde\",\"dweb:/ipfs/QmYRAqu79Bfq9gGWZZ1wuss8cuB31ortjPMtmJ6EwTdwBe\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/FluxAggregator.sol\":{\"keccak256\":\"0x4f224674c5a97baa6613919ef79ef30416303bac5fce95f6b9698f8c65ada643\",\"urls\":[\"bzz-raw://298f2ad2f4ed0e32dfb2355bf48b60c398f92d9ee1d7447e8a8741e59d4710d2\",\"dweb:/ipfs/QmagtudecZLViSP2XFxXRLFii74ci7PbfP6t8WMKsWKoap\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/Median.sol\":{\"keccak256\":\"0x7d5f7e0c161b9e0476ced988b190130c37a2141f13a91c664fd043226a98fb83\",\"urls\":[\"bzz-raw://396ee17f9cc94d4a55147273eb00de166de60415c2691cca92d953b2b6b6d65e\",\"dweb:/ipfs/QmUnPtGVpwDuMivPiZiv9zzCQXf2t4jsM38VS1oM4CV3WT\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/Owned.sol\":{\"keccak256\":\"0x8cfbaaf9162c25fbdf40a1b38de6ec965e2c17d5f5e9b0f7ea814998a14a16cb\",\"urls\":[\"bzz-raw://173098f45ea9da30b932869ada24a37aea45c7f844858459527cdd4749f5c57f\",\"dweb:/ipfs/Qmb3dCZmkoLGPb6B1HTBtomd4kPHpwn1NhB71Z9SuKAksw\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/SafeMath128.sol\":{\"keccak256\":\"0xf9f8d939c849cdb5e6d07ec317d01083b6e2554310633831ffe8a219a43be9e3\",\"urls\":[\"bzz-raw://ccf0f38e67d5df926bc9c9d9b916add6e1520a421e9215772b6d4eacfa53e21f\",\"dweb:/ipfs/QmVc1JVzseDtC38m9RH1voG4D1HvxKZ2RaYTquNjvEJJJ7\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/SafeMath32.sol\":{\"keccak256\":\"0xdeb861fd382627ff8f614c942a98b96b701d719af81a1405caa41a1066272be7\",\"urls\":[\"bzz-raw://d8b977af733eda389474ea940fbdd8a989257100ed5341b85f56b271393eb161\",\"dweb:/ipfs/QmZGXnpsGNBpBt3NK24qeREkFiYZZfUN6L5mMfVfVoxM6y\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/SafeMath64.sol\":{\"keccak256\":\"0x3185ad7d0afd2bd436a2702b33706e3e0f37b93b9db310346fcc26da3b1b47b7\",\"urls\":[\"bzz-raw://e50b02c9472176ad55ba4431e31ed33d9f58965b799c9a1eba7da1937f9f5534\",\"dweb:/ipfs/QmfJdQ3iS2HbWJFeukcNwiXTZzte6oCLHqzErbNrp1C59Z\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/SignedSafeMath.sol\":{\"keccak256\":\"0x83e027df9251983d079e85187b87362d4898bc3052fd72ca365c89504b7f52ff\",\"urls\":[\"bzz-raw://3d56e6e2396d11b77828a3c6e531b525eb9d8c8a18e21aacac7284f46a74d8c0\",\"dweb:/ipfs/QmXvbrYGJVmnstRFZr3axhVT5ZCiWZSyCUnMu4p8jmNUHg\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/SimpleReadAccessController.sol\":{\"keccak256\":\"0xa0bf55a8355bdab4d846d62fd70a3d569dc1762a34b4e8a26ea1f7c654609fe5\",\"urls\":[\"bzz-raw://1831a7b3890f5a03c6c2ad3080a9d92c9a90adf75ac1903ac13c985525f6e0eb\",\"dweb:/ipfs/QmS1iXCVCSvXH5DnN8dsmMVikHSKGVXjTyrHyWAYUNW5Vx\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/SimpleWriteAccessController.sol\":{\"keccak256\":\"0x8720764bc773fc147c394de23ec3024edf9e69ac1dda563418fc3bf952b854d2\",\"urls\":[\"bzz-raw://0dba3559ac5afd181de2d4117342010df5358b6e8d06f92704fe1e9a97a77264\",\"dweb:/ipfs/Qmbk3Ws6cSbG8h5Q9XuruPVpkU9hDyV48J3pFpmgACytQw\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/interfaces/AccessControllerInterface.sol\":{\"keccak256\":\"0x6b4b9fb4b950233793c557bf42c5381ce09efe9066d80af7391a38114b33b6ae\",\"urls\":[\"bzz-raw://e5b9e820134561e3c70b485a54484da5e0a72651f95df80d5dbeb8b52c005819\",\"dweb:/ipfs/QmREfxu1Xb3TTBtoF35o85gw4WZefdvpZn2FGE8Qjzfnyv\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0x0e9b789c2f1b93d4d6ee417aa08531597a62b8e141b745d69ac3d10cda8d590e\",\"urls\":[\"bzz-raw://5fa4cb3b8b628a737c8695c90d818b80b4938677e07dbdc8156982210a3f5466\",\"dweb:/ipfs/QmPf4zA3ymoWQmzNzi7BvNe74zQ6MpasC7txUmr5Vo2Nsg\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0xfbc8193b0308883d76694a37ab791b58d9e229ae147a2e1297b7d4682a4b382d\",\"urls\":[\"bzz-raw://8185dfe554b4876a12be4d2eafd34bba48c77eaad8cf1837548f83b211eed1d9\",\"dweb:/ipfs/QmUHbu4yzzgtmsFM3oZrp3fh9XEQdgVHRBjuhHShpgwTgX\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x12f0e35e0320088f2110173226860e44309766c0f7022a2433efdebd5bf1a002\",\"urls\":[\"bzz-raw://44645044454c4013f5f3bc3fda54b507494fe95921bf75de9a329933cb32b19d\",\"dweb:/ipfs/QmfP8kZZw6zYKy6cVPxbatSDZHiwTSJ1iMGyiYKE25DHLw\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/interfaces/AggregatorValidatorInterface.sol\":{\"keccak256\":\"0x7b46614646c22ddf244bdc3cec8c2f8c2bbd519a6b08da07d4bcedf4f1d4a371\",\"urls\":[\"bzz-raw://87e293cb40066294af4734a2c9cf73a04831bc71f9d4ac121ceb8fd08eff6b4e\",\"dweb:/ipfs/QmeQt7bwCMJXF39VTGq8QSZSNyCEx4N2mSGRqSY3dfRQhQ\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xdbf46b45a4c9f38ba71a0391aed0e7b108854b619f292d907ae537228868bda6\",\"urls\":[\"bzz-raw://3ae40466809630c4731e2e3a697d6885727c577aaf260766c8a2f534ad3f6ee8\",\"dweb:/ipfs/QmTzpN5yP4Y5jvQ1ohfXFrce3sjzUiSChYJgZj9VvhVohG\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/vendor/SafeMath.sol\":{\"keccak256\":\"0x95dbe2dd5ab8682b99bc3d7d297b621d4237442da160f78d3323ee5c4a06ded3\",\"urls\":[\"bzz-raw://d753308ff4eb43fba6f9ede371a33f707c5818350770dcb078a7d78ac8251361\",\"dweb:/ipfs/Qme64eYKWoTQiP3WhqGHoMqrENNZ9L8SdBLQ2hx5SmzUda\"]}},\"version\":1}",
		"userdoc": {
			"methods": {
				"acceptAdmin(address)": {
					"notice": "accept the admin address transfer for an oracle"
				},
				"addAccess(address)": {
					"notice": "Adds an address to the access list"
				},
				"allocatedFunds()": {
					"notice": "the amount of payment yet to be withdrawn by oracles"
				},
				"availableFunds()": {
					"notice": "the amount of future funding available to oracles"
				},
				"changeOracles(address[],address[],address[],uint32,uint32,uint32)": {
					"notice": "called by the owner to remove and add new oracles as well as update the round related parameters that pertain to total oracle count"
				},
				"constructor": "set up the aggregator with initial configuration",
				"disableAccessCheck()": {
					"notice": "makes the access check unenforced"
				},
				"enableAccessCheck()": {
					"notice": "makes the access check enforced"
				},
				"getAdmin(address)": {
					"notice": "get the admin address of an oracle"
				},
				"getAnswer(uint256)": {
					"notice": "get past rounds answers"
				},
				"getOracles()": {
					"notice": "returns an array of addresses containing the oracles on contract"
				},
				"getRoundData(uint80)": {
					"notice": "get data about a round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values."
				},
				"getTimestamp(uint256)": {
					"notice": "get timestamp when an answer was last updated"
				},
				"hasAccess(address,bytes)": {
					"notice": "Returns the access of an address"
				},
				"latestAnswer()": {
					"notice": "get the most recently reported answer"
				},
				"latestRound()": {
					"notice": "get the most recently reported round ID"
				},
				"latestRoundData()": {
					"notice": "get data about the latest round. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values. Consumers are encouraged to use this more fully featured method over the \"legacy\" latestAnswer functions. Consumers are encouraged to check that they're receiving fresh data by inspecting the updatedAt and answeredInRound return values."
				},
				"latestTimestamp()": {
					"notice": "get the most recent updated at timestamp"
				},
				"onTokenTransfer(address,uint256,bytes)": {
					"notice": "called through LINK's transferAndCall to update available funds in the same transaction as the funds were transferred to the aggregator"
				},
				"oracleCount()": {
					"notice": "returns the number of oracles"
				},
				"oracleRoundState(address,uint32)": {
					"notice": "a method to provide all current info oracles need. Intended only only to be callable by oracles. Not for use by contracts to read state."
				},
				"removeAccess(address)": {
					"notice": "Removes an address from the access list"
				},
				"requestNewRound()": {
					"notice": "allows non-oracles to request a new round"
				},
				"setRequesterPermissions(address,bool,uint32)": {
					"notice": "allows the owner to specify new non-oracles to start new rounds"
				},
				"setValidator(address)": {
					"notice": "method to update the address which does external data validation."
				},
				"submit(uint256,int256)": {
					"notice": "called by oracles when they have witnessed a need to update"
				},
				"transferAdmin(address,address)": {
					"notice": "transfer the admin address for an oracle"
				},
				"updateAvailableFunds()": {
					"notice": "recalculate the amount of LINK available for payouts"
				},
				"updateFutureRounds(uint128,uint32,uint32,uint32,uint32)": {
					"notice": "update the round and payment related parameters for subsequent rounds"
				},
				"withdrawFunds(address,uint256)": {
					"notice": "transfers the owner's LINK to another address"
				},
				"withdrawPayment(address,address,uint256)": {
					"notice": "transfers the oracle's LINK to another address. Can only be called by the oracle's admin."
				},
				"withdrawablePayment(address)": {
					"notice": "query the available amount of LINK for an oracle to withdraw"
				}
			},
			"notice": "This contract requires addresses to be added to a controller in order to read the answers stored in the FluxAggregator contract"
		}
	},
	"sources": {
		"AccessControlledAggregator.sol": {
			"id": 0
		},
		"FluxAggregator.sol": {
			"id": 9
		},
		"Median.sol": {
			"id": 11
		},
		"vendor/SafeMath.sol": {
			"id": 62
		},
		"SignedSafeMath.sol": {
			"id": 18
		},
		"Owned.sol": {
			"id": 13
		},
		"SafeMath128.sol": {
			"id": 15
		},
		"SafeMath32.sol": {
			"id": 16
		},
		"SafeMath64.sol": {
			"id": 17
		},
		"interfaces/AggregatorV2V3Interface.sol": {
			"id": 28
		},
		"interfaces/AggregatorInterface.sol": {
			"id": 27
		},
		"interfaces/AggregatorV3Interface.sol": {
			"id": 29
		},
		"interfaces/AggregatorValidatorInterface.sol": {
			"id": 30
		},
		"interfaces/LinkTokenInterface.sol": {
			"id": 35
		},
		"SimpleReadAccessController.sol": {
			"id": 19
		},
		"SimpleWriteAccessController.sol": {
			"id": 20
		},
		"interfaces/AccessControllerInterface.sol": {
			"id": 26
		}
	},
	"sourceCodes": {
		"AccessControlledAggregator.sol": "pragma solidity 0.6.6;\n\nimport \"./FluxAggregator.sol\";\nimport \"./SimpleReadAccessController.sol\";\n\n/**\n * @title AccessControlled FluxAggregator contract\n * @notice This contract requires addresses to be added to a controller\n * in order to read the answers stored in the FluxAggregator contract\n */\ncontract AccessControlledAggregator is FluxAggregator, SimpleReadAccessController {\n\n  /**\n   * @notice set up the aggregator with initial configuration\n   * @param _link The address of the LINK token\n   * @param _paymentAmount The amount paid of LINK paid to each oracle per submission, in wei (units of 10⁻¹⁸ LINK)\n   * @param _timeout is the number of seconds after the previous round that are\n   * allowed to lapse before allowing an oracle to skip an unfinished round\n   * @param _validator is an optional contract address for validating\n   * external validation of answers\n   * @param _minSubmissionValue is an immutable check for a lower bound of what\n   * submission values are accepted from an oracle\n   * @param _maxSubmissionValue is an immutable check for an upper bound of what\n   * submission values are accepted from an oracle\n   * @param _decimals represents the number of decimals to offset the answer by\n   * @param _description a short description of what is being reported\n   */\n  constructor(\n    address _link,\n    uint128 _paymentAmount,\n    uint32 _timeout,\n    address _validator,\n    int256 _minSubmissionValue,\n    int256 _maxSubmissionValue,\n    uint8 _decimals,\n    string memory _description\n  ) public FluxAggregator(\n    _link,\n    _paymentAmount,\n    _timeout,\n    _validator,\n    _minSubmissionValue,\n    _maxSubmissionValue,\n    _decimals,\n    _description\n  ){}\n\n  /**\n   * @notice get data about a round. Consumers are encouraged to check\n   * that they're receiving fresh data by inspecting the updatedAt and\n   * answeredInRound return values.\n   * @param _roundId the round ID to retrieve the round data for\n   * @return roundId is the round ID for which data was retrieved\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started. This is 0\n   * if the round hasn't been started yet.\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed. answeredInRound may be smaller than roundId when the round\n   * timed out. answerInRound is equal to roundId when the round didn't time out\n   * and was completed regularly.\n   * @dev overridden funcion to add the checkAccess() modifier\n   * @dev Note that for in-progress rounds (i.e. rounds that haven't yet\n   * received maxSubmissions) answer and updatedAt may change between queries.\n   */\n  function getRoundData(uint80 _roundId)\n    public\n    view\n    override\n    checkAccess()\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return super.getRoundData(_roundId);\n  }\n\n  /**\n   * @notice get data about the latest round. Consumers are encouraged to check\n   * that they're receiving fresh data by inspecting the updatedAt and\n   * answeredInRound return values. Consumers are encouraged to\n   * use this more fully featured method over the \"legacy\" latestAnswer\n   * functions. Consumers are encouraged to check that they're receiving fresh\n   * data by inspecting the updatedAt and answeredInRound return values.\n   * @return roundId is the round ID for which data was retrieved\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started. This is 0\n   * if the round hasn't been started yet.\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed. answeredInRound may be smaller than roundId when the round\n   * timed out. answerInRound is equal to roundId when the round didn't time out\n   * and was completed regularly.\n   * @dev overridden funcion to add the checkAccess() modifier\n   * @dev Note that for in-progress rounds (i.e. rounds that haven't yet\n   * received maxSubmissions) answer and updatedAt may change between queries.\n   */\n  function latestRoundData()\n    public\n    view\n    override\n    checkAccess()\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return super.latestRoundData();\n  }\n\n  /**\n   * @notice get the most recently reported answer\n   * @dev overridden funcion to add the checkAccess() modifier\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestAnswer()\n    public\n    view\n    override\n    checkAccess()\n    returns (int256)\n  {\n    return super.latestAnswer();\n  }\n\n  /**\n   * @notice get the most recently reported round ID\n   * @dev overridden funcion to add the checkAccess() modifier\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestRound()\n    public\n    view\n    override\n    checkAccess()\n    returns (uint256)\n  {\n    return super.latestRound();\n  }\n\n  /**\n   * @notice get the most recent updated at timestamp\n   * @dev overridden funcion to add the checkAccess() modifier\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestTimestamp()\n    public\n    view\n    override\n    checkAccess()\n    returns (uint256)\n  {\n    return super.latestTimestamp();\n  }\n\n  /**\n   * @notice get past rounds answers\n   * @dev overridden funcion to add the checkAccess() modifier\n   * @param _roundId the round number to retrieve the answer for\n   *\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended getRoundData\n   * instead which includes better verification information.\n   */\n  function getAnswer(uint256 _roundId)\n    public\n    view\n    override\n    checkAccess()\n    returns (int256)\n  {\n    return super.getAnswer(_roundId);\n  }\n\n  /**\n   * @notice get timestamp when an answer was last updated\n   * @dev overridden funcion to add the checkAccess() modifier\n   * @param _roundId the round number to retrieve the updated timestamp for\n   *\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended getRoundData\n   * instead which includes better verification information.\n   */\n  function getTimestamp(uint256 _roundId)\n    public\n    view\n    override\n    checkAccess()\n    returns (uint256)\n  {\n    return super.getTimestamp(_roundId);\n  }\n\n}\n",
		"FluxAggregator.sol": "pragma solidity 0.6.6;\n\nimport \"./Median.sol\";\nimport \"./Owned.sol\";\nimport \"./SafeMath128.sol\";\nimport \"./SafeMath32.sol\";\nimport \"./SafeMath64.sol\";\nimport \"./interfaces/AggregatorV2V3Interface.sol\";\nimport \"./interfaces/AggregatorValidatorInterface.sol\";\nimport \"./interfaces/LinkTokenInterface.sol\";\nimport \"./vendor/SafeMath.sol\";\n\n/**\n * @title The Prepaid Aggregator contract\n * @notice Handles aggregating data pushed in from off-chain, and unlocks\n * payment for oracles as they report. Oracles' submissions are gathered in\n * rounds, with each round aggregating the submissions for each oracle into a\n * single answer. The latest aggregated answer is exposed as well as historical\n * answers and their updated at timestamp.\n */\ncontract FluxAggregator is AggregatorV2V3Interface, Owned {\n  using SafeMath for uint256;\n  using SafeMath128 for uint128;\n  using SafeMath64 for uint64;\n  using SafeMath32 for uint32;\n\n  struct Round {\n    int256 answer;\n    uint64 startedAt;\n    uint64 updatedAt;\n    uint32 answeredInRound;\n  }\n\n  struct RoundDetails {\n    int256[] submissions;\n    uint32 maxSubmissions;\n    uint32 minSubmissions;\n    uint32 timeout;\n    uint128 paymentAmount;\n  }\n\n  struct OracleStatus {\n    uint128 withdrawable;\n    uint32 startingRound;\n    uint32 endingRound;\n    uint32 lastReportedRound;\n    uint32 lastStartedRound;\n    int256 latestSubmission;\n    uint16 index;\n    address admin;\n    address pendingAdmin;\n  }\n\n  struct Requester {\n    bool authorized;\n    uint32 delay;\n    uint32 lastStartedRound;\n  }\n\n  struct Funds {\n    uint128 available;\n    uint128 allocated;\n  }\n\n  LinkTokenInterface public linkToken;\n  AggregatorValidatorInterface public validator;\n\n  // Round related params\n  uint128 public paymentAmount;\n  uint32 public maxSubmissionCount;\n  uint32 public minSubmissionCount;\n  uint32 public restartDelay;\n  uint32 public timeout;\n  uint8 public override decimals;\n  string public override description;\n\n  int256 immutable public minSubmissionValue;\n  int256 immutable public maxSubmissionValue;\n\n  uint256 constant public override version = 3;\n\n  /**\n   * @notice To ensure owner isn't withdrawing required funds as oracles are\n   * submitting updates, we enforce that the contract maintains a minimum\n   * reserve of RESERVE_ROUNDS * oracleCount() LINK earmarked for payment to\n   * oracles. (Of course, this doesn't prevent the contract from running out of\n   * funds without the owner's intervention.)\n   */\n  uint256 constant private RESERVE_ROUNDS = 2;\n  uint256 constant private MAX_ORACLE_COUNT = 77;\n  uint32 constant private ROUND_MAX = 2**32-1;\n  uint256 private constant VALIDATOR_GAS_LIMIT = 100000;\n  // An error specific to the Aggregator V3 Interface, to prevent possible\n  // confusion around accidentally reading unset values as reported values.\n  string constant private V3_NO_DATA_ERROR = \"No data present\";\n\n  uint32 private reportingRoundId;\n  uint32 internal latestRoundId;\n  mapping(address => OracleStatus) private oracles;\n  mapping(uint32 => Round) internal rounds;\n  mapping(uint32 => RoundDetails) internal details;\n  mapping(address => Requester) internal requesters;\n  address[] private oracleAddresses;\n  Funds private recordedFunds;\n\n  event AvailableFundsUpdated(\n    uint256 indexed amount\n  );\n  event RoundDetailsUpdated(\n    uint128 indexed paymentAmount,\n    uint32 indexed minSubmissionCount,\n    uint32 indexed maxSubmissionCount,\n    uint32 restartDelay,\n    uint32 timeout // measured in seconds\n  );\n  event OraclePermissionsUpdated(\n    address indexed oracle,\n    bool indexed whitelisted\n  );\n  event OracleAdminUpdated(\n    address indexed oracle,\n    address indexed newAdmin\n  );\n  event OracleAdminUpdateRequested(\n    address indexed oracle,\n    address admin,\n    address newAdmin\n  );\n  event SubmissionReceived(\n    int256 indexed submission,\n    uint32 indexed round,\n    address indexed oracle\n  );\n  event RequesterPermissionsSet(\n    address indexed requester,\n    bool authorized,\n    uint32 delay\n  );\n  event ValidatorUpdated(\n    address indexed previous,\n    address indexed current\n  );\n\n  /**\n   * @notice set up the aggregator with initial configuration\n   * @param _link The address of the LINK token\n   * @param _paymentAmount The amount paid of LINK paid to each oracle per submission, in wei (units of 10⁻¹⁸ LINK)\n   * @param _timeout is the number of seconds after the previous round that are\n   * allowed to lapse before allowing an oracle to skip an unfinished round\n   * @param _validator is an optional contract address for validating\n   * external validation of answers\n   * @param _minSubmissionValue is an immutable check for a lower bound of what\n   * submission values are accepted from an oracle\n   * @param _maxSubmissionValue is an immutable check for an upper bound of what\n   * submission values are accepted from an oracle\n   * @param _decimals represents the number of decimals to offset the answer by\n   * @param _description a short description of what is being reported\n   */\n  constructor(\n    address _link,\n    uint128 _paymentAmount,\n    uint32 _timeout,\n    address _validator,\n    int256 _minSubmissionValue,\n    int256 _maxSubmissionValue,\n    uint8 _decimals,\n    string memory _description\n  ) public {\n    linkToken = LinkTokenInterface(_link);\n    updateFutureRounds(_paymentAmount, 0, 0, 0, _timeout);\n    setValidator(_validator);\n    minSubmissionValue = _minSubmissionValue;\n    maxSubmissionValue = _maxSubmissionValue;\n    decimals = _decimals;\n    description = _description;\n    rounds[0].updatedAt = uint64(block.timestamp.sub(uint256(_timeout)));\n  }\n\n  /**\n   * @notice called by oracles when they have witnessed a need to update\n   * @param _roundId is the ID of the round this submission pertains to\n   * @param _submission is the updated data that the oracle is submitting\n   */\n  function submit(uint256 _roundId, int256 _submission)\n    external\n  {\n    bytes memory error = validateOracleRound(msg.sender, uint32(_roundId));\n    require(_submission >= minSubmissionValue, \"value below minSubmissionValue\");\n    require(_submission <= maxSubmissionValue, \"value above maxSubmissionValue\");\n    require(error.length == 0, string(error));\n\n    oracleInitializeNewRound(uint32(_roundId));\n    recordSubmission(_submission, uint32(_roundId));\n    (bool updated, int256 newAnswer) = updateRoundAnswer(uint32(_roundId));\n    payOracle(uint32(_roundId));\n    deleteRoundDetails(uint32(_roundId));\n    if (updated) {\n      validateAnswer(uint32(_roundId), newAnswer);\n    }\n  }\n\n  /**\n   * @notice called by the owner to remove and add new oracles as well as\n   * update the round related parameters that pertain to total oracle count\n   * @param _removed is the list of addresses for the new Oracles being removed\n   * @param _added is the list of addresses for the new Oracles being added\n   * @param _addedAdmins is the admin addresses for the new respective _added\n   * list. Only this address is allowed to access the respective oracle's funds\n   * @param _minSubmissions is the new minimum submission count for each round\n   * @param _maxSubmissions is the new maximum submission count for each round\n   * @param _restartDelay is the number of rounds an Oracle has to wait before\n   * they can initiate a round\n   */\n  function changeOracles(\n    address[] calldata _removed,\n    address[] calldata _added,\n    address[] calldata _addedAdmins,\n    uint32 _minSubmissions,\n    uint32 _maxSubmissions,\n    uint32 _restartDelay\n  )\n    external\n    onlyOwner()\n  {\n    for (uint256 i = 0; i < _removed.length; i++) {\n      removeOracle(_removed[i]);\n    }\n\n    require(_added.length == _addedAdmins.length, \"need same oracle and admin count\");\n    require(uint256(oracleCount()).add(_added.length) <= MAX_ORACLE_COUNT, \"max oracles allowed\");\n\n    for (uint256 i = 0; i < _added.length; i++) {\n      addOracle(_added[i], _addedAdmins[i]);\n    }\n\n    updateFutureRounds(paymentAmount, _minSubmissions, _maxSubmissions, _restartDelay, timeout);\n  }\n\n  /**\n   * @notice update the round and payment related parameters for subsequent\n   * rounds\n   * @param _paymentAmount is the payment amount for subsequent rounds\n   * @param _minSubmissions is the new minimum submission count for each round\n   * @param _maxSubmissions is the new maximum submission count for each round\n   * @param _restartDelay is the number of rounds an Oracle has to wait before\n   * they can initiate a round\n   */\n  function updateFutureRounds(\n    uint128 _paymentAmount,\n    uint32 _minSubmissions,\n    uint32 _maxSubmissions,\n    uint32 _restartDelay,\n    uint32 _timeout\n  )\n    public\n    onlyOwner()\n  {\n    uint32 oracleNum = oracleCount(); // Save on storage reads\n    require(_maxSubmissions >= _minSubmissions, \"max must equal/exceed min\");\n    require(oracleNum >= _maxSubmissions, \"max cannot exceed total\");\n    require(oracleNum == 0 || oracleNum > _restartDelay, \"delay cannot exceed total\");\n    require(recordedFunds.available >= requiredReserve(_paymentAmount), \"insufficient funds for payment\");\n    if (oracleCount() > 0) {\n      require(_minSubmissions > 0, \"min must be greater than 0\");\n    }\n\n    paymentAmount = _paymentAmount;\n    minSubmissionCount = _minSubmissions;\n    maxSubmissionCount = _maxSubmissions;\n    restartDelay = _restartDelay;\n    timeout = _timeout;\n\n    emit RoundDetailsUpdated(\n      paymentAmount,\n      _minSubmissions,\n      _maxSubmissions,\n      _restartDelay,\n      _timeout\n    );\n  }\n\n  /**\n   * @notice the amount of payment yet to be withdrawn by oracles\n   */\n  function allocatedFunds()\n    external\n    view\n    returns (uint128)\n  {\n    return recordedFunds.allocated;\n  }\n\n  /**\n   * @notice the amount of future funding available to oracles\n   */\n  function availableFunds()\n    external\n    view\n    returns (uint128)\n  {\n    return recordedFunds.available;\n  }\n\n  /**\n   * @notice recalculate the amount of LINK available for payouts\n   */\n  function updateAvailableFunds()\n    public\n  {\n    Funds memory funds = recordedFunds;\n\n    uint256 nowAvailable = linkToken.balanceOf(address(this)).sub(funds.allocated);\n\n    if (funds.available != nowAvailable) {\n      recordedFunds.available = uint128(nowAvailable);\n      emit AvailableFundsUpdated(nowAvailable);\n    }\n  }\n\n  /**\n   * @notice returns the number of oracles\n   */\n  function oracleCount() public view returns (uint8) {\n    return uint8(oracleAddresses.length);\n  }\n\n  /**\n   * @notice returns an array of addresses containing the oracles on contract\n   */\n  function getOracles() external view returns (address[] memory) {\n    return oracleAddresses;\n  }\n\n  /**\n   * @notice get the most recently reported answer\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestAnswer()\n    public\n    view\n    virtual\n    override\n    returns (int256)\n  {\n    return rounds[latestRoundId].answer;\n  }\n\n  /**\n   * @notice get the most recent updated at timestamp\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestTimestamp()\n    public\n    view\n    virtual\n    override\n    returns (uint256)\n  {\n    return rounds[latestRoundId].updatedAt;\n  }\n\n  /**\n   * @notice get the ID of the last updated round\n   *\n   * @dev #[deprecated] Use latestRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended latestRoundData\n   * instead which includes better verification information.\n   */\n  function latestRound()\n    public\n    view\n    virtual\n    override\n    returns (uint256)\n  {\n    return latestRoundId;\n  }\n\n  /**\n   * @notice get past rounds answers\n   * @param _roundId the round number to retrieve the answer for\n   *\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended getRoundData\n   * instead which includes better verification information.\n   */\n  function getAnswer(uint256 _roundId)\n    public\n    view\n    virtual\n    override\n    returns (int256)\n  {\n    if (validRoundId(_roundId)) {\n      return rounds[uint32(_roundId)].answer;\n    }\n    return 0;\n  }\n\n  /**\n   * @notice get timestamp when an answer was last updated\n   * @param _roundId the round number to retrieve the updated timestamp for\n   *\n   * @dev #[deprecated] Use getRoundData instead. This does not error if no\n   * answer has been reached, it will simply return 0. Either wait to point to\n   * an already answered Aggregator or use the recommended getRoundData\n   * instead which includes better verification information.\n   */\n  function getTimestamp(uint256 _roundId)\n    public\n    view\n    virtual\n    override\n    returns (uint256)\n  {\n    if (validRoundId(_roundId)) {\n      return rounds[uint32(_roundId)].updatedAt;\n    }\n    return 0;\n  }\n\n  /**\n   * @notice get data about a round. Consumers are encouraged to check\n   * that they're receiving fresh data by inspecting the updatedAt and\n   * answeredInRound return values.\n   * @param _roundId the round ID to retrieve the round data for\n   * @return roundId is the round ID for which data was retrieved\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started. This is 0\n   * if the round hasn't been started yet.\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed. answeredInRound may be smaller than roundId when the round\n   * timed out. answeredInRound is equal to roundId when the round didn't time out\n   * and was completed regularly.\n   * @dev Note that for in-progress rounds (i.e. rounds that haven't yet received\n   * maxSubmissions) answer and updatedAt may change between queries.\n   */\n  function getRoundData(uint80 _roundId)\n    public\n    view\n    virtual\n    override\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    Round memory r = rounds[uint32(_roundId)];\n\n    require(r.answeredInRound > 0 && validRoundId(_roundId), V3_NO_DATA_ERROR);\n\n    return (\n      _roundId,\n      r.answer,\n      r.startedAt,\n      r.updatedAt,\n      r.answeredInRound\n    );\n  }\n\n  /**\n   * @notice get data about the latest round. Consumers are encouraged to check\n   * that they're receiving fresh data by inspecting the updatedAt and\n   * answeredInRound return values. Consumers are encouraged to\n   * use this more fully featured method over the \"legacy\" latestRound/\n   * latestAnswer/latestTimestamp functions. Consumers are encouraged to check\n   * that they're receiving fresh data by inspecting the updatedAt and\n   * answeredInRound return values.\n   * @return roundId is the round ID for which data was retrieved\n   * @return answer is the answer for the given round\n   * @return startedAt is the timestamp when the round was started. This is 0\n   * if the round hasn't been started yet.\n   * @return updatedAt is the timestamp when the round last was updated (i.e.\n   * answer was last computed)\n   * @return answeredInRound is the round ID of the round in which the answer\n   * was computed. answeredInRound may be smaller than roundId when the round\n   * timed out. answeredInRound is equal to roundId when the round didn't time\n   * out and was completed regularly.\n   * @dev Note that for in-progress rounds (i.e. rounds that haven't yet\n   * received maxSubmissions) answer and updatedAt may change between queries.\n   */\n   function latestRoundData()\n    public\n    view\n    virtual\n    override\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    )\n  {\n    return getRoundData(latestRoundId);\n  }\n\n\n  /**\n   * @notice query the available amount of LINK for an oracle to withdraw\n   */\n  function withdrawablePayment(address _oracle)\n    external\n    view\n    returns (uint256)\n  {\n    return oracles[_oracle].withdrawable;\n  }\n\n  /**\n   * @notice transfers the oracle's LINK to another address. Can only be called\n   * by the oracle's admin.\n   * @param _oracle is the oracle whose LINK is transferred\n   * @param _recipient is the address to send the LINK to\n   * @param _amount is the amount of LINK to send\n   */\n  function withdrawPayment(address _oracle, address _recipient, uint256 _amount)\n    external\n  {\n    require(oracles[_oracle].admin == msg.sender, \"only callable by admin\");\n\n    // Safe to downcast _amount because the total amount of LINK is less than 2^128.\n    uint128 amount = uint128(_amount);\n    uint128 available = oracles[_oracle].withdrawable;\n    require(available >= amount, \"insufficient withdrawable funds\");\n\n    oracles[_oracle].withdrawable = available.sub(amount);\n    recordedFunds.allocated = recordedFunds.allocated.sub(amount);\n\n    assert(linkToken.transfer(_recipient, uint256(amount)));\n  }\n\n  /**\n   * @notice transfers the owner's LINK to another address\n   * @param _recipient is the address to send the LINK to\n   * @param _amount is the amount of LINK to send\n   */\n  function withdrawFunds(address _recipient, uint256 _amount)\n    external\n    onlyOwner()\n  {\n    uint256 available = uint256(recordedFunds.available);\n    require(available.sub(requiredReserve(paymentAmount)) >= _amount, \"insufficient reserve funds\");\n    require(linkToken.transfer(_recipient, _amount), \"token transfer failed\");\n    updateAvailableFunds();\n  }\n\n  /**\n   * @notice get the admin address of an oracle\n   * @param _oracle is the address of the oracle whose admin is being queried\n   */\n  function getAdmin(address _oracle)\n    external\n    view\n    returns (address)\n  {\n    return oracles[_oracle].admin;\n  }\n\n  /**\n   * @notice transfer the admin address for an oracle\n   * @param _oracle is the address of the oracle whose admin is being transferred\n   * @param _newAdmin is the new admin address\n   */\n  function transferAdmin(address _oracle, address _newAdmin)\n    external\n  {\n    require(oracles[_oracle].admin == msg.sender, \"only callable by admin\");\n    oracles[_oracle].pendingAdmin = _newAdmin;\n\n    emit OracleAdminUpdateRequested(_oracle, msg.sender, _newAdmin);\n  }\n\n  /**\n   * @notice accept the admin address transfer for an oracle\n   * @param _oracle is the address of the oracle whose admin is being transferred\n   */\n  function acceptAdmin(address _oracle)\n    external\n  {\n    require(oracles[_oracle].pendingAdmin == msg.sender, \"only callable by pending admin\");\n    oracles[_oracle].pendingAdmin = address(0);\n    oracles[_oracle].admin = msg.sender;\n\n    emit OracleAdminUpdated(_oracle, msg.sender);\n  }\n\n  /**\n   * @notice allows non-oracles to request a new round\n   */\n  function requestNewRound()\n    external\n    returns (uint80)\n  {\n    require(requesters[msg.sender].authorized, \"not authorized requester\");\n\n    uint32 current = reportingRoundId;\n    require(rounds[current].updatedAt > 0 || timedOut(current), \"prev round must be supersedable\");\n\n    uint32 newRoundId = current.add(1);\n    requesterInitializeNewRound(newRoundId);\n    return newRoundId;\n  }\n\n  /**\n   * @notice allows the owner to specify new non-oracles to start new rounds\n   * @param _requester is the address to set permissions for\n   * @param _authorized is a boolean specifying whether they can start new rounds or not\n   * @param _delay is the number of rounds the requester must wait before starting another round\n   */\n  function setRequesterPermissions(address _requester, bool _authorized, uint32 _delay)\n    external\n    onlyOwner()\n  {\n    if (requesters[_requester].authorized == _authorized) return;\n\n    if (_authorized) {\n      requesters[_requester].authorized = _authorized;\n      requesters[_requester].delay = _delay;\n    } else {\n      delete requesters[_requester];\n    }\n\n    emit RequesterPermissionsSet(_requester, _authorized, _delay);\n  }\n\n  /**\n   * @notice called through LINK's transferAndCall to update available funds\n   * in the same transaction as the funds were transferred to the aggregator\n   * @param _data is mostly ignored. It is checked for length, to be sure\n   * nothing strange is passed in.\n   */\n  function onTokenTransfer(address, uint256, bytes calldata _data)\n    external\n  {\n    require(_data.length == 0, \"transfer doesn't accept calldata\");\n    updateAvailableFunds();\n  }\n\n  /**\n   * @notice a method to provide all current info oracles need. Intended only\n   * only to be callable by oracles. Not for use by contracts to read state.\n   * @param _oracle the address to look up information for.\n   */\n  function oracleRoundState(address _oracle, uint32 _queriedRoundId)\n    external\n    view\n    returns (\n      bool _eligibleToSubmit,\n      uint32 _roundId,\n      int256 _latestSubmission,\n      uint64 _startedAt,\n      uint64 _timeout,\n      uint128 _availableFunds,\n      uint8 _oracleCount,\n      uint128 _paymentAmount\n    )\n  {\n    require(msg.sender == tx.origin, \"off-chain reading only\");\n\n    if (_queriedRoundId > 0) {\n      Round storage round = rounds[_queriedRoundId];\n      RoundDetails storage details = details[_queriedRoundId];\n      return (\n        eligibleForSpecificRound(_oracle, _queriedRoundId),\n        _queriedRoundId,\n        oracles[_oracle].latestSubmission,\n        round.startedAt,\n        details.timeout,\n        recordedFunds.available,\n        oracleCount(),\n        (round.startedAt > 0 ? details.paymentAmount : paymentAmount)\n      );\n    } else {\n      return oracleRoundStateSuggestRound(_oracle);\n    }\n  }\n\n  /**\n   * @notice method to update the address which does external data validation.\n   * @param _newValidator designates the address of the new validation contract.\n   */\n  function setValidator(address _newValidator)\n    public\n    onlyOwner()\n  {\n    address previous = address(validator);\n\n    if (previous != _newValidator) {\n      validator = AggregatorValidatorInterface(_newValidator);\n\n      emit ValidatorUpdated(previous, _newValidator);\n    }\n  }\n\n\n  /**\n   * Private\n   */\n\n  function initializeNewRound(uint32 _roundId)\n    private\n  {\n    updateTimedOutRoundInfo(_roundId.sub(1));\n\n    reportingRoundId = _roundId;\n    RoundDetails memory nextDetails = RoundDetails(\n      new int256[](0),\n      maxSubmissionCount,\n      minSubmissionCount,\n      timeout,\n      paymentAmount\n    );\n    details[_roundId] = nextDetails;\n    rounds[_roundId].startedAt = uint64(block.timestamp);\n\n    emit NewRound(_roundId, msg.sender, rounds[_roundId].startedAt);\n  }\n\n  function oracleInitializeNewRound(uint32 _roundId)\n    private\n  {\n    if (!newRound(_roundId)) return;\n    uint256 lastStarted = oracles[msg.sender].lastStartedRound; // cache storage reads\n    if (_roundId <= lastStarted + restartDelay && lastStarted != 0) return;\n\n    initializeNewRound(_roundId);\n\n    oracles[msg.sender].lastStartedRound = _roundId;\n  }\n\n  function requesterInitializeNewRound(uint32 _roundId)\n    private\n  {\n    if (!newRound(_roundId)) return;\n    uint256 lastStarted = requesters[msg.sender].lastStartedRound; // cache storage reads\n    require(_roundId > lastStarted + requesters[msg.sender].delay || lastStarted == 0, \"must delay requests\");\n\n    initializeNewRound(_roundId);\n\n    requesters[msg.sender].lastStartedRound = _roundId;\n  }\n\n  function updateTimedOutRoundInfo(uint32 _roundId)\n    private\n  {\n    if (!timedOut(_roundId)) return;\n\n    uint32 prevId = _roundId.sub(1);\n    rounds[_roundId].answer = rounds[prevId].answer;\n    rounds[_roundId].answeredInRound = rounds[prevId].answeredInRound;\n    rounds[_roundId].updatedAt = uint64(block.timestamp);\n\n    delete details[_roundId];\n  }\n\n  function eligibleForSpecificRound(address _oracle, uint32 _queriedRoundId)\n    private\n    view\n    returns (bool _eligible)\n  {\n    if (rounds[_queriedRoundId].startedAt > 0) {\n      return acceptingSubmissions(_queriedRoundId) && validateOracleRound(_oracle, _queriedRoundId).length == 0;\n    } else {\n      return delayed(_oracle, _queriedRoundId) && validateOracleRound(_oracle, _queriedRoundId).length == 0;\n    }\n  }\n\n  function oracleRoundStateSuggestRound(address _oracle)\n    private\n    view\n    returns (\n      bool _eligibleToSubmit,\n      uint32 _roundId,\n      int256 _latestSubmission,\n      uint64 _startedAt,\n      uint64 _timeout,\n      uint128 _availableFunds,\n      uint8 _oracleCount,\n      uint128 _paymentAmount\n    )\n  {\n    Round storage round = rounds[0];\n    OracleStatus storage oracle = oracles[_oracle];\n\n    bool shouldSupersede = oracle.lastReportedRound == reportingRoundId || !acceptingSubmissions(reportingRoundId);\n    // Instead of nudging oracles to submit to the next round, the inclusion of\n    // the shouldSupersede bool in the if condition pushes them towards\n    // submitting in a currently open round.\n    if (supersedable(reportingRoundId) && shouldSupersede) {\n      _roundId = reportingRoundId.add(1);\n      round = rounds[_roundId];\n\n      _paymentAmount = paymentAmount;\n      _eligibleToSubmit = delayed(_oracle, _roundId);\n    } else {\n      _roundId = reportingRoundId;\n      round = rounds[_roundId];\n\n      _paymentAmount = details[_roundId].paymentAmount;\n      _eligibleToSubmit = acceptingSubmissions(_roundId);\n    }\n\n    if (validateOracleRound(_oracle, _roundId).length != 0) {\n      _eligibleToSubmit = false;\n    }\n\n    return (\n      _eligibleToSubmit,\n      _roundId,\n      oracle.latestSubmission,\n      round.startedAt,\n      details[_roundId].timeout,\n      recordedFunds.available,\n      oracleCount(),\n      _paymentAmount\n    );\n  }\n\n  function updateRoundAnswer(uint32 _roundId)\n    internal\n    returns (bool, int256)\n  {\n    if (details[_roundId].submissions.length < details[_roundId].minSubmissions) {\n      return (false, 0);\n    }\n\n    int256 newAnswer = Median.calculateInplace(details[_roundId].submissions);\n    rounds[_roundId].answer = newAnswer;\n    rounds[_roundId].updatedAt = uint64(block.timestamp);\n    rounds[_roundId].answeredInRound = _roundId;\n    latestRoundId = _roundId;\n\n    emit AnswerUpdated(newAnswer, _roundId, now);\n\n    return (true, newAnswer);\n  }\n\n  function validateAnswer(\n    uint32 _roundId,\n    int256 _newAnswer\n  )\n    private\n  {\n    AggregatorValidatorInterface av = validator; // cache storage reads\n    if (address(av) == address(0)) return;\n\n    uint32 prevRound = _roundId.sub(1);\n    uint32 prevAnswerRoundId = rounds[prevRound].answeredInRound;\n    int256 prevRoundAnswer = rounds[prevRound].answer;\n    // We do not want the validator to ever prevent reporting, so we limit its\n    // gas usage and catch any errors that may arise.\n    try av.validate{gas: VALIDATOR_GAS_LIMIT}(\n      prevAnswerRoundId,\n      prevRoundAnswer,\n      _roundId,\n      _newAnswer\n    ) {} catch {}\n  }\n\n  function payOracle(uint32 _roundId)\n    private\n  {\n    uint128 payment = details[_roundId].paymentAmount;\n    Funds memory funds = recordedFunds;\n    funds.available = funds.available.sub(payment);\n    funds.allocated = funds.allocated.add(payment);\n    recordedFunds = funds;\n    oracles[msg.sender].withdrawable = oracles[msg.sender].withdrawable.add(payment);\n\n    emit AvailableFundsUpdated(funds.available);\n  }\n\n  function recordSubmission(int256 _submission, uint32 _roundId)\n    private\n  {\n    require(acceptingSubmissions(_roundId), \"round not accepting submissions\");\n\n    details[_roundId].submissions.push(_submission);\n    oracles[msg.sender].lastReportedRound = _roundId;\n    oracles[msg.sender].latestSubmission = _submission;\n\n    emit SubmissionReceived(_submission, _roundId, msg.sender);\n  }\n\n  function deleteRoundDetails(uint32 _roundId)\n    private\n  {\n    if (details[_roundId].submissions.length < details[_roundId].maxSubmissions) return;\n\n    delete details[_roundId];\n  }\n\n  function timedOut(uint32 _roundId)\n    private\n    view\n    returns (bool)\n  {\n    uint64 startedAt = rounds[_roundId].startedAt;\n    uint32 roundTimeout = details[_roundId].timeout;\n    return startedAt > 0 && roundTimeout > 0 && startedAt.add(roundTimeout) < block.timestamp;\n  }\n\n  function getStartingRound(address _oracle)\n    private\n    view\n    returns (uint32)\n  {\n    uint32 currentRound = reportingRoundId;\n    if (currentRound != 0 && currentRound == oracles[_oracle].endingRound) {\n      return currentRound;\n    }\n    return currentRound.add(1);\n  }\n\n  function previousAndCurrentUnanswered(uint32 _roundId, uint32 _rrId)\n    private\n    view\n    returns (bool)\n  {\n    return _roundId.add(1) == _rrId && rounds[_rrId].updatedAt == 0;\n  }\n\n  function requiredReserve(uint256 payment)\n    private\n    view\n    returns (uint256)\n  {\n    return payment.mul(oracleCount()).mul(RESERVE_ROUNDS);\n  }\n\n  function addOracle(\n    address _oracle,\n    address _admin\n  )\n    private\n  {\n    require(!oracleEnabled(_oracle), \"oracle already enabled\");\n\n    require(_admin != address(0), \"cannot set admin to 0\");\n    require(oracles[_oracle].admin == address(0) || oracles[_oracle].admin == _admin, \"owner cannot overwrite admin\");\n\n    oracles[_oracle].startingRound = getStartingRound(_oracle);\n    oracles[_oracle].endingRound = ROUND_MAX;\n    oracles[_oracle].index = uint16(oracleAddresses.length);\n    oracleAddresses.push(_oracle);\n    oracles[_oracle].admin = _admin;\n\n    emit OraclePermissionsUpdated(_oracle, true);\n    emit OracleAdminUpdated(_oracle, _admin);\n  }\n\n  function removeOracle(\n    address _oracle\n  )\n    private\n  {\n    require(oracleEnabled(_oracle), \"oracle not enabled\");\n\n    oracles[_oracle].endingRound = reportingRoundId.add(1);\n    address tail = oracleAddresses[uint256(oracleCount()).sub(1)];\n    uint16 index = oracles[_oracle].index;\n    oracles[tail].index = index;\n    delete oracles[_oracle].index;\n    oracleAddresses[index] = tail;\n    oracleAddresses.pop();\n\n    emit OraclePermissionsUpdated(_oracle, false);\n  }\n\n  function validateOracleRound(address _oracle, uint32 _roundId)\n    private\n    view\n    returns (bytes memory)\n  {\n    // cache storage reads\n    uint32 startingRound = oracles[_oracle].startingRound;\n    uint32 rrId = reportingRoundId;\n\n    if (startingRound == 0) return \"not enabled oracle\";\n    if (startingRound > _roundId) return \"not yet enabled oracle\";\n    if (oracles[_oracle].endingRound < _roundId) return \"no longer allowed oracle\";\n    if (oracles[_oracle].lastReportedRound >= _roundId) return \"cannot report on previous rounds\";\n    if (_roundId != rrId && _roundId != rrId.add(1) && !previousAndCurrentUnanswered(_roundId, rrId)) return \"invalid round to report\";\n    if (_roundId != 1 && !supersedable(_roundId.sub(1))) return \"previous round not supersedable\";\n  }\n\n  function supersedable(uint32 _roundId)\n    private\n    view\n    returns (bool)\n  {\n    return rounds[_roundId].updatedAt > 0 || timedOut(_roundId);\n  }\n\n  function oracleEnabled(address _oracle)\n    private\n    view\n    returns (bool)\n  {\n    return oracles[_oracle].endingRound == ROUND_MAX;\n  }\n\n  function acceptingSubmissions(uint32 _roundId)\n    private\n    view\n    returns (bool)\n  {\n    return details[_roundId].maxSubmissions != 0;\n  }\n\n  function delayed(address _oracle, uint32 _roundId)\n    private\n    view\n    returns (bool)\n  {\n    uint256 lastStarted = oracles[_oracle].lastStartedRound;\n    return _roundId > lastStarted + restartDelay || lastStarted == 0;\n  }\n\n  function newRound(uint32 _roundId)\n    private\n    view\n    returns (bool)\n  {\n    return _roundId == reportingRoundId.add(1);\n  }\n\n  function validRoundId(uint256 _roundId)\n    private\n    view\n    returns (bool)\n  {\n    return _roundId <= ROUND_MAX;\n  }\n\n}\n",
		"Median.sol": "pragma solidity ^0.6.0;\n\nimport \"./vendor/SafeMath.sol\";\nimport \"./SignedSafeMath.sol\";\n\nlibrary Median {\n  using SignedSafeMath for int256;\n\n  int256 constant INT_MAX = 2**255-1;\n\n  /**\n   * @notice Returns the sorted middle, or the average of the two middle indexed items if the\n   * array has an even number of elements.\n   * @dev The list passed as an argument isn't modified.\n   * @dev This algorithm has expected runtime O(n), but for adversarially chosen inputs\n   * the runtime is O(n^2).\n   * @param list The list of elements to compare\n   */\n  function calculate(int256[] memory list)\n    internal\n    pure\n    returns (int256)\n  {\n    return calculateInplace(copy(list));\n  }\n\n  /**\n   * @notice See documentation for function calculate.\n   * @dev The list passed as an argument may be permuted.\n   */\n  function calculateInplace(int256[] memory list)\n    internal\n    pure\n    returns (int256)\n  {\n    require(0 < list.length, \"list must not be empty\");\n    uint256 len = list.length;\n    uint256 middleIndex = len / 2;\n    if (len % 2 == 0) {\n      int256 median1;\n      int256 median2;\n      (median1, median2) = quickselectTwo(list, 0, len - 1, middleIndex - 1, middleIndex);\n      return SignedSafeMath.avg(median1, median2);\n    } else {\n      return quickselect(list, 0, len - 1, middleIndex);\n    }\n  }\n\n  /**\n   * @notice Maximum length of list that shortSelectTwo can handle\n   */\n  uint256 constant SHORTSELECTTWO_MAX_LENGTH = 7;\n\n  /**\n   * @notice Select the k1-th and k2-th element from list of length at most 7\n   * @dev Uses an optimal sorting network\n   */\n  function shortSelectTwo(\n    int256[] memory list,\n    uint256 lo,\n    uint256 hi,\n    uint256 k1,\n    uint256 k2\n  )\n    private\n    pure\n    returns (int256 k1th, int256 k2th)\n  {\n    // Uses an optimal sorting network (https://en.wikipedia.org/wiki/Sorting_network)\n    // for lists of length 7. Network layout is taken from\n    // http://jgamble.ripco.net/cgi-bin/nw.cgi?inputs=7&algorithm=hibbard&output=svg\n\n    uint256 len = hi + 1 - lo;\n    int256 x0 = list[lo + 0];\n    int256 x1 = 1 < len ? list[lo + 1] : INT_MAX;\n    int256 x2 = 2 < len ? list[lo + 2] : INT_MAX;\n    int256 x3 = 3 < len ? list[lo + 3] : INT_MAX;\n    int256 x4 = 4 < len ? list[lo + 4] : INT_MAX;\n    int256 x5 = 5 < len ? list[lo + 5] : INT_MAX;\n    int256 x6 = 6 < len ? list[lo + 6] : INT_MAX;\n\n    if (x0 > x1) {(x0, x1) = (x1, x0);}\n    if (x2 > x3) {(x2, x3) = (x3, x2);}\n    if (x4 > x5) {(x4, x5) = (x5, x4);}\n    if (x0 > x2) {(x0, x2) = (x2, x0);}\n    if (x1 > x3) {(x1, x3) = (x3, x1);}\n    if (x4 > x6) {(x4, x6) = (x6, x4);}\n    if (x1 > x2) {(x1, x2) = (x2, x1);}\n    if (x5 > x6) {(x5, x6) = (x6, x5);}\n    if (x0 > x4) {(x0, x4) = (x4, x0);}\n    if (x1 > x5) {(x1, x5) = (x5, x1);}\n    if (x2 > x6) {(x2, x6) = (x6, x2);}\n    if (x1 > x4) {(x1, x4) = (x4, x1);}\n    if (x3 > x6) {(x3, x6) = (x6, x3);}\n    if (x2 > x4) {(x2, x4) = (x4, x2);}\n    if (x3 > x5) {(x3, x5) = (x5, x3);}\n    if (x3 > x4) {(x3, x4) = (x4, x3);}\n\n    uint256 index1 = k1 - lo;\n    if (index1 == 0) {k1th = x0;}\n    else if (index1 == 1) {k1th = x1;}\n    else if (index1 == 2) {k1th = x2;}\n    else if (index1 == 3) {k1th = x3;}\n    else if (index1 == 4) {k1th = x4;}\n    else if (index1 == 5) {k1th = x5;}\n    else if (index1 == 6) {k1th = x6;}\n    else {revert(\"k1 out of bounds\");}\n\n    uint256 index2 = k2 - lo;\n    if (k1 == k2) {return (k1th, k1th);}\n    else if (index2 == 0) {return (k1th, x0);}\n    else if (index2 == 1) {return (k1th, x1);}\n    else if (index2 == 2) {return (k1th, x2);}\n    else if (index2 == 3) {return (k1th, x3);}\n    else if (index2 == 4) {return (k1th, x4);}\n    else if (index2 == 5) {return (k1th, x5);}\n    else if (index2 == 6) {return (k1th, x6);}\n    else {revert(\"k2 out of bounds\");}\n  }\n\n  /**\n   * @notice Selects the k-th ranked element from list, looking only at indices between lo and hi\n   * (inclusive). Modifies list in-place.\n   */\n  function quickselect(int256[] memory list, uint256 lo, uint256 hi, uint256 k)\n    private\n    pure\n    returns (int256 kth)\n  {\n    require(lo <= k);\n    require(k <= hi);\n    while (lo < hi) {\n      if (hi - lo < SHORTSELECTTWO_MAX_LENGTH) {\n        int256 ignore;\n        (kth, ignore) = shortSelectTwo(list, lo, hi, k, k);\n        return kth;\n      }\n      uint256 pivotIndex = partition(list, lo, hi);\n      if (k <= pivotIndex) {\n        // since pivotIndex < (original hi passed to partition),\n        // termination is guaranteed in this case\n        hi = pivotIndex;\n      } else {\n        // since (original lo passed to partition) <= pivotIndex,\n        // termination is guaranteed in this case\n        lo = pivotIndex + 1;\n      }\n    }\n    return list[lo];\n  }\n\n  /**\n   * @notice Selects the k1-th and k2-th ranked elements from list, looking only at indices between\n   * lo and hi (inclusive). Modifies list in-place.\n   */\n  function quickselectTwo(\n    int256[] memory list,\n    uint256 lo,\n    uint256 hi,\n    uint256 k1,\n    uint256 k2\n  )\n    internal // for testing\n    pure\n    returns (int256 k1th, int256 k2th)\n  {\n    require(k1 < k2);\n    require(lo <= k1 && k1 <= hi);\n    require(lo <= k2 && k2 <= hi);\n\n    while (true) {\n      if (hi - lo < SHORTSELECTTWO_MAX_LENGTH) {\n        return shortSelectTwo(list, lo, hi, k1, k2);\n      }\n      uint256 pivotIdx = partition(list, lo, hi);\n      if (k2 <= pivotIdx) {\n        hi = pivotIdx;\n      } else if (pivotIdx < k1) {\n        lo = pivotIdx + 1;\n      } else {\n        assert(k1 <= pivotIdx && pivotIdx < k2);\n        k1th = quickselect(list, lo, pivotIdx, k1);\n        k2th = quickselect(list, pivotIdx + 1, hi, k2);\n        return (k1th, k2th);\n      }\n    }\n  }\n\n  /**\n   * @notice Partitions list in-place using Hoare's partitioning scheme.\n   * Only elements of list between indices lo and hi (inclusive) will be modified.\n   * Returns an index i, such that:\n   * - lo <= i < hi\n   * - forall j in [lo, i]. list[j] <= list[i]\n   * - forall j in [i, hi]. list[i] <= list[j]\n   */\n  function partition(int256[] memory list, uint256 lo, uint256 hi)\n    private\n    pure\n    returns (uint256)\n  {\n    // We don't care about overflow of the addition, because it would require a list\n    // larger than any feasible computer's memory.\n    int256 pivot = list[(lo + hi) / 2];\n    lo -= 1; // this can underflow. that's intentional.\n    hi += 1;\n    while (true) {\n      do {\n        lo += 1;\n      } while (list[lo] < pivot);\n      do {\n        hi -= 1;\n      } while (list[hi] > pivot);\n      if (lo < hi) {\n        (list[lo], list[hi]) = (list[hi], list[lo]);\n      } else {\n        // Let orig_lo and orig_hi be the original values of lo and hi passed to partition.\n        // Then, hi < orig_hi, because hi decreases *strictly* monotonically\n        // in each loop iteration and\n        // - either list[orig_hi] > pivot, in which case the first loop iteration\n        //   will achieve hi < orig_hi;\n        // - or list[orig_hi] <= pivot, in which case at least two loop iterations are\n        //   needed:\n        //   - lo will have to stop at least once in the interval\n        //     [orig_lo, (orig_lo + orig_hi)/2]\n        //   - (orig_lo + orig_hi)/2 < orig_hi\n        return hi;\n      }\n    }\n  }\n\n  /**\n   * @notice Makes an in-memory copy of the array passed in\n   * @param list Reference to the array to be copied\n   */\n  function copy(int256[] memory list)\n    private\n    pure\n    returns(int256[] memory)\n  {\n    int256[] memory list2 = new int256[](list.length);\n    for (uint256 i = 0; i < list.length; i++) {\n      list2[i] = list[i];\n    }\n    return list2;\n  }\n}\n",
		"vendor/SafeMath.sol": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n",
		"SignedSafeMath.sol": "pragma solidity ^0.6.0;\n\nlibrary SignedSafeMath {\n  int256 constant private _INT256_MIN = -2**255;\n\n  /**\n   * @dev Multiplies two signed integers, reverts on overflow.\n   */\n  function mul(int256 a, int256 b) internal pure returns (int256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    require(!(a == -1 && b == _INT256_MIN), \"SignedSafeMath: multiplication overflow\");\n\n    int256 c = a * b;\n    require(c / a == b, \"SignedSafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Integer division of two signed integers truncating the quotient, reverts on division by zero.\n   */\n  function div(int256 a, int256 b) internal pure returns (int256) {\n    require(b != 0, \"SignedSafeMath: division by zero\");\n    require(!(b == -1 && a == _INT256_MIN), \"SignedSafeMath: division overflow\");\n\n    int256 c = a / b;\n\n    return c;\n  }\n\n  /**\n   * @dev Subtracts two signed integers, reverts on overflow.\n   */\n  function sub(int256 a, int256 b) internal pure returns (int256) {\n    int256 c = a - b;\n    require((b >= 0 && c <= a) || (b < 0 && c > a), \"SignedSafeMath: subtraction overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Adds two signed integers, reverts on overflow.\n   */\n  function add(int256 a, int256 b) internal pure returns (int256) {\n    int256 c = a + b;\n    require((b >= 0 && c >= a) || (b < 0 && c < a), \"SignedSafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @notice Computes average of two signed integers, ensuring that the computation\n   * doesn't overflow.\n   * @dev If the result is not an integer, it is rounded towards zero. For example,\n   * avg(-3, -4) = -3\n   */\n  function avg(int256 _a, int256 _b)\n    internal\n    pure\n    returns (int256)\n  {\n    if ((_a < 0 && _b > 0) || (_a > 0 && _b < 0)) {\n      return add(_a, _b) / 2;\n    }\n    int256 remainder = (_a % 2 + _b % 2) / 2;\n    return add(add(_a / 2, _b / 2), remainder);\n  }\n}\n",
		"Owned.sol": "pragma solidity ^0.6.0;\n\n/**\n * @title The Owned contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract Owned {\n\n  address payable public owner;\n  address private pendingOwner;\n\n  event OwnershipTransferRequested(\n    address indexed from,\n    address indexed to\n  );\n  event OwnershipTransferred(\n    address indexed from,\n    address indexed to\n  );\n\n  constructor() public {\n    owner = msg.sender;\n  }\n\n  /**\n   * @dev Allows an owner to begin transferring ownership to a new address,\n   * pending.\n   */\n  function transferOwnership(address _to)\n    external\n    onlyOwner()\n  {\n    pendingOwner = _to;\n\n    emit OwnershipTransferRequested(owner, _to);\n  }\n\n  /**\n   * @dev Allows an ownership transfer to be completed by the recipient.\n   */\n  function acceptOwnership()\n    external\n  {\n    require(msg.sender == pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = owner;\n    owner = msg.sender;\n    pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /**\n   * @dev Reverts if called by anyone other than the contract owner.\n   */\n  modifier onlyOwner() {\n    require(msg.sender == owner, \"Only callable by owner\");\n    _;\n  }\n\n}\n",
		"SafeMath128.sol": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * This library is a version of Open Zeppelin's SafeMath, modified to support\n * unsigned 128 bit integers.\n */\nlibrary SafeMath128 {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint128 a, uint128 b) internal pure returns (uint128) {\n    uint128 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint128 a, uint128 b) internal pure returns (uint128) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint128 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint128 a, uint128 b) internal pure returns (uint128) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint128 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint128 a, uint128 b) internal pure returns (uint128) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint128 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint128 a, uint128 b) internal pure returns (uint128) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n",
		"SafeMath32.sol": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * This library is a version of Open Zeppelin's SafeMath, modified to support\n * unsigned 32 bit integers.\n */\nlibrary SafeMath32 {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint32 a, uint32 b) internal pure returns (uint32) {\n    uint32 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint32 a, uint32 b) internal pure returns (uint32) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint32 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint32 a, uint32 b) internal pure returns (uint32) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint32 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint32 a, uint32 b) internal pure returns (uint32) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint32 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint32 a, uint32 b) internal pure returns (uint32) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n",
		"SafeMath64.sol": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * This library is a version of Open Zeppelin's SafeMath, modified to support\n * unsigned 64 bit integers.\n */\nlibrary SafeMath64 {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint64 a, uint64 b) internal pure returns (uint64) {\n    uint64 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint64 a, uint64 b) internal pure returns (uint64) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint64 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint64 a, uint64 b) internal pure returns (uint64) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint64 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint64 a, uint64 b) internal pure returns (uint64) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint64 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint64 a, uint64 b) internal pure returns (uint64) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n",
		"interfaces/AggregatorV2V3Interface.sol": "pragma solidity >=0.6.0;\n\nimport \"./AggregatorInterface.sol\";\nimport \"./AggregatorV3Interface.sol\";\n\ninterface AggregatorV2V3Interface is AggregatorInterface, AggregatorV3Interface\n{\n}\n",
		"interfaces/AggregatorInterface.sol": "pragma solidity >=0.6.0;\n\ninterface AggregatorInterface {\n  function latestAnswer() external view returns (int256);\n  function latestTimestamp() external view returns (uint256);\n  function latestRound() external view returns (uint256);\n  function getAnswer(uint256 roundId) external view returns (int256);\n  function getTimestamp(uint256 roundId) external view returns (uint256);\n\n  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);\n  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);\n}\n",
		"interfaces/AggregatorV3Interface.sol": "pragma solidity >=0.6.0;\n\ninterface AggregatorV3Interface {\n\n  function decimals() external view returns (uint8);\n  function description() external view returns (string memory);\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}\n",
		"interfaces/AggregatorValidatorInterface.sol": "pragma solidity ^0.6.0;\n\ninterface AggregatorValidatorInterface {\n  function validate(\n    uint256 previousRoundId,\n    int256 previousAnswer,\n    uint256 currentRoundId,\n    int256 currentAnswer\n  ) external returns (bool);\n}\n",
		"interfaces/LinkTokenInterface.sol": "pragma solidity ^0.6.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n  function approve(address spender, uint256 value) external returns (bool success);\n  function balanceOf(address owner) external view returns (uint256 balance);\n  function decimals() external view returns (uint8 decimalPlaces);\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n  function name() external view returns (string memory tokenName);\n  function symbol() external view returns (string memory tokenSymbol);\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n  function transfer(address to, uint256 value) external returns (bool success);\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n",
		"SimpleReadAccessController.sol": "pragma solidity ^0.6.0;\n\nimport \"./SimpleWriteAccessController.sol\";\n\n/**\n * @title SimpleReadAccessController\n * @notice Gives access to:\n * - any externally owned account (note that offchain actors can always read\n * any contract storage regardless of onchain access control measures, so this\n * does not weaken the access control while improving usability)\n * - accounts explicitly added to an access list\n * @dev SimpleReadAccessController is not suitable for access controlling writes\n * since it grants any externally owned account access! See\n * SimpleWriteAccessController for that.\n */\ncontract SimpleReadAccessController is SimpleWriteAccessController {\n\n  /**\n   * @notice Returns the access of an address\n   * @param _user The address to query\n   */\n  function hasAccess(\n    address _user,\n    bytes memory _calldata\n  )\n    public\n    view\n    virtual\n    override\n    returns (bool)\n  {\n    return super.hasAccess(_user, _calldata) || _user == tx.origin;\n  }\n\n}\n",
		"SimpleWriteAccessController.sol": "pragma solidity ^0.6.0;\n\nimport \"./Owned.sol\";\nimport \"./interfaces/AccessControllerInterface.sol\";\n\n/**\n * @title SimpleWriteAccessController\n * @notice Gives access to accounts explicitly added to an access list by the\n * controller's owner.\n * @dev does not make any special permissions for externally, see\n * SimpleReadAccessController for that.\n */\ncontract SimpleWriteAccessController is AccessControllerInterface, Owned {\n\n  bool public checkEnabled;\n  mapping(address => bool) internal accessList;\n\n  event AddedAccess(address user);\n  event RemovedAccess(address user);\n  event CheckAccessEnabled();\n  event CheckAccessDisabled();\n\n  constructor()\n    public\n  {\n    checkEnabled = true;\n  }\n\n  /**\n   * @notice Returns the access of an address\n   * @param _user The address to query\n   */\n  function hasAccess(\n    address _user,\n    bytes memory\n  )\n    public\n    view\n    virtual\n    override\n    returns (bool)\n  {\n    return accessList[_user] || !checkEnabled;\n  }\n\n  /**\n   * @notice Adds an address to the access list\n   * @param _user The address to add\n   */\n  function addAccess(address _user)\n    external\n    onlyOwner()\n  {\n    if (!accessList[_user]) {\n      accessList[_user] = true;\n\n      emit AddedAccess(_user);\n    }\n  }\n\n  /**\n   * @notice Removes an address from the access list\n   * @param _user The address to remove\n   */\n  function removeAccess(address _user)\n    external\n    onlyOwner()\n  {\n    if (accessList[_user]) {\n      accessList[_user] = false;\n\n      emit RemovedAccess(_user);\n    }\n  }\n\n  /**\n   * @notice makes the access check enforced\n   */\n  function enableAccessCheck()\n    external\n    onlyOwner()\n  {\n    if (!checkEnabled) {\n      checkEnabled = true;\n\n      emit CheckAccessEnabled();\n    }\n  }\n\n  /**\n   * @notice makes the access check unenforced\n   */\n  function disableAccessCheck()\n    external\n    onlyOwner()\n  {\n    if (checkEnabled) {\n      checkEnabled = false;\n\n      emit CheckAccessDisabled();\n    }\n  }\n\n  /**\n   * @dev reverts if the caller does not have access\n   */\n  modifier checkAccess() {\n    require(hasAccess(msg.sender, msg.data), \"No access\");\n    _;\n  }\n}\n",
		"interfaces/AccessControllerInterface.sol": "pragma solidity ^0.6.0;\n\ninterface AccessControllerInterface {\n  function hasAccess(address user, bytes calldata data) external view returns (bool);\n}\n"
	},
	"sourceTreeHashHex": "0xe7b7a3f5739d7b7e10ad3b425476598d0717a469dd0bb07ebd5356b960e00419",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.6.6+commit.6c089d02.js",
		"settings": {
			"optimizer": {
				"runs": 1000000,
				"enabled": true
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"userdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap",
						"evm.methodIdentifiers",
						"metadata"
					]
				}
			},
			"remappings": []
		}
	},
	"chains": {}
}