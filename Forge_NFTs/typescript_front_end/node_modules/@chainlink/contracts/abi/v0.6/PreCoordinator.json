{
	"schemaVersion": "2.0.0",
	"contractName": "PreCoordinator",
	"compilerOutput": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_link",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "ChainlinkCancelled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "ChainlinkFulfilled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "ChainlinkRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "saId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "payment",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "minresponses",
						"type": "uint256"
					}
				],
				"name": "NewServiceAgreement",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "saId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "answer",
						"type": "int256"
					}
				],
				"name": "ServiceAgreementAnswerUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "saId",
						"type": "bytes32"
					}
				],
				"name": "ServiceAgreementDeleted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "saId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "payment",
						"type": "uint256"
					}
				],
				"name": "ServiceAgreementRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "saId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "oracle",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "answer",
						"type": "int256"
					}
				],
				"name": "ServiceAgreementResponseReceived",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_requestId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "_payment",
						"type": "uint256"
					},
					{
						"internalType": "bytes4",
						"name": "_callbackFunctionId",
						"type": "bytes4"
					},
					{
						"internalType": "uint256",
						"name": "_expiration",
						"type": "uint256"
					}
				],
				"name": "cancelOracleRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_requestId",
						"type": "bytes32"
					},
					{
						"internalType": "int256",
						"name": "_data",
						"type": "int256"
					}
				],
				"name": "chainlinkCallback",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_minResponses",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "_oracles",
						"type": "address[]"
					},
					{
						"internalType": "bytes32[]",
						"name": "_jobIds",
						"type": "bytes32[]"
					},
					{
						"internalType": "uint256[]",
						"name": "_payments",
						"type": "uint256[]"
					}
				],
				"name": "createServiceAgreement",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "saId",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getChainlinkToken",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_saId",
						"type": "bytes32"
					}
				],
				"name": "getServiceAgreement",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "totalPayment",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minResponses",
						"type": "uint256"
					},
					{
						"internalType": "address[]",
						"name": "oracles",
						"type": "address[]"
					},
					{
						"internalType": "bytes32[]",
						"name": "jobIds",
						"type": "bytes32[]"
					},
					{
						"internalType": "uint256[]",
						"name": "payments",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isOwner",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_sender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "onTokenTransfer",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_sender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_payment",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "_saId",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "_callbackAddress",
						"type": "address"
					},
					{
						"internalType": "bytes4",
						"name": "_callbackFunctionId",
						"type": "bytes4"
					},
					{
						"internalType": "uint256",
						"name": "_nonce",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "oracleRequest",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawLink",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "This contract accepts requests as service agreement IDs and loops over the corresponding list of oracles to create distinct requests to each one.",
			"methods": {
				"cancelOracleRequest(bytes32,uint256,bytes4,uint256)": {
					"params": {
						"_callbackFunctionId": "The bytes4 callback function ID specified for the request to cancel",
						"_expiration": "The expiration generated for the request to cancel",
						"_payment": "The payment specified for the request to cancel",
						"_requestId": "The ID that was generated for the request to cancel"
					}
				},
				"chainlinkCallback(bytes32,int256)": {
					"details": "The recordChainlinkFulfillment protects this function from being called by anyone other than the oracle address that the request was sent to",
					"params": {
						"_data": "The answer provided by the oracle",
						"_requestId": "The ID that was generated for the request"
					}
				},
				"constructor": {
					"details": "Sets the storage for the specified addresses",
					"params": {
						"_link": "The address of the LINK token contract"
					}
				},
				"createServiceAgreement(uint256,address[],bytes32[],uint256[])": {
					"details": "The globalNonce keeps service agreement IDs unique. Assume one cannot create the max uint256 number of service agreements in the same block.",
					"params": {
						"_jobIds": "The corresponding list of Job IDs.",
						"_minResponses": "The minimum number of responses before the requesting contract is called with the response data.",
						"_oracles": "The list of oracle contract addresses.",
						"_payments": "The corresponding list of payment amounts."
					}
				},
				"getChainlinkToken()": {
					"details": "This is the public implementation for chainlinkTokenAddress, which is an internal method of the ChainlinkClient contract"
				},
				"getServiceAgreement(bytes32)": {
					"details": "This function is used instead of the public mapping to return the values of the arrays: oracles, jobIds, and payments."
				},
				"isOwner()": {
					"details": "Returns true if the caller is the current owner."
				},
				"onTokenTransfer(address,uint256,bytes)": {
					"details": "The data payload's first 2 words will be overwritten by the `_sender` and `_amount` values to ensure correctness. Calls oracleRequest.",
					"params": {
						"_amount": "Amount of LINK sent (specified in wei)",
						"_data": "Payload of the transaction",
						"_sender": "Address of the sender"
					}
				},
				"oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)": {
					"details": "Stores the hash of the params as the on-chain commitment for the request. Emits OracleRequest event for the Chainlink node to detect.",
					"params": {
						"_callbackAddress": "The callback address for the response",
						"_callbackFunctionId": "The callback function ID for the response",
						"_data": "The CBOR payload of the request",
						"_nonce": "The nonce sent by the requester",
						"_payment": "The amount of payment given (specified in wei)",
						"_saId": "The Job Specification ID",
						"_sender": "The sender of the request"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"withdrawLink()": {
					"details": "The only valid case for there to be remaining LINK on this contract is if a user accidentally sent LINK directly to this contract's address."
				}
			},
			"title": "PreCoordinator is a contract that builds on-chain service agreements using the current architecture of 1 request to 1 oracle contract."
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x608060405260016004553480156200001657600080fd5b506040516200385738038062003857833981810160405260208110156200003c57600080fd5b5051600680546001600160a01b0319163317908190556040516001600160a01b0391909116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b038116620000b257620000ac6001600160e01b03620000cd16565b620000c6565b620000c6816001600160e01b036200015e16565b5062000180565b6200015c73c89bd4e1632d3a43cb03aaad5262cbe4038bc5716001600160a01b03166338cc48316040518163ffffffff1660e01b815260040160206040518083038186803b1580156200011f57600080fd5b505afa15801562000134573d6000803e3d6000fd5b505050506040513d60208110156200014b57600080fd5b50516001600160e01b036200015e16565b565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6136c780620001906000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638da5cb5b11610081578063a4c0ed361161005b578063a4c0ed36146103a4578063af52c9811461046c578063f2fde38b14610575576100c9565b80638da5cb5b1461038c5780638dc654a2146103945780638f32d59b1461039c576100c9565b80636a9705b4116100b25780636a9705b4146101d75780636ee4d5531461020e578063834b55e01461025f576100c9565b8063165d35e1146100ce57806340429946146100ff575b600080fd5b6100d66105a8565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101d5600480360361010081101561011657600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235811692602081013592604082013592606083013516917fffffffff000000000000000000000000000000000000000000000000000000006080820135169160a08201359160c081013591810190610100810160e082013564010000000081111561019657600080fd5b8201836020820111156101a857600080fd5b803590602001918460018302840111640100000000831117156101ca57600080fd5b5090925090506105b8565b005b6101fa600480360360408110156101ed57600080fd5b5080359060200135610a77565b604080519115158252519081900360200190f35b6101d56004803603608081101561022457600080fd5b508035906020810135907fffffffff000000000000000000000000000000000000000000000000000000006040820135169060600135611033565b61037a6004803603608081101561027557600080fd5b8135919081019060408101602082013564010000000081111561029757600080fd5b8201836020820111156102a957600080fd5b803590602001918460208302840111640100000000831117156102cb57600080fd5b9193909290916020810190356401000000008111156102e957600080fd5b8201836020820111156102fb57600080fd5b8035906020019184602083028401116401000000008311171561031d57600080fd5b91939092909160208101903564010000000081111561033b57600080fd5b82018360208201111561034d57600080fd5b8035906020019184602083028401116401000000008311171561036f57600080fd5b509092509050611379565b60408051918252519081900360200190f35b6100d6611728565b6101d5611744565b6101fa611974565b6101d5600480360360608110156103ba57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516916020810135918101906060810160408201356401000000008111156103f757600080fd5b82018360208201111561040957600080fd5b8035906020019184600183028401116401000000008311171561042b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611992945050505050565b6104896004803603602081101561048257600080fd5b5035611ca5565b60405180868152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156104dd5781810151838201526020016104c5565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561051c578181015183820152602001610504565b50505050905001848103825285818151815260200191508051906020019060200280838360005b8381101561055b578181015183820152602001610543565b505050509050019850505050505050505060405180910390f35b6101d56004803603602081101561058b57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611df1565b60006105b2611e6d565b90505b90565b6105c06105a8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4d75737420757365204c494e4b20746f6b656e00000000000000000000000000604482015290519081900360640190fd5b85610662611e6d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106fc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f742063616c6c6261636b20746f204c494e4b000000000000000000604482015290519081900360640190fd5b600088815260086020526040902054808a101561077a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e74207061796d656e74000000000000000000000000604482015290519081900360640190fd5b604080517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060608e901b1660208083019190915260348083018a905283518084039091018152605490920183528151918101919091206000818152600a90925291902054640100000000900473ffffffffffffffffffffffffffffffffffffffff161561086857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f6e636520616c726561647920696e2d757365000000000000000000000000604482015290519081900360640190fd5b87600a600083815260200190815260200160002060000160006101000a81548163ffffffff021916908360e01c021790555088600a600083815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508b600a600083815260200190815260200160002060000160046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109858a8287878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611e8992505050565b818b1115610a6957600061099f8c8463ffffffff61213816565b905060006109ab611e6d565b90508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8f846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610a3457600080fd5b505af1158015610a48573d6000803e3d6000fd5b505050506040513d6020811015610a5e57600080fd5b5051610a6657fe5b50505b505050505050505050505050565b600082815260056020526040812054839073ffffffffffffffffffffffffffffffffffffffff163314610af5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061366a6028913960400191505060405180910390fd5b60008181526005602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a2610b58613416565b60008581526009602090815260408083205483526008825291829020825160a0810184528154815260018201548184015260028201805485518186028101860187528181529295939493860193830182828015610beb57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610bc0575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015610c4357602002820191906000526020600020905b815481526020019060010190808311610c2f575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610c9b57602002820191906000526020600020905b815481526020019060010190808311610c87575b505050919092525050506000868152600b60209081526040808320805460098452828520805492869055949094558151898152915194955092933392859285927f6bd4bffa5426494ba16814dba4b1994c92f88f7664ad231cf8aa811fff6e925e929181900390910190a46000828152600a6020908152604082206002018054600181018255908352912001869055610d32613445565b6000838152600a6020908152604091829020825160808101845281547fffffffff0000000000000000000000000000000000000000000000000000000060e082901b16825273ffffffffffffffffffffffffffffffffffffffff640100000000909104811682850152600183015416818501526002820180548551818602810186019096528086529194929360608601939290830182828015610df457602002820191906000526020600020905b815481526020019060010190808311610de0575b50505050508152505090508360400151518160600151511415610e80576000838152600a6020526040812080547fffffffffffffffff0000000000000000000000000000000000000000000000001681556001810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590610e7d600283018261346b565b50505b60208401516060820151516001911415611027576000610ea383606001516121b4565b905084847fe991444bc589ce1a82e7cbe4e5ebaa8aaa2a5c44964bd32d2af07dd846a638ba836040518082815260200191505060405180910390a36040808401518451825160248101899052604480820186905284518083039091018152606490910184526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921782529251835173ffffffffffffffffffffffffffffffffffffffff9093169392909182918083835b60208310610fb957805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610f7c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461101b576040519150601f19603f3d011682016040523d82523d6000602084013e611020565b606091505b5090925050505b98975050505050505050565b6000848152600b60209081526040808320805490849055600990925282209190915561105d613445565b6000828152600a6020908152604091829020825160808101845281547fffffffff0000000000000000000000000000000000000000000000000000000060e082901b16825273ffffffffffffffffffffffffffffffffffffffff64010000000090910481168285015260018301541681850152600282018054855181860281018601909652808652919492936060860193929083018282801561111f57602002820191906000526020600020905b81548152602001906001019080831161110b575b50505050508152505090503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16146111c857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f6e6c79207265717565737465722063616e2063616e63656c00000000000000604482015290519081900360640190fd5b6000828152600a6020526040812080547fffffffffffffffff0000000000000000000000000000000000000000000000001681556001810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590611234600283018261346b565b5050611242868686866121cf565b600061124c611e6d565b90508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8360200151886040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156112d957600080fd5b505af11580156112ed573d6000803e3d6000fd5b505050506040513d602081101561130357600080fd5b505161137057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f556e61626c6520746f207472616e736665720000000000000000000000000000604482015290519081900360640190fd5b50505050505050565b60008088116113e957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d696e20726573706f6e736573206d757374206265203e203000000000000000604482015290519081900360640190fd5b85841480156113f757508582145b61146257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e6d6574206c656e6774680000000000000000000000000000000000000000604482015290519081900360640190fd5b602d8611156114d257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f43616e6e6f742068617665206d6f7265207468616e203435206f7261636c6573604482015290519081900360640190fd5b8786101561154157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c6964206d696e20726573706f6e7365730000000000000000000000604482015290519081900360640190fd5b6000805b8381101561157c5761157285858381811061155c57fe5b905060200201358361230a90919063ffffffff16565b9150600101611545565b5060078054604080516020808201849052428284015282518083038401815260608301808552815191830191909120600190950190955561010082018352858552608082018e905282518c820281810183019094528c815293965060a090910192918c918c91829185019084908082843760009201919091525050509082525060408051602089810282810182019093528982529283019290918a918a9182918501908490808284376000920191909152505050908252506040805160208781028281018201909352878252928301929091889188918291850190849080828437600092018290525093909452505084815260086020908152604091829020845181558482015160018201559184015180519293506116a49260028501929190910190613489565b50606082015180516116c0916003840191602090910190613513565b50608082015180516116dc916004840191602090910190613513565b505060408051838152602081018c905281518593507f1df950b8dca286fff2ebb83642851b5a9db00ff4bc87815828e845b45d183eaf929181900390910190a250979650505050505050565b60065473ffffffffffffffffffffffffffffffffffffffff1690565b61174c611974565b6117b757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60006117c1611e6d565b604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905191925073ffffffffffffffffffffffffffffffffffffffff83169163a9059cbb91339184916370a08231916024808301926020929190829003018186803b15801561183a57600080fd5b505afa15801561184e573d6000803e3d6000fd5b505050506040513d602081101561186457600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff909316600484015260248301919091525160448083019260209291908290030181600087803b1580156118da57600080fd5b505af11580156118ee573d6000803e3d6000fd5b505050506040513d602081101561190457600080fd5b505161197157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f556e61626c6520746f207472616e736665720000000000000000000000000000604482015290519081900360640190fd5b50565b60065473ffffffffffffffffffffffffffffffffffffffff16331490565b61199a6105a8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a3357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4d75737420757365204c494e4b20746f6b656e00000000000000000000000000604482015290519081900360640190fd5b8051819060441115611aa657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c69642072657175657374206c656e67746800000000000000000000604482015290519081900360640190fd5b602082015182907fffffffff0000000000000000000000000000000000000000000000000000000081167f404299460000000000000000000000000000000000000000000000000000000014611b5d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4d757374207573652077686974656c69737465642066756e6374696f6e730000604482015290519081900360640190fd5b85602485015284604485015260003073ffffffffffffffffffffffffffffffffffffffff16856040518082805190602001908083835b60208310611bd057805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611b93565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114611c30576040519150601f19603f3d011682016040523d82523d6000602084013e611c35565b606091505b505090508061137057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f556e61626c6520746f2063726561746520726571756573740000000000000000604482015290519081900360640190fd5b600081815260086020908152604080832080546001820154600283018054855181880281018801909652808652879660609687968796959493600382019360049092019291859190830182828015611d3357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611d08575b5050505050925081805480602002602001604051908101604052809291908181526020018280548015611d8557602002820191906000526020600020905b815481526020019060010190808311611d71575b5050505050915080805480602002602001604051908101604052809291908181526020018280548015611dd757602002820191906000526020600020905b815481526020019060010190808311611dc3575b505050505090509450945094509450945091939590929450565b611df9611974565b611e6457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61197181612385565b60025473ffffffffffffffffffffffffffffffffffffffff1690565b611e91613416565b600084815260086020908152604091829020825160a0810184528154815260018201548184015260028201805485518186028101860187528181529295939493860193830182828015611f1a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611eef575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015611f7257602002820191906000526020600020905b815481526020019060010190808311611f5e575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015611fca57602002820191906000526020600020905b815481526020019060010190808311611fb6575b5050505050815250509050600081602001511161204857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c696420736572766963652061677265656d656e7400000000000000604482015290519081900360640190fd5b61205061355a565b81516040805191825251600091869188917f0d3e7811af83862cbc3778c66d787596cdb580e0dbc448d99f21c865770a8432919081900360200190a360005b836040015151811015611370576120c5846060015182815181106120af57fe5b602002602001015130636a9705b460e01b61247f565b92506120d7838663ffffffff6124aa16565b612110846040015182815181106120ea57fe5b6020026020010151848660800151848151811061210357fe5b60200260200101516124cd565b6000818152600b602090815260408083208a905560099091529020889055915060010161208f565b6000828211156121a957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b508082035b92915050565b60006121c76121c28361270a565b612798565b90505b919050565b60008481526005602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000008116909155905173ffffffffffffffffffffffffffffffffffffffff9091169186917fe1fe3afa0f7f761ff0a8b89086790efd5140d2907ebd5b7ff6bfcb5e075fd4c59190a2604080517f6ee4d55300000000000000000000000000000000000000000000000000000000815260048101879052602481018690527fffffffff000000000000000000000000000000000000000000000000000000008516604482015260648101849052905173ffffffffffffffffffffffffffffffffffffffff831691636ee4d55391608480830192600092919082900301818387803b1580156122eb57600080fd5b505af11580156122ff573d6000803e3d6000fd5b505050505050505050565b60008282018381101561237e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81166123f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806136006026913960400191505060405180910390fd5b60065460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61248761355a565b61248f61355a565b6124a18186868663ffffffff61286216565b95945050505050565b6124b9826080015182516128cd565b506124c8826080015182612907565b505050565b6004546040805130606090811b60208084019190915260348084018690528451808503909101815260549093018452825192810192909220908601939093526000838152600590915281812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8816179055905182917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af991a260025473ffffffffffffffffffffffffffffffffffffffff16634000aea085846125a787612921565b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561262b578181015183820152602001612613565b50505050905090810190601f1680156126585780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561267957600080fd5b505af115801561268d573d6000803e3d6000fd5b505050506040513d60208110156126a357600080fd5b50516126fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806136266023913960400191505060405180910390fd5b6004805460010190559392505050565b606080825167ffffffffffffffff8111801561272557600080fd5b5060405190808252806020026020018201604052801561274f578160200160208202803683370190505b50905060005b83518110156127915783818151811061276a57fe5b602002602001015182828151811061277e57fe5b6020908102919091010152600101612755565b5092915050565b6000815160001061280a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6c697374206d757374206e6f7420626520656d70747900000000000000000000604482015290519081900360640190fd5b815160028104600182166128495760008061282f866000600187036001870387612b0a565b909250905061283e8282612be8565b9450505050506121ca565b6128598460006001850384612c56565b925050506121ca565b61286a61355a565b61287a85608001516101006128cd565b505082845273ffffffffffffffffffffffffffffffffffffffff821660208501527fffffffff0000000000000000000000000000000000000000000000000000000081166040850152835b949350505050565b6128d561358f565b60208206156128ea5760208206602003820191505b506020828101829052604080518085526000815290920101905290565b61290f61358f565b61237e83846000015151848551612ce7565b6060634042994660e01b60008084600001518560200151866040015187606001516001896080015160000151604051602401808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612a4d578181015183820152602001612a35565b50505050905090810190601f168015612a7a5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909d169c909c17909b5250989950505050505050505050919050565b600080828410612b1957600080fd5b838611158015612b295750848411155b612b3257600080fd5b828611158015612b425750848311155b612b4b57600080fd5b60078686031015612b6c57612b638787878787612dcf565b91509150612bde565b6000612b79888888613286565b9050808411612b8a57809550612bd8565b84811015612b9d57806001019650612bd8565b808511158015612bac57508381105b612bb257fe5b612bbe88888388612c56565b9250612bcf88826001018887612c56565b9150612bde9050565b50612b4b565b9550959350505050565b60008083128015612bf95750600082135b80612c0f5750600083138015612c0f5750600082125b15612c2f576002612c208484613363565b81612c2757fe5b0590506121ae565b60006002808507818507010590506128c5612c506002860560028605613363565b82613363565b600081841115612c6557600080fd5b82821115612c7257600080fd5b82841015612cc95760078484031015612c9e576000612c948686868687612dcf565b5091506128c59050565b6000612cab868686613286565b9050808311612cbc57809350612cc3565b8060010194505b50612c72565b848481518110612cd557fe5b60200260200101519050949350505050565b612cef61358f565b8251821115612cfd57600080fd5b84602001518285011115612d2757612d2785612d1f87602001518786016133e2565b6002026133f9565b600080865180518760208301019350808887011115612d465787860182525b505050602084015b60208410612d8b57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09093019260209182019101612d4e565b5181517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60208690036101000a019081169019919091161790525083949350505050565b600080600086866001010390506000888860000181518110612ded57fe5b60200260200101519050600082600110612e27577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612e3f565b898960010181518110612e3657fe5b60200260200101515b9050600083600210612e71577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612e89565b8a8a60020181518110612e8057fe5b60200260200101515b9050600084600310612ebb577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612ed3565b8b8b60030181518110612eca57fe5b60200260200101515b9050600085600410612f05577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612f1d565b8c8c60040181518110612f1457fe5b60200260200101515b9050600086600510612f4f577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612f67565b8d8d60050181518110612f5e57fe5b60200260200101515b9050600087600610612f99577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612fb1565b8e8e60060181518110612fa857fe5b60200260200101515b905085871315612fbf579495945b83851315612fcb579293925b81831315612fd7579091905b84871315612fe3579395935b83861315612fef579294925b80831315612ff957915b84861315613005579394935b8082131561300f57905b8287131561301b579195915b81861315613027579094905b8085131561303157935b8286131561303d579194915b8084131561304757925b82851315613053579193915b8184131561305f579092905b8284131561306b579192915b8d8c038061307b57879a50613148565b806001141561308c57869a50613148565b806002141561309d57859a50613148565b80600314156130ae57849a50613148565b80600414156130bf57839a50613148565b80600514156130d057829a50613148565b80600614156130e157819a50613148565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6b31206f7574206f6620626f756e647300000000000000000000000000000000604482015290519081900360640190fd5b8e8c038d8d141561316657508a9950612bde98505050505050505050565b8061317d5750969850612bde975050505050505050565b80600114156131985750959850612bde975050505050505050565b80600214156131b35750949850612bde975050505050505050565b80600314156131ce5750939850612bde975050505050505050565b80600414156131e95750929850612bde975050505050505050565b80600514156132045750919850612bde975050505050505050565b806006141561321f5750909850612bde975050505050505050565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6b32206f7574206f6620626f756e647300000000000000000000000000000000604482015290519081900360640190fd5b600080846002858501048151811061329a57fe5b602002602001015190506001840393506001830192505b600184019350808585815181106132c457fe5b6020026020010151126132b1575b600183039250808584815181106132e557fe5b6020026020010151136132d257828410156133555784838151811061330657fe5b602002602001015185858151811061331a57fe5b602002602001015186868151811061332e57fe5b6020026020010187868151811061334157fe5b60209081029190910101919091525261335e565b8291505061237e565b6132b1565b60008282018183128015906133785750838112155b8061338d575060008312801561338d57508381125b61237e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806136496021913960400191505060405180910390fd5b6000818311156133f35750816121ae565b50919050565b815161340583836128cd565b506134108382612907565b50505050565b6040518060a0016040528060008152602001600081526020016060815260200160608152602001606081525090565b604080516080810182526000808252602082018190529181019190915260608082015290565b508054600082559060005260206000209081019061197191906135a9565b828054828255906000526020600020908101928215613503579160200282015b8281111561350357825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906134a9565b5061350f9291506135c3565b5090565b82805482825590600052602060002090810192821561354e579160200282015b8281111561354e578251825591602001919060010190613533565b5061350f9291506135a9565b6040805160a08101825260008082526020820181905291810182905260608101919091526080810161358a61358f565b905290565b604051806040016040528060608152602001600081525090565b6105b591905b8082111561350f57600081556001016135af565b6105b591905b8082111561350f5780547fffffffffffffffffffffffff00000000000000000000000000000000000000001681556001016135c956fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261636c655369676e6564536166654d6174683a206164646974696f6e206f766572666c6f77536f75726365206d75737420626520746865206f7261636c65206f66207468652072657175657374a26469706673582212207df684e69a035179e1d31364ff3661100b1968f52196697f144cee24e1d16c1564736f6c63430006060033",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x4 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3857 CODESIZE SUB DUP1 PUSH3 0x3857 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xB2 JUMPI PUSH3 0xAC PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0xCD AND JUMP JUMPDEST PUSH3 0xC6 JUMP JUMPDEST PUSH3 0xC6 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x15E AND JUMP JUMPDEST POP PUSH3 0x180 JUMP JUMPDEST PUSH3 0x15C PUSH20 0xC89BD4E1632D3A43CB03AAAD5262CBE4038BC571 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x38CC4831 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x134 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH3 0x15E AND JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x36C7 DUP1 PUSH3 0x190 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA4C0ED36 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xAF52C981 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x575 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x8DC654A2 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x39C JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6A9705B4 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x6A9705B4 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6EE4D553 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x834B55E0 EQ PUSH2 0x25F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x165D35E1 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x40429946 EQ PUSH2 0xFF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP3 PUSH1 0x60 DUP4 ADD CALLDATALOAD AND SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP2 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH2 0x100 DUP2 ADD PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x5B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1379 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x1728 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x1744 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1992 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4C5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x51C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x504 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x55B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x543 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x1E6D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0x5A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x659 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420757365204C494E4B20746F6B656E00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x662 PUSH2 0x1E6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616C6C6261636B20746F204C494E4B000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 DUP11 LT ISZERO PUSH2 0x77A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207061796D656E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0x60 DUP15 SWAP1 SHL AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP1 DUP4 ADD DUP11 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x54 SWAP1 SWAP3 ADD DUP4 MSTORE DUP2 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x868 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E636520616C726561647920696E2D757365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xE0 SHR MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP12 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x985 DUP11 DUP3 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1E89 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP12 GT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x0 PUSH2 0x99F DUP13 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x2138 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9AB PUSH2 0x1E6D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP16 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xA66 JUMPI INVALID JUMPDEST POP POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP4 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x366A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH32 0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A SWAP2 LOG2 PUSH2 0xB58 PUSH2 0x3416 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x8 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD DUP8 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP6 SWAP4 SWAP5 SWAP4 DUP7 ADD SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBEB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBC0 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xC43 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC2F JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xC9B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC87 JUMPI JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP POP POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x9 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP3 DUP7 SWAP1 SSTORE SWAP5 SWAP1 SWAP5 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 CALLER SWAP3 DUP6 SWAP3 DUP6 SWAP3 PUSH32 0x6BD4BFFA5426494BA16814DBA4B1994C92F88F7664AD231CF8AA811FFF6E925E SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP7 SWAP1 SSTORE PUSH2 0xD32 PUSH2 0x3445 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP3 SWAP1 SHL AND DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH5 0x100000000 SWAP1 SWAP2 DIV DUP2 AND DUP3 DUP6 ADD MSTORE PUSH1 0x1 DUP4 ADD SLOAD AND DUP2 DUP6 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP7 MSTORE DUP1 DUP7 MSTORE SWAP2 SWAP5 SWAP3 SWAP4 PUSH1 0x60 DUP7 ADD SWAP4 SWAP3 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xDE0 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP4 PUSH1 0x40 ADD MLOAD MLOAD DUP2 PUSH1 0x60 ADD MLOAD MLOAD EQ ISZERO PUSH2 0xE80 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE SWAP1 PUSH2 0xE7D PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x346B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x1 SWAP2 EQ ISZERO PUSH2 0x1027 JUMPI PUSH1 0x0 PUSH2 0xEA3 DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0x21B4 JUMP JUMPDEST SWAP1 POP DUP5 DUP5 PUSH32 0xE991444BC589CE1A82E7CBE4E5EBAA8AAA2A5C44964BD32D2AF07DD846A638BA DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 DUP5 ADD MLOAD DUP5 MLOAD DUP3 MLOAD PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD DUP5 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 MSTORE SWAP3 MLOAD DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP4 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xFB9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x101B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x105D PUSH2 0x3445 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP3 SWAP1 SHL AND DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH5 0x100000000 SWAP1 SWAP2 DIV DUP2 AND DUP3 DUP6 ADD MSTORE PUSH1 0x1 DUP4 ADD SLOAD AND DUP2 DUP6 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP7 MSTORE DUP1 DUP7 MSTORE SWAP2 SWAP5 SWAP3 SWAP4 PUSH1 0x60 DUP7 ADD SWAP4 SWAP3 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x111F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x110B JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11C8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207265717565737465722063616E2063616E63656C00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE SWAP1 PUSH2 0x1234 PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x346B JUMP JUMPDEST POP POP PUSH2 0x1242 DUP7 DUP7 DUP7 DUP7 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x124C PUSH2 0x1E6D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1370 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F207472616E736665720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP9 GT PUSH2 0x13E9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E20726573706F6E736573206D757374206265203E203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 DUP5 EQ DUP1 ISZERO PUSH2 0x13F7 JUMPI POP DUP6 DUP3 EQ JUMPDEST PUSH2 0x1462 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6D6574206C656E6774680000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2D DUP7 GT ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742068617665206D6F7265207468616E203435206F7261636C6573 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 DUP7 LT ISZERO PUSH2 0x1541 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D696E20726573706F6E7365730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x157C JUMPI PUSH2 0x1572 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x155C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP4 PUSH2 0x230A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE TIMESTAMP DUP3 DUP5 ADD MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 SWAP1 SWAP6 ADD SWAP1 SWAP6 SSTORE PUSH2 0x100 DUP3 ADD DUP4 MSTORE DUP6 DUP6 MSTORE PUSH1 0x80 DUP3 ADD DUP15 SWAP1 MSTORE DUP3 MLOAD DUP13 DUP3 MUL DUP2 DUP2 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP13 DUP2 MSTORE SWAP4 SWAP7 POP PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP3 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP10 DUP2 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP10 DUP3 MSTORE SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 DUP11 SWAP2 DUP11 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP8 DUP2 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP8 DUP3 MSTORE SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 DUP9 SWAP2 DUP9 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 SWAP1 SWAP5 MSTORE POP POP DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE DUP5 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 DUP5 ADD MLOAD DUP1 MLOAD SWAP3 SWAP4 POP PUSH2 0x16A4 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3489 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x16C0 SWAP2 PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3513 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x16DC SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3513 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD DUP6 SWAP4 POP PUSH32 0x1DF950B8DCA286FFF2EBB83642851B5A9DB00FF4BC87815828E845B45D183EAF SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x174C PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x17B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17C1 PUSH2 0x1E6D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH4 0xA9059CBB SWAP2 CALLER SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x183A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x184E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1971 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F207472616E736665720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x199A PUSH2 0x5A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A33 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420757365204C494E4B20746F6B656E00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 SWAP1 PUSH1 0x44 GT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642072657175657374206C656E67746800000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP3 SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x4042994600000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1B5D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374207573652077686974656C69737465642066756E6374696F6E730000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x24 DUP6 ADD MSTORE DUP5 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1BD0 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1370 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F2063726561746520726571756573740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP9 MUL DUP2 ADD DUP9 ADD SWAP1 SWAP7 MSTORE DUP1 DUP7 MSTORE DUP8 SWAP7 PUSH1 0x60 SWAP7 DUP8 SWAP7 DUP8 SWAP7 SWAP6 SWAP5 SWAP4 PUSH1 0x3 DUP3 ADD SWAP4 PUSH1 0x4 SWAP1 SWAP3 ADD SWAP3 SWAP2 DUP6 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1D33 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D08 JUMPI JUMPDEST POP POP POP POP POP SWAP3 POP DUP2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1D85 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1D71 JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1DD7 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1DC3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH2 0x1DF9 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1E64 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1971 DUP2 PUSH2 0x2385 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1E91 PUSH2 0x3416 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD DUP8 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP6 SWAP4 SWAP5 SWAP4 DUP7 ADD SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1F1A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1EEF JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1F72 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1F5E JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1FCA JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1FB6 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD GT PUSH2 0x2048 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420736572766963652061677265656D656E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2050 PUSH2 0x355A JUMP JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH1 0x0 SWAP2 DUP7 SWAP2 DUP9 SWAP2 PUSH32 0xD3E7811AF83862CBC3778C66D787596CDB580E0DBC448D99F21C865770A8432 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x20C5 DUP5 PUSH1 0x60 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x20AF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD ADDRESS PUSH4 0x6A9705B4 PUSH1 0xE0 SHL PUSH2 0x247F JUMP JUMPDEST SWAP3 POP PUSH2 0x20D7 DUP4 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x24AA AND JUMP JUMPDEST PUSH2 0x2110 DUP5 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x20EA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2103 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP9 SWAP1 SSTORE SWAP2 POP PUSH1 0x1 ADD PUSH2 0x208F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x21A9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C7 PUSH2 0x21C2 DUP4 PUSH2 0x270A JUMP JUMPDEST PUSH2 0x2798 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 DUP7 SWAP2 PUSH32 0xE1FE3AFA0F7F761FF0A8B89086790EFD5140D2907EBD5B7FF6BFCB5E075FD4C5 SWAP2 SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD PUSH32 0x6EE4D55300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH4 0x6EE4D553 SWAP2 PUSH1 0x84 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x237E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x23F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3600 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2487 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x248F PUSH2 0x355A JUMP JUMPDEST PUSH2 0x24A1 DUP2 DUP7 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x2862 AND JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24B9 DUP3 PUSH1 0x80 ADD MLOAD DUP3 MLOAD PUSH2 0x28CD JUMP JUMPDEST POP PUSH2 0x24C8 DUP3 PUSH1 0x80 ADD MLOAD DUP3 PUSH2 0x2907 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x60 SWAP1 DUP2 SHL PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP1 DUP5 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x54 SWAP1 SWAP4 ADD DUP5 MSTORE DUP3 MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP1 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP2 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND OR SWAP1 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH32 0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9 SWAP2 LOG2 PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4000AEA0 DUP6 DUP5 PUSH2 0x25A7 DUP8 PUSH2 0x2921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x262B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2613 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2658 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x268D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x26FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3626 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x2725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x274F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2791 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x276A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x277E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2755 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 LT PUSH2 0x280A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C697374206D757374206E6F7420626520656D70747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND PUSH2 0x2849 JUMPI PUSH1 0x0 DUP1 PUSH2 0x282F DUP7 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH1 0x1 DUP8 SUB DUP8 PUSH2 0x2B0A JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x283E DUP3 DUP3 PUSH2 0x2BE8 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x2859 DUP5 PUSH1 0x0 PUSH1 0x1 DUP6 SUB DUP5 PUSH2 0x2C56 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x286A PUSH2 0x355A JUMP JUMPDEST PUSH2 0x287A DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0x28CD JUMP JUMPDEST POP POP DUP3 DUP5 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x40 DUP6 ADD MSTORE DUP4 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x28D5 PUSH2 0x358F JUMP JUMPDEST PUSH1 0x20 DUP3 MOD ISZERO PUSH2 0x28EA JUMPI PUSH1 0x20 DUP3 MOD PUSH1 0x20 SUB DUP3 ADD SWAP2 POP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 SWAP3 ADD ADD SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x290F PUSH2 0x358F JUMP JUMPDEST PUSH2 0x237E DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x2CE7 JUMP JUMPDEST PUSH1 0x60 PUSH4 0x40429946 PUSH1 0xE0 SHL PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0x1 DUP10 PUSH1 0x80 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A4D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A35 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A7A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP14 AND SWAP13 SWAP1 SWAP13 OR SWAP1 SWAP12 MSTORE POP SWAP9 SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 LT PUSH2 0x2B19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO DUP1 ISZERO PUSH2 0x2B29 JUMPI POP DUP5 DUP5 GT ISZERO JUMPDEST PUSH2 0x2B32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 GT ISZERO DUP1 ISZERO PUSH2 0x2B42 JUMPI POP DUP5 DUP4 GT ISZERO JUMPDEST PUSH2 0x2B4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP7 DUP7 SUB LT ISZERO PUSH2 0x2B6C JUMPI PUSH2 0x2B63 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2DCF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2BDE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B79 DUP9 DUP9 DUP9 PUSH2 0x3286 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT PUSH2 0x2B8A JUMPI DUP1 SWAP6 POP PUSH2 0x2BD8 JUMP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2B9D JUMPI DUP1 PUSH1 0x1 ADD SWAP7 POP PUSH2 0x2BD8 JUMP JUMPDEST DUP1 DUP6 GT ISZERO DUP1 ISZERO PUSH2 0x2BAC JUMPI POP DUP4 DUP2 LT JUMPDEST PUSH2 0x2BB2 JUMPI INVALID JUMPDEST PUSH2 0x2BBE DUP9 DUP9 DUP4 DUP9 PUSH2 0x2C56 JUMP JUMPDEST SWAP3 POP PUSH2 0x2BCF DUP9 DUP3 PUSH1 0x1 ADD DUP9 DUP8 PUSH2 0x2C56 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDE SWAP1 POP JUMP JUMPDEST POP PUSH2 0x2B4B JUMP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT DUP1 ISZERO PUSH2 0x2BF9 JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST DUP1 PUSH2 0x2C0F JUMPI POP PUSH1 0x0 DUP4 SGT DUP1 ISZERO PUSH2 0x2C0F JUMPI POP PUSH1 0x0 DUP3 SLT JUMPDEST ISZERO PUSH2 0x2C2F JUMPI PUSH1 0x2 PUSH2 0x2C20 DUP5 DUP5 PUSH2 0x3363 JUMP JUMPDEST DUP2 PUSH2 0x2C27 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 DUP6 SMOD DUP2 DUP6 SMOD ADD SDIV SWAP1 POP PUSH2 0x28C5 PUSH2 0x2C50 PUSH1 0x2 DUP7 SDIV PUSH1 0x2 DUP7 SDIV PUSH2 0x3363 JUMP JUMPDEST DUP3 PUSH2 0x3363 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 GT ISZERO PUSH2 0x2C65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0x2C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x2CC9 JUMPI PUSH1 0x7 DUP5 DUP5 SUB LT ISZERO PUSH2 0x2C9E JUMPI PUSH1 0x0 PUSH2 0x2C94 DUP7 DUP7 DUP7 DUP7 DUP8 PUSH2 0x2DCF JUMP JUMPDEST POP SWAP2 POP PUSH2 0x28C5 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CAB DUP7 DUP7 DUP7 PUSH2 0x3286 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT PUSH2 0x2CBC JUMPI DUP1 SWAP4 POP PUSH2 0x2CC3 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP5 POP JUMPDEST POP PUSH2 0x2C72 JUMP JUMPDEST DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2CD5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2CEF PUSH2 0x358F JUMP JUMPDEST DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x2CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP3 DUP6 ADD GT ISZERO PUSH2 0x2D27 JUMPI PUSH2 0x2D27 DUP6 PUSH2 0x2D1F DUP8 PUSH1 0x20 ADD MLOAD DUP8 DUP7 ADD PUSH2 0x33E2 JUMP JUMPDEST PUSH1 0x2 MUL PUSH2 0x33F9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0x2D46 JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST POP POP POP PUSH1 0x20 DUP5 ADD JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0x2D8B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2D4E JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP7 SWAP1 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 AND SWAP1 NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 MSTORE POP DUP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP7 PUSH1 0x1 ADD SUB SWAP1 POP PUSH1 0x0 DUP9 DUP9 PUSH1 0x0 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2DED JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 LT PUSH2 0x2E27 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2E3F JUMP JUMPDEST DUP10 DUP10 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2E36 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 LT PUSH2 0x2E71 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2E89 JUMP JUMPDEST DUP11 DUP11 PUSH1 0x2 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2E80 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x3 LT PUSH2 0x2EBB JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2ED3 JUMP JUMPDEST DUP12 DUP12 PUSH1 0x3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2ECA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x4 LT PUSH2 0x2F05 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2F1D JUMP JUMPDEST DUP13 DUP13 PUSH1 0x4 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2F14 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x5 LT PUSH2 0x2F4F JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2F67 JUMP JUMPDEST DUP14 DUP14 PUSH1 0x5 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2F5E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x6 LT PUSH2 0x2F99 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2FB1 JUMP JUMPDEST DUP15 DUP15 PUSH1 0x6 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2FA8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP DUP6 DUP8 SGT ISZERO PUSH2 0x2FBF JUMPI SWAP5 SWAP6 SWAP5 JUMPDEST DUP4 DUP6 SGT ISZERO PUSH2 0x2FCB JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP2 DUP4 SGT ISZERO PUSH2 0x2FD7 JUMPI SWAP1 SWAP2 SWAP1 JUMPDEST DUP5 DUP8 SGT ISZERO PUSH2 0x2FE3 JUMPI SWAP4 SWAP6 SWAP4 JUMPDEST DUP4 DUP7 SGT ISZERO PUSH2 0x2FEF JUMPI SWAP3 SWAP5 SWAP3 JUMPDEST DUP1 DUP4 SGT ISZERO PUSH2 0x2FF9 JUMPI SWAP2 JUMPDEST DUP5 DUP7 SGT ISZERO PUSH2 0x3005 JUMPI SWAP4 SWAP5 SWAP4 JUMPDEST DUP1 DUP3 SGT ISZERO PUSH2 0x300F JUMPI SWAP1 JUMPDEST DUP3 DUP8 SGT ISZERO PUSH2 0x301B JUMPI SWAP2 SWAP6 SWAP2 JUMPDEST DUP2 DUP7 SGT ISZERO PUSH2 0x3027 JUMPI SWAP1 SWAP5 SWAP1 JUMPDEST DUP1 DUP6 SGT ISZERO PUSH2 0x3031 JUMPI SWAP4 JUMPDEST DUP3 DUP7 SGT ISZERO PUSH2 0x303D JUMPI SWAP2 SWAP5 SWAP2 JUMPDEST DUP1 DUP5 SGT ISZERO PUSH2 0x3047 JUMPI SWAP3 JUMPDEST DUP3 DUP6 SGT ISZERO PUSH2 0x3053 JUMPI SWAP2 SWAP4 SWAP2 JUMPDEST DUP2 DUP5 SGT ISZERO PUSH2 0x305F JUMPI SWAP1 SWAP3 SWAP1 JUMPDEST DUP3 DUP5 SGT ISZERO PUSH2 0x306B JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST DUP14 DUP13 SUB DUP1 PUSH2 0x307B JUMPI DUP8 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x308C JUMPI DUP7 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST DUP1 PUSH1 0x2 EQ ISZERO PUSH2 0x309D JUMPI DUP6 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST DUP1 PUSH1 0x3 EQ ISZERO PUSH2 0x30AE JUMPI DUP5 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST DUP1 PUSH1 0x4 EQ ISZERO PUSH2 0x30BF JUMPI DUP4 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST DUP1 PUSH1 0x5 EQ ISZERO PUSH2 0x30D0 JUMPI DUP3 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST DUP1 PUSH1 0x6 EQ ISZERO PUSH2 0x30E1 JUMPI DUP2 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6B31206F7574206F6620626F756E647300000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP15 DUP13 SUB DUP14 DUP14 EQ ISZERO PUSH2 0x3166 JUMPI POP DUP11 SWAP10 POP PUSH2 0x2BDE SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x317D JUMPI POP SWAP7 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x3198 JUMPI POP SWAP6 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 EQ ISZERO PUSH2 0x31B3 JUMPI POP SWAP5 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 EQ ISZERO PUSH2 0x31CE JUMPI POP SWAP4 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 EQ ISZERO PUSH2 0x31E9 JUMPI POP SWAP3 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 EQ ISZERO PUSH2 0x3204 JUMPI POP SWAP2 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 EQ ISZERO PUSH2 0x321F JUMPI POP SWAP1 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6B32206F7574206F6620626F756E647300000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x2 DUP6 DUP6 ADD DIV DUP2 MLOAD DUP2 LT PUSH2 0x329A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0x1 DUP4 ADD SWAP3 POP JUMPDEST PUSH1 0x1 DUP5 ADD SWAP4 POP DUP1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x32C4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SLT PUSH2 0x32B1 JUMPI JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x32E5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SGT PUSH2 0x32D2 JUMPI DUP3 DUP5 LT ISZERO PUSH2 0x3355 JUMPI DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3306 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x331A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x332E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x3341 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE PUSH2 0x335E JUMP JUMPDEST DUP3 SWAP2 POP POP PUSH2 0x237E JUMP JUMPDEST PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0x3378 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x338D JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x338D JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0x237E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3649 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x33F3 JUMPI POP DUP2 PUSH2 0x21AE JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x3405 DUP4 DUP4 PUSH2 0x28CD JUMP JUMPDEST POP PUSH2 0x3410 DUP4 DUP3 PUSH2 0x2907 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1971 SWAP2 SWAP1 PUSH2 0x35A9 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3503 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3503 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x34A9 JUMP JUMPDEST POP PUSH2 0x350F SWAP3 SWAP2 POP PUSH2 0x35C3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x354E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x354E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3533 JUMP JUMPDEST POP PUSH2 0x350F SWAP3 SWAP2 POP PUSH2 0x35A9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x358A PUSH2 0x358F JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x5B5 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x350F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x35AF JUMP JUMPDEST PUSH2 0x5B5 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x350F JUMPI DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x35C9 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373756E61626C6520746F207472616E7366 PUSH6 0x72416E644361 PUSH13 0x6C20746F206F7261636C655369 PUSH8 0x6E6564536166654D PUSH2 0x7468 GASPRICE KECCAK256 PUSH2 0x6464 PUSH10 0x74696F6E206F76657266 PUSH13 0x6F77536F75726365206D757374 KECCAK256 PUSH3 0x652074 PUSH9 0x65206F7261636C6520 PUSH16 0x66207468652072657175657374A26469 PUSH17 0x6673582212207DF684E69A035179E1D313 PUSH5 0xFF3661100B NOT PUSH9 0xF52196697F144CEE24 0xE1 0xD1 PUSH13 0x1564736F6C6343000606003300 ",
				"sourceMap": "490:10509:14:-:0;;;1243:1:4;1212:32;;2116:153:14;5:9:-1;2:2;;;27:1;24;17:12;2:2;2116:153:14;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2116:153:14;718:6:61;:19;;-1:-1:-1;;;;;;718:19:61;727:10;718:19;;;;;748:40;;-1:-1:-1;;;;;781:6:61;;;;;718;;748:40;;718:6;;748:40;-1:-1:-1;;;;;2159:19:14;;2156:109;;2188:25;-1:-1:-1;;;;;2188:23:14;:25;:::i;:::-;2156:109;;;2234:24;2252:5;-1:-1:-1;;;;;2234:17:14;:24;:::i;:::-;2116:153;490:10509;;5131:123:4;5181:68;1031:42;-1:-1:-1;;;;;5199:47:4;;:49;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;5199:49:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5199:49:4;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5199:49:4;-1:-1:-1;;;;;5181:17:4;:68;:::i;:::-;5131:123::o;4914:94::-;4971:4;:32;;-1:-1:-1;;;;;;4971:32:4;-1:-1:-1;;;;;4971:32:4;;;;;;;;;;4914:94::o;490:10509:14:-;;;;;;;"
			},
			"deployedBytecode": {
				"immutableReferences": {},
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b50600436106100c95760003560e01c80638da5cb5b11610081578063a4c0ed361161005b578063a4c0ed36146103a4578063af52c9811461046c578063f2fde38b14610575576100c9565b80638da5cb5b1461038c5780638dc654a2146103945780638f32d59b1461039c576100c9565b80636a9705b4116100b25780636a9705b4146101d75780636ee4d5531461020e578063834b55e01461025f576100c9565b8063165d35e1146100ce57806340429946146100ff575b600080fd5b6100d66105a8565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101d5600480360361010081101561011657600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235811692602081013592604082013592606083013516917fffffffff000000000000000000000000000000000000000000000000000000006080820135169160a08201359160c081013591810190610100810160e082013564010000000081111561019657600080fd5b8201836020820111156101a857600080fd5b803590602001918460018302840111640100000000831117156101ca57600080fd5b5090925090506105b8565b005b6101fa600480360360408110156101ed57600080fd5b5080359060200135610a77565b604080519115158252519081900360200190f35b6101d56004803603608081101561022457600080fd5b508035906020810135907fffffffff000000000000000000000000000000000000000000000000000000006040820135169060600135611033565b61037a6004803603608081101561027557600080fd5b8135919081019060408101602082013564010000000081111561029757600080fd5b8201836020820111156102a957600080fd5b803590602001918460208302840111640100000000831117156102cb57600080fd5b9193909290916020810190356401000000008111156102e957600080fd5b8201836020820111156102fb57600080fd5b8035906020019184602083028401116401000000008311171561031d57600080fd5b91939092909160208101903564010000000081111561033b57600080fd5b82018360208201111561034d57600080fd5b8035906020019184602083028401116401000000008311171561036f57600080fd5b509092509050611379565b60408051918252519081900360200190f35b6100d6611728565b6101d5611744565b6101fa611974565b6101d5600480360360608110156103ba57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516916020810135918101906060810160408201356401000000008111156103f757600080fd5b82018360208201111561040957600080fd5b8035906020019184600183028401116401000000008311171561042b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611992945050505050565b6104896004803603602081101561048257600080fd5b5035611ca5565b60405180868152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b838110156104dd5781810151838201526020016104c5565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561051c578181015183820152602001610504565b50505050905001848103825285818151815260200191508051906020019060200280838360005b8381101561055b578181015183820152602001610543565b505050509050019850505050505050505060405180910390f35b6101d56004803603602081101561058b57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611df1565b60006105b2611e6d565b90505b90565b6105c06105a8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4d75737420757365204c494e4b20746f6b656e00000000000000000000000000604482015290519081900360640190fd5b85610662611e6d565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106fc57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f43616e6e6f742063616c6c6261636b20746f204c494e4b000000000000000000604482015290519081900360640190fd5b600088815260086020526040902054808a101561077a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e74207061796d656e74000000000000000000000000604482015290519081900360640190fd5b604080517fffffffffffffffffffffffffffffffffffffffff00000000000000000000000060608e901b1660208083019190915260348083018a905283518084039091018152605490920183528151918101919091206000818152600a90925291902054640100000000900473ffffffffffffffffffffffffffffffffffffffff161561086857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f6e636520616c726561647920696e2d757365000000000000000000000000604482015290519081900360640190fd5b87600a600083815260200190815260200160002060000160006101000a81548163ffffffff021916908360e01c021790555088600a600083815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508b600a600083815260200190815260200160002060000160046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109858a8287878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611e8992505050565b818b1115610a6957600061099f8c8463ffffffff61213816565b905060006109ab611e6d565b90508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8f846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610a3457600080fd5b505af1158015610a48573d6000803e3d6000fd5b505050506040513d6020811015610a5e57600080fd5b5051610a6657fe5b50505b505050505050505050505050565b600082815260056020526040812054839073ffffffffffffffffffffffffffffffffffffffff163314610af5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602881526020018061366a6028913960400191505060405180910390fd5b60008181526005602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a2610b58613416565b60008581526009602090815260408083205483526008825291829020825160a0810184528154815260018201548184015260028201805485518186028101860187528181529295939493860193830182828015610beb57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610bc0575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015610c4357602002820191906000526020600020905b815481526020019060010190808311610c2f575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015610c9b57602002820191906000526020600020905b815481526020019060010190808311610c87575b505050919092525050506000868152600b60209081526040808320805460098452828520805492869055949094558151898152915194955092933392859285927f6bd4bffa5426494ba16814dba4b1994c92f88f7664ad231cf8aa811fff6e925e929181900390910190a46000828152600a6020908152604082206002018054600181018255908352912001869055610d32613445565b6000838152600a6020908152604091829020825160808101845281547fffffffff0000000000000000000000000000000000000000000000000000000060e082901b16825273ffffffffffffffffffffffffffffffffffffffff640100000000909104811682850152600183015416818501526002820180548551818602810186019096528086529194929360608601939290830182828015610df457602002820191906000526020600020905b815481526020019060010190808311610de0575b50505050508152505090508360400151518160600151511415610e80576000838152600a6020526040812080547fffffffffffffffff0000000000000000000000000000000000000000000000001681556001810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590610e7d600283018261346b565b50505b60208401516060820151516001911415611027576000610ea383606001516121b4565b905084847fe991444bc589ce1a82e7cbe4e5ebaa8aaa2a5c44964bd32d2af07dd846a638ba836040518082815260200191505060405180910390a36040808401518451825160248101899052604480820186905284518083039091018152606490910184526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921782529251835173ffffffffffffffffffffffffffffffffffffffff9093169392909182918083835b60208310610fb957805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610f7c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461101b576040519150601f19603f3d011682016040523d82523d6000602084013e611020565b606091505b5090925050505b98975050505050505050565b6000848152600b60209081526040808320805490849055600990925282209190915561105d613445565b6000828152600a6020908152604091829020825160808101845281547fffffffff0000000000000000000000000000000000000000000000000000000060e082901b16825273ffffffffffffffffffffffffffffffffffffffff64010000000090910481168285015260018301541681850152600282018054855181860281018601909652808652919492936060860193929083018282801561111f57602002820191906000526020600020905b81548152602001906001019080831161110b575b50505050508152505090503373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff16146111c857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f6e6c79207265717565737465722063616e2063616e63656c00000000000000604482015290519081900360640190fd5b6000828152600a6020526040812080547fffffffffffffffff0000000000000000000000000000000000000000000000001681556001810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590611234600283018261346b565b5050611242868686866121cf565b600061124c611e6d565b90508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8360200151886040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156112d957600080fd5b505af11580156112ed573d6000803e3d6000fd5b505050506040513d602081101561130357600080fd5b505161137057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f556e61626c6520746f207472616e736665720000000000000000000000000000604482015290519081900360640190fd5b50505050505050565b60008088116113e957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4d696e20726573706f6e736573206d757374206265203e203000000000000000604482015290519081900360640190fd5b85841480156113f757508582145b61146257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f556e6d6574206c656e6774680000000000000000000000000000000000000000604482015290519081900360640190fd5b602d8611156114d257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f43616e6e6f742068617665206d6f7265207468616e203435206f7261636c6573604482015290519081900360640190fd5b8786101561154157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f496e76616c6964206d696e20726573706f6e7365730000000000000000000000604482015290519081900360640190fd5b6000805b8381101561157c5761157285858381811061155c57fe5b905060200201358361230a90919063ffffffff16565b9150600101611545565b5060078054604080516020808201849052428284015282518083038401815260608301808552815191830191909120600190950190955561010082018352858552608082018e905282518c820281810183019094528c815293965060a090910192918c918c91829185019084908082843760009201919091525050509082525060408051602089810282810182019093528982529283019290918a918a9182918501908490808284376000920191909152505050908252506040805160208781028281018201909352878252928301929091889188918291850190849080828437600092018290525093909452505084815260086020908152604091829020845181558482015160018201559184015180519293506116a49260028501929190910190613489565b50606082015180516116c0916003840191602090910190613513565b50608082015180516116dc916004840191602090910190613513565b505060408051838152602081018c905281518593507f1df950b8dca286fff2ebb83642851b5a9db00ff4bc87815828e845b45d183eaf929181900390910190a250979650505050505050565b60065473ffffffffffffffffffffffffffffffffffffffff1690565b61174c611974565b6117b757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60006117c1611e6d565b604080517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152905191925073ffffffffffffffffffffffffffffffffffffffff83169163a9059cbb91339184916370a08231916024808301926020929190829003018186803b15801561183a57600080fd5b505afa15801561184e573d6000803e3d6000fd5b505050506040513d602081101561186457600080fd5b5051604080517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b16815273ffffffffffffffffffffffffffffffffffffffff909316600484015260248301919091525160448083019260209291908290030181600087803b1580156118da57600080fd5b505af11580156118ee573d6000803e3d6000fd5b505050506040513d602081101561190457600080fd5b505161197157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f556e61626c6520746f207472616e736665720000000000000000000000000000604482015290519081900360640190fd5b50565b60065473ffffffffffffffffffffffffffffffffffffffff16331490565b61199a6105a8565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a3357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4d75737420757365204c494e4b20746f6b656e00000000000000000000000000604482015290519081900360640190fd5b8051819060441115611aa657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e76616c69642072657175657374206c656e67746800000000000000000000604482015290519081900360640190fd5b602082015182907fffffffff0000000000000000000000000000000000000000000000000000000081167f404299460000000000000000000000000000000000000000000000000000000014611b5d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4d757374207573652077686974656c69737465642066756e6374696f6e730000604482015290519081900360640190fd5b85602485015284604485015260003073ffffffffffffffffffffffffffffffffffffffff16856040518082805190602001908083835b60208310611bd057805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611b93565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114611c30576040519150601f19603f3d011682016040523d82523d6000602084013e611c35565b606091505b505090508061137057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f556e61626c6520746f2063726561746520726571756573740000000000000000604482015290519081900360640190fd5b600081815260086020908152604080832080546001820154600283018054855181880281018801909652808652879660609687968796959493600382019360049092019291859190830182828015611d3357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611d08575b5050505050925081805480602002602001604051908101604052809291908181526020018280548015611d8557602002820191906000526020600020905b815481526020019060010190808311611d71575b5050505050915080805480602002602001604051908101604052809291908181526020018280548015611dd757602002820191906000526020600020905b815481526020019060010190808311611dc3575b505050505090509450945094509450945091939590929450565b611df9611974565b611e6457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61197181612385565b60025473ffffffffffffffffffffffffffffffffffffffff1690565b611e91613416565b600084815260086020908152604091829020825160a0810184528154815260018201548184015260028201805485518186028101860187528181529295939493860193830182828015611f1a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611eef575b5050505050815260200160038201805480602002602001604051908101604052809291908181526020018280548015611f7257602002820191906000526020600020905b815481526020019060010190808311611f5e575b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015611fca57602002820191906000526020600020905b815481526020019060010190808311611fb6575b5050505050815250509050600081602001511161204857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f496e76616c696420736572766963652061677265656d656e7400000000000000604482015290519081900360640190fd5b61205061355a565b81516040805191825251600091869188917f0d3e7811af83862cbc3778c66d787596cdb580e0dbc448d99f21c865770a8432919081900360200190a360005b836040015151811015611370576120c5846060015182815181106120af57fe5b602002602001015130636a9705b460e01b61247f565b92506120d7838663ffffffff6124aa16565b612110846040015182815181106120ea57fe5b6020026020010151848660800151848151811061210357fe5b60200260200101516124cd565b6000818152600b602090815260408083208a905560099091529020889055915060010161208f565b6000828211156121a957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b508082035b92915050565b60006121c76121c28361270a565b612798565b90505b919050565b60008481526005602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000008116909155905173ffffffffffffffffffffffffffffffffffffffff9091169186917fe1fe3afa0f7f761ff0a8b89086790efd5140d2907ebd5b7ff6bfcb5e075fd4c59190a2604080517f6ee4d55300000000000000000000000000000000000000000000000000000000815260048101879052602481018690527fffffffff000000000000000000000000000000000000000000000000000000008516604482015260648101849052905173ffffffffffffffffffffffffffffffffffffffff831691636ee4d55391608480830192600092919082900301818387803b1580156122eb57600080fd5b505af11580156122ff573d6000803e3d6000fd5b505050505050505050565b60008282018381101561237e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff81166123f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806136006026913960400191505060405180910390fd5b60065460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600680547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b61248761355a565b61248f61355a565b6124a18186868663ffffffff61286216565b95945050505050565b6124b9826080015182516128cd565b506124c8826080015182612907565b505050565b6004546040805130606090811b60208084019190915260348084018690528451808503909101815260549093018452825192810192909220908601939093526000838152600590915281812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8816179055905182917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af991a260025473ffffffffffffffffffffffffffffffffffffffff16634000aea085846125a787612921565b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561262b578181015183820152602001612613565b50505050905090810190601f1680156126585780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561267957600080fd5b505af115801561268d573d6000803e3d6000fd5b505050506040513d60208110156126a357600080fd5b50516126fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806136266023913960400191505060405180910390fd5b6004805460010190559392505050565b606080825167ffffffffffffffff8111801561272557600080fd5b5060405190808252806020026020018201604052801561274f578160200160208202803683370190505b50905060005b83518110156127915783818151811061276a57fe5b602002602001015182828151811061277e57fe5b6020908102919091010152600101612755565b5092915050565b6000815160001061280a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6c697374206d757374206e6f7420626520656d70747900000000000000000000604482015290519081900360640190fd5b815160028104600182166128495760008061282f866000600187036001870387612b0a565b909250905061283e8282612be8565b9450505050506121ca565b6128598460006001850384612c56565b925050506121ca565b61286a61355a565b61287a85608001516101006128cd565b505082845273ffffffffffffffffffffffffffffffffffffffff821660208501527fffffffff0000000000000000000000000000000000000000000000000000000081166040850152835b949350505050565b6128d561358f565b60208206156128ea5760208206602003820191505b506020828101829052604080518085526000815290920101905290565b61290f61358f565b61237e83846000015151848551612ce7565b6060634042994660e01b60008084600001518560200151866040015187606001516001896080015160000151604051602401808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612a4d578181015183820152602001612a35565b50505050905090810190601f168015612a7a5780820380516001836020036101000a031916815260200191505b50604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909d169c909c17909b5250989950505050505050505050919050565b600080828410612b1957600080fd5b838611158015612b295750848411155b612b3257600080fd5b828611158015612b425750848311155b612b4b57600080fd5b60078686031015612b6c57612b638787878787612dcf565b91509150612bde565b6000612b79888888613286565b9050808411612b8a57809550612bd8565b84811015612b9d57806001019650612bd8565b808511158015612bac57508381105b612bb257fe5b612bbe88888388612c56565b9250612bcf88826001018887612c56565b9150612bde9050565b50612b4b565b9550959350505050565b60008083128015612bf95750600082135b80612c0f5750600083138015612c0f5750600082125b15612c2f576002612c208484613363565b81612c2757fe5b0590506121ae565b60006002808507818507010590506128c5612c506002860560028605613363565b82613363565b600081841115612c6557600080fd5b82821115612c7257600080fd5b82841015612cc95760078484031015612c9e576000612c948686868687612dcf565b5091506128c59050565b6000612cab868686613286565b9050808311612cbc57809350612cc3565b8060010194505b50612c72565b848481518110612cd557fe5b60200260200101519050949350505050565b612cef61358f565b8251821115612cfd57600080fd5b84602001518285011115612d2757612d2785612d1f87602001518786016133e2565b6002026133f9565b600080865180518760208301019350808887011115612d465787860182525b505050602084015b60208410612d8b57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09093019260209182019101612d4e565b5181517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60208690036101000a019081169019919091161790525083949350505050565b600080600086866001010390506000888860000181518110612ded57fe5b60200260200101519050600082600110612e27577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612e3f565b898960010181518110612e3657fe5b60200260200101515b9050600083600210612e71577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612e89565b8a8a60020181518110612e8057fe5b60200260200101515b9050600084600310612ebb577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612ed3565b8b8b60030181518110612eca57fe5b60200260200101515b9050600085600410612f05577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612f1d565b8c8c60040181518110612f1457fe5b60200260200101515b9050600086600510612f4f577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612f67565b8d8d60050181518110612f5e57fe5b60200260200101515b9050600087600610612f99577f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612fb1565b8e8e60060181518110612fa857fe5b60200260200101515b905085871315612fbf579495945b83851315612fcb579293925b81831315612fd7579091905b84871315612fe3579395935b83861315612fef579294925b80831315612ff957915b84861315613005579394935b8082131561300f57905b8287131561301b579195915b81861315613027579094905b8085131561303157935b8286131561303d579194915b8084131561304757925b82851315613053579193915b8184131561305f579092905b8284131561306b579192915b8d8c038061307b57879a50613148565b806001141561308c57869a50613148565b806002141561309d57859a50613148565b80600314156130ae57849a50613148565b80600414156130bf57839a50613148565b80600514156130d057829a50613148565b80600614156130e157819a50613148565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6b31206f7574206f6620626f756e647300000000000000000000000000000000604482015290519081900360640190fd5b8e8c038d8d141561316657508a9950612bde98505050505050505050565b8061317d5750969850612bde975050505050505050565b80600114156131985750959850612bde975050505050505050565b80600214156131b35750949850612bde975050505050505050565b80600314156131ce5750939850612bde975050505050505050565b80600414156131e95750929850612bde975050505050505050565b80600514156132045750919850612bde975050505050505050565b806006141561321f5750909850612bde975050505050505050565b604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6b32206f7574206f6620626f756e647300000000000000000000000000000000604482015290519081900360640190fd5b600080846002858501048151811061329a57fe5b602002602001015190506001840393506001830192505b600184019350808585815181106132c457fe5b6020026020010151126132b1575b600183039250808584815181106132e557fe5b6020026020010151136132d257828410156133555784838151811061330657fe5b602002602001015185858151811061331a57fe5b602002602001015186868151811061332e57fe5b6020026020010187868151811061334157fe5b60209081029190910101919091525261335e565b8291505061237e565b6132b1565b60008282018183128015906133785750838112155b8061338d575060008312801561338d57508381125b61237e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806136496021913960400191505060405180910390fd5b6000818311156133f35750816121ae565b50919050565b815161340583836128cd565b506134108382612907565b50505050565b6040518060a0016040528060008152602001600081526020016060815260200160608152602001606081525090565b604080516080810182526000808252602082018190529181019190915260608082015290565b508054600082559060005260206000209081019061197191906135a9565b828054828255906000526020600020908101928215613503579160200282015b8281111561350357825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906134a9565b5061350f9291506135c3565b5090565b82805482825590600052602060002090810192821561354e579160200282015b8281111561354e578251825591602001919060010190613533565b5061350f9291506135a9565b6040805160a08101825260008082526020820181905291810182905260608101919091526080810161358a61358f565b905290565b604051806040016040528060608152602001600081525090565b6105b591905b8082111561350f57600081556001016135af565b6105b591905b8082111561350f5780547fffffffffffffffffffffffff00000000000000000000000000000000000000001681556001016135c956fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261636c655369676e6564536166654d6174683a206164646974696f6e206f766572666c6f77536f75726365206d75737420626520746865206f7261636c65206f66207468652072657175657374a26469706673582212207df684e69a035179e1d31364ff3661100b1968f52196697f144cee24e1d16c1564736f6c63430006060033",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xA4C0ED36 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xAF52C981 EQ PUSH2 0x46C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x575 JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x8DC654A2 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x39C JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x6A9705B4 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x6A9705B4 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6EE4D553 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x834B55E0 EQ PUSH2 0x25F JUMPI PUSH2 0xC9 JUMP JUMPDEST DUP1 PUSH4 0x165D35E1 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x40429946 EQ PUSH2 0xFF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD6 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x100 DUP2 LT ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP3 PUSH1 0x60 DUP4 ADD CALLDATALOAD AND SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP2 PUSH1 0xA0 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0xC0 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH2 0x100 DUP2 ADD PUSH1 0xE0 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x5B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x36F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1379 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x1728 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x1744 JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1992 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1CA5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP8 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4DD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4C5 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x51C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x504 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP5 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x55B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x543 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x58B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B2 PUSH2 0x1E6D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x5C0 PUSH2 0x5A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x659 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420757365204C494E4B20746F6B656E00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH2 0x662 PUSH2 0x1E6D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6FC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616C6C6261636B20746F204C494E4B000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 DUP11 LT ISZERO PUSH2 0x77A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207061796D656E74000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH1 0x60 DUP15 SWAP1 SHL AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP1 DUP4 ADD DUP11 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x54 SWAP1 SWAP3 ADD DUP4 MSTORE DUP2 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x868 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F6E636520616C726561647920696E2D757365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xE0 SHR MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP12 PUSH1 0xA PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x985 DUP11 DUP3 DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1E89 SWAP3 POP POP POP JUMP JUMPDEST DUP2 DUP12 GT ISZERO PUSH2 0xA69 JUMPI PUSH1 0x0 PUSH2 0x99F DUP13 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x2138 AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9AB PUSH2 0x1E6D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP16 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xA66 JUMPI INVALID JUMPDEST POP POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP4 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x366A PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH32 0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A SWAP2 LOG2 PUSH2 0xB58 PUSH2 0x3416 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP4 MSTORE PUSH1 0x8 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD DUP8 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP6 SWAP4 SWAP5 SWAP4 DUP7 ADD SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBEB JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBC0 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xC43 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC2F JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xC9B JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xC87 JUMPI JUMPDEST POP POP POP SWAP2 SWAP1 SWAP3 MSTORE POP POP POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x9 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP3 DUP7 SWAP1 SSTORE SWAP5 SWAP1 SWAP5 SSTORE DUP2 MLOAD DUP10 DUP2 MSTORE SWAP2 MLOAD SWAP5 SWAP6 POP SWAP3 SWAP4 CALLER SWAP3 DUP6 SWAP3 DUP6 SWAP3 PUSH32 0x6BD4BFFA5426494BA16814DBA4B1994C92F88F7664AD231CF8AA811FFF6E925E SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD DUP7 SWAP1 SSTORE PUSH2 0xD32 PUSH2 0x3445 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP3 SWAP1 SHL AND DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH5 0x100000000 SWAP1 SWAP2 DIV DUP2 AND DUP3 DUP6 ADD MSTORE PUSH1 0x1 DUP4 ADD SLOAD AND DUP2 DUP6 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP7 MSTORE DUP1 DUP7 MSTORE SWAP2 SWAP5 SWAP3 SWAP4 PUSH1 0x60 DUP7 ADD SWAP4 SWAP3 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xDF4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xDE0 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP4 PUSH1 0x40 ADD MLOAD MLOAD DUP2 PUSH1 0x60 ADD MLOAD MLOAD EQ ISZERO PUSH2 0xE80 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE SWAP1 PUSH2 0xE7D PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x346B JUMP JUMPDEST POP POP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x60 DUP3 ADD MLOAD MLOAD PUSH1 0x1 SWAP2 EQ ISZERO PUSH2 0x1027 JUMPI PUSH1 0x0 PUSH2 0xEA3 DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0x21B4 JUMP JUMPDEST SWAP1 POP DUP5 DUP5 PUSH32 0xE991444BC589CE1A82E7CBE4E5EBAA8AAA2A5C44964BD32D2AF07DD846A638BA DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 DUP1 DUP5 ADD MLOAD DUP5 MLOAD DUP3 MLOAD PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD DUP5 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 MSTORE SWAP3 MLOAD DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP4 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xFB9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x101B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP POP POP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 DUP5 SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x105D PUSH2 0x3445 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP3 SWAP1 SHL AND DUP3 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH5 0x100000000 SWAP1 SWAP2 DIV DUP2 AND DUP3 DUP6 ADD MSTORE PUSH1 0x1 DUP4 ADD SLOAD AND DUP2 DUP6 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD SWAP1 SWAP7 MSTORE DUP1 DUP7 MSTORE SWAP2 SWAP5 SWAP3 SWAP4 PUSH1 0x60 DUP7 ADD SWAP4 SWAP3 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x111F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x110B JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11C8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207265717565737465722063616E2063616E63656C00000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFF000000000000000000000000000000000000000000000000 AND DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE SWAP1 PUSH2 0x1234 PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x346B JUMP JUMPDEST POP POP PUSH2 0x1242 DUP7 DUP7 DUP7 DUP7 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x124C PUSH2 0x1E6D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1370 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F207472616E736665720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP9 GT PUSH2 0x13E9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E20726573706F6E736573206D757374206265203E203000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 DUP5 EQ DUP1 ISZERO PUSH2 0x13F7 JUMPI POP DUP6 DUP3 EQ JUMPDEST PUSH2 0x1462 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6D6574206C656E6774680000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2D DUP7 GT ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742068617665206D6F7265207468616E203435206F7261636C6573 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP8 DUP7 LT ISZERO PUSH2 0x1541 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D696E20726573706F6E7365730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x157C JUMPI PUSH2 0x1572 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x155C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP4 PUSH2 0x230A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE TIMESTAMP DUP3 DUP5 ADD MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 SWAP1 SWAP6 ADD SWAP1 SWAP6 SSTORE PUSH2 0x100 DUP3 ADD DUP4 MSTORE DUP6 DUP6 MSTORE PUSH1 0x80 DUP3 ADD DUP15 SWAP1 MSTORE DUP3 MLOAD DUP13 DUP3 MUL DUP2 DUP2 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP13 DUP2 MSTORE SWAP4 SWAP7 POP PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP3 SWAP2 DUP13 SWAP2 DUP13 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP10 DUP2 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP10 DUP3 MSTORE SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 DUP11 SWAP2 DUP11 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP8 DUP2 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP8 DUP3 MSTORE SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 DUP9 SWAP2 DUP9 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 SWAP1 SWAP5 MSTORE POP POP DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE DUP5 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 DUP5 ADD MLOAD DUP1 MLOAD SWAP3 SWAP4 POP PUSH2 0x16A4 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3489 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x16C0 SWAP2 PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3513 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x16DC SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x3513 JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD DUP6 SWAP4 POP PUSH32 0x1DF950B8DCA286FFF2EBB83642851B5A9DB00FF4BC87815828E845B45D183EAF SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG2 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x174C PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x17B7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x17C1 PUSH2 0x1E6D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH4 0xA9059CBB SWAP2 CALLER SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x183A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x184E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1864 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1971 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F207472616E736665720000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH2 0x199A PUSH2 0x5A8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A33 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420757365204C494E4B20746F6B656E00000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 SWAP1 PUSH1 0x44 GT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642072657175657374206C656E67746800000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD DUP3 SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x4042994600000000000000000000000000000000000000000000000000000000 EQ PUSH2 0x1B5D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374207573652077686974656C69737465642066756E6374696F6E730000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x24 DUP6 ADD MSTORE DUP5 PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1BD0 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1B93 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C30 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C35 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1370 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E61626C6520746F2063726561746520726571756573740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP9 MUL DUP2 ADD DUP9 ADD SWAP1 SWAP7 MSTORE DUP1 DUP7 MSTORE DUP8 SWAP7 PUSH1 0x60 SWAP7 DUP8 SWAP7 DUP8 SWAP7 SWAP6 SWAP5 SWAP4 PUSH1 0x3 DUP3 ADD SWAP4 PUSH1 0x4 SWAP1 SWAP3 ADD SWAP3 SWAP2 DUP6 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1D33 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D08 JUMPI JUMPDEST POP POP POP POP POP SWAP3 POP DUP2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1D85 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1D71 JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1DD7 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1DC3 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP2 SWAP4 SWAP6 SWAP1 SWAP3 SWAP5 POP JUMP JUMPDEST PUSH2 0x1DF9 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1E64 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1971 DUP2 PUSH2 0x2385 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1E91 PUSH2 0x3416 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP7 MUL DUP2 ADD DUP7 ADD DUP8 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP6 SWAP4 SWAP5 SWAP4 DUP7 ADD SWAP4 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1F1A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1EEF JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1F72 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1F5E JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1FCA JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1FB6 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD GT PUSH2 0x2048 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420736572766963652061677265656D656E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2050 PUSH2 0x355A JUMP JUMPDEST DUP2 MLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH1 0x0 SWAP2 DUP7 SWAP2 DUP9 SWAP2 PUSH32 0xD3E7811AF83862CBC3778C66D787596CDB580E0DBC448D99F21C865770A8432 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x1370 JUMPI PUSH2 0x20C5 DUP5 PUSH1 0x60 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x20AF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD ADDRESS PUSH4 0x6A9705B4 PUSH1 0xE0 SHL PUSH2 0x247F JUMP JUMPDEST SWAP3 POP PUSH2 0x20D7 DUP4 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x24AA AND JUMP JUMPDEST PUSH2 0x2110 DUP5 PUSH1 0x40 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x20EA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH1 0x80 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2103 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x24CD JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP11 SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP9 SWAP1 SSTORE SWAP2 POP PUSH1 0x1 ADD PUSH2 0x208F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x21A9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP DUP1 DUP3 SUB JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C7 PUSH2 0x21C2 DUP4 PUSH2 0x270A JUMP JUMPDEST PUSH2 0x2798 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND SWAP1 SWAP2 SSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 DUP7 SWAP2 PUSH32 0xE1FE3AFA0F7F761FF0A8B89086790EFD5140D2907EBD5B7FF6BFCB5E075FD4C5 SWAP2 SWAP1 LOG2 PUSH1 0x40 DUP1 MLOAD PUSH32 0x6EE4D55300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH4 0x6EE4D553 SWAP2 PUSH1 0x84 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x237E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x23F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3600 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x6 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2487 PUSH2 0x355A JUMP JUMPDEST PUSH2 0x248F PUSH2 0x355A JUMP JUMPDEST PUSH2 0x24A1 DUP2 DUP7 DUP7 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x2862 AND JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24B9 DUP3 PUSH1 0x80 ADD MLOAD DUP3 MLOAD PUSH2 0x28CD JUMP JUMPDEST POP PUSH2 0x24C8 DUP3 PUSH1 0x80 ADD MLOAD DUP3 PUSH2 0x2907 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x60 SWAP1 DUP2 SHL PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x34 DUP1 DUP5 ADD DUP7 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP6 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x54 SWAP1 SWAP4 ADD DUP5 MSTORE DUP3 MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 KECCAK256 SWAP1 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP2 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND OR SWAP1 SSTORE SWAP1 MLOAD DUP3 SWAP2 PUSH32 0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9 SWAP2 LOG2 PUSH1 0x2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4000AEA0 DUP6 DUP5 PUSH2 0x25A7 DUP8 PUSH2 0x2921 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x262B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2613 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2658 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x268D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x26FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3626 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x2725 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x274F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2791 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x276A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x277E JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 ADD PUSH2 0x2755 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 LT PUSH2 0x280A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6C697374206D757374206E6F7420626520656D70747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND PUSH2 0x2849 JUMPI PUSH1 0x0 DUP1 PUSH2 0x282F DUP7 PUSH1 0x0 PUSH1 0x1 DUP8 SUB PUSH1 0x1 DUP8 SUB DUP8 PUSH2 0x2B0A JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x283E DUP3 DUP3 PUSH2 0x2BE8 JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x2859 DUP5 PUSH1 0x0 PUSH1 0x1 DUP6 SUB DUP5 PUSH2 0x2C56 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x21CA JUMP JUMPDEST PUSH2 0x286A PUSH2 0x355A JUMP JUMPDEST PUSH2 0x287A DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0x28CD JUMP JUMPDEST POP POP DUP3 DUP5 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x40 DUP6 ADD MSTORE DUP4 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x28D5 PUSH2 0x358F JUMP JUMPDEST PUSH1 0x20 DUP3 MOD ISZERO PUSH2 0x28EA JUMPI PUSH1 0x20 DUP3 MOD PUSH1 0x20 SUB DUP3 ADD SWAP2 POP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 SWAP3 ADD ADD SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x290F PUSH2 0x358F JUMP JUMPDEST PUSH2 0x237E DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x2CE7 JUMP JUMPDEST PUSH1 0x60 PUSH4 0x40429946 PUSH1 0xE0 SHL PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD PUSH1 0x1 DUP10 PUSH1 0x80 ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A4D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2A35 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2A7A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP14 AND SWAP13 SWAP1 SWAP13 OR SWAP1 SWAP12 MSTORE POP SWAP9 SWAP10 POP POP POP POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 LT PUSH2 0x2B19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO DUP1 ISZERO PUSH2 0x2B29 JUMPI POP DUP5 DUP5 GT ISZERO JUMPDEST PUSH2 0x2B32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 GT ISZERO DUP1 ISZERO PUSH2 0x2B42 JUMPI POP DUP5 DUP4 GT ISZERO JUMPDEST PUSH2 0x2B4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 DUP7 DUP7 SUB LT ISZERO PUSH2 0x2B6C JUMPI PUSH2 0x2B63 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2DCF JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x2BDE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B79 DUP9 DUP9 DUP9 PUSH2 0x3286 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT PUSH2 0x2B8A JUMPI DUP1 SWAP6 POP PUSH2 0x2BD8 JUMP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2B9D JUMPI DUP1 PUSH1 0x1 ADD SWAP7 POP PUSH2 0x2BD8 JUMP JUMPDEST DUP1 DUP6 GT ISZERO DUP1 ISZERO PUSH2 0x2BAC JUMPI POP DUP4 DUP2 LT JUMPDEST PUSH2 0x2BB2 JUMPI INVALID JUMPDEST PUSH2 0x2BBE DUP9 DUP9 DUP4 DUP9 PUSH2 0x2C56 JUMP JUMPDEST SWAP3 POP PUSH2 0x2BCF DUP9 DUP3 PUSH1 0x1 ADD DUP9 DUP8 PUSH2 0x2C56 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BDE SWAP1 POP JUMP JUMPDEST POP PUSH2 0x2B4B JUMP JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT DUP1 ISZERO PUSH2 0x2BF9 JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST DUP1 PUSH2 0x2C0F JUMPI POP PUSH1 0x0 DUP4 SGT DUP1 ISZERO PUSH2 0x2C0F JUMPI POP PUSH1 0x0 DUP3 SLT JUMPDEST ISZERO PUSH2 0x2C2F JUMPI PUSH1 0x2 PUSH2 0x2C20 DUP5 DUP5 PUSH2 0x3363 JUMP JUMPDEST DUP2 PUSH2 0x2C27 JUMPI INVALID JUMPDEST SDIV SWAP1 POP PUSH2 0x21AE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 DUP6 SMOD DUP2 DUP6 SMOD ADD SDIV SWAP1 POP PUSH2 0x28C5 PUSH2 0x2C50 PUSH1 0x2 DUP7 SDIV PUSH1 0x2 DUP7 SDIV PUSH2 0x3363 JUMP JUMPDEST DUP3 PUSH2 0x3363 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 GT ISZERO PUSH2 0x2C65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 GT ISZERO PUSH2 0x2C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x2CC9 JUMPI PUSH1 0x7 DUP5 DUP5 SUB LT ISZERO PUSH2 0x2C9E JUMPI PUSH1 0x0 PUSH2 0x2C94 DUP7 DUP7 DUP7 DUP7 DUP8 PUSH2 0x2DCF JUMP JUMPDEST POP SWAP2 POP PUSH2 0x28C5 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CAB DUP7 DUP7 DUP7 PUSH2 0x3286 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 GT PUSH2 0x2CBC JUMPI DUP1 SWAP4 POP PUSH2 0x2CC3 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP5 POP JUMPDEST POP PUSH2 0x2C72 JUMP JUMPDEST DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2CD5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2CEF PUSH2 0x358F JUMP JUMPDEST DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x2CFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD DUP3 DUP6 ADD GT ISZERO PUSH2 0x2D27 JUMPI PUSH2 0x2D27 DUP6 PUSH2 0x2D1F DUP8 PUSH1 0x20 ADD MLOAD DUP8 DUP7 ADD PUSH2 0x33E2 JUMP JUMPDEST PUSH1 0x2 MUL PUSH2 0x33F9 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0x2D46 JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST POP POP POP PUSH1 0x20 DUP5 ADD JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0x2D8B JUMPI DUP1 MLOAD DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2D4E JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP7 SWAP1 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 AND SWAP1 NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 MSTORE POP DUP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP7 PUSH1 0x1 ADD SUB SWAP1 POP PUSH1 0x0 DUP9 DUP9 PUSH1 0x0 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2DED JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x1 LT PUSH2 0x2E27 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2E3F JUMP JUMPDEST DUP10 DUP10 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2E36 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x2 LT PUSH2 0x2E71 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2E89 JUMP JUMPDEST DUP11 DUP11 PUSH1 0x2 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2E80 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x3 LT PUSH2 0x2EBB JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2ED3 JUMP JUMPDEST DUP12 DUP12 PUSH1 0x3 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2ECA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 PUSH1 0x4 LT PUSH2 0x2F05 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2F1D JUMP JUMPDEST DUP13 DUP13 PUSH1 0x4 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2F14 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x5 LT PUSH2 0x2F4F JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2F67 JUMP JUMPDEST DUP14 DUP14 PUSH1 0x5 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2F5E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x6 LT PUSH2 0x2F99 JUMPI PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2FB1 JUMP JUMPDEST DUP15 DUP15 PUSH1 0x6 ADD DUP2 MLOAD DUP2 LT PUSH2 0x2FA8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST SWAP1 POP DUP6 DUP8 SGT ISZERO PUSH2 0x2FBF JUMPI SWAP5 SWAP6 SWAP5 JUMPDEST DUP4 DUP6 SGT ISZERO PUSH2 0x2FCB JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP2 DUP4 SGT ISZERO PUSH2 0x2FD7 JUMPI SWAP1 SWAP2 SWAP1 JUMPDEST DUP5 DUP8 SGT ISZERO PUSH2 0x2FE3 JUMPI SWAP4 SWAP6 SWAP4 JUMPDEST DUP4 DUP7 SGT ISZERO PUSH2 0x2FEF JUMPI SWAP3 SWAP5 SWAP3 JUMPDEST DUP1 DUP4 SGT ISZERO PUSH2 0x2FF9 JUMPI SWAP2 JUMPDEST DUP5 DUP7 SGT ISZERO PUSH2 0x3005 JUMPI SWAP4 SWAP5 SWAP4 JUMPDEST DUP1 DUP3 SGT ISZERO PUSH2 0x300F JUMPI SWAP1 JUMPDEST DUP3 DUP8 SGT ISZERO PUSH2 0x301B JUMPI SWAP2 SWAP6 SWAP2 JUMPDEST DUP2 DUP7 SGT ISZERO PUSH2 0x3027 JUMPI SWAP1 SWAP5 SWAP1 JUMPDEST DUP1 DUP6 SGT ISZERO PUSH2 0x3031 JUMPI SWAP4 JUMPDEST DUP3 DUP7 SGT ISZERO PUSH2 0x303D JUMPI SWAP2 SWAP5 SWAP2 JUMPDEST DUP1 DUP5 SGT ISZERO PUSH2 0x3047 JUMPI SWAP3 JUMPDEST DUP3 DUP6 SGT ISZERO PUSH2 0x3053 JUMPI SWAP2 SWAP4 SWAP2 JUMPDEST DUP2 DUP5 SGT ISZERO PUSH2 0x305F JUMPI SWAP1 SWAP3 SWAP1 JUMPDEST DUP3 DUP5 SGT ISZERO PUSH2 0x306B JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST DUP14 DUP13 SUB DUP1 PUSH2 0x307B JUMPI DUP8 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x308C JUMPI DUP7 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST DUP1 PUSH1 0x2 EQ ISZERO PUSH2 0x309D JUMPI DUP6 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST DUP1 PUSH1 0x3 EQ ISZERO PUSH2 0x30AE JUMPI DUP5 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST DUP1 PUSH1 0x4 EQ ISZERO PUSH2 0x30BF JUMPI DUP4 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST DUP1 PUSH1 0x5 EQ ISZERO PUSH2 0x30D0 JUMPI DUP3 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST DUP1 PUSH1 0x6 EQ ISZERO PUSH2 0x30E1 JUMPI DUP2 SWAP11 POP PUSH2 0x3148 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6B31206F7574206F6620626F756E647300000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP15 DUP13 SUB DUP14 DUP14 EQ ISZERO PUSH2 0x3166 JUMPI POP DUP11 SWAP10 POP PUSH2 0x2BDE SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x317D JUMPI POP SWAP7 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x3198 JUMPI POP SWAP6 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x2 EQ ISZERO PUSH2 0x31B3 JUMPI POP SWAP5 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x3 EQ ISZERO PUSH2 0x31CE JUMPI POP SWAP4 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x4 EQ ISZERO PUSH2 0x31E9 JUMPI POP SWAP3 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 EQ ISZERO PUSH2 0x3204 JUMPI POP SWAP2 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x6 EQ ISZERO PUSH2 0x321F JUMPI POP SWAP1 SWAP9 POP PUSH2 0x2BDE SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6B32206F7574206F6620626F756E647300000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x2 DUP6 DUP6 ADD DIV DUP2 MLOAD DUP2 LT PUSH2 0x329A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0x1 DUP4 ADD SWAP3 POP JUMPDEST PUSH1 0x1 DUP5 ADD SWAP4 POP DUP1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x32C4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SLT PUSH2 0x32B1 JUMPI JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x32E5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SGT PUSH2 0x32D2 JUMPI DUP3 DUP5 LT ISZERO PUSH2 0x3355 JUMPI DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x3306 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x331A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x332E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x3341 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE MSTORE PUSH2 0x335E JUMP JUMPDEST DUP3 SWAP2 POP POP PUSH2 0x237E JUMP JUMPDEST PUSH2 0x32B1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP2 DUP4 SLT DUP1 ISZERO SWAP1 PUSH2 0x3378 JUMPI POP DUP4 DUP2 SLT ISZERO JUMPDEST DUP1 PUSH2 0x338D JUMPI POP PUSH1 0x0 DUP4 SLT DUP1 ISZERO PUSH2 0x338D JUMPI POP DUP4 DUP2 SLT JUMPDEST PUSH2 0x237E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3649 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x33F3 JUMPI POP DUP2 PUSH2 0x21AE JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x3405 DUP4 DUP4 PUSH2 0x28CD JUMP JUMPDEST POP PUSH2 0x3410 DUP4 DUP3 PUSH2 0x2907 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1971 SWAP2 SWAP1 PUSH2 0x35A9 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x3503 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3503 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x34A9 JUMP JUMPDEST POP PUSH2 0x350F SWAP3 SWAP2 POP PUSH2 0x35C3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x354E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x354E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x3533 JUMP JUMPDEST POP PUSH2 0x350F SWAP3 SWAP2 POP PUSH2 0x35A9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x358A PUSH2 0x358F JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x5B5 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x350F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x35AF JUMP JUMPDEST PUSH2 0x5B5 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x350F JUMPI DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x35C9 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373756E61626C6520746F207472616E7366 PUSH6 0x72416E644361 PUSH13 0x6C20746F206F7261636C655369 PUSH8 0x6E6564536166654D PUSH2 0x7468 GASPRICE KECCAK256 PUSH2 0x6464 PUSH10 0x74696F6E206F76657266 PUSH13 0x6F77536F75726365206D757374 KECCAK256 PUSH3 0x652074 PUSH9 0x65206F7261636C6520 PUSH16 0x66207468652072657175657374A26469 PUSH17 0x6673582212207DF684E69A035179E1D313 PUSH5 0xFF3661100B NOT PUSH9 0xF52196697F144CEE24 0xE1 0xD1 PUSH13 0x1564736F6C6343000606003300 ",
				"sourceMap": "490:10509:14:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;490:10509:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;4813:109:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5529:1111;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;5529:1111:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;5529:1111:14;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;5529:1111:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;5529:1111:14;;-1:-1:-1;5529:1111:14;-1:-1:-1;5529:1111:14;:::i;:::-;;8104:1085;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;8104:1085:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;10069:688;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;10069:688:14;;;;;;;;;;;;;;;;;;;:::i;2939:936::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;2939:936:14;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;2939:936:14;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2939:936:14;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2939:936:14;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;2939:936:14;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2939:936:14;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2939:936:14;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;2939:936:14;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;2939:936:14;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;2939:936:14;;-1:-1:-1;2939:936:14;-1:-1:-1;2939:936:14;:::i;:::-;;;;;;;;;;;;;;;;861:71:61;;;:::i;9436:219:14:-;;;:::i;1180:84:61:-;;;:::i;718:663:10:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;718:663:10;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;718:663:10;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;718:663:10;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;718:663:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;718:663:10;;-1:-1:-1;718:663:10;;-1:-1:-1;;;;;718:663:10:i;4151:459:14:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4151:459:14;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4151:459:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4151:459:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4151:459:14;;;;;;;;;;;;;;;;;;;;;;;1403:101:61;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1403:101:61;;;;:::i;4813:109:14:-;4872:7;4894:23;:21;:23::i;:::-;4887:30;;4813:109;;:::o;5529:1111::-;1566:19:10;:17;:19::i;:::-;1552:33;;:10;:33;;;1544:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5803:16:14::1;10934:23;:21;:23::i;:::-;10927:30;;:3;:30;;;;10919:66;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;5829:20:::2;5852:24:::0;;;:17:::2;:24;::::0;;;;:37;5949:24;;::::2;;5941:57;;;::::0;;::::2;::::0;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;6042:33;::::0;;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;6042:33:14;;;;;;6032:44;;;;::::2;::::0;;;;6004:25:::2;6090:29:::0;;;:10:::2;:29:::0;;;;;;:36;;;::::2;6042:33;6090:36;:50:::0;6082:83:::2;;;::::0;;::::2;::::0;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;6222:19;6171:10;:29;6182:17;6171:29;;;;;;;;;;;:48;;;:70;;;;;;;;;;;;;;;;;;6295:16;6247:10;:29;6258:17;6247:29;;;;;;;;;;;:45;;;:64;;;;;;;;;;;;;;;;;;6356:7;6317:10;:29;6328:17;6317:29;;;;;;;;;;;:36;;;:46;;;;;;;;;;;;;;;;;;6369:47;6384:5;6391:17;6410:5;;6369:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16:::0;::::2;74:27:::0;;;;-1:-1;6369:14:14::2;::::0;-1:-1:-1;;;6369:47:14:i:2;:::-;6437:12;6426:8;:23;6422:214;;;6459:15;6477:26;:8:::0;6490:12;6477:26:::2;:12;:26;:::i;:::-;6459:44;;6511:24;6557:23;:21;:23::i;:::-;6511:70;;6596:5;:14;;;6611:7;6620;6596:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24::::0;17:12:::2;2:2;6596:32:14;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::2;77:16;74:1;67:27;5:2;6596:32:14;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::2;4:2;-1:-1:::0;6596:32:14;6589:40:::2;;;;6422:214;;;10991:1;;1615::10::1;5529:1111:14::0;;;;;;;;;:::o;8104:1085::-;8234:4;8823:27:4;;;:15;:27;;;;;;;;;;8809:10;:41;8801:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8920:27;;;;:15;:27;;;;;;8913:34;;;;;;8958:30;8936:10;;8958:30;;;8248:26:14::1;;:::i;:::-;8277:55;8295:36:::0;;;:24:::1;:36;::::0;;;;;;;;8277:55;;:17:::1;:55:::0;;;;;;8248:84;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;;;;;;;;;;8277:55;;8248:84;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;::::0;;::::1;;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;8248:84:14;;;;-1:-1:-1;;;8338:19:14::1;8360:20:::0;;;:8:::1;:20;::::0;;;;;;;;;8401:24:::1;:36:::0;;;;;;;8443:27;;;;8476:43;;;;8530:70;;;;;;;8248:84;;-1:-1:-1;8360:20:14;;8582:10:::1;::::0;8360:20;;8401:36;;8530:70:::1;::::0;;;;;;;;;::::1;8606:23;::::0;;;:10:::1;:23;::::0;;;;;;:33:::1;;27:10:-1::0;;39:1:::1;23:18:::0;::::1;45:23:::0;;8606:45:14;;;;;::::1;::::0;;;8657:20:::1;;:::i;:::-;8680:23;::::0;;;:10:::1;:23;::::0;;;;;;;;8657:46;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;;;;;;;;;;;8680:23;;8657:46;;;;;;;::::1;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;8737:2;:10;;;:17;8713:3;:13;;;:20;:41;8709:77;;;8763:23;::::0;;;:10:::1;:23;::::0;;;;8756:30;;;;;;;;::::1;::::0;;;::::1;::::0;;8763:23;8756:30:::1;;::::0;::::1;8763:23:::0;8756:30:::1;:::i;:::-;;;8709:77;8845:15;::::0;::::1;::::0;8821:13:::1;::::0;::::1;::::0;:20;8807:4:::1;::::0;8821:39:::1;8817:348;;;8870:13;8886:31;8903:3;:13;;;8886:16;:31::i;:::-;8870:47;;8966:11;8960:4;8930:56;8979:6;8930:56;;;;;;;;;;;;;;;;;;9065:19;::::0;;::::1;::::0;9113:22;;9090:67;;::::1;::::0;::::1;::::0;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;9090:67:14;;;;;;::::1;25:18:-1::0;::::1;61:17:::0;;9090:67:14::1;182:15:-1;9090:67:14::0;;;::::1;179:29:-1::0;;;::::1;160:49:::0;;9065:93:14;;;;:24:::1;::::0;;::::1;::::0;9090:67;9065:93;;;;;;25:18:-1;36:153:::1;66:2;61:3;58:11;36:153;;176:10:::0;;164:23;;139:12;;;;;98:2:::1;89:12:::0;;::::1;::::0;114::::1;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;9065:93:14;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;-1:-1:::0;9051:107:14;;-1:-1:-1;;;8817:348:14::1;9177:7:::0;8104:1085;-1:-1:-1;;;;;;;;8104:1085:14:o;10069:688::-;10239:19;10261:20;;;:8;:20;;;;;;;;;;10287:27;;;;10327:24;:36;;;;;10320:43;;;;10369:20;;:::i;:::-;10392:23;;;;:10;:23;;;;;;;;;10369:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10392:23;;10369:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10443:10;10429:24;;:3;:10;;;:24;;;10421:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10496:23;;;;:10;:23;;;;;10489:30;;;;;;;;;;;;;;;10496:23;10489:30;;;;10496:23;10489:30;:::i;:::-;;;10525:78;10548:10;10560:8;10570:19;10591:11;10525:22;:78::i;:::-;10609:24;10655:23;:21;:23::i;:::-;10609:70;;10693:5;:14;;;10708:3;:10;;;10720:8;10693:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;10693:36:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10693:36:14;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;10693:36:14;10685:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10069:688;;;;;;;:::o;2939:936::-;3123:12;3169:1;3153:13;:17;3145:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3214:33;;;:72;;;;-1:-1:-1;3251:35:14;;;3214:72;3206:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;667:2;3317:35;;;3309:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3403:32;;;;3395:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3467:20;;3493:104;3510:20;;;3493:104;;;3560:30;3577:9;;3587:1;3577:12;;;;;;;;;;;;;3560;:16;;:30;;;;:::i;:::-;3545:45;-1:-1:-1;3532:3:14;;3493:104;;;-1:-1:-1;3636:11:14;;;3619:34;;;;;;;;;;3649:3;3619:34;;;;;;26:21:-1;;;22:32;;6:49;;3619:34:14;;;;;;3609:45;;;;;;;;;3660:13;;;;;;;3729:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3609:45;;-1:-1:-1;3729:75:14;;;;;;3775:8;;;;;;3729:75;;;3775:8;;3729:75;3775:8;3729:75;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;;3729:75:14;;;-1:-1:-1;3729:75:14;;;;;;;;;;;;;;;;;;;;;;;;3785:7;;;;;;3729:75;;;3785:7;;3729:75;3785:7;3729:75;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;;3729:75:14;;;-1:-1:-1;3729:75:14;;;;;;;;;;;;;;;;;;;;;;;;3794:9;;;;;;3729:75;;;3794:9;;3729:75;3794:9;3729:75;1:33:-1;99:1;81:16;;74:27;;;-1:-1;3729:75:14;;;;-1:-1:-1;;3703:23:14;;;:17;:23;;;;;;;;;:101;;;;;;;;;;;;;;;;;;:23;;-1:-1:-1;3703:101:14;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3703:101:14;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3703:101:14;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3816:54:14;;;;;;;;;;;;;;3836:4;;-1:-1:-1;3816:54:14;;;;;;;;;;;2939:936;;;;;;;;;;:::o;861:71:61:-;921:6;;;;861:71;:::o;9436:219:14:-;1047:9:61;:7;:9::i;:::-;1039:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9485:24:14::1;9531:23;:21;:23::i;:::-;9596:30;::::0;;;;;9620:4:::1;9596:30;::::0;::::1;::::0;;;9485:70;;-1:-1:-1;9569:14:14::1;::::0;::::1;::::0;::::1;::::0;9584:10:::1;::::0;9569:14;;9596:15:::1;::::0;:30;;;;;::::1;::::0;;;;;;;;9569:14;9596:30;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;9596:30:14;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;9596:30:14;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;9596:30:14;9569:58:::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;::::1;;::::0;::::1;::::0;;;;;;;;;;;;;;9596:30:::1;::::0;9569:58;;;;;;;-1:-1:-1;9569:58:14;;::::1;;2:2:-1::0;::::1;;;27:1;24::::0;17:12:::1;2:2;9569:58:14;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;9569:58:14;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28::::0;21:12:::1;4:2;-1:-1:::0;9569:58:14;9561:89:::1;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1099:1:61;9436:219:14:o:0;1180:84:61:-;1253:6;;;;1239:10;:20;;1180:84::o;718:663:10:-;1566:19;:17;:19::i;:::-;1552:33;;:10;:33;;;1544:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:12;;860:5;;283:47;-1:-1:-1;2278:38:10::1;2270:73;;;::::0;;::::1;::::0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;1974:2:::2;1963:14:::0;::::2;1957:21:::0;897:5;;1997:39;;::::2;2013:23:::0;1997:39:::2;1989:82;;;::::0;;::::2;::::0;;::::2;;::::0;::::2;::::0;::::2;::::0;;;;::::2;::::0;;;;;;;;;;;;;::::2;;1009:7:::3;1004:2;997:5;993:14;986:31;1139:7;1134:2;1127:5;1123:14;1116:31;1252:12;1278:4;1270:26;;1297:5;1270:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10:::0;;164:23;;139:12;;;;;98:2:::3;89:12:::0;;::::3;::::0;114::::3;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1270:33:10;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;1251:52:10;;;1340:7;1332:44;;;::::0;;::::3;::::0;;::::3;;::::0;::::3;::::0;::::3;::::0;;;;::::3;::::0;;;;;;;;;;;;;::::3;4151:459:14::0;4229:20;4397:24;;;:17;:24;;;;;;;;:37;;4442;;;;4487:32;;;4378:227;;;;;;;;;;;;;;;;;4229:20;;4281:24;;;;;;4397:37;4442;4487:32;4527:31;;;;4566:33;;;;;4378:227;4487:32;;4378:227;;;4487:32;4378:227;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4151:459;;;;;;;:::o;1403:101:61:-;1047:9;:7;:9::i;:::-;1039:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1471:28:::1;1490:8;1471:18;:28::i;5373:110:4:-:0;5473:4;;;;5373:110;:::o;6978:766:14:-;7079:26;;:::i;:::-;7108:24;;;;:17;:24;;;;;;;;;7079:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7108:24;;7079:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7164:1;7146:2;:15;;;:19;7138:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7201:32;;:::i;:::-;7328:15;;7275:69;;;;;;;7239:25;;7308:18;;7301:5;;7275:69;;;;;;;;;;7355:6;7350:390;7371:2;:10;;;:17;7367:1;:21;7350:390;;;7413:83;7435:2;:9;;;7445:1;7435:12;;;;;;;;;;;;;;7457:4;7464:31;;;7413:21;:83::i;:::-;7403:93;-1:-1:-1;7504:24:14;7403:93;7522:5;7504:24;:17;:24;:::i;:::-;7556:62;7579:2;:10;;;7590:1;7579:13;;;;;;;;;;;;;;7594:7;7603:2;:11;;;7615:1;7603:14;;;;;;;;;;;;;;7556:22;:62::i;:::-;7626:27;;;;:8;:27;;;;;;;;:48;;;7682:24;:43;;;;;:51;;;7536:82;-1:-1:-1;7390:3:14;;7350:390;;1236:165:62;1294:7;1322:1;1317;:6;;1309:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1376:5:62;;;1236:165;;;;;:::o;554:132:11:-;630:6;653:28;670:10;675:4;670;:10::i;:::-;653:16;:28::i;:::-;646:35;;554:132;;;;:::o;4160:417:4:-;4314:35;4378:27;;;:15;:27;;;;;;;;4412:34;;;;;;4457:30;;4378:27;;;;;4394:10;;4457:30;;4314:35;4457:30;4493:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:29;;;;;;:79;;;;;-1:-1:-1;;4493:79:4;;;;;;;-1:-1:-1;4493:29:4;:79;;;2:2:-1;;;;27:1;24;17:12;2:2;4493:79:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4493:79:4;;;;4160:417;;;;;:::o;822:162:62:-;880:7;907:5;;;926:6;;;;918:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;978:1;822:162;-1:-1:-1;;;822:162:62:o;1597:211:61:-;1666:22;;;1658:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1763:6;;1742:38;;;;;;;1763:6;;1742:38;;1763:6;;1742:38;1786:6;:17;;;;;;;;;;;;;;;1597:211::o;1847:295:4:-;1995:24;;:::i;:::-;2027:28;;:::i;:::-;2068:69;:3;2083:7;2092:16;2110:26;2068:69;:14;:69;:::i;:::-;2061:76;1847:295;-1:-1:-1;;;;;1847:295:4:o;1575:182:3:-;1661:45;1683:4;:8;;;1693:5;:12;1661:21;:45::i;:::-;;1712:40;1736:4;:8;;;1746:5;1712:23;:40::i;:::-;;1575:182;;:::o;3152:488:4:-;3348:12;;3325:36;;;3342:4;3325:36;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3325:36:4;;;;;;3315:47;;;;;;;;;3368:10;;;:25;;;;-1:-1:-1;3399:26:4;;;:15;:26;;;;;;:36;;;;3325;3399;;;;;3446:29;;3315:47;;3446:29;;;3489:4;;;;:20;3510:7;3519:8;3529:19;3543:4;3529:13;:19::i;:::-;3489:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3489:60:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3489:60:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3489:60:4;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3489:60:4;3481:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3595:12;:17;;3611:1;3595:17;;;3152:488;;;;;:::o;7355:246:11:-;7424:15;7449:21;7486:4;:11;7473:25;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;7473:25:11;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;125:4;109:14;101:6;88:42;144:17;;-1:-1;7473:25:11;-1:-1:-1;7449:49:11;-1:-1:-1;7509:9:11;7504:75;7528:4;:11;7524:1;:15;7504:75;;;7565:4;7570:1;7565:7;;;;;;;;;;;;;;7554:5;7560:1;7554:8;;;;;;;;;;;;;;;;;:18;7541:3;;7504:75;;;-1:-1:-1;7591:5:11;7355:246;-1:-1:-1;;7355:246:11:o;815:506::-;898:6;926:4;:11;922:1;:15;914:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;984:11;;1029:1;1023:7;;1040;;;1036:281;;1062:14;1084;1127:62;1142:4;1148:1;1157;1151:3;:7;1174:1;1160:11;:15;1177:11;1127:14;:62::i;:::-;1106:83;;-1:-1:-1;1106:83:11;-1:-1:-1;1204:36:11;1106:83;;1204:18;:36::i;:::-;1197:43;;;;;;;;1036:281;1268:42;1280:4;1286:1;1295;1289:3;:7;1298:11;1268;:42::i;:::-;1261:49;;;;;;971:366:3;1120:24;;:::i;:::-;1152:50;1174:4;:8;;;335:3;1152:21;:50::i;:::-;-1:-1:-1;;1208:13:3;;;1227:39;;;:20;;;:39;1272:43;;;:23;;;:43;1208:4;971:366;;;;;;;:::o;941:395:58:-;1011:13;;:::i;:::-;1047:2;1036:8;:13;:18;1032:71;;1093:2;1082:8;:13;1076:2;:20;1064:32;;;;1032:71;-1:-1:-1;1150:12:58;;;;:23;;;1213:4;1207:11;;1225:16;;;-1:-1:-1;1248:14:58;;1290:18;;;1282:27;1269:41;;1150:12;941:395::o;4495:155::-;4572:13;;:::i;:::-;4600:45;4606:3;4611;:7;;;:14;4627:4;4633;:11;4600:5;:45::i;7644:527:4:-;7732:12;7791:29;;;799:1;743;8041:4;:7;;;8056:4;:20;;;8084:4;:23;;;8115:4;:10;;;845:1;8153:4;:8;;;:12;;;7761:405;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7761:405:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7761:405:4;;;22:32:-1;26:21;;;22:32;6:49;;7761:405:4;;;49:4:-1;25:18;;61:17;;7761:405:4;182:15:-1;7761:405:4;;;;179:29:-1;;;;160:49;;;-1:-1;7761:405:4;;-1:-1:-1;;;;;;;;;;7644:527:4;;;:::o;4881:800:11:-;5049:11;5062;5096:2;5091;:7;5083:16;;12:1:-1;9;2:12;5083:16:11;5119:2;5113;:8;;:20;;;;;5131:2;5125;:8;;5113:20;5105:29;;12:1:-1;9;2:12;5105:29:11;5154:2;5148;:8;;:20;;;;;5166:2;5160;:8;;5148:20;5140:29;;12:1:-1;9;2:12;5140:29:11;1449:1;5206:2;5201;:7;:35;5197:103;;;5255:36;5270:4;5276:2;5280;5284;5288;5255:14;:36::i;:::-;5248:43;;;;;;5197:103;5307:16;5326:23;5336:4;5342:2;5346;5326:9;:23::i;:::-;5307:42;;5367:8;5361:2;:14;5357:314;;5392:8;5387:13;;5357:314;;;5430:2;5419:8;:13;5415:256;;;5449:8;5460:1;5449:12;5444:17;;5415:256;;;5499:8;5493:2;:14;;:31;;;;;5522:2;5511:8;:13;5493:31;5486:39;;;;5542:35;5554:4;5560:2;5564:8;5574:2;5542:11;:35::i;:::-;5535:42;;5594:39;5606:4;5612:8;5623:1;5612:12;5626:2;5630;5594:11;:39::i;:::-;5587:46;-1:-1:-1;5643:19:11;;-1:-1:-1;5643:19:11;5415:256;5176:501;;;;4881:800;;;;;;;;:::o;1828:267:18:-;1898:6;1924:1;1919:2;:6;:16;;;;;1934:1;1929:2;:6;1919:16;1918:40;;;;1946:1;1941:2;:6;:16;;;;;1956:1;1951:2;:6;1941:16;1914:83;;;1989:1;1975:11;1979:2;1983;1975:3;:11::i;:::-;:15;;;;;;1968:22;;;;1914:83;2002:16;2041:1;2022:6;;;2031;;;2022:15;2021:21;;-1:-1:-1;2055:35:18;2059:19;2068:1;2063:2;:6;2076:1;2071:2;:6;2059:3;:19::i;:::-;2080:9;2055:3;:35::i;3940:773:11:-;4052:10;4086:1;4080:2;:7;;4072:16;;12:1:-1;9;2:12;4072:16:11;4107:2;4102:1;:7;;4094:16;;12:1:-1;9;2:12;4094:16:11;4128:2;4123;:7;4116:572;;;1449:1;4149:2;4144;:7;:35;4140:153;;;4191:13;4230:34;4245:4;4251:2;4255;4259:1;4262;4230:14;:34::i;:::-;-1:-1:-1;4214:50:11;-1:-1:-1;4274:10:11;;-1:-1:-1;4274:10:11;4140:153;4300:18;4321:23;4331:4;4337:2;4341;4321:9;:23::i;:::-;4300:44;;4361:10;4356:1;:15;4352:330;;4503:10;4498:15;;4352:330;;;4659:10;4672:1;4659:14;4654:19;;4352:330;4116:572;;;;4700:4;4705:2;4700:8;;;;;;;;;;;;;;4693:15;;3940:773;;;;;;:::o;2650:1140:58:-;2745:13;;:::i;:::-;2781:4;:11;2774:3;:18;;2766:27;;12:1:-1;9;2:12;2766:27:58;2816:3;:12;;;2810:3;2804;:9;:24;2800:90;;;2838:45;2845:3;2850:28;2854:3;:12;;;2874:3;2868;:9;2850:3;:28::i;:::-;2881:1;2850:32;2838:6;:45::i;:::-;2896:9;2911:8;3005:3;2999:10;3076:6;3070:13;3192:3;3187:2;3179:6;3175:15;3171:25;3163:33;;3276:6;3270:3;3265;3261:13;3258:25;3255:2;;;3318:3;3313;3309:13;3301:6;3294:29;3255:2;-1:-1:-1;;;3355:2:58;3345:13;;3416:129;3430:2;3423:3;:9;3416:129;;3485:10;;3472:24;;3434:9;;;;;3519:2;3511:10;;;;3529:9;3416:129;;;3654:10;3703:11;;3591:21;3599:2;:8;;;3591:3;:17;:21;3699:22;;;3666:9;;3650:26;;;;3741:21;3728:35;;-1:-1:-1;3782:3:58;2650:1140;;;;;;:::o;1587:2197:11:-;1739:11;1752;2005;2028:2;2019;2024:1;2019:6;:11;2005:25;;2036:9;2048:4;2053:2;2058:1;2053:6;2048:12;;;;;;;;;;;;;;2036:24;;2066:9;2082:3;2078:1;:7;:32;;170:8;2078:32;;;2088:4;2093:2;2098:1;2093:6;2088:12;;;;;;;;;;;;;;2078:32;2066:44;;2116:9;2132:3;2128:1;:7;:32;;170:8;2128:32;;;2138:4;2143:2;2148:1;2143:6;2138:12;;;;;;;;;;;;;;2128:32;2116:44;;2166:9;2182:3;2178:1;:7;:32;;170:8;2178:32;;;2188:4;2193:2;2198:1;2193:6;2188:12;;;;;;;;;;;;;;2178:32;2166:44;;2216:9;2232:3;2228:1;:7;:32;;170:8;2228:32;;;2238:4;2243:2;2248:1;2243:6;2238:12;;;;;;;;;;;;;;2228:32;2216:44;;2266:9;2282:3;2278:1;:7;:32;;170:8;2278:32;;;2288:4;2293:2;2298:1;2293:6;2288:12;;;;;;;;;;;;;;2278:32;2266:44;;2316:9;2332:3;2328:1;:7;:32;;170:8;2328:32;;;2338:4;2343:2;2348:1;2343:6;2338:12;;;;;;;;;;;;;;2328:32;2316:44;;2376:2;2371;:7;2367:35;;;2393:2;;2397;2367:35;2416:2;2411;:7;2407:35;;;2433:2;;2437;2407:35;2456:2;2451;:7;2447:35;;;2473:2;;2477;2447:35;2496:2;2491;:7;2487:35;;;2513:2;;2517;2487:35;2536:2;2531;:7;2527:35;;;2553:2;;2557;2527:35;2576:2;2571;:7;2567:35;;;2593:2;2567:35;2616:2;2611;:7;2607:35;;;2633:2;;2637;2607:35;2656:2;2651;:7;2647:35;;;2673:2;2647:35;2696:2;2691;:7;2687:35;;;2713:2;;2717;2687:35;2736:2;2731;:7;2727:35;;;2753:2;;2757;2727:35;2776:2;2771;:7;2767:35;;;2793:2;2767:35;2816:2;2811;:7;2807:35;;;2833:2;;2837;2807:35;2856:2;2851;:7;2847:35;;;2873:2;2847:35;2896:2;2891;:7;2887:35;;;2913:2;;2917;2887:35;2936:2;2931;:7;2927:35;;;2953:2;;2957;2927:35;2976:2;2971;:7;2967:35;;;2993:2;;2997;2967:35;3025:7;;;3042:11;3038:302;;3063:2;3056:9;;3038:302;;;3081:6;3091:1;3081:11;3077:263;;;3102:2;3095:9;;3077:263;;;3120:6;3130:1;3120:11;3116:224;;;3141:2;3134:9;;3116:224;;;3159:6;3169:1;3159:11;3155:185;;;3180:2;3173:9;;3155:185;;;3198:6;3208:1;3198:11;3194:146;;;3219:2;3212:9;;3194:146;;;3237:6;3247:1;3237:11;3233:107;;;3258:2;3251:9;;3233:107;;;3276:6;3286:1;3276:11;3272:68;;;3297:2;3290:9;;3272:68;;;3312:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3272:68;3363:7;;;3380:8;;;3376:404;;;-1:-1:-1;3399:4:11;;-1:-1:-1;3391:19:11;;-1:-1:-1;;;;;;;;;3391:19:11;3376:404;3426:11;3422:358;;-1:-1:-1;3454:2:11;;-1:-1:-1;3440:17:11;;-1:-1:-1;;;;;;;;3440:17:11;3422:358;3473:6;3483:1;3473:11;3469:311;;;-1:-1:-1;3501:2:11;;-1:-1:-1;3487:17:11;;-1:-1:-1;;;;;;;;3487:17:11;3469:311;3520:6;3530:1;3520:11;3516:264;;;-1:-1:-1;3548:2:11;;-1:-1:-1;3534:17:11;;-1:-1:-1;;;;;;;;3534:17:11;3516:264;3567:6;3577:1;3567:11;3563:217;;;-1:-1:-1;3595:2:11;;-1:-1:-1;3581:17:11;;-1:-1:-1;;;;;;;;3581:17:11;3563:217;3614:6;3624:1;3614:11;3610:170;;;-1:-1:-1;3642:2:11;;-1:-1:-1;3628:17:11;;-1:-1:-1;;;;;;;;3628:17:11;3610:170;3661:6;3671:1;3661:11;3657:123;;;-1:-1:-1;3689:2:11;;-1:-1:-1;3675:17:11;;-1:-1:-1;;;;;;;;3675:17:11;3657:123;3708:6;3718:1;3708:11;3704:76;;;-1:-1:-1;3736:2:11;;-1:-1:-1;3722:17:11;;-1:-1:-1;;;;;;;;3722:17:11;3704:76;3752:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6003:1223;6102:7;;6270:4;6287:1;6276:7;;;6275:13;6270:19;;;;;;;;;;;;;;6255:34;;6301:1;6295:7;;;;6357:1;6351:7;;;;6364:858;6404:1;6398:7;;;;6433:5;6422:4;6427:2;6422:8;;;;;;;;;;;;;;:16;6385:55;;6447;6466:1;6460:7;;;;6495:5;6484:4;6489:2;6484:8;;;;;;;;;;;;;;:16;6447:55;;6518:2;6513;:7;6509:707;;;6556:4;6561:2;6556:8;;;;;;;;;;;;;;6566:4;6571:2;6566:8;;;;;;;;;;;;;;6533:4;6538:2;6533:8;;;;;;;;;;;;;6543:4;6548:2;6543:8;;;;;;;;;;;;;;;;;6532:43;;;;;6509:707;;;7205:2;7198:9;;;;;6509:707;6364:858;;1403:196:18;1459:6;1484:5;;;1504:6;;;;;;:16;;;1519:1;1514;:6;;1504:16;1503:38;;;;1530:1;1526;:5;:14;;;;;1539:1;1535;:5;1526:14;1495:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1888:114:58;1938:4;1958:1;1954;:5;1950:34;;;-1:-1:-1;1976:1:58;1969:8;;1950:34;-1:-1:-1;1996:1:58;1888:114;-1:-1:-1;1888:114:58:o;1731:153::-;1822:7;;1835:19;1822:3;1845:8;1835:4;:19::i;:::-;;1860;1867:3;1872:6;1860;:19::i;:::-;;1731:153;;;:::o;490:10509:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;490:10509:14;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;490:10509:14;;;;;;;-1:-1:-1;490:10509:14;;;-1:-1:-1;490:10509:14;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;490:10509:14;;;-1:-1:-1;490:10509:14;:::i;:::-;;;;;;;;;-1:-1:-1;490:10509:14;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
			},
			"methodIdentifiers": {
				"cancelOracleRequest(bytes32,uint256,bytes4,uint256)": "6ee4d553",
				"chainlinkCallback(bytes32,int256)": "6a9705b4",
				"createServiceAgreement(uint256,address[],bytes32[],uint256[])": "834b55e0",
				"getChainlinkToken()": "165d35e1",
				"getServiceAgreement(bytes32)": "af52c981",
				"isOwner()": "8f32d59b",
				"onTokenTransfer(address,uint256,bytes)": "a4c0ed36",
				"oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)": "40429946",
				"owner()": "8da5cb5b",
				"transferOwnership(address)": "f2fde38b",
				"withdrawLink()": "8dc654a2"
			}
		},
		"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"ChainlinkRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"saId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minresponses\",\"type\":\"uint256\"}],\"name\":\"NewServiceAgreement\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"saId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"}],\"name\":\"ServiceAgreementAnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"saId\",\"type\":\"bytes32\"}],\"name\":\"ServiceAgreementDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"saId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"ServiceAgreementRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"saId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"}],\"name\":\"ServiceAgreementResponseReceived\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes4\",\"name\":\"_callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"}],\"name\":\"cancelOracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_requestId\",\"type\":\"bytes32\"},{\"internalType\":\"int256\",\"name\":\"_data\",\"type\":\"int256\"}],\"name\":\"chainlinkCallback\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minResponses\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_oracles\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_jobIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_payments\",\"type\":\"uint256[]\"}],\"name\":\"createServiceAgreement\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"saId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainlinkToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_saId\",\"type\":\"bytes32\"}],\"name\":\"getServiceAgreement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minResponses\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"oracles\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"jobIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"payments\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_payment\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_saId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_callbackAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"_callbackFunctionId\",\"type\":\"bytes4\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"oracleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLink\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract accepts requests as service agreement IDs and loops over the corresponding list of oracles to create distinct requests to each one.\",\"methods\":{\"cancelOracleRequest(bytes32,uint256,bytes4,uint256)\":{\"params\":{\"_callbackFunctionId\":\"The bytes4 callback function ID specified for the request to cancel\",\"_expiration\":\"The expiration generated for the request to cancel\",\"_payment\":\"The payment specified for the request to cancel\",\"_requestId\":\"The ID that was generated for the request to cancel\"}},\"chainlinkCallback(bytes32,int256)\":{\"details\":\"The recordChainlinkFulfillment protects this function from being called by anyone other than the oracle address that the request was sent to\",\"params\":{\"_data\":\"The answer provided by the oracle\",\"_requestId\":\"The ID that was generated for the request\"}},\"constructor\":{\"details\":\"Sets the storage for the specified addresses\",\"params\":{\"_link\":\"The address of the LINK token contract\"}},\"createServiceAgreement(uint256,address[],bytes32[],uint256[])\":{\"details\":\"The globalNonce keeps service agreement IDs unique. Assume one cannot create the max uint256 number of service agreements in the same block.\",\"params\":{\"_jobIds\":\"The corresponding list of Job IDs.\",\"_minResponses\":\"The minimum number of responses before the requesting contract is called with the response data.\",\"_oracles\":\"The list of oracle contract addresses.\",\"_payments\":\"The corresponding list of payment amounts.\"}},\"getChainlinkToken()\":{\"details\":\"This is the public implementation for chainlinkTokenAddress, which is an internal method of the ChainlinkClient contract\"},\"getServiceAgreement(bytes32)\":{\"details\":\"This function is used instead of the public mapping to return the values of the arrays: oracles, jobIds, and payments.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"onTokenTransfer(address,uint256,bytes)\":{\"details\":\"The data payload's first 2 words will be overwritten by the `_sender` and `_amount` values to ensure correctness. Calls oracleRequest.\",\"params\":{\"_amount\":\"Amount of LINK sent (specified in wei)\",\"_data\":\"Payload of the transaction\",\"_sender\":\"Address of the sender\"}},\"oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)\":{\"details\":\"Stores the hash of the params as the on-chain commitment for the request. Emits OracleRequest event for the Chainlink node to detect.\",\"params\":{\"_callbackAddress\":\"The callback address for the response\",\"_callbackFunctionId\":\"The callback function ID for the response\",\"_data\":\"The CBOR payload of the request\",\"_nonce\":\"The nonce sent by the requester\",\"_payment\":\"The amount of payment given (specified in wei)\",\"_saId\":\"The Job Specification ID\",\"_sender\":\"The sender of the request\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawLink()\":{\"details\":\"The only valid case for there to be remaining LINK on this contract is if a user accidentally sent LINK directly to this contract's address.\"}},\"title\":\"PreCoordinator is a contract that builds on-chain service agreements using the current architecture of 1 request to 1 oracle contract.\"},\"userdoc\":{\"methods\":{\"cancelOracleRequest(bytes32,uint256,bytes4,uint256)\":{\"notice\":\"Call this method if no response is received within 5 minutes\"},\"chainlinkCallback(bytes32,int256)\":{\"notice\":\"The fulfill method from requests created by this contract\"},\"constructor\":\"Deploy the contract with a specified address for the LINK and Oracle contract addresses\",\"createServiceAgreement(uint256,address[],bytes32[],uint256[])\":{\"notice\":\"Allows the owner of the contract to create new service agreements with multiple oracles. Each oracle will have their own Job ID and can have their own payment amount.\"},\"getChainlinkToken()\":{\"notice\":\"Returns the address of the LINK token\"},\"getServiceAgreement(bytes32)\":{\"notice\":\"This is a helper function to retrieve the details of a service agreement by its given service agreement ID.\"},\"onTokenTransfer(address,uint256,bytes)\":{\"notice\":\"Called when LINK is sent to the contract via `transferAndCall`\"},\"oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)\":{\"notice\":\"Creates the Chainlink request\"},\"withdrawLink()\":{\"notice\":\"Allows the owner to withdraw any LINK balance on the contract\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/PreCoordinator.sol\":\"PreCoordinator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/Chainlink.sol\":{\"keccak256\":\"0xdb0cd9acf471e9925b7be1fa4b0f17a373324318b2e14062b7749931cdde00fb\",\"urls\":[\"bzz-raw://ad2685687f532eba3298ede1b888b57d69f3995d6dd49bbe468d45cb1716cbc4\",\"dweb:/ipfs/QmVuNKTnxGuzfaVbx4jDjdVn45D4ogj9zvso1xXhUc2NKT\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/ChainlinkClient.sol\":{\"keccak256\":\"0xf9c4039a2e4ca49bbb9409baf6afcf99a572695d3e5f3c191b7fac6cfa7378e9\",\"urls\":[\"bzz-raw://792875fb40c3723baa0607337a6bd27b5c3bc55502bc8db9981ed71747e9ce52\",\"dweb:/ipfs/QmUWKB9zaaf1ywDd9vWe4JB9Pjtqt1cddjUoGwEiKfP2HP\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/LinkTokenReceiver.sol\":{\"keccak256\":\"0xa856c0d069254b46ec90528fe9440485f7dd7efbf13b2b4c80a0e28910d25a95\",\"urls\":[\"bzz-raw://c50eb949083eaadd1139ebef6377dab2ace7625d4a9af55ff935938ec8bb4c7f\",\"dweb:/ipfs/QmQL981UKm6XW82RMbRejQVf5z6KC3cKeNvCMrT9Bff22w\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/Median.sol\":{\"keccak256\":\"0x7d5f7e0c161b9e0476ced988b190130c37a2141f13a91c664fd043226a98fb83\",\"urls\":[\"bzz-raw://396ee17f9cc94d4a55147273eb00de166de60415c2691cca92d953b2b6b6d65e\",\"dweb:/ipfs/QmUnPtGVpwDuMivPiZiv9zzCQXf2t4jsM38VS1oM4CV3WT\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/PreCoordinator.sol\":{\"keccak256\":\"0x00d0ea9f5c7891b4d3bc262a77693423be05c4a2ad9038f959feb9dcd1ae7d0a\",\"urls\":[\"bzz-raw://331264dff2e7784957fa535a931d396f2203e227a9de9a3cc07e76892f0c5cba\",\"dweb:/ipfs/QmZd36aCvM5pDWmMTzzKD1pg9qTHRJ9FHY36nWgv1yBe9B\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/SignedSafeMath.sol\":{\"keccak256\":\"0x83e027df9251983d079e85187b87362d4898bc3052fd72ca365c89504b7f52ff\",\"urls\":[\"bzz-raw://3d56e6e2396d11b77828a3c6e531b525eb9d8c8a18e21aacac7284f46a74d8c0\",\"dweb:/ipfs/QmXvbrYGJVmnstRFZr3axhVT5ZCiWZSyCUnMu4p8jmNUHg\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/interfaces/ChainlinkRequestInterface.sol\":{\"keccak256\":\"0x4b41b021bf58c429891ff291637de29be54741565105de82238dac9f6ecee374\",\"urls\":[\"bzz-raw://84681ff65b31b2e2c6977289661733c0f22409965b9057140f56f8a9ff185048\",\"dweb:/ipfs/QmS4TQJDSHQiKNwQ4LkSCVp7LjuRQwp6gem3271vtCwz9k\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/interfaces/ENSInterface.sol\":{\"keccak256\":\"0xf4998e886147b298eda28b4eacbdc90c58ba63ba475469651f2072e188dd5a64\",\"urls\":[\"bzz-raw://c1e2334294a816b7eda9de280e39b9463ebde2db8b242410eb991b2f623b47d4\",\"dweb:/ipfs/QmNY5bajahfFRmhBgcMVQ7712zHKxc6HkuN7LaiKtpjb7t\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xdbf46b45a4c9f38ba71a0391aed0e7b108854b619f292d907ae537228868bda6\",\"urls\":[\"bzz-raw://3ae40466809630c4731e2e3a697d6885727c577aaf260766c8a2f534ad3f6ee8\",\"dweb:/ipfs/QmTzpN5yP4Y5jvQ1ohfXFrce3sjzUiSChYJgZj9VvhVohG\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/interfaces/PointerInterface.sol\":{\"keccak256\":\"0x6458d82762d4f13c020a13efdbd9bf14500e147df707184a693aea91449c2f4f\",\"urls\":[\"bzz-raw://735950f3a544fc6ef2db92405597169bfb5fdb9df83623c0d99fd3d85de8690d\",\"dweb:/ipfs/QmZHxb5Qr7Kw9DHAg4VwEADue9ffNyyhbiyEZ15A5mANUN\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/vendor/Buffer.sol\":{\"keccak256\":\"0x44f15070c50a25a323775c989660d2c2af86530e994973584ddaadb51ab2fe6d\",\"urls\":[\"bzz-raw://6ff6ef1f796e1c1aa0479d6a186cc8d43bdf22b0dad391d4a897bea3a924e38e\",\"dweb:/ipfs/QmY8Zt8X4cqFSEX8GD6YQbThJe1Z3PDuNNKZzDWpCS69Go\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/vendor/CBOR.sol\":{\"keccak256\":\"0xabda6c3df28094ac0c2a892108f5655fe7520791bc1cd6e0bd4d11ed261a001d\",\"urls\":[\"bzz-raw://2659de9101e6ba2c1125741adad82c626f2d6681d14487d793c1ad0712e80e49\",\"dweb:/ipfs/QmaEJtv16Ln17Jbkc5kUf5vHrfBeGTmBAX1tVyDHZV2Zxw\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/vendor/ENSResolver.sol\":{\"keccak256\":\"0xdddea29d7407c1dbd1e130d885fc1a0934e98f0a7cc9f4d5bfd002bb2cfbcf82\",\"urls\":[\"bzz-raw://c4c764d69c47754d7b219fab558bf4be2a6444470ede7aa0ab1e446aea01dbda\",\"dweb:/ipfs/QmWp2CNUw9xt8ir2P3LhGHuydUsAXnyZ382U2BUjhoYPvy\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/vendor/Ownable.sol\":{\"keccak256\":\"0x3dfd577392b1fde3e54f76a81358fd27c041f30257bb9438f0bb5952e351befa\",\"urls\":[\"bzz-raw://f21d5e72760d89f05ef0eb791eb952fe0688a83dc679b0cf457c556c738aa1ee\",\"dweb:/ipfs/QmVKpY8tKTqaDcaz7D5G9weH8oEKXmfTscZ3WknjBuTqid\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.6/vendor/SafeMath.sol\":{\"keccak256\":\"0x95dbe2dd5ab8682b99bc3d7d297b621d4237442da160f78d3323ee5c4a06ded3\",\"urls\":[\"bzz-raw://d753308ff4eb43fba6f9ede371a33f707c5818350770dcb078a7d78ac8251361\",\"dweb:/ipfs/Qme64eYKWoTQiP3WhqGHoMqrENNZ9L8SdBLQ2hx5SmzUda\"]}},\"version\":1}",
		"userdoc": {
			"methods": {
				"cancelOracleRequest(bytes32,uint256,bytes4,uint256)": {
					"notice": "Call this method if no response is received within 5 minutes"
				},
				"chainlinkCallback(bytes32,int256)": {
					"notice": "The fulfill method from requests created by this contract"
				},
				"constructor": "Deploy the contract with a specified address for the LINK and Oracle contract addresses",
				"createServiceAgreement(uint256,address[],bytes32[],uint256[])": {
					"notice": "Allows the owner of the contract to create new service agreements with multiple oracles. Each oracle will have their own Job ID and can have their own payment amount."
				},
				"getChainlinkToken()": {
					"notice": "Returns the address of the LINK token"
				},
				"getServiceAgreement(bytes32)": {
					"notice": "This is a helper function to retrieve the details of a service agreement by its given service agreement ID."
				},
				"onTokenTransfer(address,uint256,bytes)": {
					"notice": "Called when LINK is sent to the contract via `transferAndCall`"
				},
				"oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)": {
					"notice": "Creates the Chainlink request"
				},
				"withdrawLink()": {
					"notice": "Allows the owner to withdraw any LINK balance on the contract"
				}
			}
		}
	},
	"sources": {
		"PreCoordinator.sol": {
			"id": 14
		},
		"ChainlinkClient.sol": {
			"id": 4
		},
		"Chainlink.sol": {
			"id": 3
		},
		"vendor/CBOR.sol": {
			"id": 59
		},
		"vendor/Buffer.sol": {
			"id": 58
		},
		"interfaces/ENSInterface.sol": {
			"id": 33
		},
		"interfaces/LinkTokenInterface.sol": {
			"id": 35
		},
		"interfaces/ChainlinkRequestInterface.sol": {
			"id": 32
		},
		"interfaces/PointerInterface.sol": {
			"id": 37
		},
		"vendor/ENSResolver.sol": {
			"id": 60
		},
		"vendor/SafeMath.sol": {
			"id": 62
		},
		"LinkTokenReceiver.sol": {
			"id": 10
		},
		"Median.sol": {
			"id": 11
		},
		"SignedSafeMath.sol": {
			"id": 18
		},
		"vendor/Ownable.sol": {
			"id": 61
		}
	},
	"sourceCodes": {
		"PreCoordinator.sol": "pragma solidity 0.6.6;\n\nimport \"./ChainlinkClient.sol\";\nimport \"./LinkTokenReceiver.sol\";\nimport \"./Median.sol\";\nimport \"./vendor/Ownable.sol\";\nimport \"./vendor/SafeMath.sol\";\n\n/**\n * @title PreCoordinator is a contract that builds on-chain service agreements\n * using the current architecture of 1 request to 1 oracle contract.\n * @dev This contract accepts requests as service agreement IDs and loops over\n * the corresponding list of oracles to create distinct requests to each one.\n */\ncontract PreCoordinator is ChainlinkClient, Ownable, ChainlinkRequestInterface, LinkTokenReceiver {\n  using SafeMath for uint256;\n\n  uint256 constant private MAX_ORACLE_COUNT = 45;\n\n  uint256 private globalNonce;\n\n  struct ServiceAgreement {\n    uint256 totalPayment;\n    uint256 minResponses;\n    address[] oracles;\n    bytes32[] jobIds;\n    uint256[] payments;\n  }\n\n  struct Requester {\n    bytes4 callbackFunctionId;\n    address sender;\n    address callbackAddress;\n    int256[] responses;\n  }\n\n  // Service Agreement ID => ServiceAgreement\n  mapping(bytes32 => ServiceAgreement) internal serviceAgreements;\n  // Local Request ID => Service Agreement ID\n  mapping(bytes32 => bytes32) internal serviceAgreementRequests;\n  // Requester's Request ID => Requester\n  mapping(bytes32 => Requester) internal requesters;\n  // Local Request ID => Requester's Request ID\n  mapping(bytes32 => bytes32) internal requests;\n\n  event NewServiceAgreement(bytes32 indexed saId, uint256 payment, uint256 minresponses);\n  event ServiceAgreementRequested(bytes32 indexed saId, bytes32 indexed requestId, uint256 payment);\n  event ServiceAgreementResponseReceived(bytes32 indexed saId, bytes32 indexed requestId, address indexed oracle, int256 answer);\n  event ServiceAgreementAnswerUpdated(bytes32 indexed saId, bytes32 indexed requestId, int256 answer);\n  event ServiceAgreementDeleted(bytes32 indexed saId);\n\n  /**\n   * @notice Deploy the contract with a specified address for the LINK\n   * and Oracle contract addresses\n   * @dev Sets the storage for the specified addresses\n   * @param _link The address of the LINK token contract\n   */\n  constructor(address _link) public {\n    if(_link == address(0)) {\n      setPublicChainlinkToken();\n    } else {\n      setChainlinkToken(_link);\n    }\n  }\n\n  /**\n   * @notice Allows the owner of the contract to create new service agreements\n   * with multiple oracles. Each oracle will have their own Job ID and can have\n   * their own payment amount.\n   * @dev The globalNonce keeps service agreement IDs unique. Assume one cannot\n   * create the max uint256 number of service agreements in the same block.\n   * @param _minResponses The minimum number of responses before the requesting\n   * contract is called with the response data.\n   * @param _oracles The list of oracle contract addresses.\n   * @param _jobIds The corresponding list of Job IDs.\n   * @param _payments The corresponding list of payment amounts.\n   */\n  function createServiceAgreement(\n    uint256 _minResponses,\n    address[] calldata _oracles,\n    bytes32[] calldata _jobIds,\n    uint256[] calldata _payments\n  )\n    external returns (bytes32 saId)\n  {\n    require(_minResponses > 0, \"Min responses must be > 0\");\n    require(_oracles.length == _jobIds.length && _oracles.length == _payments.length, \"Unmet length\");\n    require(_oracles.length <= MAX_ORACLE_COUNT, \"Cannot have more than 45 oracles\");\n    require(_oracles.length >= _minResponses, \"Invalid min responses\");\n    uint256 totalPayment;\n    for (uint i = 0; i < _payments.length; i++) {\n      totalPayment = totalPayment.add(_payments[i]);\n    }\n    saId = keccak256(abi.encodePacked(globalNonce, now));\n    globalNonce++; // yes, let it overflow\n    serviceAgreements[saId] = ServiceAgreement(totalPayment, _minResponses, _oracles, _jobIds, _payments);\n\n    emit NewServiceAgreement(saId, totalPayment, _minResponses);\n  }\n\n  /**\n   * @notice This is a helper function to retrieve the details of a service agreement\n   * by its given service agreement ID.\n   * @dev This function is used instead of the public mapping to return the values\n   * of the arrays: oracles, jobIds, and payments.\n   */\n  function getServiceAgreement(bytes32 _saId)\n    external view returns\n  (\n    uint256 totalPayment,\n    uint256 minResponses,\n    address[] memory oracles,\n    bytes32[] memory jobIds,\n    uint256[] memory payments\n  )\n  {\n    return\n    (\n      serviceAgreements[_saId].totalPayment,\n      serviceAgreements[_saId].minResponses,\n      serviceAgreements[_saId].oracles,\n      serviceAgreements[_saId].jobIds,\n      serviceAgreements[_saId].payments\n    );\n  }\n\n  /**\n   * @notice Returns the address of the LINK token\n   * @dev This is the public implementation for chainlinkTokenAddress, which is\n   * an internal method of the ChainlinkClient contract\n   */\n  function getChainlinkToken() public view override returns (address) {\n    return chainlinkTokenAddress();\n  }\n\n  /**\n   * @notice Creates the Chainlink request\n   * @dev Stores the hash of the params as the on-chain commitment for the request.\n   * Emits OracleRequest event for the Chainlink node to detect.\n   * @param _sender The sender of the request\n   * @param _payment The amount of payment given (specified in wei)\n   * @param _saId The Job Specification ID\n   * @param _callbackAddress The callback address for the response\n   * @param _callbackFunctionId The callback function ID for the response\n   * @param _nonce The nonce sent by the requester\n   * @param _data The CBOR payload of the request\n   */\n  function oracleRequest(\n    address _sender,\n    uint256 _payment,\n    bytes32 _saId,\n    address _callbackAddress,\n    bytes4 _callbackFunctionId,\n    uint256 _nonce,\n    uint256,\n    bytes calldata _data\n  )\n    external\n    onlyLINK\n    override\n    checkCallbackAddress(_callbackAddress)\n  {\n    uint256 totalPayment = serviceAgreements[_saId].totalPayment;\n    // this revert message does not bubble up\n    require(_payment >= totalPayment, \"Insufficient payment\");\n    bytes32 callbackRequestId = keccak256(abi.encodePacked(_sender, _nonce));\n    require(requesters[callbackRequestId].sender == address(0), \"Nonce already in-use\");\n    requesters[callbackRequestId].callbackFunctionId = _callbackFunctionId;\n    requesters[callbackRequestId].callbackAddress = _callbackAddress;\n    requesters[callbackRequestId].sender = _sender;\n    createRequests(_saId, callbackRequestId, _data);\n    if (_payment > totalPayment) {\n      uint256 overage = _payment.sub(totalPayment);\n      LinkTokenInterface _link = LinkTokenInterface(chainlinkTokenAddress());\n      assert(_link.transfer(_sender, overage));\n    }\n  }\n\n  /**\n   * @dev Creates Chainlink requests to each oracle in the service agreement with the\n   * same data payload supplied by the requester\n   * @param _saId The service agreement ID\n   * @param _incomingRequestId The requester-supplied request ID\n   * @param _data The data payload (request parameters) to send to each oracle\n   */\n  function createRequests(bytes32 _saId, bytes32 _incomingRequestId, bytes memory _data) private {\n    ServiceAgreement memory sa = serviceAgreements[_saId];\n    require(sa.minResponses > 0, \"Invalid service agreement\");\n    Chainlink.Request memory request;\n    bytes32 outgoingRequestId;\n    emit ServiceAgreementRequested(_saId, _incomingRequestId, sa.totalPayment);\n    for (uint i = 0; i < sa.oracles.length; i++) {\n      request = buildChainlinkRequest(sa.jobIds[i], address(this), this.chainlinkCallback.selector);\n      request.setBuffer(_data);\n      outgoingRequestId = sendChainlinkRequestTo(sa.oracles[i], request, sa.payments[i]);\n      requests[outgoingRequestId] = _incomingRequestId;\n      serviceAgreementRequests[outgoingRequestId] = _saId;\n    }\n  }\n\n  /**\n   * @notice The fulfill method from requests created by this contract\n   * @dev The recordChainlinkFulfillment protects this function from being called\n   * by anyone other than the oracle address that the request was sent to\n   * @param _requestId The ID that was generated for the request\n   * @param _data The answer provided by the oracle\n   */\n  function chainlinkCallback(bytes32 _requestId, int256 _data)\n    external\n    recordChainlinkFulfillment(_requestId)\n    returns (bool)\n  {\n    ServiceAgreement memory sa = serviceAgreements[serviceAgreementRequests[_requestId]];\n    bytes32 cbRequestId = requests[_requestId];\n    bytes32 saId = serviceAgreementRequests[_requestId];\n    delete requests[_requestId];\n    delete serviceAgreementRequests[_requestId];\n    emit ServiceAgreementResponseReceived(saId, cbRequestId, msg.sender, _data);\n    requesters[cbRequestId].responses.push(_data);\n    Requester memory req = requesters[cbRequestId];\n    if (req.responses.length == sa.oracles.length) delete requesters[cbRequestId];\n    bool success = true;\n    if (req.responses.length == sa.minResponses) {\n      int256 result = Median.calculate(req.responses);\n      emit ServiceAgreementAnswerUpdated(saId, cbRequestId, result);\n      // solhint-disable-next-line avoid-low-level-calls\n      (success, ) = req.callbackAddress.call(abi.encodeWithSelector(req.callbackFunctionId, cbRequestId, result));\n    }\n    return success;\n  }\n\n  /**\n   * @notice Allows the owner to withdraw any LINK balance on the contract\n   * @dev The only valid case for there to be remaining LINK on this contract\n   * is if a user accidentally sent LINK directly to this contract's address.\n   */\n  function withdrawLink() external onlyOwner {\n    LinkTokenInterface _link = LinkTokenInterface(chainlinkTokenAddress());\n    require(_link.transfer(msg.sender, _link.balanceOf(address(this))), \"Unable to transfer\");\n  }\n\n  /**\n   * @notice Call this method if no response is received within 5 minutes\n   * @param _requestId The ID that was generated for the request to cancel\n   * @param _payment The payment specified for the request to cancel\n   * @param _callbackFunctionId The bytes4 callback function ID specified for\n   * the request to cancel\n   * @param _expiration The expiration generated for the request to cancel\n   */\n  function cancelOracleRequest(\n    bytes32 _requestId,\n    uint256 _payment,\n    bytes4 _callbackFunctionId,\n    uint256 _expiration\n  )\n    external\n    override\n  {\n    bytes32 cbRequestId = requests[_requestId];\n    delete requests[_requestId];\n    delete serviceAgreementRequests[_requestId];\n    Requester memory req = requesters[cbRequestId];\n    require(req.sender == msg.sender, \"Only requester can cancel\");\n    delete requesters[cbRequestId];\n    cancelChainlinkRequest(_requestId, _payment, _callbackFunctionId, _expiration);\n    LinkTokenInterface _link = LinkTokenInterface(chainlinkTokenAddress());\n    require(_link.transfer(req.sender, _payment), \"Unable to transfer\");\n  }\n\n  /**\n   * @dev Reverts if the callback address is the LINK token\n   * @param _to The callback address\n   */\n  modifier checkCallbackAddress(address _to) {\n    require(_to != chainlinkTokenAddress(), \"Cannot callback to LINK\");\n    _;\n  }\n}\n",
		"ChainlinkClient.sol": "pragma solidity ^0.6.0;\n\nimport \"./Chainlink.sol\";\nimport \"./interfaces/ENSInterface.sol\";\nimport \"./interfaces/LinkTokenInterface.sol\";\nimport \"./interfaces/ChainlinkRequestInterface.sol\";\nimport \"./interfaces/PointerInterface.sol\";\nimport { ENSResolver as ENSResolver_Chainlink } from \"./vendor/ENSResolver.sol\";\nimport { SafeMath as SafeMath_Chainlink } from \"./vendor/SafeMath.sol\";\n\n/**\n * @title The ChainlinkClient contract\n * @notice Contract writers can inherit this contract in order to create requests for the\n * Chainlink network\n */\ncontract ChainlinkClient {\n  using Chainlink for Chainlink.Request;\n  using SafeMath_Chainlink for uint256;\n\n  uint256 constant internal LINK = 10**18;\n  uint256 constant private AMOUNT_OVERRIDE = 0;\n  address constant private SENDER_OVERRIDE = address(0);\n  uint256 constant private ARGS_VERSION = 1;\n  bytes32 constant private ENS_TOKEN_SUBNAME = keccak256(\"link\");\n  bytes32 constant private ENS_ORACLE_SUBNAME = keccak256(\"oracle\");\n  address constant private LINK_TOKEN_POINTER = 0xC89bD4E1632D3A43CB03AAAd5262cbe4038Bc571;\n\n  ENSInterface private ens;\n  bytes32 private ensNode;\n  LinkTokenInterface private link;\n  ChainlinkRequestInterface private oracle;\n  uint256 private requestCount = 1;\n  mapping(bytes32 => address) private pendingRequests;\n\n  event ChainlinkRequested(bytes32 indexed id);\n  event ChainlinkFulfilled(bytes32 indexed id);\n  event ChainlinkCancelled(bytes32 indexed id);\n\n  /**\n   * @notice Creates a request that can hold additional parameters\n   * @param _specId The Job Specification ID that the request will be created for\n   * @param _callbackAddress The callback address that the response will be sent to\n   * @param _callbackFunctionSignature The callback function signature to use for the callback address\n   * @return A Chainlink Request struct in memory\n   */\n  function buildChainlinkRequest(\n    bytes32 _specId,\n    address _callbackAddress,\n    bytes4 _callbackFunctionSignature\n  ) internal pure returns (Chainlink.Request memory) {\n    Chainlink.Request memory req;\n    return req.initialize(_specId, _callbackAddress, _callbackFunctionSignature);\n  }\n\n  /**\n   * @notice Creates a Chainlink request to the stored oracle address\n   * @dev Calls `chainlinkRequestTo` with the stored oracle address\n   * @param _req The initialized Chainlink Request\n   * @param _payment The amount of LINK to send for the request\n   * @return requestId The request ID\n   */\n  function sendChainlinkRequest(Chainlink.Request memory _req, uint256 _payment)\n    internal\n    returns (bytes32)\n  {\n    return sendChainlinkRequestTo(address(oracle), _req, _payment);\n  }\n\n  /**\n   * @notice Creates a Chainlink request to the specified oracle address\n   * @dev Generates and stores a request ID, increments the local nonce, and uses `transferAndCall` to\n   * send LINK which creates a request on the target oracle contract.\n   * Emits ChainlinkRequested event.\n   * @param _oracle The address of the oracle for the request\n   * @param _req The initialized Chainlink Request\n   * @param _payment The amount of LINK to send for the request\n   * @return requestId The request ID\n   */\n  function sendChainlinkRequestTo(address _oracle, Chainlink.Request memory _req, uint256 _payment)\n    internal\n    returns (bytes32 requestId)\n  {\n    requestId = keccak256(abi.encodePacked(this, requestCount));\n    _req.nonce = requestCount;\n    pendingRequests[requestId] = _oracle;\n    emit ChainlinkRequested(requestId);\n    require(link.transferAndCall(_oracle, _payment, encodeRequest(_req)), \"unable to transferAndCall to oracle\");\n    requestCount += 1;\n\n    return requestId;\n  }\n\n  /**\n   * @notice Allows a request to be cancelled if it has not been fulfilled\n   * @dev Requires keeping track of the expiration value emitted from the oracle contract.\n   * Deletes the request from the `pendingRequests` mapping.\n   * Emits ChainlinkCancelled event.\n   * @param _requestId The request ID\n   * @param _payment The amount of LINK sent for the request\n   * @param _callbackFunc The callback function specified for the request\n   * @param _expiration The time of the expiration for the request\n   */\n  function cancelChainlinkRequest(\n    bytes32 _requestId,\n    uint256 _payment,\n    bytes4 _callbackFunc,\n    uint256 _expiration\n  )\n    internal\n  {\n    ChainlinkRequestInterface requested = ChainlinkRequestInterface(pendingRequests[_requestId]);\n    delete pendingRequests[_requestId];\n    emit ChainlinkCancelled(_requestId);\n    requested.cancelOracleRequest(_requestId, _payment, _callbackFunc, _expiration);\n  }\n\n  /**\n   * @notice Sets the stored oracle address\n   * @param _oracle The address of the oracle contract\n   */\n  function setChainlinkOracle(address _oracle) internal {\n    oracle = ChainlinkRequestInterface(_oracle);\n  }\n\n  /**\n   * @notice Sets the LINK token address\n   * @param _link The address of the LINK token contract\n   */\n  function setChainlinkToken(address _link) internal {\n    link = LinkTokenInterface(_link);\n  }\n\n  /**\n   * @notice Sets the Chainlink token address for the public\n   * network as given by the Pointer contract\n   */\n  function setPublicChainlinkToken() internal {\n    setChainlinkToken(PointerInterface(LINK_TOKEN_POINTER).getAddress());\n  }\n\n  /**\n   * @notice Retrieves the stored address of the LINK token\n   * @return The address of the LINK token\n   */\n  function chainlinkTokenAddress()\n    internal\n    view\n    returns (address)\n  {\n    return address(link);\n  }\n\n  /**\n   * @notice Retrieves the stored address of the oracle contract\n   * @return The address of the oracle contract\n   */\n  function chainlinkOracleAddress()\n    internal\n    view\n    returns (address)\n  {\n    return address(oracle);\n  }\n\n  /**\n   * @notice Allows for a request which was created on another contract to be fulfilled\n   * on this contract\n   * @param _oracle The address of the oracle contract that will fulfill the request\n   * @param _requestId The request ID used for the response\n   */\n  function addChainlinkExternalRequest(address _oracle, bytes32 _requestId)\n    internal\n    notPendingRequest(_requestId)\n  {\n    pendingRequests[_requestId] = _oracle;\n  }\n\n  /**\n   * @notice Sets the stored oracle and LINK token contracts with the addresses resolved by ENS\n   * @dev Accounts for subnodes having different resolvers\n   * @param _ens The address of the ENS contract\n   * @param _node The ENS node hash\n   */\n  function useChainlinkWithENS(address _ens, bytes32 _node)\n    internal\n  {\n    ens = ENSInterface(_ens);\n    ensNode = _node;\n    bytes32 linkSubnode = keccak256(abi.encodePacked(ensNode, ENS_TOKEN_SUBNAME));\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(ens.resolver(linkSubnode));\n    setChainlinkToken(resolver.addr(linkSubnode));\n    updateChainlinkOracleWithENS();\n  }\n\n  /**\n   * @notice Sets the stored oracle contract with the address resolved by ENS\n   * @dev This may be called on its own as long as `useChainlinkWithENS` has been called previously\n   */\n  function updateChainlinkOracleWithENS()\n    internal\n  {\n    bytes32 oracleSubnode = keccak256(abi.encodePacked(ensNode, ENS_ORACLE_SUBNAME));\n    ENSResolver_Chainlink resolver = ENSResolver_Chainlink(ens.resolver(oracleSubnode));\n    setChainlinkOracle(resolver.addr(oracleSubnode));\n  }\n\n  /**\n   * @notice Encodes the request to be sent to the oracle contract\n   * @dev The Chainlink node expects values to be in order for the request to be picked up. Order of types\n   * will be validated in the oracle contract.\n   * @param _req The initialized Chainlink Request\n   * @return The bytes payload for the `transferAndCall` method\n   */\n  function encodeRequest(Chainlink.Request memory _req)\n    private\n    view\n    returns (bytes memory)\n  {\n    return abi.encodeWithSelector(\n      oracle.oracleRequest.selector,\n      SENDER_OVERRIDE, // Sender value - overridden by onTokenTransfer by the requesting contract's address\n      AMOUNT_OVERRIDE, // Amount value - overridden by onTokenTransfer by the actual amount of LINK sent\n      _req.id,\n      _req.callbackAddress,\n      _req.callbackFunctionId,\n      _req.nonce,\n      ARGS_VERSION,\n      _req.buf.buf);\n  }\n\n  /**\n   * @notice Ensures that the fulfillment is valid for this contract\n   * @dev Use if the contract developer prefers methods instead of modifiers for validation\n   * @param _requestId The request ID for fulfillment\n   */\n  function validateChainlinkCallback(bytes32 _requestId)\n    internal\n    recordChainlinkFulfillment(_requestId)\n    // solhint-disable-next-line no-empty-blocks\n  {}\n\n  /**\n   * @dev Reverts if the sender is not the oracle of the request.\n   * Emits ChainlinkFulfilled event.\n   * @param _requestId The request ID for fulfillment\n   */\n  modifier recordChainlinkFulfillment(bytes32 _requestId) {\n    require(msg.sender == pendingRequests[_requestId],\n            \"Source must be the oracle of the request\");\n    delete pendingRequests[_requestId];\n    emit ChainlinkFulfilled(_requestId);\n    _;\n  }\n\n  /**\n   * @dev Reverts if the request is already pending\n   * @param _requestId The request ID for fulfillment\n   */\n  modifier notPendingRequest(bytes32 _requestId) {\n    require(pendingRequests[_requestId] == address(0), \"Request is already pending\");\n    _;\n  }\n}\n",
		"Chainlink.sol": "pragma solidity ^0.6.0;\n\nimport { CBOR as CBOR_Chainlink } from \"./vendor/CBOR.sol\";\nimport { Buffer as Buffer_Chainlink } from \"./vendor/Buffer.sol\";\n\n/**\n * @title Library for common Chainlink functions\n * @dev Uses imported CBOR library for encoding to buffer\n */\nlibrary Chainlink {\n  uint256 internal constant defaultBufferSize = 256; // solhint-disable-line const-name-snakecase\n\n  using CBOR_Chainlink for Buffer_Chainlink.buffer;\n\n  struct Request {\n    bytes32 id;\n    address callbackAddress;\n    bytes4 callbackFunctionId;\n    uint256 nonce;\n    Buffer_Chainlink.buffer buf;\n  }\n\n  /**\n   * @notice Initializes a Chainlink request\n   * @dev Sets the ID, callback address, and callback function signature on the request\n   * @param self The uninitialized request\n   * @param _id The Job Specification ID\n   * @param _callbackAddress The callback address\n   * @param _callbackFunction The callback function signature\n   * @return The initialized request\n   */\n  function initialize(\n    Request memory self,\n    bytes32 _id,\n    address _callbackAddress,\n    bytes4 _callbackFunction\n  ) internal pure returns (Chainlink.Request memory) {\n    Buffer_Chainlink.init(self.buf, defaultBufferSize);\n    self.id = _id;\n    self.callbackAddress = _callbackAddress;\n    self.callbackFunctionId = _callbackFunction;\n    return self;\n  }\n\n  /**\n   * @notice Sets the data for the buffer without encoding CBOR on-chain\n   * @dev CBOR can be closed with curly-brackets {} or they can be left off\n   * @param self The initialized request\n   * @param _data The CBOR data\n   */\n  function setBuffer(Request memory self, bytes memory _data)\n    internal pure\n  {\n    Buffer_Chainlink.init(self.buf, _data.length);\n    Buffer_Chainlink.append(self.buf, _data);\n  }\n\n  /**\n   * @notice Adds a string value to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _value The string value to add\n   */\n  function add(Request memory self, string memory _key, string memory _value)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.encodeString(_value);\n  }\n\n  /**\n   * @notice Adds a bytes value to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _value The bytes value to add\n   */\n  function addBytes(Request memory self, string memory _key, bytes memory _value)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.encodeBytes(_value);\n  }\n\n  /**\n   * @notice Adds a int256 value to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _value The int256 value to add\n   */\n  function addInt(Request memory self, string memory _key, int256 _value)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.encodeInt(_value);\n  }\n\n  /**\n   * @notice Adds a uint256 value to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _value The uint256 value to add\n   */\n  function addUint(Request memory self, string memory _key, uint256 _value)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.encodeUInt(_value);\n  }\n\n  /**\n   * @notice Adds an array of strings to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _values The array of string values to add\n   */\n  function addStringArray(Request memory self, string memory _key, string[] memory _values)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.startArray();\n    for (uint256 i = 0; i < _values.length; i++) {\n      self.buf.encodeString(_values[i]);\n    }\n    self.buf.endSequence();\n  }\n}\n",
		"vendor/CBOR.sol": "pragma solidity ^0.6.0;\n\nimport { Buffer as Buffer_Chainlink } from \"./Buffer.sol\";\n\nlibrary CBOR {\n  using Buffer_Chainlink for Buffer_Chainlink.buffer;\n\n  uint8 private constant MAJOR_TYPE_INT = 0;\n  uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\n  uint8 private constant MAJOR_TYPE_BYTES = 2;\n  uint8 private constant MAJOR_TYPE_STRING = 3;\n  uint8 private constant MAJOR_TYPE_ARRAY = 4;\n  uint8 private constant MAJOR_TYPE_MAP = 5;\n  uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\n\n  function encodeType(Buffer_Chainlink.buffer memory buf, uint8 major, uint value) private pure {\n    if(value <= 23) {\n      buf.appendUint8(uint8((major << 5) | value));\n    } else if(value <= 0xFF) {\n      buf.appendUint8(uint8((major << 5) | 24));\n      buf.appendInt(value, 1);\n    } else if(value <= 0xFFFF) {\n      buf.appendUint8(uint8((major << 5) | 25));\n      buf.appendInt(value, 2);\n    } else if(value <= 0xFFFFFFFF) {\n      buf.appendUint8(uint8((major << 5) | 26));\n      buf.appendInt(value, 4);\n    } else if(value <= 0xFFFFFFFFFFFFFFFF) {\n      buf.appendUint8(uint8((major << 5) | 27));\n      buf.appendInt(value, 8);\n    }\n  }\n\n  function encodeIndefiniteLengthType(Buffer_Chainlink.buffer memory buf, uint8 major) private pure {\n    buf.appendUint8(uint8((major << 5) | 31));\n  }\n\n  function encodeUInt(Buffer_Chainlink.buffer memory buf, uint value) internal pure {\n    encodeType(buf, MAJOR_TYPE_INT, value);\n  }\n\n  function encodeInt(Buffer_Chainlink.buffer memory buf, int value) internal pure {\n    if(value >= 0) {\n      encodeType(buf, MAJOR_TYPE_INT, uint(value));\n    } else {\n      encodeType(buf, MAJOR_TYPE_NEGATIVE_INT, uint(-1 - value));\n    }\n  }\n\n  function encodeBytes(Buffer_Chainlink.buffer memory buf, bytes memory value) internal pure {\n    encodeType(buf, MAJOR_TYPE_BYTES, value.length);\n    buf.append(value);\n  }\n\n  function encodeString(Buffer_Chainlink.buffer memory buf, string memory value) internal pure {\n    encodeType(buf, MAJOR_TYPE_STRING, bytes(value).length);\n    buf.append(bytes(value));\n  }\n\n  function startArray(Buffer_Chainlink.buffer memory buf) internal pure {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\n  }\n\n  function startMap(Buffer_Chainlink.buffer memory buf) internal pure {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\n  }\n\n  function endSequence(Buffer_Chainlink.buffer memory buf) internal pure {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\n  }\n}\n",
		"vendor/Buffer.sol": "pragma solidity ^0.6.0;\n\n/**\n* @dev A library for working with mutable byte buffers in Solidity.\n*\n* Byte buffers are mutable and expandable, and provide a variety of primitives\n* for writing to them. At any time you can fetch a bytes object containing the\n* current contents of the buffer. The bytes object should not be stored between\n* operations, as it may change due to resizing of the buffer.\n*/\nlibrary Buffer {\n  /**\n  * @dev Represents a mutable buffer. Buffers have a current value (buf) and\n  *      a capacity. The capacity may be longer than the current value, in\n  *      which case it can be extended without the need to allocate more memory.\n  */\n  struct buffer {\n    bytes buf;\n    uint capacity;\n  }\n\n  /**\n  * @dev Initializes a buffer with an initial capacity.\n  * @param buf The buffer to initialize.\n  * @param capacity The number of bytes of space to allocate the buffer.\n  * @return The buffer, for chaining.\n  */\n  function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\n    if (capacity % 32 != 0) {\n      capacity += 32 - (capacity % 32);\n    }\n    // Allocate space for the buffer data\n    buf.capacity = capacity;\n    assembly {\n      let ptr := mload(0x40)\n      mstore(buf, ptr)\n      mstore(ptr, 0)\n      mstore(0x40, add(32, add(ptr, capacity)))\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Initializes a new buffer from an existing bytes object.\n  *      Changes to the buffer may mutate the original value.\n  * @param b The bytes object to initialize the buffer with.\n  * @return A new buffer.\n  */\n  function fromBytes(bytes memory b) internal pure returns(buffer memory) {\n    buffer memory buf;\n    buf.buf = b;\n    buf.capacity = b.length;\n    return buf;\n  }\n\n  function resize(buffer memory buf, uint capacity) private pure {\n    bytes memory oldbuf = buf.buf;\n    init(buf, capacity);\n    append(buf, oldbuf);\n  }\n\n  function max(uint a, uint b) private pure returns(uint) {\n    if (a > b) {\n      return a;\n    }\n    return b;\n  }\n\n  /**\n  * @dev Sets buffer length to 0.\n  * @param buf The buffer to truncate.\n  * @return The original buffer, for chaining..\n  */\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\n    assembly {\n      let bufptr := mload(buf)\n      mstore(bufptr, 0)\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The start offset to write to.\n  * @param data The data to append.\n  * @param len The number of bytes to copy.\n  * @return The original buffer, for chaining.\n  */\n  function write(buffer memory buf, uint off, bytes memory data, uint len) internal pure returns(buffer memory) {\n    require(len <= data.length);\n\n    if (off + len > buf.capacity) {\n      resize(buf, max(buf.capacity, len + off) * 2);\n    }\n\n    uint dest;\n    uint src;\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Length of existing buffer data\n      let buflen := mload(bufptr)\n      // Start address = buffer address + offset + sizeof(buffer length)\n      dest := add(add(bufptr, 32), off)\n      // Update buffer length if we're extending it\n      if gt(add(len, off), buflen) {\n        mstore(bufptr, add(len, off))\n      }\n      src := add(data, 32)\n    }\n\n    // Copy word-length chunks while possible\n    for (; len >= 32; len -= 32) {\n      assembly {\n        mstore(dest, mload(src))\n      }\n      dest += 32;\n      src += 32;\n    }\n\n    // Copy remaining bytes\n    uint mask = 256 ** (32 - len) - 1;\n    assembly {\n      let srcpart := and(mload(src), not(mask))\n      let destpart := and(mload(dest), mask)\n      mstore(dest, or(destpart, srcpart))\n    }\n\n    return buf;\n  }\n\n  /**\n  * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @param len The number of bytes to copy.\n  * @return The original buffer, for chaining.\n  */\n  function append(buffer memory buf, bytes memory data, uint len) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, len);\n  }\n\n  /**\n  * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, data.length);\n  }\n\n  /**\n  * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\n  *      capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write the byte at.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function writeUint8(buffer memory buf, uint off, uint8 data) internal pure returns(buffer memory) {\n    if (off >= buf.capacity) {\n      resize(buf, buf.capacity * 2);\n    }\n\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Length of existing buffer data\n      let buflen := mload(bufptr)\n      // Address = buffer address + sizeof(buffer length) + off\n      let dest := add(add(bufptr, off), 32)\n      mstore8(dest, data)\n      // Update buffer length if we extended it\n      if eq(off, buflen) {\n        mstore(bufptr, add(buflen, 1))\n      }\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n  *      capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\n    return writeUint8(buf, buf.buf.length, data);\n  }\n\n  /**\n  * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n  *      exceed the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write at.\n  * @param data The data to append.\n  * @param len The number of bytes to write (left-aligned).\n  * @return The original buffer, for chaining.\n  */\n  function write(buffer memory buf, uint off, bytes32 data, uint len) private pure returns(buffer memory) {\n    if (len + off > buf.capacity) {\n      resize(buf, (len + off) * 2);\n    }\n\n    uint mask = 256 ** len - 1;\n    // Right-align data\n    data = data >> (8 * (32 - len));\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Address = buffer address + sizeof(buffer length) + off + len\n      let dest := add(add(bufptr, off), len)\n      mstore(dest, or(and(mload(dest), not(mask)), data))\n      // Update buffer length if we extended it\n      if gt(add(off, len), mload(bufptr)) {\n        mstore(bufptr, add(off, len))\n      }\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n  *      capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write at.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function writeBytes20(buffer memory buf, uint off, bytes20 data) internal pure returns (buffer memory) {\n    return write(buf, off, bytes32(data), 20);\n  }\n\n  /**\n  * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chhaining.\n  */\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, bytes32(data), 20);\n  }\n\n  /**\n  * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, 32);\n  }\n\n  /**\n  * @dev Writes an integer to the buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write at.\n  * @param data The data to append.\n  * @param len The number of bytes to write (right-aligned).\n  * @return The original buffer, for chaining.\n  */\n  function writeInt(buffer memory buf, uint off, uint data, uint len) private pure returns(buffer memory) {\n    if (len + off > buf.capacity) {\n      resize(buf, (len + off) * 2);\n    }\n\n    uint mask = 256 ** len - 1;\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Address = buffer address + off + sizeof(buffer length) + len\n      let dest := add(add(bufptr, off), len)\n      mstore(dest, or(and(mload(dest), not(mask)), data))\n      // Update buffer length if we extended it\n      if gt(add(off, len), mload(bufptr)) {\n        mstore(bufptr, add(off, len))\n      }\n    }\n    return buf;\n  }\n\n  /**\n    * @dev Appends a byte to the end of the buffer. Resizes if doing so would\n    * exceed the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer.\n    */\n  function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\n    return writeInt(buf, buf.buf.length, data, len);\n  }\n}\n",
		"interfaces/ENSInterface.sol": "pragma solidity ^0.6.0;\n\ninterface ENSInterface {\n\n  // Logged when the owner of a node assigns a new owner to a subnode.\n  event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\n\n  // Logged when the owner of a node transfers ownership to a new account.\n  event Transfer(bytes32 indexed node, address owner);\n\n  // Logged when the resolver for a node changes.\n  event NewResolver(bytes32 indexed node, address resolver);\n\n  // Logged when the TTL of a node changes\n  event NewTTL(bytes32 indexed node, uint64 ttl);\n\n\n  function setSubnodeOwner(bytes32 node, bytes32 label, address _owner) external;\n  function setResolver(bytes32 node, address _resolver) external;\n  function setOwner(bytes32 node, address _owner) external;\n  function setTTL(bytes32 node, uint64 _ttl) external;\n  function owner(bytes32 node) external view returns (address);\n  function resolver(bytes32 node) external view returns (address);\n  function ttl(bytes32 node) external view returns (uint64);\n\n}\n",
		"interfaces/LinkTokenInterface.sol": "pragma solidity ^0.6.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n  function approve(address spender, uint256 value) external returns (bool success);\n  function balanceOf(address owner) external view returns (uint256 balance);\n  function decimals() external view returns (uint8 decimalPlaces);\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n  function name() external view returns (string memory tokenName);\n  function symbol() external view returns (string memory tokenSymbol);\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n  function transfer(address to, uint256 value) external returns (bool success);\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n",
		"interfaces/ChainlinkRequestInterface.sol": "pragma solidity ^0.6.0;\n\ninterface ChainlinkRequestInterface {\n  function oracleRequest(\n    address sender,\n    uint256 requestPrice,\n    bytes32 serviceAgreementID,\n    address callbackAddress,\n    bytes4 callbackFunctionId,\n    uint256 nonce,\n    uint256 dataVersion, // Currently unused, always \"1\"\n    bytes calldata data\n  ) external;\n\n  function cancelOracleRequest(\n    bytes32 requestId,\n    uint256 payment,\n    bytes4 callbackFunctionId,\n    uint256 expiration\n  ) external;\n}\n",
		"interfaces/PointerInterface.sol": "pragma solidity ^0.6.0;\n\ninterface PointerInterface {\n  function getAddress() external view returns (address);\n}\n",
		"vendor/ENSResolver.sol": "pragma solidity ^0.6.0;\n\nabstract contract ENSResolver {\n  function addr(bytes32 node) public view virtual returns (address);\n}\n",
		"vendor/SafeMath.sol": "pragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n",
		"LinkTokenReceiver.sol": "pragma solidity ^0.6.0;\n\nabstract contract LinkTokenReceiver {\n\n  bytes4 constant private ORACLE_REQUEST_SELECTOR = 0x40429946;\n  uint256 constant private SELECTOR_LENGTH = 4;\n  uint256 constant private EXPECTED_REQUEST_WORDS = 2;\n  uint256 constant private MINIMUM_REQUEST_LENGTH = SELECTOR_LENGTH + (32 * EXPECTED_REQUEST_WORDS);\n  /**\n   * @notice Called when LINK is sent to the contract via `transferAndCall`\n   * @dev The data payload's first 2 words will be overwritten by the `_sender` and `_amount`\n   * values to ensure correctness. Calls oracleRequest.\n   * @param _sender Address of the sender\n   * @param _amount Amount of LINK sent (specified in wei)\n   * @param _data Payload of the transaction\n   */\n  function onTokenTransfer(\n    address _sender,\n    uint256 _amount,\n    bytes memory _data\n  )\n    public\n    onlyLINK\n    validRequestLength(_data)\n    permittedFunctionsForLINK(_data)\n  {\n    assembly {\n      // solhint-disable-next-line avoid-low-level-calls\n      mstore(add(_data, 36), _sender) // ensure correct sender is passed\n      // solhint-disable-next-line avoid-low-level-calls\n      mstore(add(_data, 68), _amount)    // ensure correct amount is passed\n    }\n    // solhint-disable-next-line avoid-low-level-calls\n    (bool success, ) = address(this).delegatecall(_data); // calls oracleRequest\n    require(success, \"Unable to create request\");\n  }\n\n  function getChainlinkToken() public view virtual returns (address);\n\n  /**\n   * @dev Reverts if not sent from the LINK token\n   */\n  modifier onlyLINK() {\n    require(msg.sender == getChainlinkToken(), \"Must use LINK token\");\n    _;\n  }\n\n  /**\n   * @dev Reverts if the given data does not begin with the `oracleRequest` function selector\n   * @param _data The data payload of the request\n   */\n  modifier permittedFunctionsForLINK(bytes memory _data) {\n    bytes4 funcSelector;\n    assembly {\n      // solhint-disable-next-line avoid-low-level-calls\n      funcSelector := mload(add(_data, 32))\n    }\n    require(funcSelector == ORACLE_REQUEST_SELECTOR, \"Must use whitelisted functions\");\n    _;\n  }\n\n  /**\n   * @dev Reverts if the given payload is less than needed to create a request\n   * @param _data The request payload\n   */\n  modifier validRequestLength(bytes memory _data) {\n    require(_data.length >= MINIMUM_REQUEST_LENGTH, \"Invalid request length\");\n    _;\n  }\n}\n",
		"Median.sol": "pragma solidity ^0.6.0;\n\nimport \"./vendor/SafeMath.sol\";\nimport \"./SignedSafeMath.sol\";\n\nlibrary Median {\n  using SignedSafeMath for int256;\n\n  int256 constant INT_MAX = 2**255-1;\n\n  /**\n   * @notice Returns the sorted middle, or the average of the two middle indexed items if the\n   * array has an even number of elements.\n   * @dev The list passed as an argument isn't modified.\n   * @dev This algorithm has expected runtime O(n), but for adversarially chosen inputs\n   * the runtime is O(n^2).\n   * @param list The list of elements to compare\n   */\n  function calculate(int256[] memory list)\n    internal\n    pure\n    returns (int256)\n  {\n    return calculateInplace(copy(list));\n  }\n\n  /**\n   * @notice See documentation for function calculate.\n   * @dev The list passed as an argument may be permuted.\n   */\n  function calculateInplace(int256[] memory list)\n    internal\n    pure\n    returns (int256)\n  {\n    require(0 < list.length, \"list must not be empty\");\n    uint256 len = list.length;\n    uint256 middleIndex = len / 2;\n    if (len % 2 == 0) {\n      int256 median1;\n      int256 median2;\n      (median1, median2) = quickselectTwo(list, 0, len - 1, middleIndex - 1, middleIndex);\n      return SignedSafeMath.avg(median1, median2);\n    } else {\n      return quickselect(list, 0, len - 1, middleIndex);\n    }\n  }\n\n  /**\n   * @notice Maximum length of list that shortSelectTwo can handle\n   */\n  uint256 constant SHORTSELECTTWO_MAX_LENGTH = 7;\n\n  /**\n   * @notice Select the k1-th and k2-th element from list of length at most 7\n   * @dev Uses an optimal sorting network\n   */\n  function shortSelectTwo(\n    int256[] memory list,\n    uint256 lo,\n    uint256 hi,\n    uint256 k1,\n    uint256 k2\n  )\n    private\n    pure\n    returns (int256 k1th, int256 k2th)\n  {\n    // Uses an optimal sorting network (https://en.wikipedia.org/wiki/Sorting_network)\n    // for lists of length 7. Network layout is taken from\n    // http://jgamble.ripco.net/cgi-bin/nw.cgi?inputs=7&algorithm=hibbard&output=svg\n\n    uint256 len = hi + 1 - lo;\n    int256 x0 = list[lo + 0];\n    int256 x1 = 1 < len ? list[lo + 1] : INT_MAX;\n    int256 x2 = 2 < len ? list[lo + 2] : INT_MAX;\n    int256 x3 = 3 < len ? list[lo + 3] : INT_MAX;\n    int256 x4 = 4 < len ? list[lo + 4] : INT_MAX;\n    int256 x5 = 5 < len ? list[lo + 5] : INT_MAX;\n    int256 x6 = 6 < len ? list[lo + 6] : INT_MAX;\n\n    if (x0 > x1) {(x0, x1) = (x1, x0);}\n    if (x2 > x3) {(x2, x3) = (x3, x2);}\n    if (x4 > x5) {(x4, x5) = (x5, x4);}\n    if (x0 > x2) {(x0, x2) = (x2, x0);}\n    if (x1 > x3) {(x1, x3) = (x3, x1);}\n    if (x4 > x6) {(x4, x6) = (x6, x4);}\n    if (x1 > x2) {(x1, x2) = (x2, x1);}\n    if (x5 > x6) {(x5, x6) = (x6, x5);}\n    if (x0 > x4) {(x0, x4) = (x4, x0);}\n    if (x1 > x5) {(x1, x5) = (x5, x1);}\n    if (x2 > x6) {(x2, x6) = (x6, x2);}\n    if (x1 > x4) {(x1, x4) = (x4, x1);}\n    if (x3 > x6) {(x3, x6) = (x6, x3);}\n    if (x2 > x4) {(x2, x4) = (x4, x2);}\n    if (x3 > x5) {(x3, x5) = (x5, x3);}\n    if (x3 > x4) {(x3, x4) = (x4, x3);}\n\n    uint256 index1 = k1 - lo;\n    if (index1 == 0) {k1th = x0;}\n    else if (index1 == 1) {k1th = x1;}\n    else if (index1 == 2) {k1th = x2;}\n    else if (index1 == 3) {k1th = x3;}\n    else if (index1 == 4) {k1th = x4;}\n    else if (index1 == 5) {k1th = x5;}\n    else if (index1 == 6) {k1th = x6;}\n    else {revert(\"k1 out of bounds\");}\n\n    uint256 index2 = k2 - lo;\n    if (k1 == k2) {return (k1th, k1th);}\n    else if (index2 == 0) {return (k1th, x0);}\n    else if (index2 == 1) {return (k1th, x1);}\n    else if (index2 == 2) {return (k1th, x2);}\n    else if (index2 == 3) {return (k1th, x3);}\n    else if (index2 == 4) {return (k1th, x4);}\n    else if (index2 == 5) {return (k1th, x5);}\n    else if (index2 == 6) {return (k1th, x6);}\n    else {revert(\"k2 out of bounds\");}\n  }\n\n  /**\n   * @notice Selects the k-th ranked element from list, looking only at indices between lo and hi\n   * (inclusive). Modifies list in-place.\n   */\n  function quickselect(int256[] memory list, uint256 lo, uint256 hi, uint256 k)\n    private\n    pure\n    returns (int256 kth)\n  {\n    require(lo <= k);\n    require(k <= hi);\n    while (lo < hi) {\n      if (hi - lo < SHORTSELECTTWO_MAX_LENGTH) {\n        int256 ignore;\n        (kth, ignore) = shortSelectTwo(list, lo, hi, k, k);\n        return kth;\n      }\n      uint256 pivotIndex = partition(list, lo, hi);\n      if (k <= pivotIndex) {\n        // since pivotIndex < (original hi passed to partition),\n        // termination is guaranteed in this case\n        hi = pivotIndex;\n      } else {\n        // since (original lo passed to partition) <= pivotIndex,\n        // termination is guaranteed in this case\n        lo = pivotIndex + 1;\n      }\n    }\n    return list[lo];\n  }\n\n  /**\n   * @notice Selects the k1-th and k2-th ranked elements from list, looking only at indices between\n   * lo and hi (inclusive). Modifies list in-place.\n   */\n  function quickselectTwo(\n    int256[] memory list,\n    uint256 lo,\n    uint256 hi,\n    uint256 k1,\n    uint256 k2\n  )\n    internal // for testing\n    pure\n    returns (int256 k1th, int256 k2th)\n  {\n    require(k1 < k2);\n    require(lo <= k1 && k1 <= hi);\n    require(lo <= k2 && k2 <= hi);\n\n    while (true) {\n      if (hi - lo < SHORTSELECTTWO_MAX_LENGTH) {\n        return shortSelectTwo(list, lo, hi, k1, k2);\n      }\n      uint256 pivotIdx = partition(list, lo, hi);\n      if (k2 <= pivotIdx) {\n        hi = pivotIdx;\n      } else if (pivotIdx < k1) {\n        lo = pivotIdx + 1;\n      } else {\n        assert(k1 <= pivotIdx && pivotIdx < k2);\n        k1th = quickselect(list, lo, pivotIdx, k1);\n        k2th = quickselect(list, pivotIdx + 1, hi, k2);\n        return (k1th, k2th);\n      }\n    }\n  }\n\n  /**\n   * @notice Partitions list in-place using Hoare's partitioning scheme.\n   * Only elements of list between indices lo and hi (inclusive) will be modified.\n   * Returns an index i, such that:\n   * - lo <= i < hi\n   * - forall j in [lo, i]. list[j] <= list[i]\n   * - forall j in [i, hi]. list[i] <= list[j]\n   */\n  function partition(int256[] memory list, uint256 lo, uint256 hi)\n    private\n    pure\n    returns (uint256)\n  {\n    // We don't care about overflow of the addition, because it would require a list\n    // larger than any feasible computer's memory.\n    int256 pivot = list[(lo + hi) / 2];\n    lo -= 1; // this can underflow. that's intentional.\n    hi += 1;\n    while (true) {\n      do {\n        lo += 1;\n      } while (list[lo] < pivot);\n      do {\n        hi -= 1;\n      } while (list[hi] > pivot);\n      if (lo < hi) {\n        (list[lo], list[hi]) = (list[hi], list[lo]);\n      } else {\n        // Let orig_lo and orig_hi be the original values of lo and hi passed to partition.\n        // Then, hi < orig_hi, because hi decreases *strictly* monotonically\n        // in each loop iteration and\n        // - either list[orig_hi] > pivot, in which case the first loop iteration\n        //   will achieve hi < orig_hi;\n        // - or list[orig_hi] <= pivot, in which case at least two loop iterations are\n        //   needed:\n        //   - lo will have to stop at least once in the interval\n        //     [orig_lo, (orig_lo + orig_hi)/2]\n        //   - (orig_lo + orig_hi)/2 < orig_hi\n        return hi;\n      }\n    }\n  }\n\n  /**\n   * @notice Makes an in-memory copy of the array passed in\n   * @param list Reference to the array to be copied\n   */\n  function copy(int256[] memory list)\n    private\n    pure\n    returns(int256[] memory)\n  {\n    int256[] memory list2 = new int256[](list.length);\n    for (uint256 i = 0; i < list.length; i++) {\n      list2[i] = list[i];\n    }\n    return list2;\n  }\n}\n",
		"SignedSafeMath.sol": "pragma solidity ^0.6.0;\n\nlibrary SignedSafeMath {\n  int256 constant private _INT256_MIN = -2**255;\n\n  /**\n   * @dev Multiplies two signed integers, reverts on overflow.\n   */\n  function mul(int256 a, int256 b) internal pure returns (int256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    require(!(a == -1 && b == _INT256_MIN), \"SignedSafeMath: multiplication overflow\");\n\n    int256 c = a * b;\n    require(c / a == b, \"SignedSafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Integer division of two signed integers truncating the quotient, reverts on division by zero.\n   */\n  function div(int256 a, int256 b) internal pure returns (int256) {\n    require(b != 0, \"SignedSafeMath: division by zero\");\n    require(!(b == -1 && a == _INT256_MIN), \"SignedSafeMath: division overflow\");\n\n    int256 c = a / b;\n\n    return c;\n  }\n\n  /**\n   * @dev Subtracts two signed integers, reverts on overflow.\n   */\n  function sub(int256 a, int256 b) internal pure returns (int256) {\n    int256 c = a - b;\n    require((b >= 0 && c <= a) || (b < 0 && c > a), \"SignedSafeMath: subtraction overflow\");\n\n    return c;\n  }\n\n  /**\n   * @dev Adds two signed integers, reverts on overflow.\n   */\n  function add(int256 a, int256 b) internal pure returns (int256) {\n    int256 c = a + b;\n    require((b >= 0 && c >= a) || (b < 0 && c < a), \"SignedSafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n   * @notice Computes average of two signed integers, ensuring that the computation\n   * doesn't overflow.\n   * @dev If the result is not an integer, it is rounded towards zero. For example,\n   * avg(-3, -4) = -3\n   */\n  function avg(int256 _a, int256 _b)\n    internal\n    pure\n    returns (int256)\n  {\n    if ((_a < 0 && _b > 0) || (_a > 0 && _b < 0)) {\n      return add(_a, _b) / 2;\n    }\n    int256 remainder = (_a % 2 + _b % 2) / 2;\n    return add(add(_a / 2, _b / 2), remainder);\n  }\n}\n",
		"vendor/Ownable.sol": "pragma solidity ^0.6.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be aplied to your functions to restrict their use to\n * the owner.\n *\n * This contract has been modified to remove the revokeOwnership function\n */\ncontract Ownable {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor () internal {\n    _owner = msg.sender;\n    emit OwnershipTransferred(address(0), _owner);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(isOwner(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Returns true if the caller is the current owner.\n   */\n  function isOwner() public view returns (bool) {\n    return msg.sender == _owner;\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n"
	},
	"sourceTreeHashHex": "0xf21b482295ebb62b34c16fdeab9e112cea9448d937aecb545a871d53c66069c2",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.6.6+commit.6c089d02.js",
		"settings": {
			"optimizer": {
				"runs": 1000000,
				"enabled": true
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"userdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap",
						"evm.methodIdentifiers",
						"metadata"
					]
				}
			},
			"remappings": []
		}
	},
	"chains": {}
}