{
	"schemaVersion": "2.0.0",
	"contractName": "ConcreteChainlink",
	"compilerOutput": {
		"abi": [
			{
				"constant": false,
				"inputs": [],
				"name": "closeEvent",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_key",
						"type": "string"
					},
					{
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "addUint",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_key",
						"type": "string"
					},
					{
						"name": "_value",
						"type": "bytes"
					}
				],
				"name": "addBytes",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_key",
						"type": "string"
					},
					{
						"name": "_values",
						"type": "bytes32[]"
					}
				],
				"name": "addStringArray",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_key",
						"type": "string"
					},
					{
						"name": "_value",
						"type": "int256"
					}
				],
				"name": "addInt",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "setBuffer",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_key",
						"type": "string"
					},
					{
						"name": "_value",
						"type": "string"
					}
				],
				"name": "add",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"name": "payload",
						"type": "bytes"
					}
				],
				"name": "RequestData",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {}
		},
		"evm": {
			"bytecode": {
				"linkReferences": {},
				"object": "0x608060405234801561001057600080fd5b506118e0806100206000396000f3006080604052600436106100825763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166303dc532681146100875780630e734a581461009e5780632255beb0146100f957806347655b1b146101905780635e31692e14610222578063cc39406f1461027d578063ebdf86ca146102d6575b600080fd5b34801561009357600080fd5b5061009c61036d565b005b3480156100aa57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009c943694929360249392840191908190840183828082843750949750509335945061043a9350505050565b34801561010557600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009c94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506106b49650505050505050565b34801561019c57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009c943694929360249392840191908190840183828082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375094975061083a9650505050505050565b34801561022e57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009c9436949293602493928401919081908401838280828437509497505093359450610b439350505050565b34801561028957600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009c943694929360249392840191908190840183828082843750949750610cc99650505050505050565b3480156102e257600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009c94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610f419650505050505050565b6040805160208082526003805460027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018416150201909116049183018290527f84485ae823e5c366e9581c146349e23f73b2f459d9eee1b9f15f36aac3b3145a9390929182918201908490801561042a5780601f106103ff5761010080835404028352916020019161042a565b820191906000526020600020905b81548152906001019060200180831161040d57829003601f168201915b50509250505060405180910390a1565b6104426117cc565b6040805160a0810182526000805482526001805473ffffffffffffffffffffffffffffffffffffffff81166020808601919091527fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000007401000000000000000000000000000000000000000090930492909202919091168486015260028054606080870191909152865160038054601f96811615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01169390930494850184900490930283018101875295820183815294959394608087019492939192849284918401828280156105955780601f1061056a57610100808354040283529160200191610595565b820191906000526020600020905b81548152906001019060200180831161057857829003601f168201915b50505091835250506001919091015460209091015290525090506105c081848463ffffffff6110c716565b805160009081556020808301516001805460408601517c0100000000000000000000000000000000000000000000000000000000900474010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff9094167fffffffffffffffffffffffff00000000000000000000000000000000000000009092169190911792909216919091179055606083015160025560808301518051805185949360039261069f9284929190910190611801565b50602082015181600101555050905050505050565b6106bc6117cc565b6040805160a0810182526000805482526001805473ffffffffffffffffffffffffffffffffffffffff81166020808601919091527fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000007401000000000000000000000000000000000000000090930492909202919091168486015260028054606080870191909152865160038054601f96811615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff011693909304948501849004909302830181018752958201838152949593946080870194929391928492849184018282801561080f5780601f106107e45761010080835404028352916020019161080f565b820191906000526020600020905b8154815290600101906020018083116107f257829003601f168201915b50505091835250506001919091015460209091015290525090506105c081848463ffffffff6110f616565b606060006108466117cc565b835160405190808252806020026020018201604052801561087b57816020015b60608152602001906001900390816108665790505b509250600091505b83518210156108cf576108ac848381518110151561089d57fe5b90602001906020020151611120565b83838151811015156108ba57fe5b60209081029091010152600190910190610883565b6040805160a0810182526000805482526001805473ffffffffffffffffffffffffffffffffffffffff81166020808601919091527fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000007401000000000000000000000000000000000000000090930492909202919091168486015260028054606080870191909152865160038054601f96811615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0116939093049485018490049093028301810187529582018381529495939460808701949293919284928491840182828015610a225780601f106109f757610100808354040283529160200191610a22565b820191906000526020600020905b815481529060010190602001808311610a0557829003601f168201915b5050509183525050600191909101546020909101529052509050610a4d81868563ffffffff6112ce16565b805160009081556020808301516001805460408601517c0100000000000000000000000000000000000000000000000000000000900474010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff9094167fffffffffffffffffffffffff000000000000000000000000000000000000000090921691909117929092169190911790556060830151600255608083015180518051859493600392610b2c9284929190910190611801565b506020820151816001015550509050505050505050565b610b4b6117cc565b6040805160a0810182526000805482526001805473ffffffffffffffffffffffffffffffffffffffff81166020808601919091527fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000007401000000000000000000000000000000000000000090930492909202919091168486015260028054606080870191909152865160038054601f96811615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0116939093049485018490049093028301810187529582018381529495939460808701949293919284928491840182828015610c9e5780601f10610c7357610100808354040283529160200191610c9e565b820191906000526020600020905b815481529060010190602001808311610c8157829003601f168201915b50505091835250506001919091015460209091015290525090506105c081848463ffffffff61134716565b610cd16117cc565b6040805160a0810182526000805482526001805473ffffffffffffffffffffffffffffffffffffffff81166020808601919091527fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000007401000000000000000000000000000000000000000090930492909202919091168486015260028054606080870191909152865160038054601f96811615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0116939093049485018490049093028301810187529582018381529495939460808701949293919284928491840182828015610e245780601f10610df957610100808354040283529160200191610e24565b820191906000526020600020905b815481529060010190602001808311610e0757829003601f168201915b5050509183525050600191909101546020909101529052509050610e4e818363ffffffff61137116565b805160009081556020808301516001805460408601517c0100000000000000000000000000000000000000000000000000000000900474010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff9094167fffffffffffffffffffffffff000000000000000000000000000000000000000090921691909117929092169190911790556060830151600255608083015180518051859493600392610f2d9284929190910190611801565b506020820151816001015550509050505050565b610f496117cc565b6040805160a0810182526000805482526001805473ffffffffffffffffffffffffffffffffffffffff81166020808601919091527fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000007401000000000000000000000000000000000000000090930492909202919091168486015260028054606080870191909152865160038054601f96811615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff011693909304948501849004909302830181018752958201838152949593946080870194929391928492849184018282801561109c5780601f106110715761010080835404028352916020019161109c565b820191906000526020600020905b81548152906001019060200180831161107f57829003601f168201915b50505091835250506001919091015460209091015290525090506105c081848463ffffffff61138f16565b60808301516110dc908363ffffffff6113b916565b60808301516110f1908263ffffffff6113d616565b505050565b608083015161110b908363ffffffff6113b916565b60808301516110f1908263ffffffff6113e616565b6040805160208082528183019092526060918291600091829182918591908082016104008038833901905050945060009350600092505b60208310156111e4576008830260020a870291507fff000000000000000000000000000000000000000000000000000000000000008216156111d9578185858151811015156111a257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001909301925b600190920191611157565b836040519080825280601f01601f191660200182016040528015611212578160200160208202803883390190505b509050600092505b838310156112c457848381518110151561123057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002818481518110151561128957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060019092019161121a565b9695505050505050565b60808301516000906112e6908463ffffffff6113b916565b6112f384608001516113f3565b5060005b81518110156113345761132c828281518110151561131157fe5b6020908102909101015160808601519063ffffffff6113b916565b6001016112f7565b6113418460800151611401565b50505050565b608083015161135c908363ffffffff6113b916565b60808301516110f1908263ffffffff61140c16565b61138082608001518251611453565b506110f1826080015182611493565b60808301516113a4908363ffffffff6113b916565b60808301516110f1908263ffffffff6113b916565b6113c682600383516114b4565b6110f1828263ffffffff61149316565b6113e2826000836114b4565b5050565b6113c682600283516114b4565b6113fe8160046115b1565b50565b6113fe8160076115b1565b6000811261142557611420826000836114b4565b6113e2565b6113e2826001837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff036114b4565b61145b61187f565b60208206156114705760208206602003820191505b506020808301829052604080518085526000815283019091019052815b92915050565b61149b61187f565b6114ad838460000151518485516115ca565b9392505050565b601781116114d6576114d08360ff8481166020021683176116bc565b506110f1565b60ff811161150a576114f7836018602060ff8616021763ffffffff6116bc16565b506114d08382600163ffffffff6116d416565b61ffff811161153f5761152c836019602060ff8616021763ffffffff6116bc16565b506114d08382600263ffffffff6116d416565b63ffffffff81116115765761156383601a602060ff8616021763ffffffff6116bc16565b506114d08382600463ffffffff6116d416565b67ffffffffffffffff81116110f15761159e83601b602060ff8616021763ffffffff6116bc16565b506113418382600863ffffffff6116d416565b6110f182601f602060ff8516021763ffffffff6116bc16565b6115d261187f565b6000806000855185111515156115e757600080fd5b8760200151858801111561161157611611886116098a602001518a89016116f5565b60020261170c565b87518051886020830101945080898801111561162d5788870182525b60208801935050505b6020851061167657815183527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09094019360209283019290910190611636565b505181516020949094036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018019909116931692909217909152509192915050565b6116c461187f565b6114ad8384600001515184611723565b6116dc61187f565b6116ed84856000015151858561176e565b949350505050565b60008183111561170657508161148d565b50919050565b81516117188383611453565b506113418382611493565b61172b61187f565b602084015183106117475761174784856020015160020261170c565b8351805160208583010184815381861415611763576001820183525b509495945050505050565b61177661187f565b600085602001518584011115611795576117958686850160020261170c565b6001836101000a03905085518386820101858319825116178152815185880111156117c05784870182525b50959695505050505050565b6040805160c0810182526000808252602082018190529181018290526060810191909152608081016117fc61187f565b905290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061184257805160ff191683800117855561186f565b8280016001018555821561186f579182015b8281111561186f578251825591602001919060010190611854565b5061187b929150611897565b5090565b60408051808201909152606081526000602082015290565b6118b191905b8082111561187b576000815560010161189d565b905600a165627a7a7230582010c13586abefd759316d142e24e7aafadc266c4b7f2a5b6d92a58c549e2f6fb40029",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E0 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x82 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3DC5326 DUP2 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0xE734A58 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x2255BEB0 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x47655B1B EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x5E31692E EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xCC39406F EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xEBDF86CA EQ PUSH2 0x2D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH2 0x36D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x9C SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP POP SWAP4 CALLDATALOAD SWAP5 POP PUSH2 0x43A SWAP4 POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x9C SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 CALLDATALOAD DUP12 ADD DUP1 CALLDATALOAD SWAP2 DUP3 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP1 DUP4 MSTORE SWAP8 SWAP11 SWAP10 SWAP9 DUP2 ADD SWAP8 SWAP2 SWAP7 POP SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x6B4 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x9C SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x83A SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x9C SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP POP SWAP4 CALLDATALOAD SWAP5 POP PUSH2 0xB43 SWAP4 POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x9C SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0xCC9 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x9C SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 CALLDATALOAD DUP12 ADD DUP1 CALLDATALOAD SWAP2 DUP3 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP1 DUP4 MSTORE SWAP8 SWAP11 SWAP10 SWAP9 DUP2 ADD SWAP8 SWAP2 SWAP7 POP SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0xF41 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH32 0x84485AE823E5C366E9581C146349E23F73B2F459D9EEE1B9F15F36AAC3B3145A SWAP4 SWAP1 SWAP3 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x42A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x40D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x442 PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 AND DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1F SWAP7 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD AND SWAP4 SWAP1 SWAP4 DIV SWAP5 DUP6 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP4 ADD DUP2 ADD DUP8 MSTORE SWAP6 DUP3 ADD DUP4 DUP2 MSTORE SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH2 0x5C0 DUP2 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x10C7 AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP7 ADD MLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x2 SSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP1 MLOAD DUP1 MLOAD DUP6 SWAP5 SWAP4 PUSH1 0x3 SWAP3 PUSH2 0x69F SWAP3 DUP5 SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1801 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6BC PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 AND DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1F SWAP7 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD AND SWAP4 SWAP1 SWAP4 DIV SWAP5 DUP6 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP4 ADD DUP2 ADD DUP8 MSTORE SWAP6 DUP3 ADD DUP4 DUP2 MSTORE SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x80F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x80F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH2 0x5C0 DUP2 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x10F6 AND JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x846 PUSH2 0x17CC JUMP JUMPDEST DUP4 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x87B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x866 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 MLOAD DUP3 LT ISZERO PUSH2 0x8CF JUMPI PUSH2 0x8AC DUP5 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x89D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1120 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x8BA JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 AND DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1F SWAP7 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD AND SWAP4 SWAP1 SWAP4 DIV SWAP5 DUP6 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP4 ADD DUP2 ADD DUP8 MSTORE SWAP6 DUP3 ADD DUP4 DUP2 MSTORE SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xA22 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA22 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA05 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH2 0xA4D DUP2 DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x12CE AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP7 ADD MLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x2 SSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP1 MLOAD DUP1 MLOAD DUP6 SWAP5 SWAP4 PUSH1 0x3 SWAP3 PUSH2 0xB2C SWAP3 DUP5 SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1801 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP SWAP1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB4B PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 AND DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1F SWAP7 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD AND SWAP4 SWAP1 SWAP4 DIV SWAP5 DUP6 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP4 ADD DUP2 ADD DUP8 MSTORE SWAP6 DUP3 ADD DUP4 DUP2 MSTORE SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC9E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC73 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC9E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC81 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH2 0x5C0 DUP2 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1347 AND JUMP JUMPDEST PUSH2 0xCD1 PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 AND DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1F SWAP7 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD AND SWAP4 SWAP1 SWAP4 DIV SWAP5 DUP6 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP4 ADD DUP2 ADD DUP8 MSTORE SWAP6 DUP3 ADD DUP4 DUP2 MSTORE SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE24 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDF9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE24 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE07 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH2 0xE4E DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1371 AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP7 ADD MLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x2 SSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP1 MLOAD DUP1 MLOAD DUP6 SWAP5 SWAP4 PUSH1 0x3 SWAP3 PUSH2 0xF2D SWAP3 DUP5 SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1801 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP SWAP1 POP POP POP POP JUMP JUMPDEST PUSH2 0xF49 PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 AND DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1F SWAP7 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD AND SWAP4 SWAP1 SWAP4 DIV SWAP5 DUP6 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP4 ADD DUP2 ADD DUP8 MSTORE SWAP6 DUP3 ADD DUP4 DUP2 MSTORE SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x109C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1071 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x109C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x107F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH2 0x5C0 DUP2 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x138F AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x10DC SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x10F1 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x13D6 AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x110B SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x10F1 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x13E6 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP6 SWAP2 SWAP1 DUP1 DUP3 ADD PUSH2 0x400 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP5 POP PUSH1 0x0 SWAP4 POP PUSH1 0x0 SWAP3 POP JUMPDEST PUSH1 0x20 DUP4 LT ISZERO PUSH2 0x11E4 JUMPI PUSH1 0x8 DUP4 MUL PUSH1 0x2 EXP DUP8 MUL SWAP2 POP PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ISZERO PUSH2 0x11D9 JUMPI DUP2 DUP6 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x11A2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 JUMPDEST PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x1157 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1212 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x12C4 JUMPI DUP5 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1230 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL DUP2 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1289 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x121A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH2 0x12E6 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH2 0x12F3 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x13F3 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1334 JUMPI PUSH2 0x132C DUP3 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1311 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x1341 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x1401 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x135C SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x10F1 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x140C AND JUMP JUMPDEST PUSH2 0x1380 DUP3 PUSH1 0x80 ADD MLOAD DUP3 MLOAD PUSH2 0x1453 JUMP JUMPDEST POP PUSH2 0x10F1 DUP3 PUSH1 0x80 ADD MLOAD DUP3 PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x13A4 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x10F1 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH2 0x13C6 DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x10F1 DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1493 AND JUMP JUMPDEST PUSH2 0x13E2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x14B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x13C6 DUP3 PUSH1 0x2 DUP4 MLOAD PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x13FE DUP2 PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x13FE DUP2 PUSH1 0x7 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT PUSH2 0x1425 JUMPI PUSH2 0x1420 DUP3 PUSH1 0x0 DUP4 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x13E2 DUP3 PUSH1 0x1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x145B PUSH2 0x187F JUMP JUMPDEST PUSH1 0x20 DUP3 MOD ISZERO PUSH2 0x1470 JUMPI PUSH1 0x20 DUP3 MOD PUSH1 0x20 SUB DUP3 ADD SWAP2 POP JUMPDEST POP PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE DUP4 ADD SWAP1 SWAP2 ADD SWAP1 MSTORE DUP2 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x149B PUSH2 0x187F JUMP JUMPDEST PUSH2 0x14AD DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x15CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 GT PUSH2 0x14D6 JUMPI PUSH2 0x14D0 DUP4 PUSH1 0xFF DUP5 DUP2 AND PUSH1 0x20 MUL AND DUP4 OR PUSH2 0x16BC JUMP JUMPDEST POP PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0xFF DUP2 GT PUSH2 0x150A JUMPI PUSH2 0x14F7 DUP4 PUSH1 0x18 PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x16BC AND JUMP JUMPDEST POP PUSH2 0x14D0 DUP4 DUP3 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x16D4 AND JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x153F JUMPI PUSH2 0x152C DUP4 PUSH1 0x19 PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x16BC AND JUMP JUMPDEST POP PUSH2 0x14D0 DUP4 DUP3 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x16D4 AND JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x1576 JUMPI PUSH2 0x1563 DUP4 PUSH1 0x1A PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x16BC AND JUMP JUMPDEST POP PUSH2 0x14D0 DUP4 DUP3 PUSH1 0x4 PUSH4 0xFFFFFFFF PUSH2 0x16D4 AND JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x10F1 JUMPI PUSH2 0x159E DUP4 PUSH1 0x1B PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x16BC AND JUMP JUMPDEST POP PUSH2 0x1341 DUP4 DUP3 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x16D4 AND JUMP JUMPDEST PUSH2 0x10F1 DUP3 PUSH1 0x1F PUSH1 0x20 PUSH1 0xFF DUP6 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x16BC AND JUMP JUMPDEST PUSH2 0x15D2 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 MLOAD DUP6 GT ISZERO ISZERO ISZERO PUSH2 0x15E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 ADD MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1611 DUP9 PUSH2 0x1609 DUP11 PUSH1 0x20 ADD MLOAD DUP11 DUP10 ADD PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x2 MUL PUSH2 0x170C JUMP JUMPDEST DUP8 MLOAD DUP1 MLOAD DUP9 PUSH1 0x20 DUP4 ADD ADD SWAP5 POP DUP1 DUP10 DUP9 ADD GT ISZERO PUSH2 0x162D JUMPI DUP9 DUP8 ADD DUP3 MSTORE JUMPDEST PUSH1 0x20 DUP9 ADD SWAP4 POP POP POP JUMPDEST PUSH1 0x20 DUP6 LT PUSH2 0x1676 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1636 JUMP JUMPDEST POP MLOAD DUP2 MLOAD PUSH1 0x20 SWAP5 SWAP1 SWAP5 SUB PUSH2 0x100 EXP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP1 NOT SWAP1 SWAP2 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C4 PUSH2 0x187F JUMP JUMPDEST PUSH2 0x14AD DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x16DC PUSH2 0x187F JUMP JUMPDEST PUSH2 0x16ED DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0x176E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x1706 JUMPI POP DUP2 PUSH2 0x148D JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1718 DUP4 DUP4 PUSH2 0x1453 JUMP JUMPDEST POP PUSH2 0x1341 DUP4 DUP3 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x172B PUSH2 0x187F JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP4 LT PUSH2 0x1747 JUMPI PUSH2 0x1747 DUP5 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x2 MUL PUSH2 0x170C JUMP JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 DUP2 DUP7 EQ ISZERO PUSH2 0x1763 JUMPI PUSH1 0x1 DUP3 ADD DUP4 MSTORE JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1776 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD DUP6 DUP5 ADD GT ISZERO PUSH2 0x1795 JUMPI PUSH2 0x1795 DUP7 DUP7 DUP6 ADD PUSH1 0x2 MUL PUSH2 0x170C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH2 0x100 EXP SUB SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE DUP2 MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0x17C0 JUMPI DUP5 DUP8 ADD DUP3 MSTORE JUMPDEST POP SWAP6 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x17FC PUSH2 0x187F JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1842 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x186F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x186F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x186F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1854 JUMP JUMPDEST POP PUSH2 0x187B SWAP3 SWAP2 POP PUSH2 0x1897 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x18B1 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x187B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x189D JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 LT 0xc1 CALLDATALOAD DUP7 0xab 0xef 0xd7 MSIZE BALANCE PUSH14 0x142E24E7AAFADC266C4B7F2A5B6D SWAP3 0xa5 DUP13 SLOAD SWAP15 0x2f PUSH16 0xB4002900000000000000000000000000 ",
				"sourceMap": "181:1947:22:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;181:1947:22;;;;;;;"
			},
			"deployedBytecode": {
				"linkReferences": {},
				"object": "0x6080604052600436106100825763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166303dc532681146100875780630e734a581461009e5780632255beb0146100f957806347655b1b146101905780635e31692e14610222578063cc39406f1461027d578063ebdf86ca146102d6575b600080fd5b34801561009357600080fd5b5061009c61036d565b005b3480156100aa57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009c943694929360249392840191908190840183828082843750949750509335945061043a9350505050565b34801561010557600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009c94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497506106b49650505050505050565b34801561019c57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009c943694929360249392840191908190840183828082843750506040805187358901803560208181028481018201909552818452989b9a99890198929750908201955093508392508501908490808284375094975061083a9650505050505050565b34801561022e57600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009c9436949293602493928401919081908401838280828437509497505093359450610b439350505050565b34801561028957600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009c943694929360249392840191908190840183828082843750949750610cc99650505050505050565b3480156102e257600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261009c94369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a999881019791965091820194509250829150840183828082843750949750610f419650505050505050565b6040805160208082526003805460027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018416150201909116049183018290527f84485ae823e5c366e9581c146349e23f73b2f459d9eee1b9f15f36aac3b3145a9390929182918201908490801561042a5780601f106103ff5761010080835404028352916020019161042a565b820191906000526020600020905b81548152906001019060200180831161040d57829003601f168201915b50509250505060405180910390a1565b6104426117cc565b6040805160a0810182526000805482526001805473ffffffffffffffffffffffffffffffffffffffff81166020808601919091527fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000007401000000000000000000000000000000000000000090930492909202919091168486015260028054606080870191909152865160038054601f96811615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01169390930494850184900490930283018101875295820183815294959394608087019492939192849284918401828280156105955780601f1061056a57610100808354040283529160200191610595565b820191906000526020600020905b81548152906001019060200180831161057857829003601f168201915b50505091835250506001919091015460209091015290525090506105c081848463ffffffff6110c716565b805160009081556020808301516001805460408601517c0100000000000000000000000000000000000000000000000000000000900474010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff9094167fffffffffffffffffffffffff00000000000000000000000000000000000000009092169190911792909216919091179055606083015160025560808301518051805185949360039261069f9284929190910190611801565b50602082015181600101555050905050505050565b6106bc6117cc565b6040805160a0810182526000805482526001805473ffffffffffffffffffffffffffffffffffffffff81166020808601919091527fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000007401000000000000000000000000000000000000000090930492909202919091168486015260028054606080870191909152865160038054601f96811615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff011693909304948501849004909302830181018752958201838152949593946080870194929391928492849184018282801561080f5780601f106107e45761010080835404028352916020019161080f565b820191906000526020600020905b8154815290600101906020018083116107f257829003601f168201915b50505091835250506001919091015460209091015290525090506105c081848463ffffffff6110f616565b606060006108466117cc565b835160405190808252806020026020018201604052801561087b57816020015b60608152602001906001900390816108665790505b509250600091505b83518210156108cf576108ac848381518110151561089d57fe5b90602001906020020151611120565b83838151811015156108ba57fe5b60209081029091010152600190910190610883565b6040805160a0810182526000805482526001805473ffffffffffffffffffffffffffffffffffffffff81166020808601919091527fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000007401000000000000000000000000000000000000000090930492909202919091168486015260028054606080870191909152865160038054601f96811615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0116939093049485018490049093028301810187529582018381529495939460808701949293919284928491840182828015610a225780601f106109f757610100808354040283529160200191610a22565b820191906000526020600020905b815481529060010190602001808311610a0557829003601f168201915b5050509183525050600191909101546020909101529052509050610a4d81868563ffffffff6112ce16565b805160009081556020808301516001805460408601517c0100000000000000000000000000000000000000000000000000000000900474010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff9094167fffffffffffffffffffffffff000000000000000000000000000000000000000090921691909117929092169190911790556060830151600255608083015180518051859493600392610b2c9284929190910190611801565b506020820151816001015550509050505050505050565b610b4b6117cc565b6040805160a0810182526000805482526001805473ffffffffffffffffffffffffffffffffffffffff81166020808601919091527fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000007401000000000000000000000000000000000000000090930492909202919091168486015260028054606080870191909152865160038054601f96811615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0116939093049485018490049093028301810187529582018381529495939460808701949293919284928491840182828015610c9e5780601f10610c7357610100808354040283529160200191610c9e565b820191906000526020600020905b815481529060010190602001808311610c8157829003601f168201915b50505091835250506001919091015460209091015290525090506105c081848463ffffffff61134716565b610cd16117cc565b6040805160a0810182526000805482526001805473ffffffffffffffffffffffffffffffffffffffff81166020808601919091527fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000007401000000000000000000000000000000000000000090930492909202919091168486015260028054606080870191909152865160038054601f96811615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0116939093049485018490049093028301810187529582018381529495939460808701949293919284928491840182828015610e245780601f10610df957610100808354040283529160200191610e24565b820191906000526020600020905b815481529060010190602001808311610e0757829003601f168201915b5050509183525050600191909101546020909101529052509050610e4e818363ffffffff61137116565b805160009081556020808301516001805460408601517c0100000000000000000000000000000000000000000000000000000000900474010000000000000000000000000000000000000000027fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff73ffffffffffffffffffffffffffffffffffffffff9094167fffffffffffffffffffffffff000000000000000000000000000000000000000090921691909117929092169190911790556060830151600255608083015180518051859493600392610f2d9284929190910190611801565b506020820151816001015550509050505050565b610f496117cc565b6040805160a0810182526000805482526001805473ffffffffffffffffffffffffffffffffffffffff81166020808601919091527fffffffff000000000000000000000000000000000000000000000000000000007c01000000000000000000000000000000000000000000000000000000007401000000000000000000000000000000000000000090930492909202919091168486015260028054606080870191909152865160038054601f96811615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff011693909304948501849004909302830181018752958201838152949593946080870194929391928492849184018282801561109c5780601f106110715761010080835404028352916020019161109c565b820191906000526020600020905b81548152906001019060200180831161107f57829003601f168201915b50505091835250506001919091015460209091015290525090506105c081848463ffffffff61138f16565b60808301516110dc908363ffffffff6113b916565b60808301516110f1908263ffffffff6113d616565b505050565b608083015161110b908363ffffffff6113b916565b60808301516110f1908263ffffffff6113e616565b6040805160208082528183019092526060918291600091829182918591908082016104008038833901905050945060009350600092505b60208310156111e4576008830260020a870291507fff000000000000000000000000000000000000000000000000000000000000008216156111d9578185858151811015156111a257fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001909301925b600190920191611157565b836040519080825280601f01601f191660200182016040528015611212578160200160208202803883390190505b509050600092505b838310156112c457848381518110151561123057fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002818481518110151561128957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060019092019161121a565b9695505050505050565b60808301516000906112e6908463ffffffff6113b916565b6112f384608001516113f3565b5060005b81518110156113345761132c828281518110151561131157fe5b6020908102909101015160808601519063ffffffff6113b916565b6001016112f7565b6113418460800151611401565b50505050565b608083015161135c908363ffffffff6113b916565b60808301516110f1908263ffffffff61140c16565b61138082608001518251611453565b506110f1826080015182611493565b60808301516113a4908363ffffffff6113b916565b60808301516110f1908263ffffffff6113b916565b6113c682600383516114b4565b6110f1828263ffffffff61149316565b6113e2826000836114b4565b5050565b6113c682600283516114b4565b6113fe8160046115b1565b50565b6113fe8160076115b1565b6000811261142557611420826000836114b4565b6113e2565b6113e2826001837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff036114b4565b61145b61187f565b60208206156114705760208206602003820191505b506020808301829052604080518085526000815283019091019052815b92915050565b61149b61187f565b6114ad838460000151518485516115ca565b9392505050565b601781116114d6576114d08360ff8481166020021683176116bc565b506110f1565b60ff811161150a576114f7836018602060ff8616021763ffffffff6116bc16565b506114d08382600163ffffffff6116d416565b61ffff811161153f5761152c836019602060ff8616021763ffffffff6116bc16565b506114d08382600263ffffffff6116d416565b63ffffffff81116115765761156383601a602060ff8616021763ffffffff6116bc16565b506114d08382600463ffffffff6116d416565b67ffffffffffffffff81116110f15761159e83601b602060ff8616021763ffffffff6116bc16565b506113418382600863ffffffff6116d416565b6110f182601f602060ff8516021763ffffffff6116bc16565b6115d261187f565b6000806000855185111515156115e757600080fd5b8760200151858801111561161157611611886116098a602001518a89016116f5565b60020261170c565b87518051886020830101945080898801111561162d5788870182525b60208801935050505b6020851061167657815183527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09094019360209283019290910190611636565b505181516020949094036101000a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018019909116931692909217909152509192915050565b6116c461187f565b6114ad8384600001515184611723565b6116dc61187f565b6116ed84856000015151858561176e565b949350505050565b60008183111561170657508161148d565b50919050565b81516117188383611453565b506113418382611493565b61172b61187f565b602084015183106117475761174784856020015160020261170c565b8351805160208583010184815381861415611763576001820183525b509495945050505050565b61177661187f565b600085602001518584011115611795576117958686850160020261170c565b6001836101000a03905085518386820101858319825116178152815185880111156117c05784870182525b50959695505050505050565b6040805160c0810182526000808252602082018190529181018290526060810191909152608081016117fc61187f565b905290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061184257805160ff191683800117855561186f565b8280016001018555821561186f579182015b8281111561186f578251825591602001919060010190611854565b5061187b929150611897565b5090565b60408051808201909152606081526000602082015290565b6118b191905b8082111561187b576000815560010161189d565b905600a165627a7a7230582010c13586abefd759316d142e24e7aafadc266c4b7f2a5b6d92a58c549e2f6fb40029",
				"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x82 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x3DC5326 DUP2 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0xE734A58 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x2255BEB0 EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0x47655B1B EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x5E31692E EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xCC39406F EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xEBDF86CA EQ PUSH2 0x2D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH2 0x36D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x9C SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP POP SWAP4 CALLDATALOAD SWAP5 POP PUSH2 0x43A SWAP4 POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x9C SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 CALLDATALOAD DUP12 ADD DUP1 CALLDATALOAD SWAP2 DUP3 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP1 DUP4 MSTORE SWAP8 SWAP11 SWAP10 SWAP9 DUP2 ADD SWAP8 SWAP2 SWAP7 POP SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x6B4 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x9C SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD DUP8 CALLDATALOAD DUP10 ADD DUP1 CALLDATALOAD PUSH1 0x20 DUP2 DUP2 MUL DUP5 DUP2 ADD DUP3 ADD SWAP1 SWAP6 MSTORE DUP2 DUP5 MSTORE SWAP9 SWAP12 SWAP11 SWAP10 DUP10 ADD SWAP9 SWAP3 SWAP8 POP SWAP1 DUP3 ADD SWAP6 POP SWAP4 POP DUP4 SWAP3 POP DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x83A SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x9C SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP POP SWAP4 CALLDATALOAD SWAP5 POP PUSH2 0xB43 SWAP4 POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x9C SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0xCC9 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x9C SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 CALLDATALOAD DUP12 ADD DUP1 CALLDATALOAD SWAP2 DUP3 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP1 DUP4 MSTORE SWAP8 SWAP11 SWAP10 SWAP9 DUP2 ADD SWAP8 SWAP2 SWAP7 POP SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0xF41 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE PUSH32 0x84485AE823E5C366E9581C146349E23F73B2F459D9EEE1B9F15F36AAC3B3145A SWAP4 SWAP1 SWAP3 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x42A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x42A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x40D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x442 PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 AND DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1F SWAP7 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD AND SWAP4 SWAP1 SWAP4 DIV SWAP5 DUP6 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP4 ADD DUP2 ADD DUP8 MSTORE SWAP6 DUP3 ADD DUP4 DUP2 MSTORE SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH2 0x5C0 DUP2 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x10C7 AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP7 ADD MLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x2 SSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP1 MLOAD DUP1 MLOAD DUP6 SWAP5 SWAP4 PUSH1 0x3 SWAP3 PUSH2 0x69F SWAP3 DUP5 SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1801 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP SWAP1 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6BC PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 AND DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1F SWAP7 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD AND SWAP4 SWAP1 SWAP4 DIV SWAP5 DUP6 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP4 ADD DUP2 ADD DUP8 MSTORE SWAP6 DUP3 ADD DUP4 DUP2 MSTORE SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x80F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x80F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH2 0x5C0 DUP2 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x10F6 AND JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x846 PUSH2 0x17CC JUMP JUMPDEST DUP4 MLOAD PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x87B JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x866 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 MLOAD DUP3 LT ISZERO PUSH2 0x8CF JUMPI PUSH2 0x8AC DUP5 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x89D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1120 JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x8BA JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x883 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 AND DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1F SWAP7 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD AND SWAP4 SWAP1 SWAP4 DIV SWAP5 DUP6 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP4 ADD DUP2 ADD DUP8 MSTORE SWAP6 DUP3 ADD DUP4 DUP2 MSTORE SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xA22 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA22 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA05 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH2 0xA4D DUP2 DUP7 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x12CE AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP7 ADD MLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x2 SSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP1 MLOAD DUP1 MLOAD DUP6 SWAP5 SWAP4 PUSH1 0x3 SWAP3 PUSH2 0xB2C SWAP3 DUP5 SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1801 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP SWAP1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB4B PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 AND DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1F SWAP7 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD AND SWAP4 SWAP1 SWAP4 DIV SWAP5 DUP6 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP4 ADD DUP2 ADD DUP8 MSTORE SWAP6 DUP3 ADD DUP4 DUP2 MSTORE SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC9E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC73 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC9E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC81 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH2 0x5C0 DUP2 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1347 AND JUMP JUMPDEST PUSH2 0xCD1 PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 AND DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1F SWAP7 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD AND SWAP4 SWAP1 SWAP4 DIV SWAP5 DUP6 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP4 ADD DUP2 ADD DUP8 MSTORE SWAP6 DUP3 ADD DUP4 DUP2 MSTORE SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE24 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDF9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE24 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE07 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH2 0xE4E DUP2 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1371 AND JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 DUP2 SSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP7 ADD MLOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH21 0x10000000000000000000000000000000000000000 MUL PUSH32 0xFFFFFFFFFFFFFFFF00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x2 SSTORE PUSH1 0x80 DUP4 ADD MLOAD DUP1 MLOAD DUP1 MLOAD DUP6 SWAP5 SWAP4 PUSH1 0x3 SWAP3 PUSH2 0xF2D SWAP3 DUP5 SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1801 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP SWAP1 POP POP POP POP JUMP JUMPDEST PUSH2 0xF49 PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 SWAP4 DIV SWAP3 SWAP1 SWAP3 MUL SWAP2 SWAP1 SWAP2 AND DUP5 DUP7 ADD MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x60 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 MLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x1F SWAP7 DUP2 AND ISZERO PUSH2 0x100 MUL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD AND SWAP4 SWAP1 SWAP4 DIV SWAP5 DUP6 ADD DUP5 SWAP1 DIV SWAP1 SWAP4 MUL DUP4 ADD DUP2 ADD DUP8 MSTORE SWAP6 DUP3 ADD DUP4 DUP2 MSTORE SWAP5 SWAP6 SWAP4 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x109C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1071 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x109C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x107F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 MSTORE POP SWAP1 POP PUSH2 0x5C0 DUP2 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x138F AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x10DC SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x10F1 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x13D6 AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x110B SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x10F1 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x13E6 AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP6 SWAP2 SWAP1 DUP1 DUP3 ADD PUSH2 0x400 DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP POP SWAP5 POP PUSH1 0x0 SWAP4 POP PUSH1 0x0 SWAP3 POP JUMPDEST PUSH1 0x20 DUP4 LT ISZERO PUSH2 0x11E4 JUMPI PUSH1 0x8 DUP4 MUL PUSH1 0x2 EXP DUP8 MUL SWAP2 POP PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ISZERO PUSH2 0x11D9 JUMPI DUP2 DUP6 DUP6 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x11A2 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 JUMPDEST PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x1157 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1212 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x12C4 JUMPI DUP5 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1230 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD MLOAD PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH32 0x100000000000000000000000000000000000000000000000000000000000000 MUL DUP2 DUP5 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1289 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x121A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x0 SWAP1 PUSH2 0x12E6 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH2 0x12F3 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x13F3 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1334 JUMPI PUSH2 0x132C DUP3 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x1311 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x80 DUP7 ADD MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x1341 DUP5 PUSH1 0x80 ADD MLOAD PUSH2 0x1401 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x135C SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x10F1 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x140C AND JUMP JUMPDEST PUSH2 0x1380 DUP3 PUSH1 0x80 ADD MLOAD DUP3 MLOAD PUSH2 0x1453 JUMP JUMPDEST POP PUSH2 0x10F1 DUP3 PUSH1 0x80 ADD MLOAD DUP3 PUSH2 0x1493 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x13A4 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x10F1 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x13B9 AND JUMP JUMPDEST PUSH2 0x13C6 DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x10F1 DUP3 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x1493 AND JUMP JUMPDEST PUSH2 0x13E2 DUP3 PUSH1 0x0 DUP4 PUSH2 0x14B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x13C6 DUP3 PUSH1 0x2 DUP4 MLOAD PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x13FE DUP2 PUSH1 0x4 PUSH2 0x15B1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x13FE DUP2 PUSH1 0x7 PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT PUSH2 0x1425 JUMPI PUSH2 0x1420 DUP3 PUSH1 0x0 DUP4 PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x13E2 DUP3 PUSH1 0x1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB PUSH2 0x14B4 JUMP JUMPDEST PUSH2 0x145B PUSH2 0x187F JUMP JUMPDEST PUSH1 0x20 DUP3 MOD ISZERO PUSH2 0x1470 JUMPI PUSH1 0x20 DUP3 MOD PUSH1 0x20 SUB DUP3 ADD SWAP2 POP JUMPDEST POP PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE DUP4 ADD SWAP1 SWAP2 ADD SWAP1 MSTORE DUP2 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x149B PUSH2 0x187F JUMP JUMPDEST PUSH2 0x14AD DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x15CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 GT PUSH2 0x14D6 JUMPI PUSH2 0x14D0 DUP4 PUSH1 0xFF DUP5 DUP2 AND PUSH1 0x20 MUL AND DUP4 OR PUSH2 0x16BC JUMP JUMPDEST POP PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0xFF DUP2 GT PUSH2 0x150A JUMPI PUSH2 0x14F7 DUP4 PUSH1 0x18 PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x16BC AND JUMP JUMPDEST POP PUSH2 0x14D0 DUP4 DUP3 PUSH1 0x1 PUSH4 0xFFFFFFFF PUSH2 0x16D4 AND JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x153F JUMPI PUSH2 0x152C DUP4 PUSH1 0x19 PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x16BC AND JUMP JUMPDEST POP PUSH2 0x14D0 DUP4 DUP3 PUSH1 0x2 PUSH4 0xFFFFFFFF PUSH2 0x16D4 AND JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x1576 JUMPI PUSH2 0x1563 DUP4 PUSH1 0x1A PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x16BC AND JUMP JUMPDEST POP PUSH2 0x14D0 DUP4 DUP3 PUSH1 0x4 PUSH4 0xFFFFFFFF PUSH2 0x16D4 AND JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x10F1 JUMPI PUSH2 0x159E DUP4 PUSH1 0x1B PUSH1 0x20 PUSH1 0xFF DUP7 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x16BC AND JUMP JUMPDEST POP PUSH2 0x1341 DUP4 DUP3 PUSH1 0x8 PUSH4 0xFFFFFFFF PUSH2 0x16D4 AND JUMP JUMPDEST PUSH2 0x10F1 DUP3 PUSH1 0x1F PUSH1 0x20 PUSH1 0xFF DUP6 AND MUL OR PUSH4 0xFFFFFFFF PUSH2 0x16BC AND JUMP JUMPDEST PUSH2 0x15D2 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 MLOAD DUP6 GT ISZERO ISZERO ISZERO PUSH2 0x15E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 ADD MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0x1611 JUMPI PUSH2 0x1611 DUP9 PUSH2 0x1609 DUP11 PUSH1 0x20 ADD MLOAD DUP11 DUP10 ADD PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x2 MUL PUSH2 0x170C JUMP JUMPDEST DUP8 MLOAD DUP1 MLOAD DUP9 PUSH1 0x20 DUP4 ADD ADD SWAP5 POP DUP1 DUP10 DUP9 ADD GT ISZERO PUSH2 0x162D JUMPI DUP9 DUP8 ADD DUP3 MSTORE JUMPDEST PUSH1 0x20 DUP9 ADD SWAP4 POP POP POP JUMPDEST PUSH1 0x20 DUP6 LT PUSH2 0x1676 JUMPI DUP2 MLOAD DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP5 ADD SWAP4 PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1636 JUMP JUMPDEST POP MLOAD DUP2 MLOAD PUSH1 0x20 SWAP5 SWAP1 SWAP5 SUB PUSH2 0x100 EXP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP1 NOT SWAP1 SWAP2 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C4 PUSH2 0x187F JUMP JUMPDEST PUSH2 0x14AD DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0x16DC PUSH2 0x187F JUMP JUMPDEST PUSH2 0x16ED DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0x176E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0x1706 JUMPI POP DUP2 PUSH2 0x148D JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1718 DUP4 DUP4 PUSH2 0x1453 JUMP JUMPDEST POP PUSH2 0x1341 DUP4 DUP3 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x172B PUSH2 0x187F JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD DUP4 LT PUSH2 0x1747 JUMPI PUSH2 0x1747 DUP5 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x2 MUL PUSH2 0x170C JUMP JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 DUP2 DUP7 EQ ISZERO PUSH2 0x1763 JUMPI PUSH1 0x1 DUP3 ADD DUP4 MSTORE JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1776 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x20 ADD MLOAD DUP6 DUP5 ADD GT ISZERO PUSH2 0x1795 JUMPI PUSH2 0x1795 DUP7 DUP7 DUP6 ADD PUSH1 0x2 MUL PUSH2 0x170C JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH2 0x100 EXP SUB SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE DUP2 MLOAD DUP6 DUP9 ADD GT ISZERO PUSH2 0x17C0 JUMPI DUP5 DUP8 ADD DUP3 MSTORE JUMPDEST POP SWAP6 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP2 ADD PUSH2 0x17FC PUSH2 0x187F JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1842 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x186F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x186F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x186F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1854 JUMP JUMPDEST POP PUSH2 0x187B SWAP3 SWAP2 POP PUSH2 0x1897 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x18B1 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x187B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x189D JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 LT 0xc1 CALLDATALOAD DUP7 0xab 0xef 0xd7 MSIZE BALANCE PUSH14 0x142E24E7AAFADC266C4B7F2A5B6D SWAP3 0xa5 DUP13 SLOAD SWAP15 0x2f PUSH16 0xB4002900000000000000000000000000 ",
				"sourceMap": "181:1947:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:69;;8:9:-1;5:2;;;30:1;27;20:12;5:2;377:69:22;;;;;;997:141;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;997:141:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;997:141:22;;-1:-1:-1;;997:141:22;;;-1:-1:-1;997:141:22;;-1:-1:-1;;;;997:141:22;710;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;710:141:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;710:141:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;710:141:22;;;;-1:-1:-1;710:141:22;-1:-1:-1;710:141:22;;-1:-1:-1;710:141:22;;;;;;;;-1:-1:-1;710:141:22;;-1:-1:-1;710:141:22;;-1:-1:-1;;;;;;;710:141:22;1271:331;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1271:331:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1271:331:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1271:331:22;;;;-1:-1:-1;1271:331:22;-1:-1:-1;1271:331:22;;-1:-1:-1;1271:331:22;;;;;;;;;-1:-1:-1;1271:331:22;;-1:-1:-1;1271:331:22;;-1:-1:-1;;;;;;;1271:331:22;855:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;855:138:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;855:138:22;;-1:-1:-1;;855:138:22;;;-1:-1:-1;855:138:22;;-1:-1:-1;;;;855:138:22;450:120;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;450:120:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;450:120:22;;-1:-1:-1;450:120:22;;-1:-1:-1;;;;;;;450:120:22;574:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;574:132:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;574:132:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;574:132:22;;;;-1:-1:-1;574:132:22;-1:-1:-1;574:132:22;;-1:-1:-1;574:132:22;;;;;;;;-1:-1:-1;574:132:22;;-1:-1:-1;574:132:22;;-1:-1:-1;;;;;;;574:132:22;377:69;417:24;;;;;;;429:7;417:24;;;;;;;;;;;;;;;;;;;;;;;429:7;;417:24;;;;;;429:7;;417:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;377:69::o;997:141::-;1056:27;;:::i;:::-;:33;;;;;;;;1086:3;1056:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1086:3;;1056:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1056:33:22;;;-1:-1:-1;;1056:33:22;;;;;;;;;;;;;-1:-1:-1;1056:33:22;-1:-1:-1;1095:24:22;1056:33;1106:4;1112:6;1095:24;:10;:24;:::i;:::-;1125:8;;:3;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1131:2;;1125:3;:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;997:141;;;:::o;710:::-;768:27;;:::i;:::-;:33;;;;;;;;798:3;768:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;798:3;;768:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;768:33:22;;;-1:-1:-1;;768:33:22;;;;;;;;;;;;;-1:-1:-1;768:33:22;-1:-1:-1;807:25:22;768:33;819:4;825:6;807:25;:11;:25;:::i;1271:331::-;1347:23;1412:9;1512:27;;:::i;:::-;1386:7;:14;1373:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:54;;1424:1;1412:13;;1407:100;1431:7;:14;1427:1;:18;1407:100;;;1473:27;1489:7;1497:1;1489:10;;;;;;;;;;;;;;;;;;1473:15;:27::i;:::-;1460:7;1468:1;1460:10;;;;;;;;;;;;;;;;;;:40;1447:3;;;;;1407:100;;;1512:33;;;;;;;;1542:3;1512:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1542:3;;1512:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1512:33:22;;;-1:-1:-1;;1512:33:22;;;;;;;;;;;;;-1:-1:-1;1512:33:22;-1:-1:-1;1551:32:22;1512:33;1569:4;1575:7;1551:32;:17;:32;:::i;:::-;1589:8;;:3;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:2;;1589:3;:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;1271:331;;;;;:::o;855:138::-;912:27;;:::i;:::-;:33;;;;;;;;942:3;912:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;942:3;;912:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;912:33:22;;;-1:-1:-1;;912:33:22;;;;;;;;;;;;;-1:-1:-1;912:33:22;-1:-1:-1;951:23:22;912:33;961:4;967:6;951:23;:9;:23;:::i;450:120::-;494:27;;:::i;:::-;:33;;;;;;;;524:3;494:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;524:3;;494:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;494:33:22;;;-1:-1:-1;;494:33:22;;;;;;;;;;;;;-1:-1:-1;494:33:22;-1:-1:-1;533:18:22;494:33;546:4;533:18;:12;:18;:::i;:::-;557:8;;:3;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;563:2;;557:3;:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;450:120;;:::o;574:132::-;628:27;;:::i;:::-;:33;;;;;;;;658:3;628:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;658:3;;628:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;628:33:22;;;-1:-1:-1;;628:33:22;;;;;;;;;;;;;-1:-1:-1;628:33:22;-1:-1:-1;667:20:22;628:33;674:4;680:6;667:20;:6;:20;:::i;3047:158:1:-;3140:8;;;;:27;;3162:4;3140:27;:21;:27;:::i;:::-;3173:8;;;;:27;;3193:6;3173:27;:19;:27;:::i;:::-;3047:158;;;:::o;2318:::-;2410:8;;;;:27;;2432:4;2410:27;:21;:27;:::i;:::-;2443:8;;;;:28;;2464:6;2443:28;:20;:28;:::i;1606:520:22:-;1705:13;;;1715:2;1705:13;;;;;;;;;1664:6;;;;1724:14;;;;;;1664:6;;1705:13;;;;17:15:-1;;105:10;1705:13:22;88:34:-1;136:17;;-1:-1;1705:13:22;1678:40;;1741:1;1724:18;;1762:1;1753:10;;1748:185;1769:2;1765:1;:6;1748:185;;;1827:1;:5;;1821:1;:12;1811:22;;;-1:-1:-1;1847:9:22;;;;1843:84;;1893:4;1868:11;1880:9;1868:22;;;;;;;;;;;;;;:29;;;;;;;;;;-1:-1:-1;1907:11:22;;;;;1843:84;1773:3;;;;;1748:185;;;1982:9;1972:20;;;;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;1972:20:22;;1938:54;;2007:1;2003:5;;1998:85;2014:9;2010:1;:13;1998:85;;;2062:11;2074:1;2062:14;;;;;;;;;;;;;;;;;;;;2038:18;2057:1;2038:21;;;;;;;;;;;;;;:38;;;;;;;;;;-1:-1:-1;2025:3:22;;;;;1998:85;;;2102:18;1606:520;-1:-1:-1;;;;;;1606:520:22:o;3428:294:1:-;3537:8;;;;3602:9;;3537:27;;3559:4;3537:27;:21;:27;:::i;:::-;3570:21;:4;:8;;;:19;:21::i;:::-;-1:-1:-1;3614:1:1;3597:93;3621:7;:14;3617:1;:18;3597:93;;;3650:33;3672:7;3680:1;3672:10;;;;;;;;;;;;;;;;;;;3650:8;;;;;:33;:21;:33;:::i;:::-;3637:3;;3597:93;;;3695:22;:4;:8;;;:20;:22::i;:::-;3428:294;;;;:::o;2683:155::-;2774:8;;;;:27;;2796:4;2774:27;:21;:27;:::i;:::-;2807:8;;;;:26;;2826:6;2807:26;:18;:26;:::i;1576:175::-;1655:45;1677:4;:8;;;1687:5;:12;1655:21;:45::i;:::-;;1706:40;1730:4;:8;;;1740:5;1706:23;:40::i;1958:155::-;2046:8;;;;:27;;2068:4;2046:27;:21;:27;:::i;:::-;2079:8;;;;:29;;2101:6;2079:29;:21;:29;:::i;1853:182:34:-;1945:55;1956:3;347:1;1986:5;1980:19;1945:10;:55::i;:::-;2006:24;:3;2023:5;2006:24;:10;:24;:::i;1302:131::-;1390:38;1401:3;198:1;1422:5;1390:10;:38::i;:::-;1302:131;;:::o;1684:165::-;1774:47;1785:3;299:1;1808:5;:12;1774:10;:47::i;2039:130::-;2115:49;2142:3;394:1;2115:26;:49::i;:::-;2039:130;:::o;2303:138::-;2380:56;2407:3;493:1;2380:26;:56::i;1437:243::-;1535:1;1526:10;;1523:153;;1546:44;1557:3;198:1;1583:5;1546:10;:44::i;:::-;1523:153;;;1611:58;1622:3;252:1;1662:5;1657:2;:10;1611;:58::i;942:395:33:-;1012:6;;:::i;:::-;1048:2;1037:8;:13;:18;1033:71;;1094:2;1083:8;:13;1077:2;:20;1065:32;;;;1033:71;-1:-1:-1;1151:12:33;;;;:23;;;1214:4;1208:11;;1226:16;;;-1:-1:-1;1249:14:33;;1291:18;;1283:27;;;1270:41;;1151:3;942:395;;;;;:::o;4496:155::-;4573:6;;:::i;:::-;4601:45;4607:3;4612;:7;;;:14;4628:4;4634;:11;4601:5;:45::i;:::-;4594:52;4496:155;-1:-1:-1;;;4496:155:33:o;499:645:34:-;611:2;602:11;;599:541;;623:44;:3;646:10;;;;;;645:20;;;623:15;:44::i;:::-;;599:541;;;692:4;683:13;;680:460;;706:41;:3;743:2;729:10;;;;;728:17;706:41;:15;:41;:::i;:::-;-1:-1:-1;755:23:34;:3;769:5;776:1;755:23;:13;:23;:::i;680:460::-;803:6;794:15;;791:349;;819:41;:3;856:2;842:10;;;;;841:17;819:41;:15;:41;:::i;:::-;-1:-1:-1;868:23:34;:3;882:5;889:1;868:23;:13;:23;:::i;791:349::-;916:10;907:19;;904:236;;936:41;:3;973:2;959:10;;;;;958:17;936:41;:15;:41;:::i;:::-;-1:-1:-1;985:23:34;:3;999:5;1006:1;985:23;:13;:23;:::i;904:236::-;1033:18;1024:27;;1021:119;;1061:41;:3;1098:2;1084:10;;;;;1083:17;1061:41;:15;:41;:::i;:::-;-1:-1:-1;1110:23:34;:3;1124:5;1131:1;1110:23;:13;:23;:::i;1148:150::-;1252:41;:3;1289:2;1275:10;;;;;1274:17;1252:41;:15;:41;:::i;2651:1140:33:-;2746:6;;:::i;:::-;2897:9;2912:8;3580:9;2782:4;:11;2775:3;:18;;2767:27;;;;;;;;2817:3;:12;;;2811:3;2805;:9;:24;2801:90;;;2839:45;2846:3;2851:28;2855:3;:12;;;2875:3;2869;:9;2851:3;:28::i;:::-;2882:1;2851:32;2839:6;:45::i;:::-;3006:3;3000:10;3077:6;3071:13;3193:3;3188:2;3180:6;3176:15;3172:25;3164:33;;3277:6;3271:3;3266;3262:13;3259:25;3256:2;;;3319:3;3314;3310:13;3302:6;3295:29;3256:2;3356;3350:4;3346:13;3339:20;;2935:430;;3417:129;3431:2;3424:9;;3417:129;;3486:10;;3473:24;;3435:9;;;;;3520:2;3512:10;;;;3530:9;;;;3417:129;;;-1:-1:-1;3655:10:33;3704:11;;3600:2;:8;;;;3592:3;:17;:21;;3667:9;;3651:26;;;3700:22;;3742:21;;;;3729:35;;;-1:-1:-1;3783:3:33;;;-1:-1:-1;;2651:1140:33:o;5811:144::-;5885:6;;:::i;:::-;5913:37;5924:3;5929;:7;;;:14;5945:4;5913:10;:37::i;9497:154::-;9578:6;;:::i;:::-;9606:40;9615:3;9620;:7;;;:14;9636:4;9642:3;9606:8;:40::i;:::-;9599:47;9497:154;-1:-1:-1;;;;9497:154:33:o;1889:114::-;1939:4;1959:1;1955;:5;1951:34;;;-1:-1:-1;1977:1:33;1970:8;;1951:34;-1:-1:-1;1997:1:33;1889:114;-1:-1:-1;1889:114:33:o;1732:153::-;1823:7;;1836:19;1823:3;1846:8;1836:4;:19::i;:::-;;1861;1868:3;1873:6;1861;:19::i;4945:619::-;5028:6;;:::i;:::-;5060:12;;;;5053:19;;5049:69;;5082:29;5089:3;5094;:12;;;5109:1;5094:16;5082:6;:29::i;:::-;5204:3;5198:10;5275:6;5269:13;5387:2;5381:3;5373:6;5369:16;5365:25;5411:4;5405;5397:19;5482:6;5477:3;5474:15;5471:2;;;5527:1;5519:6;5515:14;5507:6;5500:30;5471:2;-1:-1:-1;5556:3:33;;4945:619;-1:-1:-1;;;;;4945:619:33:o;8610:642::-;8699:6;;:::i;:::-;8799:9;8736:3;:12;;;8730:3;8724;:9;:24;8720:73;;;8758:28;8765:3;8777;8771;:9;8784:1;8770:15;8758:6;:28::i;:::-;8824:1;8818:3;8811;:10;:14;8799:26;;8911:3;8905:10;9026:3;9020;9012:6;9008:16;9004:26;9082:4;9074;9070:9;9063:4;9057:11;9053:27;9050:37;9044:4;9037:51;9170:6;9164:13;9158:3;9153;9149:13;9146:32;9143:2;;;9213:3;9208;9204:13;9196:6;9189:29;9143:2;-1:-1:-1;9244:3:33;;8610:642;-1:-1:-1;;;;;;8610:642:33:o;181:1947:22:-;;;;;;;;;-1:-1:-1;181:1947:22;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;181:1947:22;;;-1:-1:-1;181:1947:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;181:1947:22;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o"
			},
			"methodIdentifiers": {
				"add(string,string)": "ebdf86ca",
				"addBytes(string,bytes)": "2255beb0",
				"addInt(string,int256)": "5e31692e",
				"addStringArray(string,bytes32[])": "47655b1b",
				"addUint(string,uint256)": "0e734a58",
				"closeEvent()": "03dc5326",
				"setBuffer(bytes)": "cc39406f"
			}
		},
		"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"closeEvent\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"string\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"addUint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"string\"},{\"name\":\"_value\",\"type\":\"bytes\"}],\"name\":\"addBytes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"string\"},{\"name\":\"_values\",\"type\":\"bytes32[]\"}],\"name\":\"addStringArray\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"string\"},{\"name\":\"_value\",\"type\":\"int256\"}],\"name\":\"addInt\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"setBuffer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_key\",\"type\":\"string\"},{\"name\":\"_value\",\"type\":\"string\"}],\"name\":\"add\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"RequestData\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.4/tests/ConcreteChainlink.sol\":\"ConcreteChainlink\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.4/Chainlink.sol\":{\"keccak256\":\"0x3e8d01f8aead4e1eac6b3332d366ed8bc2ef5d889c2c8c344777b981d4071f63\",\"urls\":[\"bzzr://7be4bdda81bc444446593968124112fb399d460f529d80761e50c47874b9cb4f\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.4/tests/ConcreteChainlink.sol\":{\"keccak256\":\"0x3bde37294d85eb0c739e7f0beb5f88915bfb3671588ae265d9c773cb742fa79f\",\"urls\":[\"bzzr://b844e6102c5ec307a5508872bc2bc5516e5c5a221dd44616e23225f487382df0\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.4/vendor/Buffer.sol\":{\"keccak256\":\"0x900b4c8ab35b4876d89835a8b050c96107ace250a70f64c5bba6a78a60f03883\",\"urls\":[\"bzzr://408340da4e8fa35e608196ee508f11f9d44f6f70a10f0db0083ab20b5a894d59\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.4/vendor/CBOR.sol\":{\"keccak256\":\"0xf1b54cf6a1c57ac32980695d109e08025fe2245b22a4b6bb1cdad45e04d05883\",\"urls\":[\"bzzr://048573793d67c5e7d779847adf35c39096ad098b8d934c3c79205b36cde64dd3\"]}},\"version\":1}",
		"userdoc": {
			"methods": {}
		}
	},
	"sources": {
		"tests/ConcreteChainlink.sol": {
			"id": 22
		},
		"Chainlink.sol": {
			"id": 1
		},
		"vendor/CBOR.sol": {
			"id": 34
		},
		"vendor/Buffer.sol": {
			"id": 33
		}
	},
	"sourceCodes": {
		"tests/ConcreteChainlink.sol": "pragma solidity 0.4.24;\n\nimport \"../Chainlink.sol\";\nimport { CBOR as CBOR_Chainlink } from \"../vendor/CBOR.sol\";\nimport { Buffer as Buffer_Chainlink } from \"../vendor/Buffer.sol\";\n\ncontract ConcreteChainlink {\n  using Chainlink for Chainlink.Request;\n  using CBOR_Chainlink for Buffer_Chainlink.buffer;\n\n  Chainlink.Request private req;\n\n  event RequestData(bytes payload);\n\n  function closeEvent() public {\n    emit RequestData(req.buf.buf);\n  }\n\n  function setBuffer(bytes data) public {\n    Chainlink.Request memory r2 = req;\n    r2.setBuffer(data);\n    req = r2;\n  }\n\n  function add(string _key, string _value) public {\n    Chainlink.Request memory r2 = req;\n    r2.add(_key, _value);\n    req = r2;\n  }\n\n  function addBytes(string _key, bytes _value) public {\n    Chainlink.Request memory r2 = req;\n    r2.addBytes(_key, _value);\n    req = r2;\n  }\n\n  function addInt(string _key, int256 _value) public {\n    Chainlink.Request memory r2 = req;\n    r2.addInt(_key, _value);\n    req = r2;\n  }\n\n  function addUint(string _key, uint256 _value) public {\n    Chainlink.Request memory r2 = req;\n    r2.addUint(_key, _value);\n    req = r2;\n  }\n\n  // Temporarily have method receive bytes32[] memory until experimental\n  // string[] memory can be invoked from truffle tests.\n  function addStringArray(string _key, bytes32[] memory _values) public {\n    string[] memory strings = new string[](_values.length);\n    for (uint256 i = 0; i < _values.length; i++) {\n      strings[i] = bytes32ToString(_values[i]);\n    }\n    Chainlink.Request memory r2 = req;\n    r2.addStringArray(_key, strings);\n    req = r2;\n  }\n\n  function bytes32ToString(bytes32 x) private pure returns (string) {\n    bytes memory bytesString = new bytes(32);\n    uint charCount = 0;\n    for (uint j = 0; j < 32; j++) {\n      byte char = byte(bytes32(uint(x) * 2 ** (8 * j)));\n      if (char != 0) {\n        bytesString[charCount] = char;\n        charCount++;\n      }\n    }\n    bytes memory bytesStringTrimmed = new bytes(charCount);\n    for (j = 0; j < charCount; j++) {\n      bytesStringTrimmed[j] = bytesString[j];\n    }\n    return string(bytesStringTrimmed);\n  }\n}\n",
		"Chainlink.sol": "pragma solidity ^0.4.24;\n\nimport { CBOR as CBOR_Chainlink } from \"./vendor/CBOR.sol\";\nimport { Buffer as Buffer_Chainlink } from \"./vendor/Buffer.sol\";\n\n/**\n * @title Library for common Chainlink functions\n * @dev Uses imported CBOR library for encoding to buffer\n */\nlibrary Chainlink {\n  uint256 internal constant defaultBufferSize = 256; // solhint-disable-line const-name-snakecase\n\n  using CBOR_Chainlink for Buffer_Chainlink.buffer;\n\n  struct Request {\n    bytes32 id;\n    address callbackAddress;\n    bytes4 callbackFunctionId;\n    uint256 nonce;\n    Buffer_Chainlink.buffer buf;\n  }\n\n  /**\n   * @notice Initializes a Chainlink request\n   * @dev Sets the ID, callback address, and callback function signature on the request\n   * @param self The uninitialized request\n   * @param _id The Job Specification ID\n   * @param _callbackAddress The callback address\n   * @param _callbackFunction The callback function signature\n   * @return The initialized request\n   */\n  function initialize(\n    Request memory self,\n    bytes32 _id,\n    address _callbackAddress,\n    bytes4 _callbackFunction\n  ) internal pure returns (Chainlink.Request memory) {\n    Buffer_Chainlink.init(self.buf, defaultBufferSize);\n    self.id = _id;\n    self.callbackAddress = _callbackAddress;\n    self.callbackFunctionId = _callbackFunction;\n    return self;\n  }\n\n  /**\n   * @notice Sets the data for the buffer without encoding CBOR on-chain\n   * @dev CBOR can be closed with curly-brackets {} or they can be left off\n   * @param self The initialized request\n   * @param _data The CBOR data\n   */\n  function setBuffer(Request memory self, bytes _data)\n    internal pure\n  {\n    Buffer_Chainlink.init(self.buf, _data.length);\n    Buffer_Chainlink.append(self.buf, _data);\n  }\n\n  /**\n   * @notice Adds a string value to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _value The string value to add\n   */\n  function add(Request memory self, string _key, string _value)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.encodeString(_value);\n  }\n\n  /**\n   * @notice Adds a bytes value to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _value The bytes value to add\n   */\n  function addBytes(Request memory self, string _key, bytes _value)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.encodeBytes(_value);\n  }\n\n  /**\n   * @notice Adds a int256 value to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _value The int256 value to add\n   */\n  function addInt(Request memory self, string _key, int256 _value)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.encodeInt(_value);\n  }\n\n  /**\n   * @notice Adds a uint256 value to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _value The uint256 value to add\n   */\n  function addUint(Request memory self, string _key, uint256 _value)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.encodeUInt(_value);\n  }\n\n  /**\n   * @notice Adds an array of strings to the request with a given key name\n   * @param self The initialized request\n   * @param _key The name of the key\n   * @param _values The array of string values to add\n   */\n  function addStringArray(Request memory self, string _key, string[] memory _values)\n    internal pure\n  {\n    self.buf.encodeString(_key);\n    self.buf.startArray();\n    for (uint256 i = 0; i < _values.length; i++) {\n      self.buf.encodeString(_values[i]);\n    }\n    self.buf.endSequence();\n  }\n}\n",
		"vendor/CBOR.sol": "pragma solidity ^0.4.19;\n\nimport { Buffer as Buffer_Chainlink } from \"./Buffer.sol\";\n\nlibrary CBOR {\n  using Buffer_Chainlink for Buffer_Chainlink.buffer;\n\n  uint8 private constant MAJOR_TYPE_INT = 0;\n  uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\n  uint8 private constant MAJOR_TYPE_BYTES = 2;\n  uint8 private constant MAJOR_TYPE_STRING = 3;\n  uint8 private constant MAJOR_TYPE_ARRAY = 4;\n  uint8 private constant MAJOR_TYPE_MAP = 5;\n  uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\n\n  function encodeType(Buffer_Chainlink.buffer memory buf, uint8 major, uint value) private pure {\n    if(value <= 23) {\n      buf.appendUint8(uint8((major << 5) | value));\n    } else if(value <= 0xFF) {\n      buf.appendUint8(uint8((major << 5) | 24));\n      buf.appendInt(value, 1);\n    } else if(value <= 0xFFFF) {\n      buf.appendUint8(uint8((major << 5) | 25));\n      buf.appendInt(value, 2);\n    } else if(value <= 0xFFFFFFFF) {\n      buf.appendUint8(uint8((major << 5) | 26));\n      buf.appendInt(value, 4);\n    } else if(value <= 0xFFFFFFFFFFFFFFFF) {\n      buf.appendUint8(uint8((major << 5) | 27));\n      buf.appendInt(value, 8);\n    }\n  }\n\n  function encodeIndefiniteLengthType(Buffer_Chainlink.buffer memory buf, uint8 major) private pure {\n    buf.appendUint8(uint8((major << 5) | 31));\n  }\n\n  function encodeUInt(Buffer_Chainlink.buffer memory buf, uint value) internal pure {\n    encodeType(buf, MAJOR_TYPE_INT, value);\n  }\n\n  function encodeInt(Buffer_Chainlink.buffer memory buf, int value) internal pure {\n    if(value >= 0) {\n      encodeType(buf, MAJOR_TYPE_INT, uint(value));\n    } else {\n      encodeType(buf, MAJOR_TYPE_NEGATIVE_INT, uint(-1 - value));\n    }\n  }\n\n  function encodeBytes(Buffer_Chainlink.buffer memory buf, bytes value) internal pure {\n    encodeType(buf, MAJOR_TYPE_BYTES, value.length);\n    buf.append(value);\n  }\n\n  function encodeString(Buffer_Chainlink.buffer memory buf, string value) internal pure {\n    encodeType(buf, MAJOR_TYPE_STRING, bytes(value).length);\n    buf.append(bytes(value));\n  }\n\n  function startArray(Buffer_Chainlink.buffer memory buf) internal pure {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\n  }\n\n  function startMap(Buffer_Chainlink.buffer memory buf) internal pure {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\n  }\n\n  function endSequence(Buffer_Chainlink.buffer memory buf) internal pure {\n    encodeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\n  }\n}\n",
		"vendor/Buffer.sol": "pragma solidity >0.4.18;\n\n/**\n* @dev A library for working with mutable byte buffers in Solidity.\n*\n* Byte buffers are mutable and expandable, and provide a variety of primitives\n* for writing to them. At any time you can fetch a bytes object containing the\n* current contents of the buffer. The bytes object should not be stored between\n* operations, as it may change due to resizing of the buffer.\n*/\nlibrary Buffer {\n  /**\n  * @dev Represents a mutable buffer. Buffers have a current value (buf) and\n  *      a capacity. The capacity may be longer than the current value, in\n  *      which case it can be extended without the need to allocate more memory.\n  */\n  struct buffer {\n    bytes buf;\n    uint capacity;\n  }\n\n  /**\n  * @dev Initializes a buffer with an initial capacity.\n  * @param buf The buffer to initialize.\n  * @param capacity The number of bytes of space to allocate the buffer.\n  * @return The buffer, for chaining.\n  */\n  function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\n    if (capacity % 32 != 0) {\n      capacity += 32 - (capacity % 32);\n    }\n    // Allocate space for the buffer data\n    buf.capacity = capacity;\n    assembly {\n      let ptr := mload(0x40)\n      mstore(buf, ptr)\n      mstore(ptr, 0)\n      mstore(0x40, add(32, add(ptr, capacity)))\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Initializes a new buffer from an existing bytes object.\n  *      Changes to the buffer may mutate the original value.\n  * @param b The bytes object to initialize the buffer with.\n  * @return A new buffer.\n  */\n  function fromBytes(bytes memory b) internal pure returns(buffer memory) {\n    buffer memory buf;\n    buf.buf = b;\n    buf.capacity = b.length;\n    return buf;\n  }\n\n  function resize(buffer memory buf, uint capacity) private pure {\n    bytes memory oldbuf = buf.buf;\n    init(buf, capacity);\n    append(buf, oldbuf);\n  }\n\n  function max(uint a, uint b) private pure returns(uint) {\n    if (a > b) {\n      return a;\n    }\n    return b;\n  }\n\n  /**\n  * @dev Sets buffer length to 0.\n  * @param buf The buffer to truncate.\n  * @return The original buffer, for chaining..\n  */\n  function truncate(buffer memory buf) internal pure returns (buffer memory) {\n    assembly {\n      let bufptr := mload(buf)\n      mstore(bufptr, 0)\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Writes a byte string to a buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The start offset to write to.\n  * @param data The data to append.\n  * @param len The number of bytes to copy.\n  * @return The original buffer, for chaining.\n  */\n  function write(buffer memory buf, uint off, bytes memory data, uint len) internal pure returns(buffer memory) {\n    require(len <= data.length);\n\n    if (off + len > buf.capacity) {\n      resize(buf, max(buf.capacity, len + off) * 2);\n    }\n\n    uint dest;\n    uint src;\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Length of existing buffer data\n      let buflen := mload(bufptr)\n      // Start address = buffer address + offset + sizeof(buffer length)\n      dest := add(add(bufptr, 32), off)\n      // Update buffer length if we're extending it\n      if gt(add(len, off), buflen) {\n        mstore(bufptr, add(len, off))\n      }\n      src := add(data, 32)\n    }\n\n    // Copy word-length chunks while possible\n    for (; len >= 32; len -= 32) {\n      assembly {\n        mstore(dest, mload(src))\n      }\n      dest += 32;\n      src += 32;\n    }\n\n    // Copy remaining bytes\n    uint mask = 256 ** (32 - len) - 1;\n    assembly {\n      let srcpart := and(mload(src), not(mask))\n      let destpart := and(mload(dest), mask)\n      mstore(dest, or(destpart, srcpart))\n    }\n\n    return buf;\n  }\n\n  /**\n  * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @param len The number of bytes to copy.\n  * @return The original buffer, for chaining.\n  */\n  function append(buffer memory buf, bytes memory data, uint len) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, len);\n  }\n\n  /**\n  * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, data.length);\n  }\n\n  /**\n  * @dev Writes a byte to the buffer. Resizes if doing so would exceed the\n  *      capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write the byte at.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function writeUint8(buffer memory buf, uint off, uint8 data) internal pure returns(buffer memory) {\n    if (off >= buf.capacity) {\n      resize(buf, buf.capacity * 2);\n    }\n\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Length of existing buffer data\n      let buflen := mload(bufptr)\n      // Address = buffer address + sizeof(buffer length) + off\n      let dest := add(add(bufptr, off), 32)\n      mstore8(dest, data)\n      // Update buffer length if we extended it\n      if eq(off, buflen) {\n        mstore(bufptr, add(buflen, 1))\n      }\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n  *      capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\n    return writeUint8(buf, buf.buf.length, data);\n  }\n\n  /**\n  * @dev Writes up to 32 bytes to the buffer. Resizes if doing so would\n  *      exceed the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write at.\n  * @param data The data to append.\n  * @param len The number of bytes to write (left-aligned).\n  * @return The original buffer, for chaining.\n  */\n  function write(buffer memory buf, uint off, bytes32 data, uint len) private pure returns(buffer memory) {\n    if (len + off > buf.capacity) {\n      resize(buf, (len + off) * 2);\n    }\n\n    uint mask = 256 ** len - 1;\n    // Right-align data\n    data = data >> (8 * (32 - len));\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Address = buffer address + sizeof(buffer length) + off + len\n      let dest := add(add(bufptr, off), len)\n      mstore(dest, or(and(mload(dest), not(mask)), data))\n      // Update buffer length if we extended it\n      if gt(add(off, len), mload(bufptr)) {\n        mstore(bufptr, add(off, len))\n      }\n    }\n    return buf;\n  }\n\n  /**\n  * @dev Writes a bytes20 to the buffer. Resizes if doing so would exceed the\n  *      capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write at.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function writeBytes20(buffer memory buf, uint off, bytes20 data) internal pure returns (buffer memory) {\n    return write(buf, off, bytes32(data), 20);\n  }\n\n  /**\n  * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chhaining.\n  */\n  function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, bytes32(data), 20);\n  }\n\n  /**\n  * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param data The data to append.\n  * @return The original buffer, for chaining.\n  */\n  function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\n    return write(buf, buf.buf.length, data, 32);\n  }\n\n  /**\n  * @dev Writes an integer to the buffer. Resizes if doing so would exceed\n  *      the capacity of the buffer.\n  * @param buf The buffer to append to.\n  * @param off The offset to write at.\n  * @param data The data to append.\n  * @param len The number of bytes to write (right-aligned).\n  * @return The original buffer, for chaining.\n  */\n  function writeInt(buffer memory buf, uint off, uint data, uint len) private pure returns(buffer memory) {\n    if (len + off > buf.capacity) {\n      resize(buf, (len + off) * 2);\n    }\n\n    uint mask = 256 ** len - 1;\n    assembly {\n      // Memory address of the buffer data\n      let bufptr := mload(buf)\n      // Address = buffer address + off + sizeof(buffer length) + len\n      let dest := add(add(bufptr, off), len)\n      mstore(dest, or(and(mload(dest), not(mask)), data))\n      // Update buffer length if we extended it\n      if gt(add(off, len), mload(bufptr)) {\n        mstore(bufptr, add(off, len))\n      }\n    }\n    return buf;\n  }\n\n  /**\n   * @dev Appends a byte to the end of the buffer. Resizes if doing so would\n   * exceed the capacity of the buffer.\n   * @param buf The buffer to append to.\n   * @param data The data to append.\n   * @return The original buffer.\n   */\n  function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\n    return writeInt(buf, buf.buf.length, data, len);\n  }\n}\n"
	},
	"sourceTreeHashHex": "0x10fdd1c3a811b45bca3413030e53d35ead6659eac9be8e856c094ee2bd9c9b8b",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.4.24+commit.e67f0147.js",
		"settings": {
			"optimizer": {
				"runs": 1000000,
				"enabled": true
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"userdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap",
						"evm.methodIdentifiers",
						"metadata"
					]
				}
			},
			"remappings": []
		}
	},
	"chains": {}
}