"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_1 = require("ethers");
class VRFRequestIDBaseTestHelperFactory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides);
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides);
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.VRFRequestIDBaseTestHelperFactory = VRFRequestIDBaseTestHelperFactory;
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_keyHash",
                type: "bytes32"
            },
            {
                internalType: "uint256",
                name: "_vRFInputSeed",
                type: "uint256"
            }
        ],
        name: "makeRequestId_",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32"
            }
        ],
        stateMutability: "pure",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_keyHash",
                type: "bytes32"
            },
            {
                internalType: "uint256",
                name: "_userSeed",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "_requester",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_nonce",
                type: "uint256"
            }
        ],
        name: "makeVRFInputSeed_",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            }
        ],
        stateMutability: "pure",
        type: "function"
    }
];
const _bytecode = "0x608060405234801561001057600080fd5b50610195806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806337ab429a1461003b578063bda087ae14610092575b600080fd5b6100806004803603608081101561005157600080fd5b5080359060208101359073ffffffffffffffffffffffffffffffffffffffff60408201351690606001356100b5565b60408051918252519081900360200190f35b610080600480360360408110156100a857600080fd5b50803590602001356100cc565b60006100c3858585856100df565b95945050505050565b60006100d88383610133565b9392505050565b604080516020808201969096528082019490945273ffffffffffffffffffffffffffffffffffffffff9290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b60408051602080820194909452808201929092528051808303820181526060909201905280519101209056fea264697066735822122046d0e3aa2f672304b38d3f036a3e1938e2add581b59316a180a7c26a84f4ee9664736f6c63430006060033";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVlJGUmVxdWVzdElEQmFzZVRlc3RIZWxwZXJGYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVlJGUmVxdWVzdElEQmFzZVRlc3RIZWxwZXJGYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSwwQ0FBMEM7QUFDMUMsb0JBQW9COztBQUVwQixtQ0FBMkQ7QUFPM0QsTUFBYSxpQ0FBa0MsU0FBUSx3QkFBZTtJQUNwRSxZQUFZLE1BQWU7UUFDekIsS0FBSyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVELE1BQU0sQ0FDSixTQUFnQztRQUVoQyxPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUF3QyxDQUFDO0lBQ3hFLENBQUM7SUFDRCxvQkFBb0IsQ0FBQyxTQUFnQztRQUNuRCxPQUFPLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUMvQyxDQUFDO0lBQ0QsTUFBTSxDQUFDLE9BQWU7UUFDcEIsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBK0IsQ0FBQztJQUM3RCxDQUFDO0lBQ0QsT0FBTyxDQUFDLE1BQWM7UUFDcEIsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBc0MsQ0FBQztJQUNwRSxDQUFDO0lBQ0QsTUFBTSxDQUFDLE9BQU8sQ0FDWixPQUFlLEVBQ2YsZ0JBQW1DO1FBRW5DLE9BQU8sSUFBSSxpQkFBUSxDQUNqQixPQUFPLEVBQ1AsSUFBSSxFQUNKLGdCQUFnQixDQUNhLENBQUM7SUFDbEMsQ0FBQztDQUNGO0FBN0JELDhFQTZCQztBQUVELE1BQU0sSUFBSSxHQUFHO0lBQ1g7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFVBQVU7Z0JBQ2hCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxlQUFlO2dCQUNyQixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsSUFBSSxFQUFFLGdCQUFnQjtRQUN0QixPQUFPLEVBQUU7WUFDUDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELGVBQWUsRUFBRSxNQUFNO1FBQ3ZCLElBQUksRUFBRSxVQUFVO0tBQ2pCO0lBQ0Q7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFVBQVU7Z0JBQ2hCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxXQUFXO2dCQUNqQixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsWUFBWTtnQkFDbEIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxtQkFBbUI7UUFDekIsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxFQUFFO2dCQUNSLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxlQUFlLEVBQUUsTUFBTTtRQUN2QixJQUFJLEVBQUUsVUFBVTtLQUNqQjtDQUNGLENBQUM7QUFFRixNQUFNLFNBQVMsR0FDYiw4MkJBQTgyQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogR2VuZXJhdGVkIGJ5IHRzLWdlbmVyYXRvciB2ZXIuIDAuMC44ICovXG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuXG5pbXBvcnQgeyBDb250cmFjdCwgQ29udHJhY3RGYWN0b3J5LCBTaWduZXIgfSBmcm9tIFwiZXRoZXJzXCI7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJldGhlcnMvcHJvdmlkZXJzXCI7XG5pbXBvcnQgeyBVbnNpZ25lZFRyYW5zYWN0aW9uIH0gZnJvbSBcImV0aGVycy91dGlscy90cmFuc2FjdGlvblwiO1xuXG5pbXBvcnQgeyBUcmFuc2FjdGlvbk92ZXJyaWRlcyB9IGZyb20gXCIuXCI7XG5pbXBvcnQgeyBWUkZSZXF1ZXN0SURCYXNlVGVzdEhlbHBlciB9IGZyb20gXCIuL1ZSRlJlcXVlc3RJREJhc2VUZXN0SGVscGVyXCI7XG5cbmV4cG9ydCBjbGFzcyBWUkZSZXF1ZXN0SURCYXNlVGVzdEhlbHBlckZhY3RvcnkgZXh0ZW5kcyBDb250cmFjdEZhY3Rvcnkge1xuICBjb25zdHJ1Y3RvcihzaWduZXI/OiBTaWduZXIpIHtcbiAgICBzdXBlcihfYWJpLCBfYnl0ZWNvZGUsIHNpZ25lcik7XG4gIH1cblxuICBkZXBsb3koXG4gICAgb3ZlcnJpZGVzPzogVHJhbnNhY3Rpb25PdmVycmlkZXNcbiAgKTogUHJvbWlzZTxWUkZSZXF1ZXN0SURCYXNlVGVzdEhlbHBlcj4ge1xuICAgIHJldHVybiBzdXBlci5kZXBsb3kob3ZlcnJpZGVzKSBhcyBQcm9taXNlPFZSRlJlcXVlc3RJREJhc2VUZXN0SGVscGVyPjtcbiAgfVxuICBnZXREZXBsb3lUcmFuc2FjdGlvbihvdmVycmlkZXM/OiBUcmFuc2FjdGlvbk92ZXJyaWRlcyk6IFVuc2lnbmVkVHJhbnNhY3Rpb24ge1xuICAgIHJldHVybiBzdXBlci5nZXREZXBsb3lUcmFuc2FjdGlvbihvdmVycmlkZXMpO1xuICB9XG4gIGF0dGFjaChhZGRyZXNzOiBzdHJpbmcpOiBWUkZSZXF1ZXN0SURCYXNlVGVzdEhlbHBlciB7XG4gICAgcmV0dXJuIHN1cGVyLmF0dGFjaChhZGRyZXNzKSBhcyBWUkZSZXF1ZXN0SURCYXNlVGVzdEhlbHBlcjtcbiAgfVxuICBjb25uZWN0KHNpZ25lcjogU2lnbmVyKTogVlJGUmVxdWVzdElEQmFzZVRlc3RIZWxwZXJGYWN0b3J5IHtcbiAgICByZXR1cm4gc3VwZXIuY29ubmVjdChzaWduZXIpIGFzIFZSRlJlcXVlc3RJREJhc2VUZXN0SGVscGVyRmFjdG9yeTtcbiAgfVxuICBzdGF0aWMgY29ubmVjdChcbiAgICBhZGRyZXNzOiBzdHJpbmcsXG4gICAgc2lnbmVyT3JQcm92aWRlcjogU2lnbmVyIHwgUHJvdmlkZXJcbiAgKTogVlJGUmVxdWVzdElEQmFzZVRlc3RIZWxwZXIge1xuICAgIHJldHVybiBuZXcgQ29udHJhY3QoXG4gICAgICBhZGRyZXNzLFxuICAgICAgX2FiaSxcbiAgICAgIHNpZ25lck9yUHJvdmlkZXJcbiAgICApIGFzIFZSRlJlcXVlc3RJREJhc2VUZXN0SGVscGVyO1xuICB9XG59XG5cbmNvbnN0IF9hYmkgPSBbXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzMzJcIixcbiAgICAgICAgbmFtZTogXCJfa2V5SGFzaFwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJfdlJGSW5wdXRTZWVkXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcIm1ha2VSZXF1ZXN0SWRfXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInB1cmVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgICBuYW1lOiBcIl9rZXlIYXNoXCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXMzMlwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcIl91c2VyU2VlZFwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJfcmVxdWVzdGVyXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcIl9ub25jZVwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJtYWtlVlJGSW5wdXRTZWVkX1wiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJwdXJlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH1cbl07XG5cbmNvbnN0IF9ieXRlY29kZSA9XG4gIFwiMHg2MDgwNjA0MDUyMzQ4MDE1NjEwMDEwNTc2MDAwODBmZDViNTA2MTAxOTU4MDYxMDAyMDYwMDAzOTYwMDBmM2ZlNjA4MDYwNDA1MjM0ODAxNTYxMDAxMDU3NjAwMDgwZmQ1YjUwNjAwNDM2MTA2MTAwMzY1NzYwMDAzNTYwZTAxYzgwNjMzN2FiNDI5YTE0NjEwMDNiNTc4MDYzYmRhMDg3YWUxNDYxMDA5MjU3NWI2MDAwODBmZDViNjEwMDgwNjAwNDgwMzYwMzYwODA4MTEwMTU2MTAwNTE1NzYwMDA4MGZkNWI1MDgwMzU5MDYwMjA4MTAxMzU5MDczZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZjYwNDA4MjAxMzUxNjkwNjA2MDAxMzU2MTAwYjU1NjViNjA0MDgwNTE5MTgyNTI1MTkwODE5MDAzNjAyMDAxOTBmMzViNjEwMDgwNjAwNDgwMzYwMzYwNDA4MTEwMTU2MTAwYTg1NzYwMDA4MGZkNWI1MDgwMzU5MDYwMjAwMTM1NjEwMGNjNTY1YjYwMDA2MTAwYzM4NTg1ODU4NTYxMDBkZjU2NWI5NTk0NTA1MDUwNTA1MDU2NWI2MDAwNjEwMGQ4ODM4MzYxMDEzMzU2NWI5MzkyNTA1MDUwNTY1YjYwNDA4MDUxNjAyMDgwODIwMTk2OTA5NjUyODA4MjAxOTQ5MDk0NTI3M2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmY5MjkwOTIxNjYwNjA4NDAxNTI2MDgwODA4NDAxOTE5MDkxNTI4MTUxODA4NDAzOTA5MTAxODE1MjYwYTA5MDkyMDE5MDUyODA1MTkxMDEyMDkwNTY1YjYwNDA4MDUxNjAyMDgwODIwMTk0OTA5NDUyODA4MjAxOTI5MDkyNTI4MDUxODA4MzAzODIwMTgxNTI2MDYwOTA5MjAxOTA1MjgwNTE5MTAxMjA5MDU2ZmVhMjY0Njk3MDY2NzM1ODIyMTIyMDQ2ZDBlM2FhMmY2NzIzMDRiMzhkM2YwMzZhM2UxOTM4ZTJhZGQ1ODFiNTkzMTZhMTgwYTdjMjZhODRmNGVlOTY2NDczNmY2YzYzNDMwMDA2MDYwMDMzXCI7XG4iXX0=